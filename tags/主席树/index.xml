<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>主席树 on _slb 的博客</title>
    <link>https://luoyisu.github.io/tags/%E4%B8%BB%E5%B8%AD%E6%A0%91/</link>
    <description>Recent content in 主席树 on _slb 的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Mon, 13 Dec 2021 14:16:04 +0000</lastBuildDate><atom:link href="https://luoyisu.github.io/tags/%E4%B8%BB%E5%B8%AD%E6%A0%91/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Codeforces Round 524 (Div. 2)</title>
      <link>https://luoyisu.github.io/posts/cf-contest1080/</link>
      <pubDate>Mon, 13 Dec 2021 14:16:04 +0000</pubDate>
      
      <guid>https://luoyisu.github.io/posts/cf-contest1080/</guid>
      <description>&lt;p&gt;似乎仍然不是很难。&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>似乎仍然不是很难。</p>
<h2 id="ahttpscodeforcescontest1080problema"><a href="https://codeforc.es/contest/1080/problem/A">A</a></h2>
<h3 id="description">Description</h3>
<p>有 $n$ 个人，每个人需要 $2$ 张红纸，$5$ 张绿纸，$8$ 张蓝纸。一次可以买 $k$ 张同一种颜色的纸。问最少需要买几次。</p>
<h3 id="solution">Solution</h3>
<p>算一下每种颜色需要几张纸然后除一下向上取整。</p>
<h3 id="code">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cmath&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>() {
</span></span><span style="display:flex;"><span>  <span style="color:#a90d91">int</span> <span style="color:#000">n</span>, <span style="color:#000">k</span>;
</span></span><span style="display:flex;"><span>  <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">k</span>;
</span></span><span style="display:flex;"><span>  <span style="color:#a90d91">int</span> <span style="color:#000">a</span> <span style="color:#000">=</span> <span style="color:#000">n</span> <span style="color:#000">*</span> <span style="color:#1c01ce">2</span>, <span style="color:#000">b</span> <span style="color:#000">=</span> <span style="color:#000">n</span> <span style="color:#000">*</span> <span style="color:#1c01ce">5</span>, <span style="color:#000">c</span> <span style="color:#000">=</span> <span style="color:#000">n</span> <span style="color:#000">*</span> <span style="color:#1c01ce">8</span>;
</span></span><span style="display:flex;"><span>  <span style="color:#000">a</span> <span style="color:#000">=</span> <span style="color:#000">ceil</span>(<span style="color:#1c01ce">1.0</span> <span style="color:#000">*</span> <span style="color:#000">a</span> <span style="color:#000">/</span> <span style="color:#000">k</span>), <span style="color:#000">b</span> <span style="color:#000">=</span> <span style="color:#000">ceil</span>(<span style="color:#1c01ce">1.0</span> <span style="color:#000">*</span> <span style="color:#000">b</span> <span style="color:#000">/</span> <span style="color:#000">k</span>), <span style="color:#000">c</span> <span style="color:#000">=</span> <span style="color:#000">ceil</span>(<span style="color:#1c01ce">1.0</span> <span style="color:#000">*</span> <span style="color:#000">c</span> <span style="color:#000">/</span> <span style="color:#000">k</span>);
</span></span><span style="display:flex;"><span>  <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">a</span> <span style="color:#000">+</span> <span style="color:#000">b</span> <span style="color:#000">+</span> <span style="color:#000">c</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="bhttpscodeforcescontest1080problemb"><a href="https://codeforc.es/contest/1080/problem/B">B</a></h2>
<h3 id="description-1">Description</h3>
<p>有一个序列 $\{a_i\}$，通项公式 $a_i=i\times(-1)^i$，$q$ 个询问，求区间和。</p>
<h3 id="solution-1">Solution</h3>
<p>找规律即可，规律不写了。</p>
<h3 id="code-1">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cmath&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>() {
</span></span><span style="display:flex;"><span>  <span style="color:#a90d91">int</span> <span style="color:#000">q</span>;
</span></span><span style="display:flex;"><span>  <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">q</span>;
</span></span><span style="display:flex;"><span>  <span style="color:#a90d91">while</span> (<span style="color:#000">q</span><span style="color:#000">--</span>) {
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#000">y</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">x</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">y</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">len</span> <span style="color:#000">=</span> <span style="color:#000">y</span> <span style="color:#000">-</span> <span style="color:#000">x</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">x</span> <span style="color:#000">==</span> <span style="color:#000">y</span>)
</span></span><span style="display:flex;"><span>      <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> (<span style="color:#000">x</span> <span style="color:#000">&amp;</span> <span style="color:#1c01ce">1</span> <span style="color:#000">?</span> <span style="color:#000">-</span><span style="color:#000">x</span> : <span style="color:#000">x</span>) <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">else</span> {
</span></span><span style="display:flex;"><span>      <span style="color:#a90d91">int</span> <span style="color:#000">p</span> <span style="color:#000">=</span> <span style="color:#000">len</span> <span style="color:#000">/</span> <span style="color:#1c01ce">2</span> <span style="color:#000">*</span> (<span style="color:#000">x</span> <span style="color:#000">&amp;</span> <span style="color:#1c01ce">1</span> <span style="color:#000">?</span> <span style="color:#1c01ce">1</span> <span style="color:#000">:</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>      <span style="color:#a90d91">if</span> (<span style="color:#000">len</span> <span style="color:#000">&amp;</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">p</span> <span style="color:#000">+=</span> <span style="color:#000">y</span> <span style="color:#000">&amp;</span> <span style="color:#1c01ce">1</span> <span style="color:#000">?</span> <span style="color:#000">-</span><span style="color:#000">y</span> : <span style="color:#000">y</span>;
</span></span><span style="display:flex;"><span>      <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">p</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;  
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>  }
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="chttpscodeforcescontest1080problemc"><a href="https://codeforc.es/contest/1080/problem/C">C</a></h2>
<h3 id="description-2">Description</h3>
<p>有一个 $n\times m$ 的国际象棋棋盘（每个格子颜色白或黑），先将一个子矩形染成白色，再将一个子矩形染成黑色，问最后有几个白格子和几个黑格子。$n,m\leq10^9$。</p>
<h3 id="solution-2">Solution</h3>
<p>只算黑色格子即可，乱算一算，最后再把重叠部分算进去。</p>
<h3 id="code-2">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cmath&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>() {
</span></span><span style="display:flex;"><span>  <span style="color:#a90d91">int</span> <span style="color:#000">T</span>;
</span></span><span style="display:flex;"><span>  <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">T</span>;
</span></span><span style="display:flex;"><span>  <span style="color:#a90d91">while</span> (<span style="color:#000">T</span><span style="color:#000">--</span>) {
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">n</span>, <span style="color:#000">m</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">m</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">x1</span>, <span style="color:#000">x2</span>, <span style="color:#000">y1</span>, <span style="color:#000">y2</span>, <span style="color:#000">x3</span>, <span style="color:#000">y3</span>, <span style="color:#000">x4</span>, <span style="color:#000">y4</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">x1</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">y1</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">x2</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">y2</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">x3</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">y3</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">x4</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">y4</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">black</span> <span style="color:#000">=</span> <span style="color:#000">n</span> <span style="color:#000">*</span> <span style="color:#000">m</span> <span style="color:#000">/</span> <span style="color:#1c01ce">2</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">dx1</span> <span style="color:#000">=</span> <span style="color:#000">x2</span> <span style="color:#000">-</span> <span style="color:#000">x1</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">dy1</span> <span style="color:#000">=</span> <span style="color:#000">y2</span> <span style="color:#000">-</span> <span style="color:#000">y1</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">black</span> <span style="color:#000">-=</span> <span style="color:#000">dx1</span> <span style="color:#000">*</span> <span style="color:#000">dy1</span> <span style="color:#000">/</span> <span style="color:#1c01ce">2</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">dx1</span> <span style="color:#000">*</span> <span style="color:#000">dy1</span> <span style="color:#000">%</span> <span style="color:#1c01ce">2</span>)
</span></span><span style="display:flex;"><span>      <span style="color:#a90d91">if</span> ((<span style="color:#000">x1</span> <span style="color:#000">+</span> <span style="color:#000">y1</span>) <span style="color:#000">&amp;</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">black</span><span style="color:#000">--</span>;    
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">dx2</span> <span style="color:#000">=</span> <span style="color:#000">x4</span> <span style="color:#000">-</span> <span style="color:#000">x3</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">dy2</span> <span style="color:#000">=</span> <span style="color:#000">y4</span> <span style="color:#000">-</span> <span style="color:#000">y3</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">black</span> <span style="color:#000">+=</span> <span style="color:#000">dx2</span> <span style="color:#000">*</span> <span style="color:#000">dy2</span> <span style="color:#000">/</span> <span style="color:#1c01ce">2</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">dx2</span> <span style="color:#000">*</span> <span style="color:#000">dy2</span> <span style="color:#000">%</span> <span style="color:#1c01ce">2</span>)
</span></span><span style="display:flex;"><span>      <span style="color:#a90d91">if</span> ((<span style="color:#000">x3</span> <span style="color:#000">+</span> <span style="color:#000">y3</span>) <span style="color:#000">%</span> <span style="color:#1c01ce">2</span> <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">black</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">x5</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">max</span>(<span style="color:#000">x3</span>, <span style="color:#000">x1</span>), <span style="color:#000">x6</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">min</span>(<span style="color:#000">x2</span>, <span style="color:#000">x4</span>), <span style="color:#000">y5</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">max</span>(<span style="color:#000">y1</span>, <span style="color:#000">y3</span>), <span style="color:#000">y6</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">min</span>(<span style="color:#000">y2</span>, <span style="color:#000">y4</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">x5</span> <span style="color:#000">&lt;=</span> <span style="color:#000">x6</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">y5</span> <span style="color:#000">&lt;=</span> <span style="color:#000">y6</span>) {
</span></span><span style="display:flex;"><span>      <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">dx0</span> <span style="color:#000">=</span> <span style="color:#000">x6</span> <span style="color:#000">-</span> <span style="color:#000">x5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">dy0</span> <span style="color:#000">=</span> <span style="color:#000">y6</span> <span style="color:#000">-</span> <span style="color:#000">y5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>      <span style="color:#000">black</span> <span style="color:#000">+=</span> <span style="color:#000">dx0</span> <span style="color:#000">*</span> <span style="color:#000">dy0</span> <span style="color:#000">/</span> <span style="color:#1c01ce">2</span>;
</span></span><span style="display:flex;"><span>      <span style="color:#a90d91">if</span> (<span style="color:#000">dx0</span> <span style="color:#000">*</span> <span style="color:#000">dy0</span> <span style="color:#000">%</span> <span style="color:#1c01ce">2</span>) {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> ((<span style="color:#000">x5</span> <span style="color:#000">+</span> <span style="color:#000">y5</span>) <span style="color:#000">%</span> <span style="color:#1c01ce">2</span>) {
</span></span><span style="display:flex;"><span>          <span style="color:#000">black</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>      }
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">white</span> <span style="color:#000">=</span> <span style="color:#000">n</span> <span style="color:#000">*</span> <span style="color:#000">m</span> <span style="color:#000">-</span> <span style="color:#000">black</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">white</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">black</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>  }
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="dhttpscodeforcescontest1080problemd"><a href="https://codeforc.es/contest/1080/problem/D">D</a></h2>
<h3 id="description-3">Description</h3>
<p>有一个 $2^n\times2^n$ 的正方形，进行 $k$ 次切割操作，每次把一个正方形切成 $4$ 个等大的小正方形。</p>
<p>需要找到一条在切割后正方形边长全部相同且四连通的从左下角到右上角的路径，判断能不能找到，如果能找到，输出这条路径上正方形边长以 $2$​ 为底的对数。</p>
<p>$n\leq10^9,k\leq10^{18}$。</p>
<h3 id="solution-3">Solution</h3>
<p>能算出来把一个 $2^n\times 2^n$ 的正方形切成最小的切割次数 $a_n$ 满足递推式 $a_n=4\times a_{n-1}+1$​。</p>
<p>显然我们只需要打通一条路就行，其他的随便切。</p>
<p>那么当 $n&gt;31$，肯定无解。</p>
<p>我们可以枚举这条路径上正方形边长，设边长为 $2^i$，那么我们只需要找到可以的最小切割次数和最大切割次数，如果 $k$ 在这两个数的闭区间里，那么一定有解。</p>
<p>最小切割次数怎么算呢？我们只切最边上的路径，第一次切 $1$ 次，第二次切 $3$ 次，第三次切 $7$ 次……，所以最小切割次数 $mi_i=\sum_{j=1}^{n-i}mi_j$。</p>
<p>最大切割次数怎么算呢？我们先切成最小的方块，然后减去多切的。最多切割次数 $f_i=a_n-a_i\times(2^{n-i+1}-1)$。</p>
<p>就这样。</p>
<h3 id="code-3">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cmath&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">typedef</span> <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">ll</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000">ll</span> <span style="color:#000">a</span>[<span style="color:#1c01ce">40</span>], <span style="color:#000">mi</span>[<span style="color:#1c01ce">40</span>], <span style="color:#000">mx</span>[<span style="color:#1c01ce">40</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">solve</span>(<span style="color:#a90d91">int</span> <span style="color:#000">n</span>, <span style="color:#000">ll</span> <span style="color:#000">k</span>) {
</span></span><span style="display:flex;"><span>  <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>) {
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">a</span>[<span style="color:#000">n</span>] <span style="color:#000">-</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>] <span style="color:#000">*</span> ((<span style="color:#1c01ce">1ll</span> <span style="color:#000">&lt;&lt;</span> (<span style="color:#000">n</span> <span style="color:#000">-</span> <span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>)) <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>) <span style="color:#000">&gt;=</span> <span style="color:#000">k</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">mi</span>[<span style="color:#000">n</span> <span style="color:#000">-</span> <span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">&lt;=</span> <span style="color:#000">k</span>)
</span></span><span style="display:flex;"><span>      <span style="color:#a90d91">return</span> <span style="color:#000">i</span>;
</span></span><span style="display:flex;"><span>  }
</span></span><span style="display:flex;"><span>  <span style="color:#a90d91">return</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>() {
</span></span><span style="display:flex;"><span>  <span style="color:#a90d91">int</span> <span style="color:#000">T</span>;
</span></span><span style="display:flex;"><span>  <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">T</span>;
</span></span><span style="display:flex;"><span>  <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#1c01ce">31</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    <span style="color:#000">a</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">4</span> <span style="color:#000">*</span> <span style="color:#000">a</span>[<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>  <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#1c01ce">31</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    <span style="color:#000">mi</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> (<span style="color:#1c01ce">1ll</span> <span style="color:#000">&lt;&lt;</span> (<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>)) <span style="color:#000">-</span> <span style="color:#1c01ce">1</span> <span style="color:#000">+</span> <span style="color:#000">mi</span>[<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>];
</span></span><span style="display:flex;"><span>  <span style="color:#a90d91">while</span> (<span style="color:#000">T</span><span style="color:#000">--</span>) {
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">n</span>, <span style="color:#000">k</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">k</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">n</span> <span style="color:#000">&gt;</span> <span style="color:#1c01ce">31</span>) {
</span></span><span style="display:flex;"><span>      <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34;YES&#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">n</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>      <span style="color:#a90d91">continue</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">k</span> <span style="color:#000">&gt;</span> <span style="color:#000">a</span>[<span style="color:#000">n</span>]) {
</span></span><span style="display:flex;"><span>      <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34;NO&#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>      <span style="color:#a90d91">continue</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#000">solve</span>(<span style="color:#000">n</span>, <span style="color:#000">k</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">ans</span> <span style="color:#000">==</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>      <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34;NO&#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>      <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34;YES&#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">ans</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>  }
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="ehttpscodeforcescontest1080probleme"><a href="https://codeforc.es/contest/1080/problem/E">E</a></h2>
<h3 id="description-4">Description</h3>
<p>$n\times m$ 的字符矩阵，求满足一下条件子矩形个数：将每一行重新排列后满足每一行和每一列都是回文串。$n\leq250$。</p>
<h3 id="solution-4">Solution</h3>
<p>每一行的要求可以很好判断，因为可以随便重排，满足至多只有一个字符出现两次即可。然后把每一行当成一个字符做 manacher，就行了。复杂度 $O(nm^2|\sum|)$​​，能过。如果比较每一行用 hash 来判断，那就可以优化到 $O(nm^2)$​​。</p>
<p>shr 神说可以用组合数暴力算，我不懂，他 tql。</p>
<h3 id="code-4">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cmath&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">510</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">char</span> <span style="color:#000">s</span>[<span style="color:#000">maxn</span>][<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">n</span>, <span style="color:#000">m</span>, <span style="color:#000">cnt</span>[<span style="color:#000">maxn</span>][<span style="color:#1c01ce">30</span>], <span style="color:#000">odd</span>[<span style="color:#000">maxn</span>], <span style="color:#000">d</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">bool</span> <span style="color:#000">cmp</span>(<span style="color:#a90d91">int</span> <span style="color:#000">a</span>, <span style="color:#a90d91">int</span> <span style="color:#000">b</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">odd</span>[<span style="color:#000">a</span>] <span style="color:#000">&gt;</span> <span style="color:#1c01ce">1</span> <span style="color:#000">||</span> <span style="color:#000">odd</span>[<span style="color:#000">b</span>] <span style="color:#000">&gt;</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#a90d91">false</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#1c01ce">26</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">cnt</span>[<span style="color:#000">a</span>][<span style="color:#000">i</span>] <span style="color:#000">!=</span> <span style="color:#000">cnt</span>[<span style="color:#000">b</span>][<span style="color:#000">i</span>])
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">return</span> <span style="color:#a90d91">false</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#a90d91">true</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">scanf</span>(<span style="color:#c41a16">&#34;%d%d&#34;</span>, <span style="color:#000">&amp;</span><span style="color:#000">n</span>, <span style="color:#000">&amp;</span><span style="color:#000">m</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">scanf</span>(<span style="color:#c41a16">&#34;%s&#34;</span>, <span style="color:#000">s</span>[<span style="color:#000">i</span>] <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">l</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">l</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">l</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">memset</span>(<span style="color:#000">cnt</span>, <span style="color:#1c01ce">0</span>, <span style="color:#a90d91">sizeof</span>(<span style="color:#000">cnt</span>)), <span style="color:#000">memset</span>(<span style="color:#000">odd</span>, <span style="color:#1c01ce">0</span>, <span style="color:#a90d91">sizeof</span>(<span style="color:#000">odd</span>));
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">r</span> <span style="color:#000">=</span> <span style="color:#000">l</span>; <span style="color:#000">r</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">r</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            {
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">char</span> <span style="color:#000">ch</span> <span style="color:#000">=</span> <span style="color:#000">s</span>[<span style="color:#000">i</span>][<span style="color:#000">r</span>] <span style="color:#000">-</span> <span style="color:#2300ce">&#39;a&#39;</span>;
</span></span><span style="display:flex;"><span>                <span style="color:#000">cnt</span>[<span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>][<span style="color:#000">ch</span>]<span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">if</span> (<span style="color:#000">cnt</span>[<span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>][<span style="color:#000">ch</span>] <span style="color:#000">&amp;</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>                    <span style="color:#000">odd</span>[<span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>]<span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>                    <span style="color:#000">odd</span>[<span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>]<span style="color:#000">--</span>;
</span></span><span style="display:flex;"><span>            }
</span></span><span style="display:flex;"><span>            <span style="color:#000">memset</span>(<span style="color:#000">d</span>, <span style="color:#1c01ce">0</span>, <span style="color:#a90d91">sizeof</span>(<span style="color:#000">d</span>));
</span></span><span style="display:flex;"><span>            <span style="color:#000">cnt</span>[<span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">n</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>][<span style="color:#1c01ce">0</span>] <span style="color:#000">=</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">l</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>, <span style="color:#000">r</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            {
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">if</span> (<span style="color:#000">odd</span>[<span style="color:#000">i</span>] <span style="color:#000">&gt;</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>                    <span style="color:#a90d91">continue</span>;
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">if</span> (<span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">r</span>)
</span></span><span style="display:flex;"><span>                    <span style="color:#000">d</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">min</span>(<span style="color:#000">r</span> <span style="color:#000">-</span> <span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">d</span>[<span style="color:#000">l</span> <span style="color:#000">+</span> <span style="color:#000">r</span> <span style="color:#000">-</span> <span style="color:#000">i</span>]);
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">while</span> (<span style="color:#000">cmp</span>(<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#000">d</span>[<span style="color:#000">i</span>], <span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#000">d</span>[<span style="color:#000">i</span>]))
</span></span><span style="display:flex;"><span>                    <span style="color:#000">d</span>[<span style="color:#000">i</span>]<span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">if</span> (<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#000">d</span>[<span style="color:#000">i</span>] <span style="color:#000">&gt;=</span> <span style="color:#000">r</span>)
</span></span><span style="display:flex;"><span>                    <span style="color:#000">r</span> <span style="color:#000">=</span> <span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#000">d</span>[<span style="color:#000">i</span>] <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">l</span> <span style="color:#000">=</span> <span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#000">d</span>[<span style="color:#000">i</span>] <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>                <span style="color:#000">ans</span> <span style="color:#000">+=</span> <span style="color:#000">d</span>[<span style="color:#000">i</span>] <span style="color:#000">/</span> <span style="color:#1c01ce">2</span>;
</span></span><span style="display:flex;"><span>            }
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">ans</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="fhttpscodeforcescontest1080problemf"><a href="https://codeforc.es/contest/1080/problem/F">F</a></h2>
<h3 id="description-5">Description</h3>
<p>有 $n$ 个集合，$k$ 条线段，每条线段由 $l,r,p$ 描述，分别表示其左端点，右端点，所在集合。</p>
<p>$m$ 个询问，每次给出 $a,b,x,y$，问编号在 $[a,b]$ 之间所有的集合是否都存在一条满足 $x\leq l\leq r\leq y$ 的线段。</p>
<p>$n,m\leq10^5$，$k\leq3\times10^5$，强制在线。</p>
<h3 id="solution-5">Solution</h3>
<p>看到强制在线，像是能用线段树维护的信息，我们想到主席树（）（）（）</p>
<p>以上扯淡，分析一下，如果直接存线段的信息会发现集合信息很难维护。</p>
<p>我们考虑存集合并转化一下要求的东西。</p>
<p>如果一个集合满足要求，那么它左端点大于等于 $l$ 的线段中右端点最小值必定小于等于 $y$。</p>
<p>如果多个集合呢？就是这些集合上面这个东西的最大值小于等于 $y$。</p>
<p>那么我们线段树里维护的东西就确定了：叶子中是这个集合中 $r$ 的最小值，非叶子结点是它所管辖区间中上述值的最大值。</p>
<p>那么怎么满足线段树中只有左端点大于等于 $l$ 的线段呢？我们用一棵主席树，把线段按照 $l$ 从大到小插入进去就行了。</p>
<h3 id="code-5">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cerr</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1e5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxk</span> <span style="color:#000">=</span> <span style="color:#1c01ce">3e5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">root</span>[<span style="color:#000">maxk</span>], <span style="color:#000">n</span>, <span style="color:#000">m</span>, <span style="color:#000">k</span>, <span style="color:#000">inf</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">30</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">struct</span> <span style="color:#3f6e75">Tree</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">static</span> <span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#000">::</span><span style="color:#000">maxn</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">6</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">ls</span>[<span style="color:#000">maxn</span>], <span style="color:#000">rs</span>[<span style="color:#000">maxn</span>], <span style="color:#000">tot</span>, <span style="color:#000">mx</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#000">Tree</span>()
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">maxn</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">mx</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">inf</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">clone</span>(<span style="color:#a90d91">int</span> <span style="color:#000">k</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">tot</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">mx</span>[<span style="color:#000">tot</span>] <span style="color:#000">=</span> <span style="color:#000">mx</span>[<span style="color:#000">k</span>], <span style="color:#000">ls</span>[<span style="color:#000">tot</span>] <span style="color:#000">=</span> <span style="color:#000">ls</span>[<span style="color:#000">k</span>], <span style="color:#000">rs</span>[<span style="color:#000">tot</span>] <span style="color:#000">=</span> <span style="color:#000">rs</span>[<span style="color:#000">k</span>];
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#000">tot</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">push_up</span>(<span style="color:#a90d91">int</span> <span style="color:#000">k</span>) { <span style="color:#000">mx</span>[<span style="color:#000">k</span>] <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">max</span>(<span style="color:#000">mx</span>[<span style="color:#000">ls</span>[<span style="color:#000">k</span>]], <span style="color:#000">mx</span>[<span style="color:#000">rs</span>[<span style="color:#000">k</span>]]); }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">build</span>(<span style="color:#a90d91">int</span> <span style="color:#000">l</span>, <span style="color:#a90d91">int</span> <span style="color:#000">r</span>, <span style="color:#a90d91">int</span> <span style="color:#000">k</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">!</span><span style="color:#000">k</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">k</span> <span style="color:#000">=</span> <span style="color:#000">++</span><span style="color:#000">tot</span>, <span style="color:#000">mx</span>[<span style="color:#000">tot</span>] <span style="color:#000">=</span> <span style="color:#000">inf</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">l</span> <span style="color:#000">==</span> <span style="color:#000">r</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">mx</span>[<span style="color:#000">k</span>] <span style="color:#000">=</span> <span style="color:#000">inf</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">return</span> <span style="color:#000">k</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">mid</span> <span style="color:#000">=</span> (<span style="color:#000">l</span> <span style="color:#000">+</span> <span style="color:#000">r</span>) <span style="color:#000">/</span> <span style="color:#1c01ce">2</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">ls</span>[<span style="color:#000">k</span>] <span style="color:#000">=</span> <span style="color:#000">build</span>(<span style="color:#000">l</span>, <span style="color:#000">mid</span>, <span style="color:#000">ls</span>[<span style="color:#000">k</span>]), <span style="color:#000">rs</span>[<span style="color:#000">k</span>] <span style="color:#000">=</span> <span style="color:#000">build</span>(<span style="color:#000">mid</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">r</span>, <span style="color:#000">rs</span>[<span style="color:#000">k</span>]);
</span></span><span style="display:flex;"><span>        <span style="color:#000">push_up</span>(<span style="color:#000">k</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#000">k</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">modify</span>(<span style="color:#a90d91">int</span> <span style="color:#000">l</span>, <span style="color:#a90d91">int</span> <span style="color:#000">r</span>, <span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>, <span style="color:#a90d91">int</span> <span style="color:#000">k</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">k</span> <span style="color:#000">=</span> <span style="color:#000">clone</span>(<span style="color:#000">k</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">l</span> <span style="color:#000">==</span> <span style="color:#000">r</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">mx</span>[<span style="color:#000">k</span>] <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">min</span>(<span style="color:#000">mx</span>[<span style="color:#000">k</span>], <span style="color:#000">y</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">return</span> <span style="color:#000">k</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">mid</span> <span style="color:#000">=</span> (<span style="color:#000">l</span> <span style="color:#000">+</span> <span style="color:#000">r</span>) <span style="color:#000">/</span> <span style="color:#1c01ce">2</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">x</span> <span style="color:#000">&lt;=</span> <span style="color:#000">mid</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">ls</span>[<span style="color:#000">k</span>] <span style="color:#000">=</span> <span style="color:#000">modify</span>(<span style="color:#000">l</span>, <span style="color:#000">mid</span>, <span style="color:#000">x</span>, <span style="color:#000">y</span>, <span style="color:#000">ls</span>[<span style="color:#000">k</span>]);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>            <span style="color:#000">rs</span>[<span style="color:#000">k</span>] <span style="color:#000">=</span> <span style="color:#000">modify</span>(<span style="color:#000">mid</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">r</span>, <span style="color:#000">x</span>, <span style="color:#000">y</span>, <span style="color:#000">rs</span>[<span style="color:#000">k</span>]);
</span></span><span style="display:flex;"><span>        <span style="color:#000">push_up</span>(<span style="color:#000">k</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#000">k</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">query</span>(<span style="color:#a90d91">int</span> <span style="color:#000">l</span>, <span style="color:#a90d91">int</span> <span style="color:#000">r</span>, <span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>, <span style="color:#a90d91">int</span> <span style="color:#000">k</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">x</span> <span style="color:#000">&lt;=</span> <span style="color:#000">l</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">y</span> <span style="color:#000">&gt;=</span> <span style="color:#000">r</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">return</span> <span style="color:#000">mx</span>[<span style="color:#000">k</span>];
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">res</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>, <span style="color:#000">mid</span> <span style="color:#000">=</span> (<span style="color:#000">l</span> <span style="color:#000">+</span> <span style="color:#000">r</span>) <span style="color:#000">/</span> <span style="color:#1c01ce">2</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">x</span> <span style="color:#000">&lt;=</span> <span style="color:#000">mid</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">res</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">max</span>(<span style="color:#000">res</span>, <span style="color:#000">query</span>(<span style="color:#000">l</span>, <span style="color:#000">mid</span>, <span style="color:#000">x</span>, <span style="color:#000">y</span>, <span style="color:#000">ls</span>[<span style="color:#000">k</span>]));
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">y</span> <span style="color:#000">&gt;</span> <span style="color:#000">mid</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">res</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">max</span>(<span style="color:#000">res</span>, <span style="color:#000">query</span>(<span style="color:#000">mid</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">r</span>, <span style="color:#000">x</span>, <span style="color:#000">y</span>, <span style="color:#000">rs</span>[<span style="color:#000">k</span>]));
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#000">res</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>} <span style="color:#000">t</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">struct</span> <span style="color:#3f6e75">Segment</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">l</span>, <span style="color:#000">r</span>, <span style="color:#000">p</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">bool</span> <span style="color:#a90d91">operator</span><span style="color:#000">&lt;</span>(<span style="color:#a90d91">const</span> <span style="color:#000">Segment</span> <span style="color:#000">&amp;</span><span style="color:#000">b</span>) <span style="color:#a90d91">const</span> { <span style="color:#a90d91">return</span> <span style="color:#000">l</span> <span style="color:#000">&gt;</span> <span style="color:#000">b</span>.<span style="color:#000">l</span>; }
</span></span><span style="display:flex;"><span>} <span style="color:#000">a</span>[<span style="color:#000">maxk</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">tot</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">scanf</span>(<span style="color:#c41a16">&#34;%d%d%d&#34;</span>, <span style="color:#000">&amp;</span><span style="color:#000">n</span>, <span style="color:#000">&amp;</span><span style="color:#000">m</span>, <span style="color:#000">&amp;</span><span style="color:#000">k</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">k</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">scanf</span>(<span style="color:#c41a16">&#34;%d%d%d&#34;</span>, <span style="color:#000">&amp;</span><span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">l</span>, <span style="color:#000">&amp;</span><span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">r</span>, <span style="color:#000">&amp;</span><span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">p</span>);  
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">sort</span>(<span style="color:#000">a</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">a</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">+</span> <span style="color:#000">k</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">root</span>[<span style="color:#1c01ce">0</span>] <span style="color:#000">=</span> <span style="color:#000">t</span>.<span style="color:#000">build</span>(<span style="color:#1c01ce">1</span>, <span style="color:#000">n</span>, <span style="color:#000">root</span>[<span style="color:#1c01ce">0</span>]);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">k</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">root</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">t</span>.<span style="color:#000">modify</span>(<span style="color:#1c01ce">1</span>, <span style="color:#000">n</span>, <span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">p</span>, <span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">r</span>, <span style="color:#000">root</span>[<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>]);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> (<span style="color:#000">m</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">p</span>, <span style="color:#000">q</span>, <span style="color:#000">x</span>, <span style="color:#000">y</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">scanf</span>(<span style="color:#c41a16">&#34;%d%d%d%d&#34;</span>, <span style="color:#000">&amp;</span><span style="color:#000">p</span>, <span style="color:#000">&amp;</span><span style="color:#000">q</span>, <span style="color:#000">&amp;</span><span style="color:#000">x</span>, <span style="color:#000">&amp;</span><span style="color:#000">y</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">pos</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">upper_bound</span>(<span style="color:#000">a</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">a</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">+</span> <span style="color:#000">k</span>, (<span style="color:#000">Segment</span>){<span style="color:#000">x</span>, <span style="color:#1c01ce">0</span>, <span style="color:#1c01ce">0</span>}) <span style="color:#000">-</span> <span style="color:#000">a</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#000">t</span>.<span style="color:#000">query</span>(<span style="color:#1c01ce">1</span>, <span style="color:#000">n</span>, <span style="color:#000">p</span>, <span style="color:#000">q</span>, <span style="color:#000">root</span>[<span style="color:#000">pos</span>]);
</span></span><span style="display:flex;"><span>        <span style="color:#000">puts</span>(<span style="color:#000">ans</span> <span style="color:#000">&lt;=</span> <span style="color:#000">y</span> <span style="color:#000">?</span> <span style="color:#c41a16">&#34;yes&#34;</span> <span style="color:#000">:</span> <span style="color:#c41a16">&#34;no&#34;</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">fflush</span>(<span style="color:#000">stdout</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div>]]></content:encoded>
    </item>
    
  </channel>
</rss>
