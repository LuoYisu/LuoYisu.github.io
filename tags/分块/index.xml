<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>分块 on _slb 的博客</title>
    <link>http://example.org/tags/%E5%88%86%E5%9D%97/</link>
    <description>Recent content in 分块 on _slb 的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Tue, 21 Dec 2021 14:36:53 +0000</lastBuildDate><atom:link href="http://example.org/tags/%E5%88%86%E5%9D%97/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Codeforces Round 542 (Div. 1&amp;2)</title>
      <link>http://example.org/posts/cf-contest1129/</link>
      <pubDate>Tue, 21 Dec 2021 14:36:53 +0000</pubDate>
      
      <guid>http://example.org/posts/cf-contest1129/</guid>
      <description>&lt;h2 id=&#34;概述&#34;&gt;概述&lt;/h2&gt;
&lt;p&gt;Div1 的 B、C、D、E 都值得一做。&lt;/p&gt;</description>
      <content:encoded><![CDATA[<h2 id="概述">概述</h2>
<p>Div1 的 B、C、D、E 都值得一做。</p>
<h2 id="div2-ahttpscodeforcescontest1130problema"><a href="https://codeforc.es/contest/1130/problem/A">Div2 A</a></h2>
<h3 id="description">Description</h3>
<p>有一个长度为 $n$​ 的序列，你需要找到一个非零整数 $d$​ 满足：当所有数都除以 $d$​ 之后（可以为小数），正数的个数要大于 $\lceil\dfrac{n}{2}\rceil$​。</p>
<h3 id="solution">Solution</h3>
<p>当正数数量足够，$d=1$；当负数数量足够，$d=-1$，否则无解。</p>
<h3 id="code">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cctype&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cmath&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cerr</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">cnt</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>, <span style="color:#000">n</span>, <span style="color:#000">cnt2</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">x</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">x</span>, <span style="color:#000">cnt</span> <span style="color:#000">+=</span> <span style="color:#000">x</span> <span style="color:#000">&gt;</span> <span style="color:#1c01ce">0</span>, <span style="color:#000">cnt2</span> <span style="color:#000">+=</span> <span style="color:#000">x</span> <span style="color:#000">&lt;</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">p</span> <span style="color:#000">=</span> <span style="color:#000">ceil</span>(<span style="color:#1c01ce">1.0</span> <span style="color:#000">*</span> <span style="color:#000">n</span> <span style="color:#000">/</span> <span style="color:#1c01ce">2</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">cnt</span> <span style="color:#000">&gt;=</span> <span style="color:#000">p</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">puts</span>(<span style="color:#c41a16">&#34;1&#34;</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">else</span> <span style="color:#a90d91">if</span> (<span style="color:#000">cnt2</span> <span style="color:#000">&gt;=</span> <span style="color:#000">p</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">puts</span>(<span style="color:#c41a16">&#34;-1&#34;</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>        <span style="color:#000">puts</span>(<span style="color:#c41a16">&#34;0&#34;</span>);
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="div2-bhttpscodeforcescontest1130problemb"><a href="https://codeforc.es/contest/1130/problem/B">Div2 B</a></h2>
<h3 id="description-1">Description</h3>
<p>萨沙和迪玛要做两个 $N$​ 层蛋糕，已知一条街上的 $2n$ 个商店 $a_1,a_2&hellip;.a_{2n}$ ​每家只能提供一个 $a_i$ ​层蛋糕，蛋糕必须按照从 $1\sim n$（从小到大）的顺序购买。最初，萨沙和迪玛位于第一个（最左边）房子附近。输出他们在购买两个蛋糕时必须行走的最小距离。相邻两栋房子之间的距离正好是 $1$。​</p>
<h3 id="solution-1">Solution</h3>
<p>显然两个人并没有什么特殊要求，找距离和最小的走即可。</p>
<h3 id="code-1">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cmath&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cctype&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cerr</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2e5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">a</span>[<span style="color:#000">maxn</span>], <span style="color:#000">b</span>[<span style="color:#000">maxn</span>][<span style="color:#1c01ce">2</span>], <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">int</span> <span style="color:#000">dis</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>) { <span style="color:#a90d91">return</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">abs</span>(<span style="color:#000">x</span> <span style="color:#000">-</span> <span style="color:#000">y</span>); }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">b</span>[<span style="color:#000">a</span>[<span style="color:#000">i</span>]][<span style="color:#1c01ce">0</span>])
</span></span><span style="display:flex;"><span>            <span style="color:#000">b</span>[<span style="color:#000">a</span>[<span style="color:#000">i</span>]][<span style="color:#1c01ce">1</span>] <span style="color:#000">=</span> <span style="color:#000">i</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>            <span style="color:#000">b</span>[<span style="color:#000">a</span>[<span style="color:#000">i</span>]][<span style="color:#1c01ce">0</span>] <span style="color:#000">=</span> <span style="color:#000">i</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">nowa</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">nowb</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">b</span>[<span style="color:#000">i</span>][<span style="color:#1c01ce">0</span>], <span style="color:#000">y</span> <span style="color:#000">=</span> <span style="color:#000">b</span>[<span style="color:#000">i</span>][<span style="color:#1c01ce">1</span>];
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">dis</span>(<span style="color:#000">nowa</span>, <span style="color:#000">x</span>) <span style="color:#000">+</span> <span style="color:#000">dis</span>(<span style="color:#000">nowb</span>, <span style="color:#000">y</span>) <span style="color:#000">&lt;</span> <span style="color:#000">dis</span>(<span style="color:#000">nowa</span>, <span style="color:#000">y</span>) <span style="color:#000">+</span> <span style="color:#000">dis</span>(<span style="color:#000">nowb</span>, <span style="color:#000">x</span>))
</span></span><span style="display:flex;"><span>            <span style="color:#000">ans</span> <span style="color:#000">+=</span> <span style="color:#000">dis</span>(<span style="color:#000">nowa</span>, <span style="color:#000">x</span>) <span style="color:#000">+</span> <span style="color:#000">dis</span>(<span style="color:#000">nowb</span>, <span style="color:#000">y</span>), <span style="color:#000">nowa</span> <span style="color:#000">=</span> <span style="color:#000">x</span>, <span style="color:#000">nowb</span> <span style="color:#000">=</span> <span style="color:#000">y</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>            <span style="color:#000">ans</span> <span style="color:#000">+=</span> <span style="color:#000">dis</span>(<span style="color:#000">nowa</span>, <span style="color:#000">y</span>) <span style="color:#000">+</span> <span style="color:#000">dis</span>(<span style="color:#000">nowb</span>, <span style="color:#000">x</span>), <span style="color:#000">nowa</span> <span style="color:#000">=</span> <span style="color:#000">y</span>, <span style="color:#000">nowb</span> <span style="color:#000">=</span> <span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">ans</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="div2-chttpscodeforcescontest1130problemc"><a href="https://codeforc.es/contest/1130/problem/C">Div2 C</a></h2>
<h3 id="description-2">Description</h3>
<p>有一个 $n\times n$ 的网格，有一些部分是陆地，剩下的是海洋。海洋不能通行。一个人想从一个格子出发到另一个格子。</p>
<p>你可以造至多一个隧道连接两个格子，如果从 $(x_1,y_1)$ 连到 $(x_2,y_2)$，代价是 $(x_1-x_2)^2+(y_1-y_2)^2$。在陆地上行走没有代价。</p>
<p>问最小代价是多少。$n\leq50$。</p>
<h3 id="solution-2">Solution</h3>
<p>因为只能造一个隧道，我们只能在出发点所在陆地和终点所在陆地造一个隧道。</p>
<p>$n$ 这么小，直接最暴力的暴力即可，找到出发地所在联通块所有点和终点所在联通块所有点，直接暴力找最小代价即可。</p>
<p>时间复杂度 $O(n^4)$。</p>
<p>优化其实也可以，我们只求出来每个联通块最外圈的点，这样就是 $O(n^2)$ 的了。</p>
<h3 id="code-2">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cctype&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cerr</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">dx</span>[] <span style="color:#000">=</span> {<span style="color:#1c01ce">1</span>, <span style="color:#000">-</span><span style="color:#1c01ce">1</span>, <span style="color:#1c01ce">0</span>, <span style="color:#1c01ce">0</span>};
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">dy</span>[] <span style="color:#000">=</span> {<span style="color:#1c01ce">0</span>, <span style="color:#1c01ce">0</span>, <span style="color:#000">-</span><span style="color:#1c01ce">1</span>, <span style="color:#1c01ce">1</span>};
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">55</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">struct</span> <span style="color:#3f6e75">point</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#000">y</span>;
</span></span><span style="display:flex;"><span>} <span style="color:#000">s</span>, <span style="color:#000">t</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">char</span> <span style="color:#000">ss</span>[<span style="color:#000">maxn</span>][<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">a</span>[<span style="color:#000">maxn</span>][<span style="color:#000">maxn</span>], <span style="color:#000">vis</span>[<span style="color:#000">maxn</span>][<span style="color:#000">maxn</span>], <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">bool</span> <span style="color:#000">is_in</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>) { <span style="color:#a90d91">return</span> <span style="color:#000">x</span> <span style="color:#000">&gt;=</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">x</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">y</span> <span style="color:#000">&gt;=</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">y</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">dfs</span>(<span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">vector</span><span style="color:#000">&lt;</span><span style="color:#000">point</span><span style="color:#000">&gt;</span> <span style="color:#000">&amp;</span><span style="color:#000">p</span>, <span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">vis</span>[<span style="color:#000">x</span>][<span style="color:#000">y</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">p</span>.<span style="color:#000">push_back</span>({<span style="color:#000">x</span>, <span style="color:#000">y</span>});
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#1c01ce">4</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">nx</span> <span style="color:#000">=</span> <span style="color:#000">x</span> <span style="color:#000">+</span> <span style="color:#000">dx</span>[<span style="color:#000">i</span>], <span style="color:#000">ny</span> <span style="color:#000">=</span> <span style="color:#000">y</span> <span style="color:#000">+</span> <span style="color:#000">dy</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">is_in</span>(<span style="color:#000">nx</span>, <span style="color:#000">ny</span>) <span style="color:#000">&amp;&amp;</span> <span style="color:#000">!</span><span style="color:#000">vis</span>[<span style="color:#000">nx</span>][<span style="color:#000">ny</span>] <span style="color:#000">&amp;&amp;</span> <span style="color:#000">a</span>[<span style="color:#000">nx</span>][<span style="color:#000">ny</span>] <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">dfs</span>(<span style="color:#000">p</span>, <span style="color:#000">nx</span>, <span style="color:#000">ny</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">int</span> <span style="color:#000">pow_2</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>) { <span style="color:#a90d91">return</span> <span style="color:#000">x</span> <span style="color:#000">*</span> <span style="color:#000">x</span>; }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">s</span>.<span style="color:#000">x</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">s</span>.<span style="color:#000">y</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">t</span>.<span style="color:#000">x</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">t</span>.<span style="color:#000">y</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> (<span style="color:#000">ss</span>[<span style="color:#000">i</span>] <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">a</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>] <span style="color:#000">=</span> <span style="color:#000">ss</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>] <span style="color:#000">==</span> <span style="color:#2300ce">&#39;1&#39;</span> <span style="color:#000">?</span> <span style="color:#1c01ce">1</span> <span style="color:#000">:</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">vector</span><span style="color:#000">&lt;</span><span style="color:#000">point</span><span style="color:#000">&gt;</span> <span style="color:#000">p</span>, <span style="color:#000">q</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">dfs</span>(<span style="color:#000">p</span>, <span style="color:#000">s</span>.<span style="color:#000">x</span>, <span style="color:#000">s</span>.<span style="color:#000">y</span>), <span style="color:#000">memset</span>(<span style="color:#000">vis</span>, <span style="color:#1c01ce">0</span>, <span style="color:#a90d91">sizeof</span>(<span style="color:#000">vis</span>)), <span style="color:#000">dfs</span>(<span style="color:#000">q</span>, <span style="color:#000">t</span>.<span style="color:#000">x</span>, <span style="color:#000">t</span>.<span style="color:#000">y</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">30</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">auto</span> <span style="color:#000">k</span> : <span style="color:#000">p</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">auto</span> <span style="color:#000">f</span> : <span style="color:#000">q</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">min</span>(<span style="color:#000">ans</span>, <span style="color:#000">pow_2</span>(<span style="color:#000">k</span>.<span style="color:#000">x</span> <span style="color:#000">-</span> <span style="color:#000">f</span>.<span style="color:#000">x</span>) <span style="color:#000">+</span> <span style="color:#000">pow_2</span>(<span style="color:#000">k</span>.<span style="color:#000">y</span> <span style="color:#000">-</span> <span style="color:#000">f</span>.<span style="color:#000">y</span>));
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">ans</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="ahttpscodeforcescontest1129problema2"><a href="https://codeforc.es/contest/1129/problem/A2">A</a></h2>
<h3 id="description-3">Description</h3>
<p>有 $n$ 个站台和一个玩具火车，第 $i$ 个站台单向连向第 $i+1$ 个站台，特殊地，第 $n$ 个站台连向第 $1$ 个站台。</p>
<p>有 $m$ 个糖果，每个糖果初始在 $a_i$ 站台，要被送到 $b_i$​ 站台。</p>
<p>火车经过一个站台时，可以卸下任意数量糖果，但只能往火车上装一个糖果。</p>
<p>问从每个站台出发，把所有糖果运送到指定位置需要的时间。（经过一条边需要 $1$ 的时间）。</p>
<h3 id="solution-3">Solution</h3>
<p>一个站台里的糖果数决定了要经过这个站台的次数。</p>
<p>显然只有最后一次经过拿的糖果的目的地能影响时间，我们贪心地让这个时间最小。</p>
<p>预处理出从 $1$ 出发把每个车站的糖果的都送完的时间加上 $1$。</p>
<p>输出一个车站的答案后，只需要把这个车站的时间都加上 $n$ 并更新答案即可。</p>
<h3 id="code-3">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cctype&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cerr</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">5100</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">n</span>, <span style="color:#000">m</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">vector</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">all</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">ios</span><span style="color:#000">::</span><span style="color:#000">sync_with_stdio</span>(<span style="color:#a90d91">false</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">m</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">mx</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">x</span>, <span style="color:#000">y</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">x</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">y</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">all</span>[<span style="color:#000">x</span>].<span style="color:#000">push_back</span>(<span style="color:#000">y</span> <span style="color:#000">&lt;</span> <span style="color:#000">x</span> <span style="color:#000">?</span> <span style="color:#000">y</span> <span style="color:#000">+</span> <span style="color:#000">n</span> : <span style="color:#000">y</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">sort</span>(<span style="color:#000">all</span>[<span style="color:#000">i</span>].<span style="color:#000">begin</span>(), <span style="color:#000">all</span>[<span style="color:#000">i</span>].<span style="color:#000">end</span>(), <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">greater</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span><span style="color:#000">&gt;</span>());
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">now</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">auto</span> <span style="color:#000">&amp;</span><span style="color:#000">p</span> : <span style="color:#000">all</span>[<span style="color:#000">i</span>])
</span></span><span style="display:flex;"><span>            <span style="color:#000">p</span> <span style="color:#000">+=</span> <span style="color:#000">now</span>, <span style="color:#000">now</span> <span style="color:#000">+=</span> <span style="color:#000">n</span>, <span style="color:#000">mx</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">max</span>(<span style="color:#000">mx</span>, <span style="color:#000">p</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">mx</span> <span style="color:#000">-</span> <span style="color:#000">i</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">auto</span> <span style="color:#000">&amp;</span><span style="color:#000">p</span> : <span style="color:#000">all</span>[<span style="color:#000">i</span>])
</span></span><span style="display:flex;"><span>            <span style="color:#000">p</span> <span style="color:#000">+=</span> <span style="color:#000">n</span>, <span style="color:#000">mx</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">max</span>(<span style="color:#000">p</span>, <span style="color:#000">mx</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="bhttpscodeforcescontest1129problemb"><a href="https://codeforc.es/contest/1129/problem/B">B</a></h2>
<h3 id="description-4">Description</h3>
<p>给定一个序列 $a$，有 $n$ 个元素，编号从 $0$ 到 $n-1$。求 $\max\limits_{0 \leq l \leq r \leq n-1}(r-l+1)\times\sum\limits_{l\leq i\leq r}a_i$。</p>
<p>有一个错误算法：</p>
<pre tabindex="0"><code>```
function find_answer(n, a)
    # Assumes n is an integer between 1 and 2000, inclusive
    # Assumes a is a list containing n integers: a[0], a[1], ..., a[n-1]
    res = 0
    cur = 0
    k = -1
    for i = 0 to i = n-1
        cur = cur + a[i]
        if cur &lt; 0
            cur = 0
            k = i
        res = max(res, (i-k)*cur)
    return res
```
</code></pre><p>你需要构造一组数据，使这个标准答案减去错误算法得出的答案是 $k$。</p>
<p>$|a_i| \leq 10^6,n \leq 2000$。</p>
<h3 id="solution-4">Solution</h3>
<p>不难发现这个错误做法会在出现负数的时候出错，那么我们先安排一个 $-1$ 进去。</p>
<p>这时候错误做法的答案是 $(\sum a_i+1)(n-1)$，而正确答案是 $n\times\sum a_i$。</p>
<p>那么应该新加进去的数是 $k-\sum a_i+n$（这里的 $\sum a_i,n$ 都是加进去之前的）。</p>
<p>如果这个数比 $10^6$ 大我们就加进去 $10^6$，否则直接加该加的数即可。</p>
<h3 id="code-4">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cctype&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cerr</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">mx</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1e6</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">vector</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">ans</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">k</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">ans</span>.<span style="color:#000">push_back</span>(<span style="color:#000">-</span><span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">sum</span> <span style="color:#000">=</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span>, <span style="color:#000">n</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">k</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> (<span style="color:#000">sum</span> <span style="color:#000">-</span> <span style="color:#000">n</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;</span> <span style="color:#000">k</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">k</span> <span style="color:#000">-</span> <span style="color:#000">sum</span> <span style="color:#000">+</span> <span style="color:#000">n</span> <span style="color:#000">&lt;=</span> <span style="color:#000">mx</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">ans</span>.<span style="color:#000">push_back</span>(<span style="color:#000">k</span> <span style="color:#000">-</span> <span style="color:#000">sum</span> <span style="color:#000">+</span> <span style="color:#000">n</span>), <span style="color:#000">n</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>            <span style="color:#000">n</span><span style="color:#000">++</span>, <span style="color:#000">ans</span>.<span style="color:#000">push_back</span>(<span style="color:#000">mx</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">sum</span> <span style="color:#000">+=</span> <span style="color:#000">ans</span>.<span style="color:#000">back</span>();
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">ans</span>.<span style="color:#000">size</span>() <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">p</span> : <span style="color:#000">ans</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">p</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="chttpscodeforcescontest1129problemc"><a href="https://codeforc.es/contest/1129/problem/C">C</a></h2>
<h3 id="description-5">Description</h3>
<p>在摩尔斯电码（以下简称“摩码”）中，字母表中的一个字母被表示为一个长度为$1\sim4$的 <code>01</code> 串。长度为 $1\sim4$ 的 <code>01</code>串共有 $2^1+2^2+2^3+2^4=30$ 个，而字母只有 $26$ 个，所以有 $4$ 个 <code>01</code> 串不表示任何字母——<code>0011</code>、<code>0101</code>、<code>1110</code>、<code>1111</code>，其他 $26$ 个 <code>01</code> 串表示互不相同的 $26$ 个字母。
你有一个 <code>01</code> 串 $S$，初始为空。现在有 $m$ 次添加，每次往 $S$ 的末尾添加一个字符（<code>0</code> 或 <code>1</code>）。对于每一次添加，你都要回答目前的 $S$ 的所有非空子串用摩码所能表示的字母串的总数。由于答案可能巨大，你只需要输出答案模 $10^9+7$ 的结果。</p>
<p>$m\leq3000$。</p>
<h3 id="solution-5">Solution</h3>
<p>$m$ 很小，我们可以考虑用暴力一点的方法草过去这个题。</p>
<p>可以考虑对每个操作计算其对答案的贡献，那么我们就是要计算后缀对答案的贡献。</p>
<p>发现我们的字母串是本质不相同的，使用 Trie 树就可以维护之前的所有前缀。</p>
<p>进行一个操作时，我们在 Trie 树上的所有叶子节点下面都新开一个点，然后找它的 $4$ 个父亲（即枚举新后缀所在摩尔斯电码的长度），直接把方案数加上去就行。</p>
<p>复杂度 $O(m^2)$。</p>
<h3 id="code-5">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cctype&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cerr</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">3000</span> <span style="color:#000">*</span> <span style="color:#1c01ce">3000</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>, <span style="color:#000">mod</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1e9</span> <span style="color:#000">+</span> <span style="color:#1c01ce">7</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">typedef</span> <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">ll</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">upd</span>(<span style="color:#a90d91">int</span> <span style="color:#000">&amp;</span><span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>) { <span style="color:#000">x</span> <span style="color:#000">+=</span> <span style="color:#000">y</span> <span style="color:#000">%</span> <span style="color:#000">mod</span>, <span style="color:#000">x</span> <span style="color:#000">%=</span> <span style="color:#000">mod</span>; }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">struct</span> <span style="color:#3f6e75">Tree</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">ch</span>[<span style="color:#000">maxn</span>][<span style="color:#1c01ce">2</span>], <span style="color:#000">f</span>[<span style="color:#000">maxn</span>], <span style="color:#000">tot</span>, <span style="color:#000">father</span>[<span style="color:#000">maxn</span>], <span style="color:#000">a</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">void</span> <span style="color:#000">dp</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">p</span> <span style="color:#000">=</span> <span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">s</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#1c01ce">4</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">int</span> <span style="color:#000">fa</span> <span style="color:#000">=</span> <span style="color:#000">father</span>[<span style="color:#000">x</span>];
</span></span><span style="display:flex;"><span>            <span style="color:#177500">//cout &lt;&lt; x &lt;&lt; &#34; &#34; &lt;&lt; fa &lt;&lt; endl;
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>            <span style="color:#a90d91">int</span> <span style="color:#000">now</span> <span style="color:#000">=</span> <span style="color:#000">ch</span>[<span style="color:#000">fa</span>][<span style="color:#1c01ce">1</span>] <span style="color:#000">==</span> <span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">s</span> <span style="color:#000">+=</span> <span style="color:#000">now</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">i</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">fa</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">i</span> <span style="color:#000">==</span> <span style="color:#1c01ce">3</span> <span style="color:#000">&amp;&amp;</span> (<span style="color:#000">s</span> <span style="color:#000">==</span> <span style="color:#1c01ce">3</span> <span style="color:#000">||</span> <span style="color:#000">s</span> <span style="color:#000">==</span> <span style="color:#1c01ce">5</span> <span style="color:#000">||</span> <span style="color:#000">s</span> <span style="color:#000">==</span> <span style="color:#1c01ce">14</span> <span style="color:#000">||</span> <span style="color:#000">s</span> <span style="color:#000">==</span> <span style="color:#1c01ce">15</span>))
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">continue</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">upd</span>(<span style="color:#000">f</span>[<span style="color:#000">p</span>], <span style="color:#000">f</span>[<span style="color:#000">x</span>]);
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">x</span> <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">break</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#000">upd</span>(<span style="color:#000">ans</span>, <span style="color:#000">f</span>[<span style="color:#000">p</span>]);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">void</span> <span style="color:#000">insert</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">pos</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">a</span>[<span style="color:#000">pos</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">pos</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">int</span> <span style="color:#000">p</span> <span style="color:#000">=</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">!</span><span style="color:#000">ch</span>[<span style="color:#000">p</span>][<span style="color:#000">x</span>])
</span></span><span style="display:flex;"><span>                <span style="color:#000">ch</span>[<span style="color:#000">p</span>][<span style="color:#000">x</span>] <span style="color:#000">=</span> <span style="color:#000">++</span><span style="color:#000">tot</span>, <span style="color:#000">father</span>[<span style="color:#000">tot</span>] <span style="color:#000">=</span> <span style="color:#000">p</span>, <span style="color:#000">dp</span>(<span style="color:#000">tot</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#000">a</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">ch</span>[<span style="color:#000">p</span>][<span style="color:#000">x</span>];
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>} <span style="color:#000">t</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">m</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">m</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">t</span>.<span style="color:#000">f</span>[<span style="color:#1c01ce">0</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">t</span>.<span style="color:#000">insert</span>(<span style="color:#000">x</span>, <span style="color:#000">i</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">ans</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="dhttpscodeforcescontest1129problemd"><a href="https://codeforc.es/contest/1129/problem/D">D</a></h2>
<h3 id="description-6">Description</h3>
<p>给出一个长度为 $n$ 的序列，把它划分成若干段，使得每一段中出现过<strong>恰好</strong>一次的元素个数 $\le k$，求方案数对 $998244353$ 取模后的结果。</p>
<h3 id="solution-6">Solution</h3>
<p>不难想到一个  DP：$f(i)$ 表示前 $i$ 位的答案。$f(i) = \sum\limits_{0 \leq j &lt; i \wedge g(j+1, i) \leq k} f(j)$。其中 $g(i,j)$ 表示区间 $[i,j]$ 中出现过恰好一次的元素个数。</p>
<p>直接转移是 $O(n^2)$ 甚至 $O(n^3)$​ 的，想办法优化。</p>
<p>不会，下文包括代码全是抄题解。</p>
<p>因为恰好一次，我们想办法记录一个 $lst_i$​ 数组表示 $i$​ 上一次出现位置。</p>
<p>我们维护 $g_j=g(j+1,i)$</p>
<p>那么新加入 $a_i$​ 时，我们应该把 $[lst_{lst_{a_i}},lst_{a_i}-1)$​ 里的 $g$​​ 减一，把 $[lst_{a_i},i)$ 里的 $g$ 加上 $1$。</p>
<p>问题变成有一个序列，每个元素有一个权值和键值。我们每次将区间键值 $\pm1$，查询序列中键值 $\leq k$​ 的元素权值和。</p>
<p>对这种莫名其妙的维护我们可以尝试分块。</p>
<p>对序列进行分块，对每个块维护一个 $sum(i,j)$ 表示第 $i$ 个块中 $g_p\geq j$ 的 $f_p$ 之和。并维护一个 $all_i$ 表示块内所有 $f_p$​​​ 之和。</p>
<p>$lzy$ 是块上的加法懒标记。</p>
<p>查询直接遍历所有块把答案加进去即可（用 $all_i-sum(i,k-lzy_i+1)$ 就得到这个块的答案了）。</p>
<p>修改怎么办呢？对于整块，我们直接加懒标记。</p>
<p>对于散点，我们如果要把 $g_j$​​ 加上 $1$​​，那么就相当于把 $sum(i,g_j)$​​ 加上 $f_j$，反之同理。</p>
<p>这样查询和修改就是 $O(1)$​ 的。</p>
<p>时间复杂度 $O(nw+\dfrac{n^2}{w})\geq O(n\sqrt n)$。</p>
<h3 id="code-6">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cmath&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cctype&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cerr</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1e5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>, <span style="color:#000">mod</span> <span style="color:#000">=</span> <span style="color:#1c01ce">998244353</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">typedef</span> <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">ll</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">n</span>, <span style="color:#000">k</span>, <span style="color:#000">len</span>, <span style="color:#000">id</span>[<span style="color:#000">maxn</span>], <span style="color:#000">lst</span>[<span style="color:#000">maxn</span>], <span style="color:#000">tot</span>; 
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">f</span>[<span style="color:#000">maxn</span>], <span style="color:#000">sum</span>[<span style="color:#1c01ce">410</span>][<span style="color:#000">maxn</span>], <span style="color:#000">lzy</span>[<span style="color:#000">maxn</span>], <span style="color:#000">bl</span>[<span style="color:#000">maxn</span>], <span style="color:#000">cnt</span>[<span style="color:#000">maxn</span>], <span style="color:#000">br</span>[<span style="color:#000">maxn</span>], <span style="color:#000">all</span>[<span style="color:#000">maxn</span>], <span style="color:#000">a</span>[<span style="color:#000">maxn</span>], <span style="color:#000">llst</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">upd</span>(<span style="color:#a90d91">int</span> <span style="color:#000">&amp;</span><span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>) { <span style="color:#000">x</span> <span style="color:#000">+=</span> (<span style="color:#000">y</span> <span style="color:#000">+</span> <span style="color:#000">mod</span>) <span style="color:#000">%</span> <span style="color:#000">mod</span>, <span style="color:#000">x</span> <span style="color:#000">%=</span> <span style="color:#000">mod</span>; }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">add</span>(<span style="color:#a90d91">int</span> <span style="color:#000">l</span>, <span style="color:#a90d91">int</span> <span style="color:#000">r</span>, <span style="color:#a90d91">int</span> <span style="color:#000">v</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">l</span> <span style="color:#000">&gt;</span> <span style="color:#000">r</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">id</span>[<span style="color:#000">l</span>] <span style="color:#000">==</span> <span style="color:#000">id</span>[<span style="color:#000">r</span>])
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#000">l</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">r</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">v</span> <span style="color:#000">==</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">upd</span>(<span style="color:#000">sum</span>[<span style="color:#000">id</span>[<span style="color:#000">l</span>]][<span style="color:#000">++</span><span style="color:#000">cnt</span>[<span style="color:#000">i</span>]], <span style="color:#000">f</span>[<span style="color:#000">i</span>]);
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>                <span style="color:#000">upd</span>(<span style="color:#000">sum</span>[<span style="color:#000">id</span>[<span style="color:#000">l</span>]][<span style="color:#000">cnt</span>[<span style="color:#000">i</span>]<span style="color:#000">--</span>], <span style="color:#000">-</span><span style="color:#000">f</span>[<span style="color:#000">i</span>]);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#000">l</span>; <span style="color:#000">id</span>[<span style="color:#000">i</span>] <span style="color:#000">==</span> <span style="color:#000">id</span>[<span style="color:#000">l</span>]; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">v</span> <span style="color:#000">==</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">upd</span>(<span style="color:#000">sum</span>[<span style="color:#000">id</span>[<span style="color:#000">l</span>]][<span style="color:#000">++</span><span style="color:#000">cnt</span>[<span style="color:#000">i</span>]], <span style="color:#000">f</span>[<span style="color:#000">i</span>]);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>            <span style="color:#000">upd</span>(<span style="color:#000">sum</span>[<span style="color:#000">id</span>[<span style="color:#000">l</span>]][<span style="color:#000">cnt</span>[<span style="color:#000">i</span>]<span style="color:#000">--</span>], <span style="color:#000">-</span><span style="color:#000">f</span>[<span style="color:#000">i</span>]);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#000">r</span>; <span style="color:#000">id</span>[<span style="color:#000">i</span>] <span style="color:#000">==</span> <span style="color:#000">id</span>[<span style="color:#000">r</span>]; <span style="color:#000">i</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">v</span> <span style="color:#000">==</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">upd</span>(<span style="color:#000">sum</span>[<span style="color:#000">id</span>[<span style="color:#000">r</span>]][<span style="color:#000">++</span><span style="color:#000">cnt</span>[<span style="color:#000">i</span>]], <span style="color:#000">f</span>[<span style="color:#000">i</span>]);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>            <span style="color:#000">upd</span>(<span style="color:#000">sum</span>[<span style="color:#000">id</span>[<span style="color:#000">r</span>]][<span style="color:#000">cnt</span>[<span style="color:#000">i</span>]<span style="color:#000">--</span>], <span style="color:#000">-</span><span style="color:#000">f</span>[<span style="color:#000">i</span>]);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#000">id</span>[<span style="color:#000">l</span>] <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">id</span>[<span style="color:#000">r</span>]; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">lzy</span>[<span style="color:#000">i</span>] <span style="color:#000">+=</span> <span style="color:#000">v</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">work</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">res</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">tot</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">upd</span>(<span style="color:#000">res</span>, <span style="color:#000">all</span>[<span style="color:#000">i</span>]);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">k</span> <span style="color:#000">-</span> <span style="color:#000">lzy</span>[<span style="color:#000">i</span>] <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&gt;=</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">upd</span>(<span style="color:#000">res</span>, <span style="color:#000">-</span><span style="color:#000">sum</span>[<span style="color:#000">i</span>][<span style="color:#000">k</span> <span style="color:#000">-</span> <span style="color:#000">lzy</span>[<span style="color:#000">i</span>] <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>]);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>            <span style="color:#000">upd</span>(<span style="color:#000">res</span>, <span style="color:#000">-</span><span style="color:#000">all</span>[<span style="color:#000">i</span>]);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#000">res</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">ios</span><span style="color:#000">::</span><span style="color:#000">sync_with_stdio</span>(<span style="color:#a90d91">false</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">k</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">f</span>[<span style="color:#1c01ce">0</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">len</span> <span style="color:#000">=</span> <span style="color:#000">sqrt</span>(<span style="color:#000">n</span>), <span style="color:#000">tot</span> <span style="color:#000">=</span> <span style="color:#000">n</span> <span style="color:#000">/</span> <span style="color:#000">len</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">tot</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">bl</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> (<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>) <span style="color:#000">*</span> <span style="color:#000">len</span>, <span style="color:#000">br</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">min</span>(<span style="color:#000">i</span> <span style="color:#000">*</span> <span style="color:#000">len</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">n</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#000">bl</span>[<span style="color:#000">i</span>]; <span style="color:#000">j</span> <span style="color:#000">&lt;=</span> <span style="color:#000">br</span>[<span style="color:#000">i</span>]; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">id</span>[<span style="color:#000">j</span>] <span style="color:#000">=</span> <span style="color:#000">i</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">sum</span>[<span style="color:#1c01ce">1</span>][<span style="color:#1c01ce">0</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">all</span>[<span style="color:#1c01ce">1</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">add</span>(<span style="color:#000">llst</span>[<span style="color:#000">a</span>[<span style="color:#000">i</span>]], <span style="color:#000">lst</span>[<span style="color:#000">a</span>[<span style="color:#000">i</span>]] <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">-</span><span style="color:#1c01ce">1</span>), <span style="color:#000">add</span>(<span style="color:#000">lst</span>[<span style="color:#000">a</span>[<span style="color:#000">i</span>]], <span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>, <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">llst</span>[<span style="color:#000">a</span>[<span style="color:#000">i</span>]] <span style="color:#000">=</span> <span style="color:#000">lst</span>[<span style="color:#000">a</span>[<span style="color:#000">i</span>]], <span style="color:#000">lst</span>[<span style="color:#000">a</span>[<span style="color:#000">i</span>]] <span style="color:#000">=</span> <span style="color:#000">i</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">f</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">work</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#000">upd</span>(<span style="color:#000">sum</span>[<span style="color:#000">id</span>[<span style="color:#000">i</span>]][<span style="color:#1c01ce">0</span>], <span style="color:#000">f</span>[<span style="color:#000">i</span>]), <span style="color:#000">upd</span>(<span style="color:#000">all</span>[<span style="color:#000">id</span>[<span style="color:#000">i</span>]], <span style="color:#000">f</span>[<span style="color:#000">i</span>]);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">f</span>[<span style="color:#000">n</span>] <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="ehttpscodeforcescontest1129probleme"><a href="https://codeforc.es/contest/1129/problem/E">E</a></h2>
<h3 id="description-7">Description</h3>
<p><strong>这是一道交互题</strong>。</p>
<p>有一个 $n$ 个节点的树，你需要通过不超过 $11111$ 次询问得知树的形态。</p>
<p>询问方式为给出两个非空<strong>无交</strong>点集 $S$ ，$T$ 和一个点 $u$，可以得到满足 $s \in S , t \in T$ 且路径 $(s,t)$ 经过 $u$ 点的二元组 $(s,t)$ 的总数。</p>
<p>$n\leq500$。</p>
<h3 id="solution-7">Solution</h3>
<p>没什么头绪，看看我们能通过询问得到什么。</p>
<p>假设我们以 $1$ 为根，每次询问 $(\{1\},\{2,3,&hellip;,n\},i)$ 能得到以 $i$ 为根子树大小。</p>
<p>那么把子树大小按从小到大排序，一个点儿子必定在其左侧，现在我们把问题转化为找儿子了。</p>
<p>设现在还没有确定父亲的点集合为 $S$。</p>
<p>问一次 $(\{1\},S,i)$ 能得到点 $i$ 的儿子个数 $k$，我们接下来二分 $k$ 次，每次找到一个最小的 $p$，使询问 $(\{1\},\{S_1,S_2,&hellip;,S_p\},i)$ 的结果非零。</p>
<p>那么这个 $p$​ 就是一个儿子。我们把它删掉接着二分就找到了所有儿子。</p>
<p>找完之后把点 $i$ 加进集合里就行。</p>
<p>时间复杂度 $O(n^2\log n)$，询问次数大概是 $2n+2n\log_2n$。</p>
<h3 id="code-7">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cctype&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cerr</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">510</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">struct</span> <span style="color:#3f6e75">node</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">id</span>, <span style="color:#000">siz</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">bool</span> <span style="color:#a90d91">operator</span><span style="color:#000">&lt;</span>(<span style="color:#a90d91">const</span> <span style="color:#000">node</span> <span style="color:#000">&amp;</span><span style="color:#000">b</span>) <span style="color:#a90d91">const</span> { <span style="color:#a90d91">return</span> <span style="color:#000">siz</span> <span style="color:#000">&lt;</span> <span style="color:#000">b</span>.<span style="color:#000">siz</span>; }
</span></span><span style="display:flex;"><span>} <span style="color:#000">a</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">father</span>[<span style="color:#000">maxn</span>], <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">get_siz</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">a</span>[<span style="color:#1c01ce">1</span>].<span style="color:#000">id</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">a</span>[<span style="color:#1c01ce">1</span>].<span style="color:#000">siz</span> <span style="color:#000">=</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">n</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">i</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">i</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">siz</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">id</span> <span style="color:#000">=</span> <span style="color:#000">i</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">sort</span>(<span style="color:#000">a</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">a</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">+</span> <span style="color:#000">n</span>);
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">S</span>[<span style="color:#000">maxn</span>], <span style="color:#000">top</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">bool</span> <span style="color:#000">check</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">pos</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">x</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">x</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">a</span>[<span style="color:#000">S</span>[<span style="color:#000">i</span>]].<span style="color:#000">id</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">pos</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">res</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">res</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#000">res</span> <span style="color:#000">&gt;</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">solve</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#177500">//for (int i = 1; i &lt;= n; i++)
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>    <span style="color:#177500">//    cout &lt;&lt; a[i].id &lt;&lt; &#34; &#34; &lt;&lt; a[i].siz &lt;&lt; endl;
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">siz</span> <span style="color:#000">==</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">S</span>[<span style="color:#000">++</span><span style="color:#000">top</span>] <span style="color:#000">=</span> <span style="color:#000">i</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#177500">//cout &lt;&lt; a[i].id &lt;&lt; &#34; &#34; &lt;&lt; a[i].siz &lt;&lt; &#34;!!!\\n&#34;;
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>            <span style="color:#a90d91">int</span> <span style="color:#000">times</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">top</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">top</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">a</span>[<span style="color:#000">S</span>[<span style="color:#000">i</span>]].<span style="color:#000">id</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">id</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">times</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">while</span> (<span style="color:#000">times</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>            {
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">int</span> <span style="color:#000">l</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">r</span> <span style="color:#000">=</span> <span style="color:#000">top</span>, <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">while</span> (<span style="color:#000">l</span> <span style="color:#000">&lt;=</span> <span style="color:#000">r</span>)
</span></span><span style="display:flex;"><span>                {
</span></span><span style="display:flex;"><span>                    <span style="color:#a90d91">int</span> <span style="color:#000">mid</span> <span style="color:#000">=</span> (<span style="color:#000">l</span> <span style="color:#000">+</span> <span style="color:#000">r</span>) <span style="color:#000">/</span> <span style="color:#1c01ce">2</span>;
</span></span><span style="display:flex;"><span>                    <span style="color:#a90d91">if</span> (<span style="color:#000">check</span>(<span style="color:#000">mid</span>, <span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">id</span>))
</span></span><span style="display:flex;"><span>                        <span style="color:#000">r</span> <span style="color:#000">=</span> <span style="color:#000">mid</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#000">mid</span>;
</span></span><span style="display:flex;"><span>                    <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>                        <span style="color:#000">l</span> <span style="color:#000">=</span> <span style="color:#000">mid</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>                }
</span></span><span style="display:flex;"><span>                <span style="color:#000">father</span>[<span style="color:#000">a</span>[<span style="color:#000">S</span>[<span style="color:#000">ans</span>]].<span style="color:#000">id</span>] <span style="color:#000">=</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">id</span>;
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">int</span> <span style="color:#000">flag</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">top</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                {
</span></span><span style="display:flex;"><span>                    <span style="color:#a90d91">if</span> (<span style="color:#000">i</span> <span style="color:#000">==</span> <span style="color:#000">ans</span>)
</span></span><span style="display:flex;"><span>                        <span style="color:#000">flag</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>                    <span style="color:#a90d91">if</span> (<span style="color:#000">flag</span>)
</span></span><span style="display:flex;"><span>                        <span style="color:#000">S</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">S</span>[<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>];
</span></span><span style="display:flex;"><span>                }
</span></span><span style="display:flex;"><span>                <span style="color:#000">top</span><span style="color:#000">--</span>;
</span></span><span style="display:flex;"><span>            }
</span></span><span style="display:flex;"><span>            <span style="color:#000">S</span>[<span style="color:#000">++</span><span style="color:#000">top</span>] <span style="color:#000">=</span> <span style="color:#000">i</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">ios</span><span style="color:#000">::</span><span style="color:#000">sync_with_stdio</span>(<span style="color:#a90d91">false</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">get_siz</span>(), <span style="color:#000">solve</span>();
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34;ANSWER&#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">father</span>[<span style="color:#000">i</span>] <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">i</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div>]]></content:encoded>
    </item>
    
  </channel>
</rss>
