<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>网络流 on _slb 的博客</title>
    <link>http://example.org/tags/%E7%BD%91%E7%BB%9C%E6%B5%81/</link>
    <description>Recent content in 网络流 on _slb 的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 20 Apr 2022 19:59:46 +0000</lastBuildDate><atom:link href="http://example.org/tags/%E7%BD%91%E7%BB%9C%E6%B5%81/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>loj3702 「联合省选 2022」学术社区</title>
      <link>http://example.org/posts/loj3702/</link>
      <pubDate>Wed, 20 Apr 2022 19:59:46 +0000</pubDate>
      
      <guid>http://example.org/posts/loj3702/</guid>
      <description>&lt;p&gt;参考：&lt;a href=&#34;https://www.luogu.com.cn/blog/pengSiJin/lian-ge-xing-xuan-2022-xue-shu-she-ou-analysis&#34;&gt;出题人 Itst 的题解&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;确实是神仙，不好想。&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>参考：<a href="https://www.luogu.com.cn/blog/pengSiJin/lian-ge-xing-xuan-2022-xue-shu-she-ou-analysis">出题人 Itst 的题解</a>。</p>
<p>确实是神仙，不好想。</p>
<h2 id="description">Description</h2>
<p>有一个帖子，总共有 $n$ 个人在帖子里发过消息。这个帖子里有 $m$ 条消息，每条消息包含三个字符串 $s1,s2,s3$，$s1$ 代表发出者的名字。消息分三类：</p>
<ul>
<li>楼上型消息：如果 $s3$ 是 <code>loushang</code>，且 $s2$ 是在帖子里发过贴的人的名字，那么称该消息为楼上型消息，该消息被满足当且仅当上一条消息的发出者为 $s2$；</li>
<li>楼下型消息：如果 $s3$ 是 <code>louxia</code>，且 $s2$ 是在帖子里发过贴的人的名字，那么称该消息为楼下型消息，该消息被满足当且仅当下一条消息的发出者为 $s2$；</li>
<li>学术消息：不满足以上条件即为学术消息。这类消息无法被满足。</li>
</ul>
<p>你需要对这 $m$ 条消息进行重新排列使得被满足的消息数量最大，输出这个最大值以及排列。</p>
<p>保证每个人至少发过一条学术消息。</p>
<p>多组数据，数据组数 $T\leq100$，$n\leq m\leq77777$，$\sum m\leq2.5\times10^5$。</p>
<h2 id="solution">Solution</h2>
<p>让我们忽略魔怔的题面，来分析这个问题吧。</p>
<p>首先题目中的楼上型消息和楼下型消息很容易想到可以用边的方式去刻画，我们有了一个初步的方向：加边加边加边，跑某某某算法。</p>
<h3 id="特殊性质-bc">特殊性质 BC</h3>
<p>因为每个消息都能被满足，且没有互相满足的消息，最后的帖子一定是由若干块下面这种形式组成：</p>
<pre tabindex="0"><code>A B loushang
B C loushang
C C C
D C louxia
A D louxia
</code></pre><p>即若干个楼上消息，一个学术消息，若干个楼下消息。</p>
<p>一个简单想法是：把满足要求的消息按照楼上到楼下的方向连边，把这种形式抽象为一条链，然后搞欧拉回路之类的覆盖所有边的算法。</p>
<p>比如 <code>A B loushang</code>，就从 $A$ 向 $B$ 连边，<code>A B louxia</code>，就从 $B$ 向 $A$ 连边。</p>
<p>乍一看挺对，但直接连边是不能体现出经过学术消息走到楼下消息这一不可逆的过程，对于这种不可逆的边我们可以用分层图来描述：</p>
<p>建立二层图 $G_1,G_2$，对于楼上型消息，我们在 $G_1$ 中连边；对于楼下型消息，我们在 $G_2$ 中连边；对于学术消息，我们把发出者从 $G_1$ 连向 $G_2$，这样一个块就是从 $G_1$ 出发经过若干条边然后走一个学术边到达 $G_2$ 再走若干条边结束。</p>
<p>因为所有消息都可以被满足，我们建一个辅助点然后平衡一下度数，跑欧拉回路就好了。</p>
<p>具体而言就是 $G_1$ 要是入度不够就从辅助点向它连边，$G_2$ 相反。</p>
<h3 id="特殊性质-c">特殊性质 C</h3>
<p>现在有消息不能被满足了，也就是说 $G_1$ 中有点入度大于出度，这些入度减出度条边无法满足要求，$G_2$ 中就是反过来。</p>
<p>首先我们如果把多的边全都扔掉肯定是可以构造出一组方案的，但是并不一定是最优，因为扔掉的边可以变为学术消息再次利用。变成学术消息后 $G_1$ 中对应点入度会减 $1$，$G_2$ 中对应点入度会加 $1$，这样我们扔掉了一条边，而可以满足两个需要的边。</p>
<p>我们要让扔掉一些边之后能尽可能多匹配不能被满足的边。</p>
<p>问题转化为：每个点有一个需求，而假如舍弃一条边，可以满足 $G_1,G_2$ 中各一个点的需求减去 $1$，要最大化满足的需求。</p>
<p>然后这个问题很明显可以用最大流求解，源点向 $G_1$ 中的点连流量为该点不能满足的边的数量，$G_2$ 中的点向汇点连该点不能满足的边的数量。对于一条边 <code>A B loushang</code>，我们从 $G_1$ 的 $B$ 连向 $G_2$ 的 $A$，流量为 $1$，表示断掉这条边，这两个点的需求都减少 $1$；楼下消息同理。</p>
<p>接下来我们把被舍弃的边看作学术消息，做特殊性质 BC 就可以了。</p>
<h3 id="无特殊性质">无特殊性质</h3>
<p>现在没有了特殊性质 C，不同就是一条链的中间点除了是学术消息，还可以是下面这种形式：</p>
<pre tabindex="0"><code>A B loushang
B A louxia
</code></pre><p><del>因为这部分没多少分我们可以直接猜测只需要把边简单地缩起来就可以搞定</del></p>
<p>调整法就可以证明，把这两条消息看成一条从 $A$ 到 $B$ 的学术消息边一定是不劣的。</p>
<p>简单证明一下就是如果拆开，那么把 <code>A B loushang</code> 的上面匹配的楼上消息以及 <code>B A louxia</code> 下面匹配的楼下消息都搬出来，再合到一起去，肯定是不劣的。</p>
<p>然后我们就可以快乐地把这两条边看成一条学术边然后做特殊性质 C 了，好耶！</p>
<p>实现的时候发现一个小问题：缩起来的边在跑欧拉路的时候记录方案略难受，我的方法是对于每组边，再建一个虚点，$A$ 向虚点连边，虚点向 $B$ 连边。</p>
<p>时间复杂度为预处理 $O(m\log m)$，最大流 $O(dinic)$，欧拉路 $O(n+m)$，加起来反正能过。</p>
<p>我感觉这个二分图，流量不大，dinic应该是很快的。</p>
<h2 id="code">Code</h2>
<p>不是非常好写，码量略大。</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#a90d91">namespace</span> <span style="color:#000">solve</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">3e5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">inf</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1e9</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">const</span> <span style="color:#000">string</span> <span style="color:#000">louxia</span> <span style="color:#000">=</span> <span style="color:#c41a16">&#34;louxia&#34;</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">const</span> <span style="color:#000">string</span> <span style="color:#000">loushang</span> <span style="color:#000">=</span> <span style="color:#c41a16">&#34;loushang&#34;</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">typedef</span> <span style="color:#000">pair</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span>, <span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">pii</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">n</span>, <span style="color:#000">m</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">unordered_map</span><span style="color:#000">&lt;</span><span style="color:#000">string</span>, <span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">mp</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#000">vector</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">a</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">ans</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">struct</span> <span style="color:#3f6e75">message</span>
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#000">y</span>, <span style="color:#000">type</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#177500">// 1 楼上 2 楼下
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>    } <span style="color:#000">all</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">cnt</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">namespace</span> <span style="color:#000">flow</span>
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">struct</span> <span style="color:#3f6e75">edge</span>
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#000">y</span>, <span style="color:#000">cap</span>, <span style="color:#000">flow</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">int</span> <span style="color:#000">now_flow</span>() { <span style="color:#a90d91">return</span> <span style="color:#000">cap</span> <span style="color:#000">-</span> <span style="color:#000">flow</span>; }
</span></span><span style="display:flex;"><span>        };
</span></span><span style="display:flex;"><span>        <span style="color:#000">vector</span><span style="color:#000">&lt;</span><span style="color:#000">edge</span><span style="color:#000">&gt;</span> <span style="color:#000">edges</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">vector</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">e</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">inline</span> <span style="color:#a90d91">int</span> <span style="color:#000">add</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>, <span style="color:#a90d91">int</span> <span style="color:#000">cap</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">cnt</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">edges</span>.<span style="color:#000">push_back</span>({<span style="color:#000">x</span>, <span style="color:#000">y</span>, <span style="color:#000">cap</span>, <span style="color:#1c01ce">0</span>});
</span></span><span style="display:flex;"><span>            <span style="color:#000">edges</span>.<span style="color:#000">push_back</span>({<span style="color:#000">y</span>, <span style="color:#000">x</span>, <span style="color:#1c01ce">0</span>, <span style="color:#1c01ce">0</span>});
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">int</span> <span style="color:#000">m</span> <span style="color:#000">=</span> <span style="color:#000">edges</span>.<span style="color:#000">size</span>();
</span></span><span style="display:flex;"><span>            <span style="color:#000">e</span>[<span style="color:#000">x</span>].<span style="color:#000">push_back</span>(<span style="color:#000">m</span> <span style="color:#000">-</span> <span style="color:#1c01ce">2</span>), <span style="color:#000">e</span>[<span style="color:#000">y</span>].<span style="color:#000">push_back</span>(<span style="color:#000">m</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">return</span> <span style="color:#000">m</span> <span style="color:#000">-</span> <span style="color:#1c01ce">2</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">cur</span>[<span style="color:#000">maxn</span>], <span style="color:#000">vis</span>[<span style="color:#000">maxn</span>], <span style="color:#000">s</span>, <span style="color:#000">t</span>, <span style="color:#000">dis</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">bool</span> <span style="color:#000">bfs</span>()
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">fill</span>(<span style="color:#000">vis</span>, <span style="color:#000">vis</span> <span style="color:#000">+</span> <span style="color:#000">t</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#1c01ce">0</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#000">dis</span>[<span style="color:#000">s</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>, <span style="color:#000">vis</span>[<span style="color:#000">s</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">queue</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">q</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">q</span>.<span style="color:#000">push</span>(<span style="color:#000">s</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">while</span> (<span style="color:#000">!</span><span style="color:#000">q</span>.<span style="color:#000">empty</span>())
</span></span><span style="display:flex;"><span>            {
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">int</span> <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">q</span>.<span style="color:#000">front</span>();
</span></span><span style="display:flex;"><span>                <span style="color:#000">q</span>.<span style="color:#000">pop</span>();
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> : <span style="color:#000">e</span>[<span style="color:#000">x</span>])
</span></span><span style="display:flex;"><span>                {
</span></span><span style="display:flex;"><span>                    <span style="color:#a90d91">auto</span> <span style="color:#000">&amp;</span><span style="color:#000">k</span> <span style="color:#000">=</span> <span style="color:#000">edges</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>                    <span style="color:#a90d91">if</span> (<span style="color:#000">!</span><span style="color:#000">vis</span>[<span style="color:#000">k</span>.<span style="color:#000">y</span>] <span style="color:#000">&amp;&amp;</span> <span style="color:#000">k</span>.<span style="color:#000">cap</span> <span style="color:#000">-</span> <span style="color:#000">k</span>.<span style="color:#000">flow</span> <span style="color:#000">&gt;</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>                    {
</span></span><span style="display:flex;"><span>                        <span style="color:#000">dis</span>[<span style="color:#000">k</span>.<span style="color:#000">y</span>] <span style="color:#000">=</span> <span style="color:#000">dis</span>[<span style="color:#000">x</span>] <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>                        <span style="color:#000">vis</span>[<span style="color:#000">k</span>.<span style="color:#000">y</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">q</span>.<span style="color:#000">push</span>(<span style="color:#000">k</span>.<span style="color:#000">y</span>);
</span></span><span style="display:flex;"><span>                    }
</span></span><span style="display:flex;"><span>                }
</span></span><span style="display:flex;"><span>            }
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">return</span> <span style="color:#000">vis</span>[<span style="color:#000">t</span>];
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">dfs</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">lim</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">x</span> <span style="color:#000">==</span> <span style="color:#000">t</span> <span style="color:#000">||</span> <span style="color:#000">lim</span> <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">return</span> <span style="color:#000">lim</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">int</span> <span style="color:#000">res</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>, <span style="color:#000">f</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">&amp;</span><span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#000">cur</span>[<span style="color:#000">x</span>]; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> (<span style="color:#a90d91">int</span>)<span style="color:#000">e</span>[<span style="color:#000">x</span>].<span style="color:#000">size</span>(); <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            {
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">auto</span> <span style="color:#000">&amp;</span><span style="color:#000">k</span> <span style="color:#000">=</span> <span style="color:#000">edges</span>[<span style="color:#000">e</span>[<span style="color:#000">x</span>][<span style="color:#000">i</span>]];
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">if</span> (<span style="color:#000">dis</span>[<span style="color:#000">x</span>] <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">!=</span> <span style="color:#000">dis</span>[<span style="color:#000">k</span>.<span style="color:#000">y</span>] <span style="color:#000">||</span> (<span style="color:#000">f</span> <span style="color:#000">=</span> <span style="color:#000">dfs</span>(<span style="color:#000">k</span>.<span style="color:#000">y</span>, <span style="color:#000">min</span>(<span style="color:#000">lim</span>, <span style="color:#000">k</span>.<span style="color:#000">cap</span> <span style="color:#000">-</span> <span style="color:#000">k</span>.<span style="color:#000">flow</span>))) <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>                    <span style="color:#a90d91">continue</span>;
</span></span><span style="display:flex;"><span>                <span style="color:#000">res</span> <span style="color:#000">+=</span> <span style="color:#000">f</span>, <span style="color:#000">lim</span> <span style="color:#000">-=</span> <span style="color:#000">f</span>, <span style="color:#000">k</span>.<span style="color:#000">flow</span> <span style="color:#000">+=</span> <span style="color:#000">f</span>, <span style="color:#000">edges</span>[<span style="color:#000">e</span>[<span style="color:#000">x</span>][<span style="color:#000">i</span>] <span style="color:#000">^</span> <span style="color:#1c01ce">1</span>].<span style="color:#000">flow</span> <span style="color:#000">-=</span> <span style="color:#000">f</span>;
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">if</span> (<span style="color:#000">lim</span> <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>                    <span style="color:#a90d91">break</span>;
</span></span><span style="display:flex;"><span>            }
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">return</span> <span style="color:#000">res</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">dinic</span>(<span style="color:#a90d91">int</span> <span style="color:#000">s_</span>, <span style="color:#a90d91">int</span> <span style="color:#000">t_</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">s</span> <span style="color:#000">=</span> <span style="color:#000">s_</span>, <span style="color:#000">t</span> <span style="color:#000">=</span> <span style="color:#000">t_</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">int</span> <span style="color:#000">res</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">while</span> (<span style="color:#000">bfs</span>())
</span></span><span style="display:flex;"><span>                <span style="color:#000">fill</span>(<span style="color:#000">cur</span>, <span style="color:#000">cur</span> <span style="color:#000">+</span> <span style="color:#000">t</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#1c01ce">0</span>), <span style="color:#000">res</span> <span style="color:#000">+=</span> <span style="color:#000">dfs</span>(<span style="color:#000">s</span>, <span style="color:#000">inf</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">return</span> <span style="color:#000">res</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">void</span> <span style="color:#000">clear</span>()
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">t</span> <span style="color:#000">*</span> <span style="color:#1c01ce">2</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">e</span>[<span style="color:#000">i</span>].<span style="color:#000">clear</span>();
</span></span><span style="display:flex;"><span>            <span style="color:#000">edges</span>.<span style="color:#000">clear</span>();
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">namespace</span> <span style="color:#000">euler</span>
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">vector</span><span style="color:#000">&lt;</span><span style="color:#000">pii</span><span style="color:#000">&gt;</span> <span style="color:#000">e</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">ans</span>[<span style="color:#000">maxn</span>], <span style="color:#000">tot</span>, <span style="color:#000">deg</span>[<span style="color:#000">maxn</span>]; <span style="color:#177500">// cd - rd
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>        <span style="color:#a90d91">int</span> <span style="color:#000">virtual_node</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">add</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>, <span style="color:#a90d91">int</span> <span style="color:#000">id</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">e</span>[<span style="color:#000">x</span>].<span style="color:#000">emplace_back</span>(<span style="color:#000">y</span>, <span style="color:#000">id</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#000">deg</span>[<span style="color:#000">x</span>]<span style="color:#000">++</span>, <span style="color:#000">deg</span>[<span style="color:#000">y</span>]<span style="color:#000">--</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">void</span> <span style="color:#000">clear</span>()
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">virtual_node</span> <span style="color:#000">+</span> <span style="color:#1c01ce">5</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">e</span>[<span style="color:#000">i</span>].<span style="color:#000">clear</span>(), <span style="color:#000">deg</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">tot</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">void</span> <span style="color:#000">dfs</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">while</span> (<span style="color:#000">e</span>[<span style="color:#000">x</span>].<span style="color:#000">size</span>())
</span></span><span style="display:flex;"><span>            {
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">auto</span> <span style="color:#000">&amp;</span><span style="color:#000">p</span> <span style="color:#000">=</span> <span style="color:#000">e</span>[<span style="color:#000">x</span>].<span style="color:#000">back</span>();
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">int</span> <span style="color:#000">v</span> <span style="color:#000">=</span> <span style="color:#000">p</span>.<span style="color:#000">first</span>, <span style="color:#000">id</span> <span style="color:#000">=</span> <span style="color:#000">p</span>.<span style="color:#000">second</span>;
</span></span><span style="display:flex;"><span>                <span style="color:#000">e</span>[<span style="color:#000">x</span>].<span style="color:#000">pop_back</span>();
</span></span><span style="display:flex;"><span>                <span style="color:#000">dfs</span>(<span style="color:#000">v</span>);
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">if</span> (<span style="color:#000">id</span>)
</span></span><span style="display:flex;"><span>                    <span style="color:#000">ans</span>[<span style="color:#000">++</span><span style="color:#000">tot</span>] <span style="color:#000">=</span> <span style="color:#000">id</span>;
</span></span><span style="display:flex;"><span>            }
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">notc</span>[<span style="color:#000">maxn</span>]; <span style="color:#177500">// not satisfy C
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>    <span style="color:#a90d91">int</span> <span style="color:#000">rd</span>[<span style="color:#000">maxn</span>], <span style="color:#000">cd</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">void</span> <span style="color:#000">clear</span>()
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">flow</span><span style="color:#000">::</span><span style="color:#000">clear</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#000">euler</span><span style="color:#000">::</span><span style="color:#000">clear</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#000">mp</span>.<span style="color:#000">clear</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span> <span style="color:#000">*</span> <span style="color:#1c01ce">2</span> <span style="color:#000">+</span> <span style="color:#1c01ce">5</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">rd</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">cd</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">notc</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">void</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">clear</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">m</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">euler</span><span style="color:#000">::</span><span style="color:#000">virtual_node</span> <span style="color:#000">=</span> <span style="color:#000">n</span> <span style="color:#000">*</span> <span style="color:#1c01ce">2</span> <span style="color:#000">+</span> <span style="color:#1c01ce">3</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">string</span> <span style="color:#000">s</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">s</span>, <span style="color:#000">mp</span>[<span style="color:#000">s</span>] <span style="color:#000">=</span> <span style="color:#000">i</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">map</span><span style="color:#000">&lt;</span><span style="color:#000">pii</span>, <span style="color:#000">vector</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span><span style="color:#000">&gt;&gt;</span> <span style="color:#000">pos</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">string</span> <span style="color:#000">s1</span>, <span style="color:#000">s2</span>, <span style="color:#000">s3</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">s1</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">s2</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">s3</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">int</span> <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">mp</span>[<span style="color:#000">s1</span>], <span style="color:#000">y</span> <span style="color:#000">=</span> <span style="color:#000">mp</span>.<span style="color:#000">count</span>(<span style="color:#000">s2</span>) <span style="color:#000">?</span> <span style="color:#000">mp</span>[<span style="color:#000">s2</span>] <span style="color:#000">:</span> <span style="color:#1c01ce">0</span>, <span style="color:#000">type</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">s3</span> <span style="color:#000">==</span> <span style="color:#000">loushang</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">y</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">type</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">ans</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">else</span> <span style="color:#a90d91">if</span> (<span style="color:#000">s3</span> <span style="color:#000">==</span> <span style="color:#000">louxia</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">y</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">type</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2</span>, <span style="color:#000">swap</span>(<span style="color:#000">x</span>, <span style="color:#000">y</span>), <span style="color:#000">ans</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">all</span>[<span style="color:#000">i</span>].<span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">x</span>, <span style="color:#000">all</span>[<span style="color:#000">i</span>].<span style="color:#000">y</span> <span style="color:#000">=</span> <span style="color:#000">y</span>, <span style="color:#000">all</span>[<span style="color:#000">i</span>].<span style="color:#000">type</span> <span style="color:#000">=</span> <span style="color:#000">type</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">all</span>[<span style="color:#000">i</span>].<span style="color:#000">type</span> <span style="color:#000">==</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">pos</span>[<span style="color:#000">pii</span>(<span style="color:#000">all</span>[<span style="color:#000">i</span>].<span style="color:#000">x</span>, <span style="color:#000">all</span>[<span style="color:#000">i</span>].<span style="color:#000">y</span>)].<span style="color:#000">push_back</span>(<span style="color:#000">i</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">all</span>[<span style="color:#000">i</span>].<span style="color:#000">type</span> <span style="color:#000">==</span> <span style="color:#1c01ce">2</span>)
</span></span><span style="display:flex;"><span>            {
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">auto</span> <span style="color:#000">p</span> <span style="color:#000">=</span> <span style="color:#000">pii</span>(<span style="color:#000">all</span>[<span style="color:#000">i</span>].<span style="color:#000">x</span>, <span style="color:#000">all</span>[<span style="color:#000">i</span>].<span style="color:#000">y</span>);
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">if</span> (<span style="color:#000">!</span><span style="color:#000">pos</span>.<span style="color:#000">count</span>(<span style="color:#000">p</span>))
</span></span><span style="display:flex;"><span>                    <span style="color:#a90d91">continue</span>;
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">auto</span> <span style="color:#000">&amp;</span><span style="color:#000">arr</span> <span style="color:#000">=</span> <span style="color:#000">pos</span>[<span style="color:#000">p</span>];
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">if</span> (<span style="color:#000">!</span><span style="color:#000">arr</span>.<span style="color:#000">empty</span>())
</span></span><span style="display:flex;"><span>                {
</span></span><span style="display:flex;"><span>                    <span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#000">arr</span>.<span style="color:#000">back</span>();
</span></span><span style="display:flex;"><span>                    <span style="color:#000">arr</span>.<span style="color:#000">pop_back</span>();
</span></span><span style="display:flex;"><span>                    <span style="color:#000">notc</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">notc</span>[<span style="color:#000">j</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">rd</span>[<span style="color:#000">all</span>[<span style="color:#000">j</span>].<span style="color:#000">y</span> <span style="color:#000">+</span> <span style="color:#000">n</span>]<span style="color:#000">++</span>, <span style="color:#000">cd</span>[<span style="color:#000">all</span>[<span style="color:#000">j</span>].<span style="color:#000">x</span>]<span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>                    <span style="color:#000">euler</span><span style="color:#000">::</span><span style="color:#000">virtual_node</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>                    <span style="color:#000">euler</span><span style="color:#000">::</span><span style="color:#000">add</span>(<span style="color:#000">all</span>[<span style="color:#000">j</span>].<span style="color:#000">x</span>, <span style="color:#000">euler</span><span style="color:#000">::</span><span style="color:#000">virtual_node</span>, <span style="color:#000">j</span>);
</span></span><span style="display:flex;"><span>                    <span style="color:#000">euler</span><span style="color:#000">::</span><span style="color:#000">add</span>(<span style="color:#000">euler</span><span style="color:#000">::</span><span style="color:#000">virtual_node</span>, <span style="color:#000">all</span>[<span style="color:#000">j</span>].<span style="color:#000">y</span> <span style="color:#000">+</span> <span style="color:#000">n</span>, <span style="color:#000">i</span>);
</span></span><span style="display:flex;"><span>                }
</span></span><span style="display:flex;"><span>            }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">!</span><span style="color:#000">notc</span>[<span style="color:#000">i</span>])
</span></span><span style="display:flex;"><span>            {
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">if</span> (<span style="color:#000">all</span>[<span style="color:#000">i</span>].<span style="color:#000">type</span> <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>                    <span style="color:#000">rd</span>[<span style="color:#000">all</span>[<span style="color:#000">i</span>].<span style="color:#000">x</span> <span style="color:#000">+</span> <span style="color:#000">n</span>]<span style="color:#000">++</span>, <span style="color:#000">cd</span>[<span style="color:#000">all</span>[<span style="color:#000">i</span>].<span style="color:#000">x</span>]<span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">else</span> <span style="color:#a90d91">if</span> (<span style="color:#000">all</span>[<span style="color:#000">i</span>].<span style="color:#000">type</span> <span style="color:#000">==</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>                    <span style="color:#000">cd</span>[<span style="color:#000">all</span>[<span style="color:#000">i</span>].<span style="color:#000">x</span>]<span style="color:#000">++</span>, <span style="color:#000">rd</span>[<span style="color:#000">all</span>[<span style="color:#000">i</span>].<span style="color:#000">y</span>]<span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>                    <span style="color:#000">cd</span>[<span style="color:#000">all</span>[<span style="color:#000">i</span>].<span style="color:#000">x</span> <span style="color:#000">+</span> <span style="color:#000">n</span>]<span style="color:#000">++</span>, <span style="color:#000">rd</span>[<span style="color:#000">all</span>[<span style="color:#000">i</span>].<span style="color:#000">y</span> <span style="color:#000">+</span> <span style="color:#000">n</span>]<span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>            }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">S</span> <span style="color:#000">=</span> <span style="color:#000">n</span> <span style="color:#000">*</span> <span style="color:#1c01ce">2</span> <span style="color:#000">+</span> <span style="color:#1c01ce">5</span>, <span style="color:#000">T</span> <span style="color:#000">=</span> <span style="color:#000">S</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">rd</span>[<span style="color:#000">i</span>] <span style="color:#000">&gt;</span> <span style="color:#000">cd</span>[<span style="color:#000">i</span>])
</span></span><span style="display:flex;"><span>                <span style="color:#000">flow</span><span style="color:#000">::</span><span style="color:#000">add</span>(<span style="color:#000">S</span>, <span style="color:#000">i</span>, <span style="color:#000">rd</span>[<span style="color:#000">i</span>] <span style="color:#000">-</span> <span style="color:#000">cd</span>[<span style="color:#000">i</span>]);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#000">n</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span> <span style="color:#000">+</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">cd</span>[<span style="color:#000">i</span>] <span style="color:#000">&gt;</span> <span style="color:#000">rd</span>[<span style="color:#000">i</span>])
</span></span><span style="display:flex;"><span>                <span style="color:#000">flow</span><span style="color:#000">::</span><span style="color:#000">add</span>(<span style="color:#000">i</span>, <span style="color:#000">T</span>, <span style="color:#000">cd</span>[<span style="color:#000">i</span>] <span style="color:#000">-</span> <span style="color:#000">rd</span>[<span style="color:#000">i</span>]);
</span></span><span style="display:flex;"><span>        <span style="color:#000">vector</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">id</span>(<span style="color:#000">m</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">!</span><span style="color:#000">notc</span>[<span style="color:#000">i</span>])
</span></span><span style="display:flex;"><span>            {
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">if</span> (<span style="color:#000">all</span>[<span style="color:#000">i</span>].<span style="color:#000">type</span> <span style="color:#000">==</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>                    <span style="color:#000">id</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">flow</span><span style="color:#000">::</span><span style="color:#000">add</span>(<span style="color:#000">all</span>[<span style="color:#000">i</span>].<span style="color:#000">y</span>, <span style="color:#000">all</span>[<span style="color:#000">i</span>].<span style="color:#000">x</span> <span style="color:#000">+</span> <span style="color:#000">n</span>, <span style="color:#1c01ce">1</span>); 
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">else</span> <span style="color:#a90d91">if</span> (<span style="color:#000">all</span>[<span style="color:#000">i</span>].<span style="color:#000">type</span> <span style="color:#000">==</span> <span style="color:#1c01ce">2</span>)
</span></span><span style="display:flex;"><span>                    <span style="color:#000">id</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">flow</span><span style="color:#000">::</span><span style="color:#000">add</span>(<span style="color:#000">all</span>[<span style="color:#000">i</span>].<span style="color:#000">y</span>, <span style="color:#000">all</span>[<span style="color:#000">i</span>].<span style="color:#000">x</span> <span style="color:#000">+</span> <span style="color:#000">n</span>, <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>            }
</span></span><span style="display:flex;"><span>        <span style="color:#000">ans</span> <span style="color:#000">-=</span> <span style="color:#000">flow</span><span style="color:#000">::</span><span style="color:#000">dinic</span>(<span style="color:#000">S</span>, <span style="color:#000">T</span>); <span style="color:#177500">// 减去舍弃的边
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">notc</span>[<span style="color:#000">i</span>])
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">continue</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">all</span>[<span style="color:#000">i</span>].<span style="color:#000">type</span> <span style="color:#000">==</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">flow</span><span style="color:#000">::</span><span style="color:#000">edges</span>[<span style="color:#000">id</span>[<span style="color:#000">i</span>]].<span style="color:#000">now_flow</span>() <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">all</span>[<span style="color:#000">i</span>].<span style="color:#000">type</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">all</span>[<span style="color:#000">i</span>].<span style="color:#000">type</span> <span style="color:#000">==</span> <span style="color:#1c01ce">2</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">flow</span><span style="color:#000">::</span><span style="color:#000">edges</span>[<span style="color:#000">id</span>[<span style="color:#000">i</span>]].<span style="color:#000">now_flow</span>() <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">all</span>[<span style="color:#000">i</span>].<span style="color:#000">type</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>, <span style="color:#000">swap</span>(<span style="color:#000">all</span>[<span style="color:#000">i</span>].<span style="color:#000">x</span>, <span style="color:#000">all</span>[<span style="color:#000">i</span>].<span style="color:#000">y</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">all</span>[<span style="color:#000">i</span>].<span style="color:#000">type</span> <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">euler</span><span style="color:#000">::</span><span style="color:#000">add</span>(<span style="color:#000">all</span>[<span style="color:#000">i</span>].<span style="color:#000">x</span>, <span style="color:#000">all</span>[<span style="color:#000">i</span>].<span style="color:#000">x</span> <span style="color:#000">+</span> <span style="color:#000">n</span>, <span style="color:#000">i</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">else</span> <span style="color:#a90d91">if</span> (<span style="color:#000">all</span>[<span style="color:#000">i</span>].<span style="color:#000">type</span> <span style="color:#000">==</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">euler</span><span style="color:#000">::</span><span style="color:#000">add</span>(<span style="color:#000">all</span>[<span style="color:#000">i</span>].<span style="color:#000">x</span>, <span style="color:#000">all</span>[<span style="color:#000">i</span>].<span style="color:#000">y</span>, <span style="color:#000">i</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>                <span style="color:#000">euler</span><span style="color:#000">::</span><span style="color:#000">add</span>(<span style="color:#000">all</span>[<span style="color:#000">i</span>].<span style="color:#000">x</span> <span style="color:#000">+</span> <span style="color:#000">n</span>, <span style="color:#000">all</span>[<span style="color:#000">i</span>].<span style="color:#000">y</span> <span style="color:#000">+</span> <span style="color:#000">n</span>, <span style="color:#000">i</span>);
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">aux_node</span> <span style="color:#000">=</span> <span style="color:#000">n</span> <span style="color:#000">*</span> <span style="color:#1c01ce">2</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">while</span> (<span style="color:#000">euler</span><span style="color:#000">::</span><span style="color:#000">deg</span>[<span style="color:#000">i</span>] <span style="color:#000">&gt;</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">euler</span><span style="color:#000">::</span><span style="color:#000">add</span>(<span style="color:#000">aux_node</span>, <span style="color:#000">i</span>, <span style="color:#1c01ce">0</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">while</span> (<span style="color:#000">euler</span><span style="color:#000">::</span><span style="color:#000">deg</span>[<span style="color:#000">i</span>] <span style="color:#000">&lt;</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">euler</span><span style="color:#000">::</span><span style="color:#000">add</span>(<span style="color:#000">i</span>, <span style="color:#000">aux_node</span>, <span style="color:#1c01ce">0</span>), <span style="color:#000">ans</span><span style="color:#000">--</span>; <span style="color:#177500">// 减去无法匹配的边
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#000">n</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span> <span style="color:#000">+</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">while</span> (<span style="color:#000">euler</span><span style="color:#000">::</span><span style="color:#000">deg</span>[<span style="color:#000">i</span>] <span style="color:#000">&gt;</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">euler</span><span style="color:#000">::</span><span style="color:#000">add</span>(<span style="color:#000">aux_node</span>, <span style="color:#000">i</span>, <span style="color:#1c01ce">0</span>), <span style="color:#000">ans</span><span style="color:#000">--</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">while</span> (<span style="color:#000">euler</span><span style="color:#000">::</span><span style="color:#000">deg</span>[<span style="color:#000">i</span>] <span style="color:#000">&lt;</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">euler</span><span style="color:#000">::</span><span style="color:#000">add</span>(<span style="color:#000">i</span>, <span style="color:#000">aux_node</span>, <span style="color:#1c01ce">0</span>);
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">ans</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">euler</span><span style="color:#000">::</span><span style="color:#000">dfs</span>(<span style="color:#000">aux_node</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">reverse</span>(<span style="color:#000">euler</span><span style="color:#000">::</span><span style="color:#000">ans</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">euler</span><span style="color:#000">::</span><span style="color:#000">ans</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">+</span> <span style="color:#000">m</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">euler</span><span style="color:#000">::</span><span style="color:#000">ans</span>[<span style="color:#000">i</span>] <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div>]]></content:encoded>
    </item>
    
  </channel>
</rss>
