<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>DP优化 on _slb 的博客</title>
    <link>http://example.org/tags/dp%E4%BC%98%E5%8C%96/</link>
    <description>Recent content in DP优化 on _slb 的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Tue, 07 Dec 2021 15:32:19 +0000</lastBuildDate><atom:link href="http://example.org/tags/dp%E4%BC%98%E5%8C%96/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Codeforces Round 709 (div2)</title>
      <link>http://example.org/posts/cf-contest1484/</link>
      <pubDate>Tue, 07 Dec 2021 15:32:19 +0000</pubDate>
      
      <guid>http://example.org/posts/cf-contest1484/</guid>
      <description>&lt;p&gt;时间比较近的比赛果然难度大一些。。。&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>时间比较近的比赛果然难度大一些。。。</p>
<h2 id="ahttpscodeforcescontest1484problema"><a href="https://codeforc.es/contest/1484/problem/A">A</a></h2>
<h3 id="description">Description</h3>
<p>有一个 $(n+1)\times(m+1)$​ 的点图，问最少断掉几条边能使​剩下的点全联通且没有环。（建议看原题面）</p>
<h3 id="solution">Solution</h3>
<p>答案是 $n\times m$，一个构造性证明：蛇形就行。</p>
<h2 id="bhttpscodeforcescontest1484problemb"><a href="https://codeforc.es/contest/1484/problem/B">B</a></h2>
<h3 id="description-1">Description</h3>
<p>给出一个序列 $\{a_i\}$ ，求最大的 $m$ 和任意的 $c$，满足 $a_i=(a_{i-1}+c)\bmod m$​。（需要判断无解和 $m\rightarrow\infty$）​</p>
<h3 id="solution-1">Solution</h3>
<p>可以发现相邻的两个数差一定是 $c-m$ 或 $c$​，那么扫一遍就能知道 $c$ 和 $m$，然后再扫一遍看看合不合法就行。</p>
<h2 id="chttpscodeforcescontest1484problemc"><a href="https://codeforc.es/contest/1484/problem/C">C</a></h2>
<h3 id="description-2">Description</h3>
<p>有 $n$ 个人， $m$ 天，你每天需要从给定的一些人中选一个，且每个人最多只能选 $\lceil \dfrac m2\rceil$ 次，判断有没有解并给出一个方案。</p>
<h3 id="solution-2">Solution</h3>
<p>从前往后一天一天选。当一天只能选一个人，这个人必须就选了，先预处理这些天。剩下的天我们直接选当前已经选过的次数最少的人。</p>
<p>证明感性一下，想要卡掉这个做法需要每天两个人一直出现，但是这样也只能让选一个人的次数达到 $\dfrac m2$，所以卡不掉。</p>
<h3 id="code">Code</h3>
<p>没必要看，实在是丑。。。</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2e5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">vector</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">a</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">used</span>[<span style="color:#000">maxn</span> <span style="color:#000">/</span> <span style="color:#1c01ce">2</span>], <span style="color:#000">times</span>[<span style="color:#000">maxn</span> <span style="color:#000">/</span> <span style="color:#1c01ce">2</span>], <span style="color:#000">ans</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">T</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">T</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">times</span>[<span style="color:#1c01ce">0</span>] <span style="color:#000">=</span> <span style="color:#000">used</span>[<span style="color:#1c01ce">0</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">30</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> (<span style="color:#000">T</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">n</span>, <span style="color:#000">m</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">m</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">clear</span>(), <span style="color:#000">ans</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">used</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">times</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;        
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">flag</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">int</span> <span style="color:#000">t</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">t</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">while</span> (<span style="color:#000">t</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">x</span>, <span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">push_back</span>(<span style="color:#000">x</span>), <span style="color:#000">times</span>[<span style="color:#000">x</span>]<span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">size</span>() <span style="color:#000">==</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">used</span>[<span style="color:#000">a</span>[<span style="color:#000">i</span>][<span style="color:#1c01ce">0</span>]]<span style="color:#000">++</span>, <span style="color:#000">times</span>[<span style="color:#000">a</span>[<span style="color:#000">i</span>][<span style="color:#1c01ce">0</span>]]<span style="color:#000">--</span>, <span style="color:#000">ans</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>][<span style="color:#1c01ce">0</span>], <span style="color:#000">flag</span> <span style="color:#000">&amp;=</span> <span style="color:#000">used</span>[<span style="color:#000">a</span>[<span style="color:#000">i</span>][<span style="color:#1c01ce">0</span>]] <span style="color:#000">&gt;</span> (<span style="color:#000">m</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>) <span style="color:#000">/</span> <span style="color:#1c01ce">2</span> <span style="color:#000">?</span> <span style="color:#1c01ce">0</span> <span style="color:#000">:</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">size</span>() <span style="color:#000">==</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">continue</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">int</span> <span style="color:#000">mx</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">p</span> : <span style="color:#000">a</span>[<span style="color:#000">i</span>])
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">if</span> (<span style="color:#000">used</span>[<span style="color:#000">p</span>] <span style="color:#000">&lt;</span> <span style="color:#000">used</span>[<span style="color:#000">mx</span>])
</span></span><span style="display:flex;"><span>                    <span style="color:#000">mx</span> <span style="color:#000">=</span> <span style="color:#000">p</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">used</span>[<span style="color:#000">mx</span>]<span style="color:#000">++</span>, <span style="color:#000">ans</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">mx</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">used</span>[<span style="color:#000">mx</span>] <span style="color:#000">&gt;</span> (<span style="color:#000">m</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>) <span style="color:#000">/</span> <span style="color:#1c01ce">2</span>)
</span></span><span style="display:flex;"><span>            {
</span></span><span style="display:flex;"><span>                <span style="color:#000">flag</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">break</span>;
</span></span><span style="display:flex;"><span>            }
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">!</span><span style="color:#000">flag</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">puts</span>(<span style="color:#c41a16">&#34;NO&#34;</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">continue</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#000">puts</span>(<span style="color:#c41a16">&#34;YES&#34;</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">ans</span>[<span style="color:#000">i</span>] <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="dhttpscodeforcescontest1484problemd"><a href="https://codeforc.es/contest/1484/problem/D">D</a></h2>
<h3 id="description-3">Description</h3>
<p>给出 $n$​ 首歌，和他们的类型值，从头循环播放，如果当前的歌和前一首歌的类型值互质，把当前这首歌删掉，切到下一首歌去，求删除的歌的序列。</p>
<h3 id="solution-3">Solution</h3>
<p>用一个链表模拟即可，第一次扫一遍把要删除的组加进一个队列里，然后取出队首，执行删除，再判断一下需不需要接着删就行。</p>
<h3 id="code-1">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;queue&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;utility&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">int</span> <span style="color:#000">gcd</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>) { <span style="color:#a90d91">return</span> <span style="color:#000">y</span> <span style="color:#000">==</span> <span style="color:#1c01ce">0</span> <span style="color:#000">?</span> <span style="color:#000">x</span> : <span style="color:#000">gcd</span>(<span style="color:#000">y</span>, <span style="color:#000">x</span> <span style="color:#000">%</span> <span style="color:#000">y</span>); }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1e5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">typedef</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">pair</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span>, <span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">pii</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">nxt</span>[<span style="color:#000">maxn</span>], <span style="color:#000">a</span>[<span style="color:#000">maxn</span>], <span style="color:#000">used</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">vector</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">ans</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">T</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">T</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> (<span style="color:#000">T</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>], <span style="color:#000">nxt</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">nxt</span>[<span style="color:#000">n</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">queue</span><span style="color:#000">&lt;</span><span style="color:#000">pii</span><span style="color:#000">&gt;</span> <span style="color:#000">q</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">gcd</span>(<span style="color:#000">a</span>[<span style="color:#000">i</span>], <span style="color:#000">a</span>[<span style="color:#000">nxt</span>[<span style="color:#000">i</span>]]) <span style="color:#000">==</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">q</span>.<span style="color:#000">push</span>(<span style="color:#000">pii</span>(<span style="color:#000">i</span>, <span style="color:#000">nxt</span>[<span style="color:#000">i</span>])), <span style="color:#000">i</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">while</span> (<span style="color:#000">!</span><span style="color:#000">q</span>.<span style="color:#000">empty</span>())
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">auto</span> <span style="color:#000">now</span> <span style="color:#000">=</span> <span style="color:#000">q</span>.<span style="color:#000">front</span>();
</span></span><span style="display:flex;"><span>            <span style="color:#000">q</span>.<span style="color:#000">pop</span>();
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">int</span> <span style="color:#000">pos</span> <span style="color:#000">=</span> <span style="color:#000">now</span>.<span style="color:#000">first</span>, <span style="color:#000">npos</span> <span style="color:#000">=</span> <span style="color:#000">now</span>.<span style="color:#000">second</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">used</span>[<span style="color:#000">pos</span>] <span style="color:#000">||</span> <span style="color:#000">used</span>[<span style="color:#000">npos</span>])
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">continue</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">used</span>[<span style="color:#000">npos</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">ans</span>.<span style="color:#000">push_back</span>(<span style="color:#000">npos</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#000">nxt</span>[<span style="color:#000">pos</span>] <span style="color:#000">=</span> <span style="color:#000">nxt</span>[<span style="color:#000">npos</span>];
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">gcd</span>(<span style="color:#000">a</span>[<span style="color:#000">pos</span>], <span style="color:#000">a</span>[<span style="color:#000">nxt</span>[<span style="color:#000">pos</span>]]) <span style="color:#000">==</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">q</span>.<span style="color:#000">push</span>(<span style="color:#000">pii</span>(<span style="color:#000">pos</span>, <span style="color:#000">nxt</span>[<span style="color:#000">pos</span>]));
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">ans</span>.<span style="color:#000">size</span>() <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> : <span style="color:#000">ans</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">i</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">ans</span>.<span style="color:#000">clear</span>(), <span style="color:#000">memset</span>(<span style="color:#000">used</span>, <span style="color:#1c01ce">0</span>, <span style="color:#a90d91">sizeof</span>(<span style="color:#000">used</span>));
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="ehttpscodeforcescontest1484probleme"><a href="https://codeforc.es/contest/1484/problem/E">E</a></h2>
<h3 id="description-4">Description</h3>
<p>给出 $n$​​ 个楼房的高度和美丽值，把所有楼房划分成连续的若干组，最大化 每组高度最小的楼房的美丽值 的和。$n\leq3\times10^5$​。</p>
<h3 id="solution-4">Solution</h3>
<p>显然有个 DP，$f_i=\max\{f_j+val(j+1,n)\}$​，其中 $val(l,r)$​ 表示 $[l,r]$​​ 内最矮楼房的美丽值。然后发现一个楼房到下一个比它更矮的楼房这段区间内， $val$ 都是固定的，可以维护一个单调栈。</p>
<h3 id="算法一">算法一</h3>
<p>对于每个楼房，进栈时把他能影响到的 $f$ 的值全部加它的美丽值，出栈的时候减掉。使用线段树维护， $f_i$ 就是当前所有已经加进线段树的点的最大值。然后把 $f_i$ 加进去。细节有点多。。。。。</p>
<h3 id="code1">Code1</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;queue&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">3e5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">typedef</span> <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">ll</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#000">ll</span> <span style="color:#000">inf</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1ll</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">60</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">struct</span> <span style="color:#3f6e75">node</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">ll</span> <span style="color:#000">lzy</span>, <span style="color:#000">mx</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">node</span>() {}
</span></span><span style="display:flex;"><span>} <span style="color:#000">t</span>[<span style="color:#000">maxn</span> <span style="color:#000">*</span> <span style="color:#1c01ce">4</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">int</span> <span style="color:#000">ls</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>) { <span style="color:#a90d91">return</span> <span style="color:#000">x</span> <span style="color:#000">*</span> <span style="color:#1c01ce">2</span>; }
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">int</span> <span style="color:#000">rs</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>) { <span style="color:#a90d91">return</span> <span style="color:#000">x</span> <span style="color:#000">*</span> <span style="color:#1c01ce">2</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>; }
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">push_up</span>(<span style="color:#a90d91">int</span> <span style="color:#000">k</span>) { <span style="color:#000">t</span>[<span style="color:#000">k</span>].<span style="color:#000">mx</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">max</span>(<span style="color:#000">t</span>[<span style="color:#000">ls</span>(<span style="color:#000">k</span>)].<span style="color:#000">mx</span>, <span style="color:#000">t</span>[<span style="color:#000">rs</span>(<span style="color:#000">k</span>)].<span style="color:#000">mx</span>); }
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">push_down</span>(<span style="color:#a90d91">int</span> <span style="color:#000">k</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">!</span><span style="color:#000">t</span>[<span style="color:#000">k</span>].<span style="color:#000">lzy</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">t</span>[<span style="color:#000">ls</span>(<span style="color:#000">k</span>)].<span style="color:#000">lzy</span> <span style="color:#000">+=</span> <span style="color:#000">t</span>[<span style="color:#000">k</span>].<span style="color:#000">lzy</span>, <span style="color:#000">t</span>[<span style="color:#000">rs</span>(<span style="color:#000">k</span>)].<span style="color:#000">lzy</span> <span style="color:#000">+=</span> <span style="color:#000">t</span>[<span style="color:#000">k</span>].<span style="color:#000">lzy</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">t</span>[<span style="color:#000">ls</span>(<span style="color:#000">k</span>)].<span style="color:#000">mx</span> <span style="color:#000">+=</span> <span style="color:#000">t</span>[<span style="color:#000">k</span>].<span style="color:#000">lzy</span>, <span style="color:#000">t</span>[<span style="color:#000">rs</span>(<span style="color:#000">k</span>)].<span style="color:#000">mx</span> <span style="color:#000">+=</span> <span style="color:#000">t</span>[<span style="color:#000">k</span>].<span style="color:#000">lzy</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">t</span>[<span style="color:#000">k</span>].<span style="color:#000">lzy</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">modify_add</span>(<span style="color:#a90d91">int</span> <span style="color:#000">l</span>, <span style="color:#a90d91">int</span> <span style="color:#000">r</span>, <span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>, <span style="color:#000">ll</span> <span style="color:#000">v</span>, <span style="color:#a90d91">int</span> <span style="color:#000">k</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">l</span> <span style="color:#000">&gt;=</span> <span style="color:#000">x</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">r</span> <span style="color:#000">&lt;=</span> <span style="color:#000">y</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">t</span>[<span style="color:#000">k</span>].<span style="color:#000">lzy</span> <span style="color:#000">+=</span> <span style="color:#000">v</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">t</span>[<span style="color:#000">k</span>].<span style="color:#000">mx</span> <span style="color:#000">+=</span> <span style="color:#000">v</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">mid</span> <span style="color:#000">=</span> (<span style="color:#000">l</span> <span style="color:#000">+</span> <span style="color:#000">r</span>) <span style="color:#000">/</span> <span style="color:#1c01ce">2</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">push_down</span>(<span style="color:#000">k</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">x</span> <span style="color:#000">&lt;=</span> <span style="color:#000">mid</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">modify_add</span>(<span style="color:#000">l</span>, <span style="color:#000">mid</span>, <span style="color:#000">x</span>, <span style="color:#000">y</span>, <span style="color:#000">v</span>, <span style="color:#000">ls</span>(<span style="color:#000">k</span>));
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">y</span> <span style="color:#000">&gt;</span> <span style="color:#000">mid</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">modify_add</span>(<span style="color:#000">mid</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">r</span>, <span style="color:#000">x</span>, <span style="color:#000">y</span>, <span style="color:#000">v</span>, <span style="color:#000">rs</span>(<span style="color:#000">k</span>));
</span></span><span style="display:flex;"><span>    <span style="color:#000">push_up</span>(<span style="color:#000">k</span>);
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">modify</span>(<span style="color:#a90d91">int</span> <span style="color:#000">l</span>, <span style="color:#a90d91">int</span> <span style="color:#000">r</span>, <span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#000">ll</span> <span style="color:#000">v</span>, <span style="color:#a90d91">int</span> <span style="color:#000">k</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">l</span> <span style="color:#000">==</span> <span style="color:#000">r</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#177500">//t[k].lzy = 0;
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>        <span style="color:#000">t</span>[<span style="color:#000">k</span>].<span style="color:#000">mx</span> <span style="color:#000">=</span> <span style="color:#000">v</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#177500">//cout &lt;&lt; l &lt;&lt; &#34; &#34; &lt;&lt; v &lt;&lt; endl;
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>        <span style="color:#a90d91">return</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">mid</span> <span style="color:#000">=</span> (<span style="color:#000">l</span> <span style="color:#000">+</span> <span style="color:#000">r</span>) <span style="color:#000">/</span> <span style="color:#1c01ce">2</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#177500">//push_down(k);
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>    <span style="color:#a90d91">if</span> (<span style="color:#000">x</span> <span style="color:#000">&lt;=</span> <span style="color:#000">mid</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">modify</span>(<span style="color:#000">l</span>, <span style="color:#000">mid</span>, <span style="color:#000">x</span>, <span style="color:#000">v</span>, <span style="color:#000">ls</span>(<span style="color:#000">k</span>));
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>        <span style="color:#000">modify</span>(<span style="color:#000">mid</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">r</span>, <span style="color:#000">x</span>, <span style="color:#000">v</span>, <span style="color:#000">rs</span>(<span style="color:#000">k</span>));
</span></span><span style="display:flex;"><span>    <span style="color:#000">push_up</span>(<span style="color:#000">k</span>);
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000">ll</span> <span style="color:#000">query</span>(<span style="color:#a90d91">int</span> <span style="color:#000">l</span>, <span style="color:#a90d91">int</span> <span style="color:#000">r</span>, <span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>, <span style="color:#a90d91">int</span> <span style="color:#000">k</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">x</span> <span style="color:#000">&lt;=</span> <span style="color:#000">l</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">r</span> <span style="color:#000">&lt;=</span> <span style="color:#000">y</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#000">t</span>[<span style="color:#000">k</span>].<span style="color:#000">mx</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">mid</span> <span style="color:#000">=</span> (<span style="color:#000">l</span> <span style="color:#000">+</span> <span style="color:#000">r</span>) <span style="color:#000">/</span> <span style="color:#1c01ce">2</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">ll</span> <span style="color:#000">res</span> <span style="color:#000">=</span> <span style="color:#000">-</span><span style="color:#000">inf</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">x</span> <span style="color:#000">&lt;=</span> <span style="color:#000">mid</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">res</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">max</span>(<span style="color:#000">res</span>, <span style="color:#000">query</span>(<span style="color:#000">l</span>, <span style="color:#000">mid</span>, <span style="color:#000">x</span>, <span style="color:#000">y</span>, <span style="color:#000">ls</span>(<span style="color:#000">k</span>)));
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">y</span> <span style="color:#000">&gt;</span> <span style="color:#000">mid</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">res</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">max</span>(<span style="color:#000">res</span>, <span style="color:#000">query</span>(<span style="color:#000">mid</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">r</span>, <span style="color:#000">x</span>, <span style="color:#000">y</span>, <span style="color:#000">rs</span>(<span style="color:#000">k</span>)));
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#000">res</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">struct</span> <span style="color:#3f6e75">Q</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">i</span>, <span style="color:#000">val</span>, <span style="color:#000">b</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">Q</span>() { <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#000">b</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>, <span style="color:#000">val</span> <span style="color:#000">=</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span>; }
</span></span><span style="display:flex;"><span>    <span style="color:#000">Q</span>(<span style="color:#a90d91">int</span> <span style="color:#000">i_</span>, <span style="color:#a90d91">int</span> <span style="color:#000">val_</span>, <span style="color:#a90d91">int</span> <span style="color:#000">b_</span>) <span style="color:#000">:</span> <span style="color:#000">i</span>(<span style="color:#000">i_</span>), <span style="color:#000">val</span>(<span style="color:#000">val_</span>), <span style="color:#000">b</span>(<span style="color:#000">b_</span>) {}
</span></span><span style="display:flex;"><span>} <span style="color:#000">q</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">n</span>, <span style="color:#000">h</span>[<span style="color:#000">maxn</span>], <span style="color:#000">b</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#000">ll</span> <span style="color:#000">f</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">h</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">b</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">r</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">h</span>[<span style="color:#1c01ce">0</span>] <span style="color:#000">=</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">while</span> (<span style="color:#000">r</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">q</span>[<span style="color:#000">r</span>].<span style="color:#000">val</span> <span style="color:#000">&gt;=</span> <span style="color:#000">h</span>[<span style="color:#000">i</span>])
</span></span><span style="display:flex;"><span>        {            
</span></span><span style="display:flex;"><span>            <span style="color:#000">modify_add</span>(<span style="color:#1c01ce">0</span>, <span style="color:#000">n</span>, <span style="color:#000">q</span>[<span style="color:#000">r</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>].<span style="color:#000">i</span>, <span style="color:#000">q</span>[<span style="color:#000">r</span>].<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">-</span><span style="color:#000">q</span>[<span style="color:#000">r</span>].<span style="color:#000">b</span>, <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#000">r</span><span style="color:#000">--</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#000">q</span>[<span style="color:#000">++</span><span style="color:#000">r</span>] <span style="color:#000">=</span> <span style="color:#000">Q</span>(<span style="color:#000">i</span>, <span style="color:#000">h</span>[<span style="color:#000">i</span>], <span style="color:#000">b</span>[<span style="color:#000">i</span>]);
</span></span><span style="display:flex;"><span>        <span style="color:#000">modify_add</span>(<span style="color:#1c01ce">0</span>, <span style="color:#000">n</span>, <span style="color:#000">q</span>[<span style="color:#000">r</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>].<span style="color:#000">i</span>, <span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">b</span>[<span style="color:#000">i</span>], <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">f</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">query</span>(<span style="color:#1c01ce">0</span>, <span style="color:#000">n</span>, <span style="color:#1c01ce">0</span>, <span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>, <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">modify</span>(<span style="color:#1c01ce">0</span>, <span style="color:#000">n</span>, <span style="color:#000">i</span>, <span style="color:#000">f</span>[<span style="color:#000">i</span>], <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#177500">//for (int i = 1; i &lt;= n; i++)
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>    <span style="color:#177500">//    cout &lt;&lt; f[i] &lt;&lt; endl;
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">f</span>[<span style="color:#000">n</span>] <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h3 id="算法二">算法二</h3>
<p>同样是单调栈，直接上代码吧。。。维护之前的答案折腾一下，很难描述。看题解得来的做法。</p>
<h3 id="code2">Code2</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">3e5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">typedef</span> <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">ll</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">h</span>[<span style="color:#000">maxn</span>], <span style="color:#000">b</span>[<span style="color:#000">maxn</span>], <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span><span style="color:#000">ll</span> <span style="color:#000">f</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">struct</span> <span style="color:#3f6e75">Q</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">i</span>, <span style="color:#000">h</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">ll</span> <span style="color:#000">val</span>, <span style="color:#000">ans</span>;
</span></span><span style="display:flex;"><span>} <span style="color:#000">q</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">h</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">b</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">r</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">q</span>[<span style="color:#1c01ce">0</span>].<span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#000">-</span><span style="color:#1c01ce">1ll</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">60</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">ll</span> <span style="color:#000">t</span> <span style="color:#000">=</span> <span style="color:#000">f</span>[<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>];
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">while</span> (<span style="color:#000">r</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">q</span>[<span style="color:#000">r</span>].<span style="color:#000">h</span> <span style="color:#000">&gt;</span> <span style="color:#000">h</span>[<span style="color:#000">i</span>])
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">t</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">max</span>(<span style="color:#000">t</span>, <span style="color:#000">q</span>[<span style="color:#000">r</span>].<span style="color:#000">val</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#000">r</span><span style="color:#000">--</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#000">q</span>[<span style="color:#000">++</span><span style="color:#000">r</span>] <span style="color:#000">=</span> {<span style="color:#000">i</span>, <span style="color:#000">h</span>[<span style="color:#000">i</span>], <span style="color:#000">t</span>, <span style="color:#1c01ce">0ll</span>};
</span></span><span style="display:flex;"><span>        <span style="color:#000">f</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">q</span>[<span style="color:#000">r</span>].<span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">max</span>(<span style="color:#000">q</span>[<span style="color:#000">r</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>].<span style="color:#000">ans</span>, <span style="color:#000">t</span> <span style="color:#000">+</span> <span style="color:#000">b</span>[<span style="color:#000">i</span>]);
</span></span><span style="display:flex;"><span>        <span style="color:#177500">// 前一部分是之前的答案，有更小的楼房，直接放在一组里，后面是新开一组的答案
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">f</span>[<span style="color:#000">n</span>] <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="fhttpscodeforcescontest1484problemf"><a href="https://codeforc.es/contest/1484/problem/F">F</a></h2>
<h3 id="description-5">Description</h3>
<p>有一个 $n$​ 个点的带权无向图（$n\leq600$​），给出若干个三元组 $(u,v,l)$​​，问有多少条边满足：</p>
<ol>
<li>
<p>在任意一个三元组中 $u$​ 到 $v$​ 的路径上；</p>
</li>
<li>
<p>这个路径的长度不大于 $l$。</p>
</li>
</ol>
<h3 id="solution-5">Solution</h3>
<p>发现一条边 $(x,y)$​​ 满足要求当且仅当存在一个三元组 $(u,v,l)$​​ 满足 $dis(u,x)+w(x,y)+dis(y,w)\leq l(u,v)$​​​。</p>
<p>首先枚举 $O(n^4)$ 肯定是对的，但是会 TLE，想个办法优化枚举。。。</p>
<p>换个形式：$dis(u,x)+w(x,y)\leq l(u,v)-dis(y,v)$​。</p>
<p>我们枚举 $u,y$，这样左面只和 $x$ 有关，右面只和 $v$ 有关，考虑接着枚举 $x$，我们发现，因为存在 $v$ 即可，所以一个 $x$ 满足要求等价于 $dis(u,x)+w(x,y)\leq(l(u,v)-dis(y,v))_{max}$。右面可以枚举 $u,v,y$ 在 $O(n^3)$ 时间内预处理出来，答案可以枚举 $u,v,x$ 求出来，那么我们在 $O(n^3)$​ 的时间内解决了这个问题。</p>
<h3 id="code-2">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">610</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">typedef</span> <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">ll</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000">ll</span> <span style="color:#000">dis</span>[<span style="color:#000">maxn</span>][<span style="color:#000">maxn</span>], <span style="color:#000">mx</span>[<span style="color:#000">maxn</span>][<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#000">ll</span> <span style="color:#000">p</span>[<span style="color:#000">maxn</span>][<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">ok</span>[<span style="color:#000">maxn</span>][<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">struct</span> <span style="color:#3f6e75">edge</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">y</span>, <span style="color:#000">w</span>;
</span></span><span style="display:flex;"><span>};
</span></span><span style="display:flex;"><span><span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">vector</span><span style="color:#000">&lt;</span><span style="color:#000">edge</span><span style="color:#000">&gt;</span> <span style="color:#000">e</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">add</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>, <span style="color:#a90d91">int</span> <span style="color:#000">w</span>) { <span style="color:#000">e</span>[<span style="color:#000">x</span>].<span style="color:#000">push_back</span>({<span style="color:#000">y</span>, <span style="color:#000">w</span>}), <span style="color:#000">e</span>[<span style="color:#000">y</span>].<span style="color:#000">push_back</span>({<span style="color:#000">x</span>, <span style="color:#000">w</span>}); }
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">n</span>, <span style="color:#000">m</span>, <span style="color:#000">q</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">memset</span>(<span style="color:#000">dis</span>, <span style="color:#1c01ce">1</span>, <span style="color:#a90d91">sizeof</span>(<span style="color:#000">dis</span>));
</span></span><span style="display:flex;"><span>    <span style="color:#000">memset</span>(<span style="color:#000">p</span>, <span style="color:#1c01ce">128</span>, <span style="color:#a90d91">sizeof</span>(<span style="color:#000">p</span>)), <span style="color:#000">memset</span>(<span style="color:#000">mx</span>, <span style="color:#1c01ce">128</span>, <span style="color:#a90d91">sizeof</span>(<span style="color:#000">mx</span>));
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">m</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">p</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>] <span style="color:#000">/=</span> <span style="color:#1c01ce">2</span>, <span style="color:#000">mx</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>] <span style="color:#000">/=</span> <span style="color:#1c01ce">2</span>, <span style="color:#000">dis</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>] <span style="color:#000">/=</span> <span style="color:#1c01ce">2</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">x</span>, <span style="color:#000">y</span>, <span style="color:#000">w</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">x</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">y</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">w</span>, <span style="color:#000">dis</span>[<span style="color:#000">x</span>][<span style="color:#000">y</span>] <span style="color:#000">=</span> <span style="color:#000">dis</span>[<span style="color:#000">y</span>][<span style="color:#000">x</span>] <span style="color:#000">=</span> <span style="color:#000">w</span>, <span style="color:#000">add</span>(<span style="color:#000">x</span>, <span style="color:#000">y</span>, <span style="color:#000">w</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">q</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">x</span>, <span style="color:#000">y</span>, <span style="color:#000">l</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">q</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">x</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">y</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">l</span>, <span style="color:#000">p</span>[<span style="color:#000">x</span>][<span style="color:#000">y</span>] <span style="color:#000">=</span> <span style="color:#000">p</span>[<span style="color:#000">y</span>][<span style="color:#000">x</span>] <span style="color:#000">=</span> <span style="color:#000">l</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">k</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">k</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">k</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">dis</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>] <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">min</span>(<span style="color:#000">dis</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>], <span style="color:#000">dis</span>[<span style="color:#000">i</span>][<span style="color:#000">k</span>] <span style="color:#000">+</span> <span style="color:#000">dis</span>[<span style="color:#000">k</span>][<span style="color:#000">j</span>]);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)    
</span></span><span style="display:flex;"><span>        <span style="color:#000">dis</span>[<span style="color:#000">i</span>][<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>, <span style="color:#000">add</span>(<span style="color:#000">i</span>, <span style="color:#000">i</span>, <span style="color:#1c01ce">0</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">u</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">u</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">u</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">y</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">y</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">y</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">v</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">v</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">v</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#177500">//if (p[u][v])
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>                    <span style="color:#000">mx</span>[<span style="color:#000">u</span>][<span style="color:#000">y</span>] <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">max</span>(<span style="color:#000">mx</span>[<span style="color:#000">u</span>][<span style="color:#000">y</span>], (<span style="color:#000">ll</span>)<span style="color:#000">p</span>[<span style="color:#000">u</span>][<span style="color:#000">v</span>] <span style="color:#000">-</span> <span style="color:#000">dis</span>[<span style="color:#000">y</span>][<span style="color:#000">v</span>]);
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">u</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">u</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">u</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">y</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">y</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">y</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">auto</span> <span style="color:#000">k</span> : <span style="color:#000">e</span>[<span style="color:#000">y</span>])
</span></span><span style="display:flex;"><span>            {
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">int</span> <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">k</span>.<span style="color:#000">y</span>, <span style="color:#000">w</span> <span style="color:#000">=</span> <span style="color:#000">k</span>.<span style="color:#000">w</span>;
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">if</span> (<span style="color:#000">w</span> <span style="color:#000">+</span> <span style="color:#000">dis</span>[<span style="color:#000">x</span>][<span style="color:#000">u</span>] <span style="color:#000">&lt;=</span> <span style="color:#000">mx</span>[<span style="color:#000">u</span>][<span style="color:#000">y</span>])
</span></span><span style="display:flex;"><span>                    <span style="color:#000">ok</span>[<span style="color:#000">x</span>][<span style="color:#000">y</span>] <span style="color:#000">=</span> <span style="color:#000">ok</span>[<span style="color:#000">y</span>][<span style="color:#000">x</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>            }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">ok</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>])
</span></span><span style="display:flex;"><span>                <span style="color:#000">ans</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">ans</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div>]]></content:encoded>
    </item>
    
  </channel>
</rss>
