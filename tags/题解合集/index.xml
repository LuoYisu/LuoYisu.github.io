<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>题解合集 on _slb 的博客</title>
    <link>https://luoyisu.github.io/tags/%E9%A2%98%E8%A7%A3%E5%90%88%E9%9B%86/</link>
    <description>Recent content in 题解合集 on _slb 的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Thu, 26 May 2022 09:46:01 +0000</lastBuildDate><atom:link href="https://luoyisu.github.io/tags/%E9%A2%98%E8%A7%A3%E5%90%88%E9%9B%86/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>LNOI2022-solution</title>
      <link>https://luoyisu.github.io/posts/lnoi2022-solution/</link>
      <pubDate>Thu, 26 May 2022 09:46:01 +0000</pubDate>
      
      <guid>https://luoyisu.github.io/posts/lnoi2022-solution/</guid>
      <description>&lt;p&gt;填完了。&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>填完了。</p>
<h2 id="t1-food">T1 food</h2>
<h3 id="description">Description</h3>
<p>有 $n$ 个食物，每个食物有 $a_i,b_i$ 两个参数。你的初始质量为 $1$，可以以任意顺序吃这些食物，吃掉一个食物之后，你的质量可以加 $b_i$，或者乘上 $a_i$，最大化质量。</p>
<h3 id="solution">Solution</h3>
<p>首先肯定是先加后乘；</p>
<p>然后 $a=1$ 肯定加。</p>
<p>然后剩下的食物里，加只会进行一次，因为如果加多次，调整为只加最大的，剩下的乘是不劣的。</p>
<p>假设加上 $a=1$ 的质量为 $now$，那么把一个数从乘变成加会让全都乘的答案 $ans$ 变为 $ans\times\dfrac{b+now}{a\times now}$，扫一遍找到右边比例的最大值就好了。</p>
<h3 id="code">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#a90d91">namespace</span> <span style="color:#000">std</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">namespace</span> <span style="color:#000">solve</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1e6</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">mod</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1e9</span> <span style="color:#000">+</span> <span style="color:#1c01ce">7</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">typedef</span> <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">ll</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#000">ll</span> <span style="color:#000">now</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">struct</span> <span style="color:#3f6e75">node</span>
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">a</span>, <span style="color:#000">b</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">inline</span> <span style="color:#a90d91">double</span> <span style="color:#000">f</span>() { <span style="color:#a90d91">return</span> (<span style="color:#000">b</span> <span style="color:#000">+</span> <span style="color:#000">now</span>) <span style="color:#000">/</span> (<span style="color:#a90d91">long</span> <span style="color:#a90d91">double</span>)<span style="color:#1c01ce">1.</span> <span style="color:#000">/</span> ((<span style="color:#a90d91">long</span> <span style="color:#a90d91">double</span>)<span style="color:#000">a</span> <span style="color:#000">*</span> <span style="color:#000">now</span>); }
</span></span><span style="display:flex;"><span>    } <span style="color:#000">a</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">vis</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">void</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">a</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">b</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">a</span> <span style="color:#000">==</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">now</span> <span style="color:#000">+=</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">b</span>, <span style="color:#000">vis</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">double</span> <span style="color:#000">d</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">pos</span> <span style="color:#000">=</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">vis</span>[<span style="color:#000">i</span>])
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">continue</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">f</span>() <span style="color:#000">&gt;=</span> <span style="color:#000">d</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">pos</span> <span style="color:#000">=</span> <span style="color:#000">i</span>, <span style="color:#000">d</span> <span style="color:#000">=</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">f</span>();
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">pos</span> <span style="color:#000">==</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">now</span> <span style="color:#000">%=</span> <span style="color:#000">mod</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">if</span> (<span style="color:#000">!</span><span style="color:#000">vis</span>[<span style="color:#000">i</span>])
</span></span><span style="display:flex;"><span>                    <span style="color:#000">now</span> <span style="color:#000">*=</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">a</span>, <span style="color:#000">now</span> <span style="color:#000">%=</span> <span style="color:#000">mod</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">now</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">now</span> <span style="color:#000">+=</span> <span style="color:#000">a</span>[<span style="color:#000">pos</span>].<span style="color:#000">b</span>, <span style="color:#000">now</span> <span style="color:#000">%=</span> <span style="color:#000">mod</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">if</span> (<span style="color:#000">!</span><span style="color:#000">vis</span>[<span style="color:#000">i</span>] <span style="color:#000">&amp;&amp;</span> <span style="color:#000">i</span> <span style="color:#000">!=</span> <span style="color:#000">pos</span>)
</span></span><span style="display:flex;"><span>                    <span style="color:#000">now</span> <span style="color:#000">*=</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">a</span>, <span style="color:#000">now</span> <span style="color:#000">%=</span> <span style="color:#000">mod</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">now</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">ios</span><span style="color:#000">::</span><span style="color:#000">sync_with_stdio</span>(<span style="color:#a90d91">false</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">solve</span><span style="color:#000">::</span><span style="color:#000">main</span>();
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="t2-problem">T2 problem</h2>
<h3 id="description-1">Description</h3>
<p>给定长度为 $3 n$、值域为 $[0, 3]$ 的整数序列 $S = s_1 s_2 \cdots s_{3 n}$。你需要首先将 $S$ 中的每个 $0$ 替换为 $[1, 3]$ 中的任意一个整数，得到序列 $T = t_1 t_2 \cdots t_{3 n}$，然后给出 $n$ 个长度为 $3$ 的整数序列 ${\{ a_{i, 1}, a_{i, 2}, a_{i, 3} \}}_{1 \le i \le n}$，使得</p>
<ul>
<li>$\forall 1 \le i \le n$，$1 \le a_{i, 1} &lt; a_{i, 2} &lt; a_{i, 3} \le 3 n$；</li>
<li>$\forall (i_1, j_1) \ne (i_2, j_2)$，$a_{i_1, j_1} \ne a_{i_2, j_2}$；</li>
<li>$\forall 1 \le i \le n$，$\{ t_{a_{i, 1}}, t_{a_{i, 2}}, t_{a_{i, 3}} \}$ 是 $\{ 1, 2, 3 \}$ 的一个排列且逆序对数为奇数。</li>
</ul>
<p>认为两个方案本质不同当且仅当序列 $T$ 不同或存在 $a_{i, j}$（$1 \le i \le n$，$1 \le j \le 3$）不同，求以上操作的本质不同的方案数，对 $({10}^9 + 7)$ 取模。</p>
<p>$n\leq19$。</p>
<h3 id="solution-1">Solution</h3>
<p>逆序对数是奇数，也就是说只有 $(1,3,2),(2,1,3),(3,2,1)$ 三种情况。</p>
<p>题目的要求相当于我们把 $3n$ 个数分到 $n$ 个三元组里，不难想到一个 dp：</p>
<p>$g(i,a,b,c,d,e,f)$ 表示当前 $T$ 填了前 $i$ 位，当前为 $(1),(2),(3)$ 的三元组分别有 $a,b,c$ 个；当前为 $(1,3),(2,1),(3,2)$ 的三元组分别有 $d,e,f$ 个的方案数。</p>
<p>这里我们不考虑 $n$ 个三元组的顺序，方案数为 $g(3n,0,0,0,0,0,0)$，再乘上 $n!$ 即可。</p>
<p>转移的时候就枚举这这一位填什么，分到哪个三元组里，乘一个系数转移就好了。</p>
<p>复杂度看似是 $O(n^7)$，但是我们只考虑能转移到最终状态的状态进行转移，比如说 $g(i,n,2,0,0,0,0)$ 这种状态显然就没有意义。多考虑一些类似的状态，状态数会减少很多，可以很快地通过本题。</p>
<p>如果你采用只存合法状态进行转移的方式，我估计会非常快（</p>
<h3 id="code-1">Code</h3>
<p>注意空间需要滚动数组。</p>
<p>这里放一份当前最优解的代码，是一位拒绝透露姓名的神仙在我代码的基础上进行了一波常数优化得到的（</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#a90d91">namespace</span> <span style="color:#000">std</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">constexpr</span> <span style="color:#a90d91">int</span> <span style="color:#000">mod</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1000000007</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">typedef</span> <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">ll</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">namespace</span> <span style="color:#000">solve</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">59</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxm</span> <span style="color:#000">=</span> <span style="color:#1c01ce">20</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#633820">#define upd(x, y) ((x) = (((x) + (y)) % (mod)))
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">g</span>[<span style="color:#1c01ce">2</span>][<span style="color:#000">maxm</span>][<span style="color:#000">maxm</span>][<span style="color:#000">maxm</span>][<span style="color:#000">maxm</span>][<span style="color:#000">maxm</span>][<span style="color:#000">maxm</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">char</span> <span style="color:#000">str</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">void</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span> <span style="color:#000">&gt;&gt;</span> (<span style="color:#000">str</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">g</span>[<span style="color:#1c01ce">0</span>][<span style="color:#1c01ce">0</span>][<span style="color:#1c01ce">0</span>][<span style="color:#1c01ce">0</span>][<span style="color:#1c01ce">0</span>][<span style="color:#1c01ce">0</span>][<span style="color:#1c01ce">0</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">cur</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span> <span style="color:#000">*</span> <span style="color:#1c01ce">3</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">auto</span><span style="color:#000">&amp;&amp;</span> <span style="color:#000">res</span>(<span style="color:#000">n</span> <span style="color:#000">*</span> <span style="color:#1c01ce">3</span> <span style="color:#000">-</span> <span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">a</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">a</span> <span style="color:#000">&lt;=</span> <span style="color:#000">res</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">a</span> <span style="color:#000">&lt;=</span> <span style="color:#000">i</span>; <span style="color:#000">a</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">b</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">a</span> <span style="color:#000">+</span> <span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">b</span> <span style="color:#000">&lt;=</span> <span style="color:#000">res</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">a</span> <span style="color:#000">+</span> <span style="color:#000">b</span> <span style="color:#000">&lt;=</span> <span style="color:#000">i</span>; <span style="color:#000">b</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">c</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">a</span> <span style="color:#000">+</span> <span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">b</span> <span style="color:#000">+</span> <span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">c</span> <span style="color:#000">&lt;=</span> <span style="color:#000">res</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">a</span> <span style="color:#000">+</span> <span style="color:#000">b</span> <span style="color:#000">+</span> <span style="color:#000">c</span> <span style="color:#000">&lt;=</span> <span style="color:#000">i</span>; <span style="color:#000">c</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">d</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">a</span> <span style="color:#000">+</span> <span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">b</span> <span style="color:#000">+</span> <span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">c</span> <span style="color:#000">+</span> <span style="color:#000">d</span> <span style="color:#000">&lt;=</span> <span style="color:#000">res</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">a</span> <span style="color:#000">+</span> <span style="color:#000">b</span> <span style="color:#000">+</span> <span style="color:#000">c</span> <span style="color:#000">+</span> <span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">d</span> <span style="color:#000">&lt;=</span> <span style="color:#000">i</span>; <span style="color:#000">d</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">e</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">a</span> <span style="color:#000">+</span> <span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">b</span> <span style="color:#000">+</span> <span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">c</span> <span style="color:#000">+</span> <span style="color:#000">d</span> <span style="color:#000">+</span> <span style="color:#000">e</span> <span style="color:#000">&lt;=</span> <span style="color:#000">res</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">a</span> <span style="color:#000">+</span> <span style="color:#000">b</span> <span style="color:#000">+</span> <span style="color:#000">c</span> <span style="color:#000">+</span> <span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">d</span> <span style="color:#000">+</span> <span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">e</span> <span style="color:#000">&lt;=</span> <span style="color:#000">i</span>; <span style="color:#000">e</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                                <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">f</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">a</span> <span style="color:#000">+</span> <span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">b</span> <span style="color:#000">+</span> <span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">c</span> <span style="color:#000">+</span> <span style="color:#000">d</span> <span style="color:#000">+</span> <span style="color:#000">e</span> <span style="color:#000">+</span> <span style="color:#000">f</span> <span style="color:#000">&lt;=</span> <span style="color:#000">res</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">a</span> <span style="color:#000">+</span> <span style="color:#000">b</span> <span style="color:#000">+</span> <span style="color:#000">c</span> <span style="color:#000">+</span> <span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">d</span> <span style="color:#000">+</span> <span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">e</span> <span style="color:#000">+</span> <span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">f</span> <span style="color:#000">&lt;=</span> <span style="color:#000">i</span>; <span style="color:#000">f</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                                    <span style="color:#a90d91">if</span> (<span style="color:#000">g</span>[<span style="color:#000">cur</span> <span style="color:#000">^</span> <span style="color:#1c01ce">1</span>][<span style="color:#000">a</span>][<span style="color:#000">b</span>][<span style="color:#000">c</span>][<span style="color:#000">d</span>][<span style="color:#000">e</span>][<span style="color:#000">f</span>])
</span></span><span style="display:flex;"><span>                                    {
</span></span><span style="display:flex;"><span>                                        <span style="color:#a90d91">int</span><span style="color:#000">&amp;&amp;</span> <span style="color:#000">tmp</span>(<span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">a</span> <span style="color:#000">+</span> <span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">b</span> <span style="color:#000">+</span> <span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">c</span> <span style="color:#000">+</span> <span style="color:#000">d</span> <span style="color:#000">+</span> <span style="color:#000">e</span> <span style="color:#000">+</span> <span style="color:#000">f</span>), <span style="color:#000">fxj</span>(<span style="color:#000">a</span> <span style="color:#000">+</span> <span style="color:#000">b</span> <span style="color:#000">+</span> <span style="color:#000">c</span> <span style="color:#000">+</span> <span style="color:#000">d</span> <span style="color:#000">+</span> <span style="color:#000">e</span> <span style="color:#000">+</span> <span style="color:#000">f</span>);
</span></span><span style="display:flex;"><span>                                        <span style="color:#a90d91">auto</span> <span style="color:#a90d91">const</span><span style="color:#000">&amp;</span> <span style="color:#000">now</span> <span style="color:#000">=</span> <span style="color:#000">str</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>                                        <span style="color:#000">ll</span> <span style="color:#a90d91">const</span><span style="color:#000">&amp;</span> <span style="color:#000">lst</span> <span style="color:#000">=</span> <span style="color:#000">g</span>[<span style="color:#000">cur</span> <span style="color:#000">^</span> <span style="color:#1c01ce">1</span>][<span style="color:#000">a</span>][<span style="color:#000">b</span>][<span style="color:#000">c</span>][<span style="color:#000">d</span>][<span style="color:#000">e</span>][<span style="color:#000">f</span>];
</span></span><span style="display:flex;"><span>                                        <span style="color:#a90d91">if</span> (<span style="color:#000">now</span> <span style="color:#000">==</span> <span style="color:#2300ce">&#39;1&#39;</span> <span style="color:#000">||</span> <span style="color:#000">now</span> <span style="color:#000">==</span> <span style="color:#2300ce">&#39;0&#39;</span>)
</span></span><span style="display:flex;"><span>                                        {
</span></span><span style="display:flex;"><span>                                            <span style="color:#a90d91">if</span> (<span style="color:#000">a</span> <span style="color:#000">&lt;</span> <span style="color:#000">n</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">tmp</span> <span style="color:#000">+</span> <span style="color:#1c01ce">2</span> <span style="color:#000">&lt;=</span> <span style="color:#000">res</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">fxj</span> <span style="color:#000">&lt;</span> <span style="color:#000">n</span>)
</span></span><span style="display:flex;"><span>                                                <span style="color:#000">upd</span>(<span style="color:#000">g</span>[<span style="color:#000">cur</span>][<span style="color:#000">a</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>][<span style="color:#000">b</span>][<span style="color:#000">c</span>][<span style="color:#000">d</span>][<span style="color:#000">e</span>][<span style="color:#000">f</span>], <span style="color:#000">lst</span>);
</span></span><span style="display:flex;"><span>                                            <span style="color:#a90d91">if</span> (<span style="color:#000">c</span> <span style="color:#000">&gt;</span> <span style="color:#1c01ce">0</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">f</span> <span style="color:#000">&lt;</span> <span style="color:#000">n</span>)
</span></span><span style="display:flex;"><span>                                                <span style="color:#000">upd</span>(<span style="color:#000">g</span>[<span style="color:#000">cur</span>][<span style="color:#000">a</span>][<span style="color:#000">b</span>][<span style="color:#000">c</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>][<span style="color:#000">d</span>][<span style="color:#000">e</span>][<span style="color:#000">f</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>], <span style="color:#000">lst</span> <span style="color:#000">*</span> <span style="color:#000">c</span>);
</span></span><span style="display:flex;"><span>                                            <span style="color:#a90d91">if</span> (<span style="color:#000">e</span> <span style="color:#000">&gt;</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>                                                <span style="color:#000">upd</span>(<span style="color:#000">g</span>[<span style="color:#000">cur</span>][<span style="color:#000">a</span>][<span style="color:#000">b</span>][<span style="color:#000">c</span>][<span style="color:#000">d</span>][<span style="color:#000">e</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>][<span style="color:#000">f</span>], <span style="color:#000">lst</span> <span style="color:#000">*</span> <span style="color:#000">e</span>);
</span></span><span style="display:flex;"><span>                                        }
</span></span><span style="display:flex;"><span>                                        <span style="color:#a90d91">if</span> (<span style="color:#000">now</span> <span style="color:#000">==</span> <span style="color:#2300ce">&#39;2&#39;</span> <span style="color:#000">||</span> <span style="color:#000">now</span> <span style="color:#000">==</span> <span style="color:#2300ce">&#39;0&#39;</span>)
</span></span><span style="display:flex;"><span>                                        {
</span></span><span style="display:flex;"><span>                                            <span style="color:#a90d91">if</span> (<span style="color:#000">c</span> <span style="color:#000">&lt;</span> <span style="color:#000">n</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">tmp</span> <span style="color:#000">+</span> <span style="color:#1c01ce">2</span> <span style="color:#000">&lt;=</span> <span style="color:#000">res</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">fxj</span> <span style="color:#000">&lt;</span> <span style="color:#000">n</span>)
</span></span><span style="display:flex;"><span>                                                <span style="color:#000">upd</span>(<span style="color:#000">g</span>[<span style="color:#000">cur</span>][<span style="color:#000">a</span>][<span style="color:#000">b</span>][<span style="color:#000">c</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>][<span style="color:#000">d</span>][<span style="color:#000">e</span>][<span style="color:#000">f</span>], <span style="color:#000">lst</span>);
</span></span><span style="display:flex;"><span>                                            <span style="color:#a90d91">if</span> (<span style="color:#000">b</span> <span style="color:#000">&gt;</span> <span style="color:#1c01ce">0</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">e</span> <span style="color:#000">&lt;</span> <span style="color:#000">n</span>)
</span></span><span style="display:flex;"><span>                                                <span style="color:#000">upd</span>(<span style="color:#000">g</span>[<span style="color:#000">cur</span>][<span style="color:#000">a</span>][<span style="color:#000">b</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>][<span style="color:#000">c</span>][<span style="color:#000">d</span>][<span style="color:#000">e</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>][<span style="color:#000">f</span>], <span style="color:#000">lst</span> <span style="color:#000">*</span> <span style="color:#000">b</span>);
</span></span><span style="display:flex;"><span>                                            <span style="color:#a90d91">if</span> (<span style="color:#000">d</span> <span style="color:#000">&gt;</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>                                                <span style="color:#000">upd</span>(<span style="color:#000">g</span>[<span style="color:#000">cur</span>][<span style="color:#000">a</span>][<span style="color:#000">b</span>][<span style="color:#000">c</span>][<span style="color:#000">d</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>][<span style="color:#000">e</span>][<span style="color:#000">f</span>], <span style="color:#000">lst</span> <span style="color:#000">*</span> <span style="color:#000">d</span>);
</span></span><span style="display:flex;"><span>                                        }
</span></span><span style="display:flex;"><span>                                        <span style="color:#a90d91">if</span> (<span style="color:#000">now</span> <span style="color:#000">==</span> <span style="color:#2300ce">&#39;3&#39;</span> <span style="color:#000">||</span> <span style="color:#000">now</span> <span style="color:#000">==</span> <span style="color:#2300ce">&#39;0&#39;</span>)
</span></span><span style="display:flex;"><span>                                        {
</span></span><span style="display:flex;"><span>                                            <span style="color:#a90d91">if</span> (<span style="color:#000">b</span> <span style="color:#000">&lt;</span> <span style="color:#000">n</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">tmp</span> <span style="color:#000">+</span> <span style="color:#1c01ce">2</span> <span style="color:#000">&lt;=</span> <span style="color:#000">res</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">fxj</span> <span style="color:#000">&lt;</span> <span style="color:#000">n</span>)
</span></span><span style="display:flex;"><span>                                                <span style="color:#000">upd</span>(<span style="color:#000">g</span>[<span style="color:#000">cur</span>][<span style="color:#000">a</span>][<span style="color:#000">b</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>][<span style="color:#000">c</span>][<span style="color:#000">d</span>][<span style="color:#000">e</span>][<span style="color:#000">f</span>], <span style="color:#000">lst</span>);
</span></span><span style="display:flex;"><span>                                            <span style="color:#a90d91">if</span> (<span style="color:#000">a</span> <span style="color:#000">&gt;</span> <span style="color:#1c01ce">0</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">d</span> <span style="color:#000">&lt;</span> <span style="color:#000">n</span>)
</span></span><span style="display:flex;"><span>                                                <span style="color:#000">upd</span>(<span style="color:#000">g</span>[<span style="color:#000">cur</span>][<span style="color:#000">a</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>][<span style="color:#000">b</span>][<span style="color:#000">c</span>][<span style="color:#000">d</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>][<span style="color:#000">e</span>][<span style="color:#000">f</span>], <span style="color:#000">lst</span> <span style="color:#000">*</span> <span style="color:#000">a</span>);
</span></span><span style="display:flex;"><span>                                            <span style="color:#a90d91">if</span> (<span style="color:#000">f</span> <span style="color:#000">&gt;</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>                                                <span style="color:#000">upd</span>(<span style="color:#000">g</span>[<span style="color:#000">cur</span>][<span style="color:#000">a</span>][<span style="color:#000">b</span>][<span style="color:#000">c</span>][<span style="color:#000">d</span>][<span style="color:#000">e</span>][<span style="color:#000">f</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>], <span style="color:#000">lst</span> <span style="color:#000">*</span> <span style="color:#000">f</span>);
</span></span><span style="display:flex;"><span>                                        }
</span></span><span style="display:flex;"><span>                                        <span style="color:#000">g</span>[<span style="color:#000">cur</span> <span style="color:#000">^</span> <span style="color:#1c01ce">1</span>][<span style="color:#000">a</span>][<span style="color:#000">b</span>][<span style="color:#000">c</span>][<span style="color:#000">d</span>][<span style="color:#000">e</span>][<span style="color:#000">f</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>                                    }
</span></span><span style="display:flex;"><span>            <span style="color:#000">cur</span> <span style="color:#000">^=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#000">ll</span> <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#000">g</span>[<span style="color:#000">cur</span> <span style="color:#000">^</span> <span style="color:#1c01ce">1</span>][<span style="color:#1c01ce">0</span>][<span style="color:#1c01ce">0</span>][<span style="color:#1c01ce">0</span>][<span style="color:#1c01ce">0</span>][<span style="color:#1c01ce">0</span>][<span style="color:#1c01ce">0</span>];
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#000">ll</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">++</span><span style="color:#000">i</span>) <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#000">ans</span> <span style="color:#000">*</span> <span style="color:#000">i</span> <span style="color:#000">%</span> <span style="color:#000">mod</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">ans</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">res</span> <span style="color:#000">=</span> <span style="color:#1c01ce">3</span> <span style="color:#000">*</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">a</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">a</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">a</span> <span style="color:#000">&lt;=</span> <span style="color:#000">res</span>; <span style="color:#000">a</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">b</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">a</span> <span style="color:#000">+</span> <span style="color:#000">b</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">a</span> <span style="color:#000">+</span> <span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">b</span> <span style="color:#000">&lt;=</span> <span style="color:#000">res</span>; <span style="color:#000">b</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">c</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">a</span> <span style="color:#000">+</span> <span style="color:#000">b</span> <span style="color:#000">+</span> <span style="color:#000">c</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">a</span> <span style="color:#000">+</span> <span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">b</span> <span style="color:#000">+</span> <span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">c</span> <span style="color:#000">&lt;=</span> <span style="color:#000">res</span>; <span style="color:#000">c</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">d</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">a</span> <span style="color:#000">+</span> <span style="color:#000">b</span> <span style="color:#000">+</span> <span style="color:#000">c</span> <span style="color:#000">+</span> <span style="color:#000">d</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">a</span> <span style="color:#000">+</span> <span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">b</span> <span style="color:#000">+</span> <span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">c</span> <span style="color:#000">+</span> <span style="color:#000">d</span> <span style="color:#000">&lt;=</span> <span style="color:#000">res</span>; <span style="color:#000">d</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">e</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">a</span> <span style="color:#000">+</span> <span style="color:#000">b</span> <span style="color:#000">+</span> <span style="color:#000">c</span> <span style="color:#000">+</span> <span style="color:#000">d</span> <span style="color:#000">+</span> <span style="color:#000">e</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">a</span> <span style="color:#000">+</span> <span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">b</span> <span style="color:#000">+</span> <span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">c</span> <span style="color:#000">+</span> <span style="color:#000">d</span> <span style="color:#000">+</span> <span style="color:#000">e</span> <span style="color:#000">&lt;=</span> <span style="color:#000">res</span>; <span style="color:#000">e</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">f</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">a</span> <span style="color:#000">+</span> <span style="color:#000">b</span> <span style="color:#000">+</span> <span style="color:#000">c</span> <span style="color:#000">+</span> <span style="color:#000">d</span> <span style="color:#000">+</span> <span style="color:#000">e</span> <span style="color:#000">+</span> <span style="color:#000">f</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">a</span> <span style="color:#000">+</span> <span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">b</span> <span style="color:#000">+</span> <span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">c</span> <span style="color:#000">+</span> <span style="color:#000">d</span> <span style="color:#000">+</span> <span style="color:#000">e</span> <span style="color:#000">+</span> <span style="color:#000">f</span> <span style="color:#000">&lt;=</span> <span style="color:#000">res</span>; <span style="color:#000">f</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                                <span style="color:#000">g</span>[<span style="color:#1c01ce">1</span>][<span style="color:#000">a</span>][<span style="color:#000">b</span>][<span style="color:#000">c</span>][<span style="color:#000">d</span>][<span style="color:#000">e</span>][<span style="color:#000">f</span>] <span style="color:#000">=</span> <span style="color:#000">g</span>[<span style="color:#1c01ce">0</span>][<span style="color:#000">a</span>][<span style="color:#000">b</span>][<span style="color:#000">c</span>][<span style="color:#000">d</span>][<span style="color:#000">e</span>][<span style="color:#000">f</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">ios</span><span style="color:#000">::</span><span style="color:#000">sync_with_stdio</span>(<span style="color:#1c01ce">0</span>), <span style="color:#000">cin</span>.<span style="color:#000">tie</span>(<span style="color:#1c01ce">0</span>), <span style="color:#000">cout</span>.<span style="color:#000">tie</span>(<span style="color:#1c01ce">0</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">T</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">T</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> (<span style="color:#000">T</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">solve</span><span style="color:#000">::</span><span style="color:#000">main</span>();
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="t3-box">T3 box</h2>
<h3 id="description-2">Description</h3>
<p>有 $n$ 个不同的盒子排成一排。在初始状态下，第 $i$ 个盒子放有 $a_i$ 个货物，总货物数量为 $S = \sum_{i = 1}^{n} a_i$。对于非负整数数组 $(b_1, b_2, \ldots, b_n)$ 满足 $\sum_{i = 1}^{n} b_i = S$，考察以下问题：</p>
<p>你想让第 $i$ 个盒子中拥有恰好 $b_i$ 个货物，为此你可以做如下操作若干次：对两个相邻的盒子，把其中一个盒子的恰好一个货物移动至另一个。对 $i, i + 1$（$1 \le i &lt; n$）号盒子做<strong>一次</strong>操作的代价为 $w_i$。你需要保证在操作中不存在盒子中的货物数量是负数。</p>
<p>在以上问题下，定义从初始状态达到第 $i$ 个盒子拥有恰好 $b_i$ 个货物的状态的最小代价为 $\operatorname{val}(b_1, b_2, \ldots, b_n)$，你需要求出对所有满足 $\sum_{i = 1}^{n} b_i = S$ 的非负整数数组 $(b_1, b_2, \ldots, b_n)$，$\operatorname{val}(b_1, b_2, \ldots, b_n)$ 的和。输出这个答案对 $998244353$ 取模后的结果。</p>
<h3 id="solution-2">Solution</h3>
<p>不会的数学题，越学越认识到自己垃圾的数学水平&hellip;</p>
<p>感觉是一篇详细的题解。</p>
<p>我们对每条边算出其对答案的贡献，设 $s_i=\sum_{j=1}^ia_j,S=s_n$，枚举 $j=\sum_{k=1}^ib_k$，那么方案数为前 $i$ 个盒子里放 $j$ 个货物的方案数乘上后 $n-i$ 个盒子里放 $S-j$ 个货物的方案数，这里盒子可以为空，用插板法搞一下就可以得出答案的式子：
$$
ans=\sum_{i=1}^n w_i\sum_{j=0}^S|j-s_i|\binom{i+j-1}{i-1}\binom{n-i+S-j-1}{n-i-1}
$$
我们主要关心第二个求和式子。</p>
<p>绝对值显然不好搞，给拆掉，然后把少加的部分补进去。
$$
\begin{aligned}
&amp;\sum_{j=0}^S|j-s_i|\binom{i+j-1}{i-1}\binom{n-i+S-j-1}{n-i-1}\\
=&amp;\sum_{j=0}^{S}(j-s_i)\binom{i+j-1}{i-1}\binom{n-i+S-j-1}{n-i-1}+2\sum_{j=0}^{s_i}(s_i-j)\binom{i+j-1}{i-1}\binom{n-i+S-j-1}{n-i-1}
\end{aligned}
$$
这里 $j=s_i$ 的项为了方便在两边都算进去了，反正是 $0$ 不影响。</p>
<p>前面和后面的形式是相同的，后一个显然更强一些（因为有循环上界的限制），我们先考虑后一个式子。把后一个求和式子拆开，我们关心的是：
$$
s_i\sum_{j=0}^{s_i}\binom{i+j-1}{i-1}\binom{n-i+S-j-1}{n-i-1}-\sum_{j=0}^{s_i}j\binom{i+j-1}{i-1}\binom{n-i+S-j-1}{n-i-1}
$$
想要把这两个式子统一起来，后一个求和式子的 $j$ 要想办法换成一个常数移到外面来，有
$$
j\binom{i+j-1}{i-1}=j\times\frac{(i+j-1)!}{(i-1)!j!}=i\times\frac{(i+j-1)!}{i!(j-1)!}=i\binom{i+j-1}{i}
$$
这样后面的式子就变成
$$
i\sum_{j=0}^{s_i}\binom{i+j-1}{i}\binom{n-i+S-j-1}{n-i-1}
$$
已经基本统一了，但是具体的加一/减一上还需要稍微凑一下，为了方便我们设
$$
f(n,s,i,k)=\sum_{j=0}^k\binom{i+j-1}{i-1}\binom{n-i+s-j-1}{n-i-1}
$$
观察一下，想让 $\dbinom{i+j-1}{i}$ 对上 $\dbinom{i+j-1}{i-1}$ 这一项，$i$ 需要对应 $i-1$，那组合数上面的 $j$ 就得对应 $j+1$，因此我们对刚刚后面的式子进行一个小调整，枚举原来的 $j-1$，这样就变为：
$$
i\sum_{j=0}^{s_i-1}\binom{i+j}{i}\binom{n-i+S-j}{n-i-1}
$$
这样就能一一凑上了，上式等于 $i\times f(n+1,s-1,i+1,k-1)$。</p>
<p>把 $f$ 带回最开始的式子，对于每个 $i$，我们要求出：
$$
i\times f(n+1,S-1,i+1,S-1)-s_i\times f(n,S,i,S)+2\times f(n,S,i,s_i)-2i\times f(n+1,S-1,i+1,s_i-1)
$$
注意到 $i$ 和 $s_i$ 都是不降的，那么问题就变为：已知 $f(n,s,i,k)$，要快速求出 $f(n,s,i+1,k),f(n,s,i,k+1)$。</p>
<p>$f(n,s,i,k+1)$ 直接根据 $f$ 的定义求就好了，难的是 $i$ 的增加。</p>
<p>我是推不动，这里回到组合意义就很神仙，考虑 $f$ 的组合意义，是总共有 $n$ 个盒子，$s$ 个货物要放到这些盒子里，前 $i$ 个盒子最多放 $k$ 个货物的方案数。怎么理解呢？就是枚举前 $i$ 个盒子放几个货物，同样插板法。</p>
<p>我们需要一个枚举盒子的组合意义，换个思路，等价于第 $k+1$ 个货物所在的盒子大于 $i$。枚举这个盒子 $j$，方案数为前 $j$ 个盒子放 $k$ 个货物的方案数乘上后 $n-j+1$ 个盒子放 $S-k-1$ 个货物的方案数，同样插板法，式子就是：
$$
f(n,s,i,k)=\sum_{j=i+1}^n\binom{j+k-1}{j-1}\binom{n-j+s-k-1}{n-j}
$$
这个就可以随着 $i$ 的变化 $O(1)$ 维护了。</p>
<p>把四个 $f$ 分别维护，就做完了，好耶！</p>
<h3 id="code-2">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#a90d91">namespace</span> <span style="color:#000">solve</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">3e6</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">mod</span> <span style="color:#000">=</span> <span style="color:#1c01ce">998244353</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">typedef</span> <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">ll</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#000">ll</span> <span style="color:#000">qpow</span>(<span style="color:#000">ll</span> <span style="color:#000">a</span>, <span style="color:#000">ll</span> <span style="color:#000">x</span>, <span style="color:#000">ll</span> <span style="color:#000">p</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">ll</span> <span style="color:#000">res</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (; <span style="color:#000">x</span>; <span style="color:#000">x</span> <span style="color:#000">&gt;&gt;=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">a</span> <span style="color:#000">=</span> <span style="color:#000">a</span> <span style="color:#000">*</span> <span style="color:#000">a</span> <span style="color:#000">%</span> <span style="color:#000">p</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">x</span> <span style="color:#000">&amp;</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">res</span> <span style="color:#000">=</span> <span style="color:#000">res</span> <span style="color:#000">*</span> <span style="color:#000">a</span> <span style="color:#000">%</span> <span style="color:#000">p</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#000">res</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#000">ll</span> <span style="color:#000">fac</span>[<span style="color:#000">maxn</span>], <span style="color:#000">ifac</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">void</span> <span style="color:#000">init</span>(<span style="color:#a90d91">int</span> <span style="color:#000">n</span> <span style="color:#000">=</span> <span style="color:#1c01ce">3e6</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">fac</span>[<span style="color:#1c01ce">0</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">fac</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">fac</span>[<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">*</span> <span style="color:#000">i</span> <span style="color:#000">%</span> <span style="color:#000">mod</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">ifac</span>[<span style="color:#000">n</span>] <span style="color:#000">=</span> <span style="color:#000">qpow</span>(<span style="color:#000">fac</span>[<span style="color:#000">n</span>], <span style="color:#000">mod</span> <span style="color:#000">-</span> <span style="color:#1c01ce">2</span>, <span style="color:#000">mod</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#000">n</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&gt;=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">ifac</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">ifac</span>[<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">*</span> (<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>) <span style="color:#000">%</span> <span style="color:#000">mod</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#000">ll</span> <span style="color:#000">C</span>(<span style="color:#a90d91">int</span> <span style="color:#000">n</span>, <span style="color:#a90d91">int</span> <span style="color:#000">m</span>) { <span style="color:#a90d91">return</span> <span style="color:#000">m</span> <span style="color:#000">&gt;</span> <span style="color:#000">n</span> <span style="color:#000">||</span> <span style="color:#000">m</span> <span style="color:#000">&lt;</span> <span style="color:#1c01ce">0</span> <span style="color:#000">||</span> <span style="color:#000">n</span> <span style="color:#000">&lt;</span> <span style="color:#1c01ce">0</span> <span style="color:#000">?</span> <span style="color:#1c01ce">0</span> <span style="color:#000">:</span> <span style="color:#000">fac</span>[<span style="color:#000">n</span>] <span style="color:#000">*</span> <span style="color:#000">ifac</span>[<span style="color:#000">m</span>] <span style="color:#000">%</span> <span style="color:#000">mod</span> <span style="color:#000">*</span> <span style="color:#000">ifac</span>[<span style="color:#000">n</span> <span style="color:#000">-</span> <span style="color:#000">m</span>] <span style="color:#000">%</span> <span style="color:#000">mod</span>; }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">sum</span>[<span style="color:#000">maxn</span>], <span style="color:#000">w</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">S</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#000">ll</span> <span style="color:#000">f</span>(<span style="color:#a90d91">int</span> <span style="color:#000">n</span>, <span style="color:#a90d91">int</span> <span style="color:#000">S</span>, <span style="color:#a90d91">int</span> <span style="color:#000">i</span>, <span style="color:#a90d91">int</span> <span style="color:#000">k</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">ll</span> <span style="color:#000">res</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;=</span> <span style="color:#000">k</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            (<span style="color:#000">res</span> <span style="color:#000">+=</span> <span style="color:#000">C</span>(<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#000">j</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>) <span style="color:#000">*</span> <span style="color:#000">C</span>(<span style="color:#000">n</span> <span style="color:#000">-</span> <span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#000">S</span> <span style="color:#000">-</span> <span style="color:#000">j</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">n</span> <span style="color:#000">-</span> <span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>) <span style="color:#000">%</span> <span style="color:#000">mod</span>) <span style="color:#000">%=</span> <span style="color:#000">mod</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#000">res</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">struct</span> <span style="color:#3f6e75">func</span>
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">n</span>, <span style="color:#000">s</span>, <span style="color:#000">i</span>, <span style="color:#000">k</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">ll</span> <span style="color:#000">res</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">void</span> <span style="color:#000">init</span>(<span style="color:#a90d91">int</span> <span style="color:#000">n_</span>, <span style="color:#a90d91">int</span> <span style="color:#000">s_</span>, <span style="color:#a90d91">int</span> <span style="color:#000">i_</span>, <span style="color:#a90d91">int</span> <span style="color:#000">k_</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">n</span> <span style="color:#000">=</span> <span style="color:#000">n_</span>, <span style="color:#000">s</span> <span style="color:#000">=</span> <span style="color:#000">s_</span>, <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#000">i_</span>, <span style="color:#000">k</span> <span style="color:#000">=</span> <span style="color:#000">k_</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">res</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;=</span> <span style="color:#000">k</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">res</span> <span style="color:#000">+=</span> <span style="color:#000">C</span>(<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#000">j</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>) <span style="color:#000">*</span> <span style="color:#000">C</span>(<span style="color:#000">n</span> <span style="color:#000">-</span> <span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#000">s</span> <span style="color:#000">-</span> <span style="color:#000">j</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">n</span> <span style="color:#000">-</span> <span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>) <span style="color:#000">%</span> <span style="color:#000">mod</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">res</span> <span style="color:#000">%=</span> <span style="color:#000">mod</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">void</span> <span style="color:#000">movek</span>(<span style="color:#a90d91">int</span> <span style="color:#000">nk</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">nk</span> <span style="color:#000">&lt;=</span> <span style="color:#000">k</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">return</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#000">k</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;=</span> <span style="color:#000">nk</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">res</span> <span style="color:#000">+=</span> <span style="color:#000">C</span>(<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#000">j</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>) <span style="color:#000">*</span> <span style="color:#000">C</span>(<span style="color:#000">n</span> <span style="color:#000">-</span> <span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#000">s</span> <span style="color:#000">-</span> <span style="color:#000">j</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">n</span> <span style="color:#000">-</span> <span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>) <span style="color:#000">%</span> <span style="color:#000">mod</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">res</span> <span style="color:#000">%=</span> <span style="color:#000">mod</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">k</span> <span style="color:#000">=</span> <span style="color:#000">nk</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">void</span> <span style="color:#000">movei</span>(<span style="color:#a90d91">int</span> <span style="color:#000">ni</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">ni</span> <span style="color:#000">&lt;=</span> <span style="color:#000">i</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">return</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;=</span> <span style="color:#000">ni</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">res</span> <span style="color:#000">-=</span> <span style="color:#000">C</span>(<span style="color:#000">j</span> <span style="color:#000">+</span> <span style="color:#000">k</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">j</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>) <span style="color:#000">*</span> <span style="color:#000">C</span>(<span style="color:#000">n</span> <span style="color:#000">-</span> <span style="color:#000">j</span> <span style="color:#000">+</span> <span style="color:#000">s</span> <span style="color:#000">-</span> <span style="color:#000">k</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">n</span> <span style="color:#000">-</span> <span style="color:#000">j</span>) <span style="color:#000">%</span> <span style="color:#000">mod</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">res</span> <span style="color:#000">%=</span> <span style="color:#000">mod</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#000">ni</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    } <span style="color:#000">f1</span>, <span style="color:#000">f2</span>, <span style="color:#000">f3</span>, <span style="color:#000">f4</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">void</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">n</span> <span style="color:#000">=</span> <span style="color:#000">read</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">sum</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">sum</span>[<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">+</span> <span style="color:#000">read</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">w</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">read</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#000">ll</span> <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">S</span> <span style="color:#000">=</span> <span style="color:#000">sum</span>[<span style="color:#000">n</span>];
</span></span><span style="display:flex;"><span>        <span style="color:#000">f1</span>.<span style="color:#000">init</span>(<span style="color:#000">n</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">S</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>, <span style="color:#1c01ce">1</span>, <span style="color:#000">S</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>), <span style="color:#000">f2</span>.<span style="color:#000">init</span>(<span style="color:#000">n</span>, <span style="color:#000">S</span>, <span style="color:#1c01ce">1</span>, <span style="color:#000">S</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">f3</span>.<span style="color:#000">init</span>(<span style="color:#000">n</span>, <span style="color:#000">S</span>, <span style="color:#1c01ce">1</span>, <span style="color:#1c01ce">0</span>), <span style="color:#000">f4</span>.<span style="color:#000">init</span>(<span style="color:#000">n</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">S</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>, <span style="color:#1c01ce">1</span>, <span style="color:#000">-</span><span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">ll</span> <span style="color:#000">res</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">f3</span>.<span style="color:#000">movek</span>(<span style="color:#000">sum</span>[<span style="color:#000">i</span>]), <span style="color:#000">f4</span>.<span style="color:#000">movek</span>(<span style="color:#000">sum</span>[<span style="color:#000">i</span>] <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#000">f1</span>.<span style="color:#000">movei</span>(<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>), <span style="color:#000">f2</span>.<span style="color:#000">movei</span>(<span style="color:#000">i</span>), <span style="color:#000">f3</span>.<span style="color:#000">movei</span>(<span style="color:#000">i</span>), <span style="color:#000">f4</span>.<span style="color:#000">movei</span>(<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>            <span style="color:#000">res</span> <span style="color:#000">+=</span> <span style="color:#000">i</span> <span style="color:#000">*</span> <span style="color:#000">f1</span>.<span style="color:#000">res</span> <span style="color:#000">%</span> <span style="color:#000">mod</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">res</span> <span style="color:#000">-=</span> <span style="color:#000">sum</span>[<span style="color:#000">i</span>] <span style="color:#000">*</span> <span style="color:#000">f2</span>.<span style="color:#000">res</span> <span style="color:#000">%</span> <span style="color:#000">mod</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">res</span> <span style="color:#000">+=</span> <span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">sum</span>[<span style="color:#000">i</span>] <span style="color:#000">*</span> <span style="color:#000">f3</span>.<span style="color:#000">res</span> <span style="color:#000">%</span> <span style="color:#000">mod</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">res</span> <span style="color:#000">-=</span> <span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">i</span> <span style="color:#000">*</span> <span style="color:#000">f4</span>.<span style="color:#000">res</span> <span style="color:#000">%</span> <span style="color:#000">mod</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">res</span> <span style="color:#000">%=</span> <span style="color:#000">mod</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">ans</span> <span style="color:#000">+=</span> <span style="color:#000">w</span>[<span style="color:#000">i</span>] <span style="color:#000">*</span> <span style="color:#000">res</span> <span style="color:#000">%</span> <span style="color:#000">mod</span>, <span style="color:#000">ans</span> <span style="color:#000">%=</span> <span style="color:#000">mod</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> (<span style="color:#000">ans</span> <span style="color:#000">+</span> <span style="color:#000">mod</span>) <span style="color:#000">%</span> <span style="color:#000">mod</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">T</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">T</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">solve</span><span style="color:#000">::</span><span style="color:#000">init</span>();
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> (<span style="color:#000">T</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">solve</span><span style="color:#000">::</span><span style="color:#000">main</span>();
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="t4-string">T4 string</h2>
<h3 id="description-3">Description</h3>
<p>给定一个英文小写字母构成的字符串 $S$，你需要找到一个尽可能长的字符串序列 $(T_0, T_1, \ldots, T_l)$，满足：</p>
<ul>
<li>$T_0$ 是 $S$ 的子串；</li>
<li>$\forall 1 \le i \le l$，$\lvert T_i \rvert - \lvert T_{i - 1} \rvert = 1$；</li>
<li>$\forall 1 \le i \le l$，存在 $S$ 的一个长度为 $\lvert T_i \rvert + 1$ 的子串 $S_i&rsquo;$，使得 $S_i&rsquo;$ 的长度为 $\lvert T_{i - 1} \rvert$ 的前缀为 $T_{i - 1}$，长度为 $\lvert T_i \rvert$ 的后缀为 $T_i$。</li>
</ul>
<p>输出这样的字符串序列的长度的最大值（即 $l$ 的最大值）。</p>
<h3 id="solution-3">Solution</h3>
<p>一个思路很清奇的题目，乍一看以为和19年省选的那个字符串问题差不多，其实完全没关系。</p>
<p>观察一下这个字符串序列，逆向去想一下，可以这么构造：$[i,j]\rightarrow[i-1,j-2]\rightarrow[i-2,j-4]&hellip;$ 一直这样下去直到长度为 $0$ 或者到头了。那么答案就有一个显然的下界 $\lfloor n/2\rfloor$。</p>
<p>然后上面这个构造的瓶颈在于走到头就没得走了，我们需要考虑什么时候可以往后跳回去。</p>
<p>然后就是比较重要的性质了：一个串可以往回跳的充要条件是出现了至少两次。</p>
<p>假设出现位置是 $[i_1,j_1],<a href="i_1%3Ci_2">i_2,j_2</a>$，那么我们从 $[i_2,j_2]$ 开始，按照上述的构造方法构造，当左端点到 $i_1$ 时，我们跳回到 $i_2$ 即可。</p>
<p>反过来的话就是如果只出现一次，那么这个串对应的 $S_i&rsquo;$ 是唯一的，别的跳不回来。</p>
<p>这样就很简单了，如果可以往回跳那么我们从 $[i_2,j_2]$ 开始一路跳就可以跳到长度为 $0$。</p>
<p>对于一个出现至少两次的串 $[l,r]$，若选择它作为跳的开始，答案为 $r-l+1+\lfloor(n-r)/2\rfloor$。</p>
<p>我们求出以每个下标为右端点的最长的出现至少两次的串，取个 max。</p>
<p>这个事情用 SAM 搞一搞就可以做，就对于每个节点记录最靠左的位置和 siz 就好了。</p>
<h3 id="code-3">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#a90d91">namespace</span> <span style="color:#000">std</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">namespace</span> <span style="color:#000">solve</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2e6</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">struct</span> <span style="color:#3f6e75">SAM</span>
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">mx</span>[<span style="color:#000">maxn</span>], <span style="color:#000">siz</span>[<span style="color:#000">maxn</span>], <span style="color:#000">ch</span>[<span style="color:#000">maxn</span>][<span style="color:#1c01ce">26</span>], <span style="color:#000">father</span>[<span style="color:#000">maxn</span>], <span style="color:#000">pos</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">lst</span>, <span style="color:#000">tot</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">ans</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">void</span> <span style="color:#000">insert</span>(<span style="color:#a90d91">int</span> <span style="color:#000">c</span>, <span style="color:#a90d91">int</span> <span style="color:#000">id</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">int</span> <span style="color:#000">p</span> <span style="color:#000">=</span> <span style="color:#000">++</span><span style="color:#000">tot</span>, <span style="color:#000">f</span> <span style="color:#000">=</span> <span style="color:#000">lst</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">siz</span>[<span style="color:#000">p</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">mx</span>[<span style="color:#000">p</span>] <span style="color:#000">=</span> <span style="color:#000">mx</span>[<span style="color:#000">f</span>] <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">lst</span> <span style="color:#000">=</span> <span style="color:#000">p</span>, <span style="color:#000">pos</span>[<span style="color:#000">p</span>] <span style="color:#000">=</span> <span style="color:#000">id</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">while</span> (<span style="color:#000">f</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">!</span><span style="color:#000">ch</span>[<span style="color:#000">f</span>][<span style="color:#000">c</span>])
</span></span><span style="display:flex;"><span>                <span style="color:#000">ch</span>[<span style="color:#000">f</span>][<span style="color:#000">c</span>] <span style="color:#000">=</span> <span style="color:#000">p</span>, <span style="color:#000">f</span> <span style="color:#000">=</span> <span style="color:#000">father</span>[<span style="color:#000">f</span>];
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">!</span><span style="color:#000">f</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">father</span>[<span style="color:#000">p</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>            {
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">int</span> <span style="color:#000">q</span> <span style="color:#000">=</span> <span style="color:#000">ch</span>[<span style="color:#000">f</span>][<span style="color:#000">c</span>];
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">if</span> (<span style="color:#000">mx</span>[<span style="color:#000">q</span>] <span style="color:#000">==</span> <span style="color:#000">mx</span>[<span style="color:#000">f</span>] <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>                    <span style="color:#000">father</span>[<span style="color:#000">p</span>] <span style="color:#000">=</span> <span style="color:#000">q</span>;
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>                {
</span></span><span style="display:flex;"><span>                    <span style="color:#a90d91">int</span> <span style="color:#000">nq</span> <span style="color:#000">=</span> <span style="color:#000">++</span><span style="color:#000">tot</span>;
</span></span><span style="display:flex;"><span>                    <span style="color:#000">memcpy</span>(<span style="color:#000">ch</span>[<span style="color:#000">nq</span>], <span style="color:#000">ch</span>[<span style="color:#000">q</span>], <span style="color:#a90d91">sizeof</span>(<span style="color:#000">ch</span>[<span style="color:#000">q</span>])), <span style="color:#000">father</span>[<span style="color:#000">nq</span>] <span style="color:#000">=</span> <span style="color:#000">father</span>[<span style="color:#000">q</span>], <span style="color:#000">mx</span>[<span style="color:#000">nq</span>] <span style="color:#000">=</span> <span style="color:#000">mx</span>[<span style="color:#000">f</span>] <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>                    <span style="color:#000">pos</span>[<span style="color:#000">nq</span>] <span style="color:#000">=</span> <span style="color:#000">n</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>                    <span style="color:#000">father</span>[<span style="color:#000">p</span>] <span style="color:#000">=</span> <span style="color:#000">father</span>[<span style="color:#000">q</span>] <span style="color:#000">=</span> <span style="color:#000">nq</span>;
</span></span><span style="display:flex;"><span>                    <span style="color:#a90d91">while</span> (<span style="color:#000">f</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">ch</span>[<span style="color:#000">f</span>][<span style="color:#000">c</span>] <span style="color:#000">==</span> <span style="color:#000">q</span>)
</span></span><span style="display:flex;"><span>                        <span style="color:#000">ch</span>[<span style="color:#000">f</span>][<span style="color:#000">c</span>] <span style="color:#000">=</span> <span style="color:#000">nq</span>, <span style="color:#000">f</span> <span style="color:#000">=</span> <span style="color:#000">father</span>[<span style="color:#000">f</span>];
</span></span><span style="display:flex;"><span>                }
</span></span><span style="display:flex;"><span>            }    
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#000">vector</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">e</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">void</span> <span style="color:#000">build</span>()
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">tot</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">e</span>[<span style="color:#000">father</span>[<span style="color:#000">i</span>]].<span style="color:#000">push_back</span>(<span style="color:#000">i</span>);
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">void</span> <span style="color:#000">dfs</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">v</span> : <span style="color:#000">e</span>[<span style="color:#000">x</span>])
</span></span><span style="display:flex;"><span>            {
</span></span><span style="display:flex;"><span>                <span style="color:#000">dfs</span>(<span style="color:#000">v</span>);
</span></span><span style="display:flex;"><span>                <span style="color:#000">siz</span>[<span style="color:#000">x</span>] <span style="color:#000">+=</span> <span style="color:#000">siz</span>[<span style="color:#000">v</span>], <span style="color:#000">pos</span>[<span style="color:#000">x</span>] <span style="color:#000">=</span> <span style="color:#000">min</span>(<span style="color:#000">pos</span>[<span style="color:#000">x</span>], <span style="color:#000">pos</span>[<span style="color:#000">v</span>]);
</span></span><span style="display:flex;"><span>            }
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">siz</span>[<span style="color:#000">x</span>] <span style="color:#000">&gt;</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#000">max</span>(<span style="color:#000">ans</span>, (<span style="color:#000">n</span> <span style="color:#000">-</span> <span style="color:#000">pos</span>[<span style="color:#000">x</span>]) <span style="color:#000">/</span> <span style="color:#1c01ce">2</span> <span style="color:#000">+</span> <span style="color:#000">mx</span>[<span style="color:#000">x</span>]);
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">void</span> <span style="color:#000">clear</span>()
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">tot</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">e</span>[<span style="color:#000">i</span>].<span style="color:#000">clear</span>(), <span style="color:#000">memset</span>(<span style="color:#000">ch</span>[<span style="color:#000">i</span>], <span style="color:#1c01ce">0</span>, <span style="color:#a90d91">sizeof</span>(<span style="color:#000">ch</span>[<span style="color:#000">i</span>]));
</span></span><span style="display:flex;"><span>            <span style="color:#000">memset</span>(<span style="color:#000">father</span>, <span style="color:#1c01ce">0</span>, <span style="color:#a90d91">sizeof</span>(<span style="color:#a90d91">int</span>) <span style="color:#000">*</span> (<span style="color:#000">tot</span> <span style="color:#000">+</span> <span style="color:#1c01ce">4</span>));
</span></span><span style="display:flex;"><span>            <span style="color:#000">memset</span>(<span style="color:#000">mx</span>, <span style="color:#1c01ce">0</span>, <span style="color:#a90d91">sizeof</span>(<span style="color:#a90d91">int</span>) <span style="color:#000">*</span> (<span style="color:#000">tot</span> <span style="color:#000">+</span> <span style="color:#1c01ce">4</span>));
</span></span><span style="display:flex;"><span>            <span style="color:#000">memset</span>(<span style="color:#000">siz</span>, <span style="color:#1c01ce">0</span>, <span style="color:#a90d91">sizeof</span>(<span style="color:#a90d91">int</span>) <span style="color:#000">*</span> (<span style="color:#000">tot</span> <span style="color:#000">+</span> <span style="color:#1c01ce">4</span>));
</span></span><span style="display:flex;"><span>            <span style="color:#000">memset</span>(<span style="color:#000">pos</span>, <span style="color:#1c01ce">0</span>, <span style="color:#a90d91">sizeof</span>(<span style="color:#a90d91">int</span>) <span style="color:#000">*</span> (<span style="color:#000">tot</span> <span style="color:#000">+</span> <span style="color:#1c01ce">4</span>));
</span></span><span style="display:flex;"><span>            <span style="color:#000">lst</span> <span style="color:#000">=</span> <span style="color:#000">tot</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#000">SAM</span>() { <span style="color:#000">lst</span> <span style="color:#000">=</span> <span style="color:#000">tot</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; }
</span></span><span style="display:flex;"><span>    } <span style="color:#000">sam</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">char</span> <span style="color:#000">s</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">void</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">s</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">n</span> <span style="color:#000">=</span> <span style="color:#000">strlen</span>(<span style="color:#000">s</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">sam</span>.<span style="color:#000">insert</span>(<span style="color:#000">s</span>[<span style="color:#000">i</span>] <span style="color:#000">-</span> <span style="color:#2300ce">&#39;a&#39;</span>, <span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">sam</span>.<span style="color:#000">build</span>(), <span style="color:#000">sam</span>.<span style="color:#000">dfs</span>(<span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">max</span>(<span style="color:#000">sam</span>.<span style="color:#000">ans</span>, <span style="color:#000">n</span> <span style="color:#000">/</span> <span style="color:#1c01ce">2</span>) <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">sam</span>.<span style="color:#000">clear</span>();
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">ios</span><span style="color:#000">::</span><span style="color:#000">sync_with_stdio</span>(<span style="color:#a90d91">false</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">T</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">T</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> (<span style="color:#000">T</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">solve</span><span style="color:#000">::</span><span style="color:#000">main</span>();
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div>]]></content:encoded>
    </item>
    
    <item>
      <title>数位统计问题练习记录</title>
      <link>https://luoyisu.github.io/posts/number-dp/</link>
      <pubDate>Wed, 11 May 2022 22:24:35 +0000</pubDate>
      
      <guid>https://luoyisu.github.io/posts/number-dp/</guid>
      <description>&lt;p&gt;不给出题目链接了，网上可以找到（推荐vjudge）。&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>不给出题目链接了，网上可以找到（推荐vjudge）。</p>
<h2 id="bzoj4292-rownanie">BZOJ4292 Rownanie</h2>
<h3 id="description">Description</h3>
<p>对于一个正整数 $n$，定义 $f(n)$ 为它十进制下每一位数字的平方的和。
现在给定三个正整数 $k$, $a$, b，请求出满足 $a\leq n\leq b$ 且 $k\times f(n) = n$ 的 $n$ 的个数。</p>
<h3 id="solution">Solution</h3>
<p>$k$ 是给定的，那么对于一个 $f(n)$，只至多一个 $n$ 是合法的。我们直接枚举 $f(n)$ 即可。</p>
<h3 id="code">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#a90d91">namespace</span> <span style="color:#000">solve</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">void</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">k</span>, <span style="color:#000">a</span>, <span style="color:#000">b</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">k</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">a</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">b</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#1c01ce">1500</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">__int128_t</span> <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">__int128_t</span>(<span style="color:#000">k</span>) <span style="color:#000">*</span> <span style="color:#000">i</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">x</span> <span style="color:#000">&gt;=</span> <span style="color:#000">a</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">x</span> <span style="color:#000">&lt;=</span> <span style="color:#000">b</span>)
</span></span><span style="display:flex;"><span>            {
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">while</span> (<span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>                    <span style="color:#000">j</span> <span style="color:#000">+=</span> (<span style="color:#000">x</span> <span style="color:#000">%</span> <span style="color:#1c01ce">10</span>) <span style="color:#000">*</span> (<span style="color:#000">x</span> <span style="color:#000">%</span> <span style="color:#1c01ce">10</span>), <span style="color:#000">x</span> <span style="color:#000">/=</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">if</span> (<span style="color:#000">j</span> <span style="color:#000">==</span> <span style="color:#000">i</span>)
</span></span><span style="display:flex;"><span>                    <span style="color:#000">ans</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>            }
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">ans</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div>]]></content:encoded>
    </item>
    
    <item>
      <title>统一省选2021 A卷 题解</title>
      <link>https://luoyisu.github.io/posts/shengxuan-2021/</link>
      <pubDate>Sat, 19 Mar 2022 19:00:20 +0000</pubDate>
      
      <guid>https://luoyisu.github.io/posts/shengxuan-2021/</guid>
      <description>&lt;p&gt;目前只有 Day1 的题目。&lt;/p&gt;
&lt;p&gt;感觉 Day1 的三道题很 CF。&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>目前只有 Day1 的题目。</p>
<p>感觉 Day1 的三道题很 CF。</p>
<h2 id="卡牌游戏httpsuojacproblem624"><a href="https://uoj.ac/problem/624">卡牌游戏</a></h2>
<h3 id="description">Description</h3>
<p>有 $n$ 张卡牌，第 $i$ 张卡牌的正面有数字 $a_i$，背面有数字 $b_i$，初始时所有卡牌正面朝上。</p>
<p>现在 Alice 可以将不超过 $m$ 张卡牌翻面，即由正面朝上改为背面朝上。Alice 的目标是让最终朝上的 $n$ 个数字的极差（最大值与最小值的差）尽量小。请你帮 Alice 算一算极差的最小值是多少。</p>
<p>$n,m\leq10^6,a_i,b_i\leq10^9$。</p>
<h3 id="solution">Solution</h3>
<p>首先我们要确定：常数小的 $O(n\log a_i)$ 是可以过的。</p>
<p>然后二分一个答案，考虑怎么 check，我们显然需要保留一段连续的区间不翻面（换句话说，一定只翻前后缀）。</p>
<p>考虑已经有左端点了，我们双指针确定右端点，这是 $O(n)$ 的，接下来不在这段区间内的卡牌显然全部需要翻面，那就变成了一个 RMQ 问题，用 ST 表解决就好了。</p>
<p>时间复杂度 $O(n\log n+n\log a_i)$。</p>
<h3 id="code">Code</h3>
<p>注意细节，然后建议去 uoj 看看 hack 数据的威力。</p>
<p>被卡常可以考虑把 ST 表小的一维放前面。</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cctype&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#a90d91">namespace</span> <span style="color:#000">std</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">read</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">char</span> <span style="color:#000">ch</span> <span style="color:#000">=</span> <span style="color:#000">getchar</span>();
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (; <span style="color:#000">!</span><span style="color:#000">isdigit</span>(<span style="color:#000">ch</span>); <span style="color:#000">ch</span> <span style="color:#000">=</span> <span style="color:#000">getchar</span>())
</span></span><span style="display:flex;"><span>        ;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (; <span style="color:#000">isdigit</span>(<span style="color:#000">ch</span>); <span style="color:#000">ch</span> <span style="color:#000">=</span> <span style="color:#000">getchar</span>())
</span></span><span style="display:flex;"><span>        <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">x</span> <span style="color:#000">*</span> <span style="color:#1c01ce">10</span> <span style="color:#000">+</span> <span style="color:#000">ch</span> <span style="color:#000">-</span> <span style="color:#2300ce">&#39;0&#39;</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2e6</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">inf</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2e9</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">mx</span>[<span style="color:#1c01ce">22</span>][<span style="color:#000">maxn</span>], <span style="color:#000">mi</span>[<span style="color:#1c01ce">22</span>][<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">n</span>, <span style="color:#000">a</span>[<span style="color:#000">maxn</span>], <span style="color:#000">b</span>[<span style="color:#000">maxn</span>], <span style="color:#000">m</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">lg</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">build</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">memset</span>(<span style="color:#000">mi</span>, <span style="color:#1c01ce">0x7f</span>, <span style="color:#a90d91">sizeof</span>(<span style="color:#000">mi</span>));
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">mx</span>[<span style="color:#1c01ce">0</span>][<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">mi</span>[<span style="color:#1c01ce">0</span>][<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">b</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#000">lg</span>[<span style="color:#1c01ce">0</span>] <span style="color:#000">=</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">lg</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">lg</span>[<span style="color:#000">i</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;=</span> <span style="color:#1c01ce">21</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">+</span> (<span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">j</span>) <span style="color:#000">-</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">mx</span>[<span style="color:#000">j</span>][<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">max</span>(<span style="color:#000">mx</span>[<span style="color:#000">j</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>][<span style="color:#000">i</span>], <span style="color:#000">mx</span>[<span style="color:#000">j</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>][<span style="color:#000">i</span> <span style="color:#000">+</span> (<span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> (<span style="color:#000">j</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>))]);
</span></span><span style="display:flex;"><span>            <span style="color:#000">mi</span>[<span style="color:#000">j</span>][<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">min</span>(<span style="color:#000">mi</span>[<span style="color:#000">j</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>][<span style="color:#000">i</span>], <span style="color:#000">mi</span>[<span style="color:#000">j</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>][<span style="color:#000">i</span> <span style="color:#000">+</span> (<span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> (<span style="color:#000">j</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>))]);
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#177500">//for (int i = 0; i &lt; 4; i++, cout &lt;&lt; endl)
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>    <span style="color:#177500">//    for (int j = 1; j &lt;= n; j++)
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>    <span style="color:#177500">//        cout &lt;&lt; mi[j][i] &lt;&lt; &#34; &#34;;
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">query_mx</span>(<span style="color:#a90d91">int</span> <span style="color:#000">l</span>, <span style="color:#a90d91">int</span> <span style="color:#000">r</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">l</span> <span style="color:#000">&gt;</span> <span style="color:#000">r</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#000">-</span><span style="color:#000">inf</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">d</span> <span style="color:#000">=</span> <span style="color:#000">r</span> <span style="color:#000">-</span> <span style="color:#000">l</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">g</span> <span style="color:#000">=</span> <span style="color:#000">lg</span>[<span style="color:#000">d</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#000">max</span>(<span style="color:#000">mx</span>[<span style="color:#000">g</span>][<span style="color:#000">l</span>], <span style="color:#000">mx</span>[<span style="color:#000">g</span>][<span style="color:#000">r</span> <span style="color:#000">-</span> (<span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">g</span>) <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>]);
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">query_mi</span>(<span style="color:#a90d91">int</span> <span style="color:#000">l</span>, <span style="color:#a90d91">int</span> <span style="color:#000">r</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">l</span> <span style="color:#000">&gt;</span> <span style="color:#000">r</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#000">inf</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">d</span> <span style="color:#000">=</span> <span style="color:#000">r</span> <span style="color:#000">-</span> <span style="color:#000">l</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">g</span> <span style="color:#000">=</span> <span style="color:#000">lg</span>[<span style="color:#000">d</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#000">min</span>(<span style="color:#000">mi</span>[<span style="color:#000">g</span>][<span style="color:#000">l</span>], <span style="color:#000">mi</span>[<span style="color:#000">g</span>][<span style="color:#000">r</span> <span style="color:#000">-</span> (<span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">g</span>) <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>]);
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">bool</span> <span style="color:#000">check</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">l</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">r</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> (<span style="color:#000">l</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">while</span> (<span style="color:#000">r</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">a</span>[<span style="color:#000">r</span>] <span style="color:#000">-</span> <span style="color:#000">a</span>[<span style="color:#000">l</span>] <span style="color:#000">&lt;=</span> <span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#177500">// cout &lt;&lt; l &lt;&lt; &#34; &#34; &lt;&lt; r &lt;&lt; &#34; &#34; &lt;&lt; x &lt;&lt; endl;
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>            <span style="color:#a90d91">if</span> (<span style="color:#000">l</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span> <span style="color:#000">+</span> <span style="color:#000">n</span> <span style="color:#000">-</span> <span style="color:#000">r</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">if</span> (<span style="color:#000">max</span>({<span style="color:#000">a</span>[<span style="color:#000">r</span>], <span style="color:#000">query_mx</span>(<span style="color:#1c01ce">1</span>, <span style="color:#000">l</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>), <span style="color:#000">query_mx</span>(<span style="color:#000">r</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">n</span>)}) <span style="color:#000">-</span> <span style="color:#000">min</span>({<span style="color:#000">a</span>[<span style="color:#000">l</span>], <span style="color:#000">query_mi</span>(<span style="color:#1c01ce">1</span>, <span style="color:#000">l</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>), <span style="color:#000">query_mi</span>(<span style="color:#000">r</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">n</span>)}) <span style="color:#000">&lt;=</span> <span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>                    <span style="color:#a90d91">return</span> <span style="color:#a90d91">true</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">r</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">r</span> <span style="color:#000">&gt;</span> <span style="color:#000">l</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">r</span><span style="color:#000">--</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">l</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#a90d91">false</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">n</span> <span style="color:#000">=</span> <span style="color:#000">read</span>(), <span style="color:#000">m</span> <span style="color:#000">=</span> <span style="color:#000">read</span>();
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">a</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">read</span>();
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">b</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">read</span>();
</span></span><span style="display:flex;"><span>    <span style="color:#000">build</span>();
</span></span><span style="display:flex;"><span>    <span style="color:#177500">//cout &lt;&lt; query_mi(1, n) &lt;&lt; endl &lt;&lt; query_mx(1, n) &lt;&lt; endl;
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>    <span style="color:#a90d91">int</span> <span style="color:#000">l</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>, <span style="color:#000">r</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1e9</span>, <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> (<span style="color:#000">l</span> <span style="color:#000">&lt;=</span> <span style="color:#000">r</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">mid</span> <span style="color:#000">=</span> (<span style="color:#000">l</span> <span style="color:#000">+</span> <span style="color:#000">r</span>) <span style="color:#000">/</span> <span style="color:#1c01ce">2</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">check</span>(<span style="color:#000">mid</span>))
</span></span><span style="display:flex;"><span>            <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#000">mid</span>, <span style="color:#000">r</span> <span style="color:#000">=</span> <span style="color:#000">mid</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>            <span style="color:#000">l</span> <span style="color:#000">=</span> <span style="color:#000">mid</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">ans</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="矩阵游戏httpsuojacproblem625"><a href="https://uoj.ac/problem/625">矩阵游戏</a></h2>
<h3 id="description-1">Description</h3>
<p>有一个 $(n-1)\times(m-1)$ 的矩阵 $b_{i,j}$，其是由 $n\times m$ 的矩阵 $a_{i,j}$ 生成得来的，生成方法为 $b_{i,j}=a_{i,j}+a_{i+1,j}+a_{i,j+1}+a_{i+1,j+1}$。</p>
<p>现在给出矩阵 $b$，你需要构造出矩阵 $a$，且满足 $0\leq a_{i,j}\leq10^6$，或判断无解。</p>
<p>$T$ 组数据。</p>
<p>$T\leq10,2\leq n,m\leq300,0\leq b_{i,j}\leq4\times10^6$。</p>
<h3 id="solution-1">Solution</h3>
<p>这个构造题就很妙，首先考虑没有值域限制，那可以随便搞出来一组解。</p>
<p>然后试图调整这组解，我们发现对每一行/列分别加上 $a,-a,a,-a&hellip;$ 仍然能满足题目的限制，然后控制一下行和列的符号，让他们恰好相反，得到以下不等式：$0\leq a_{i,j}\pm x_i\mp y_j\leq10^6$，这样就可以差分约束了！</p>
<p>具体点：</p>
<pre tabindex="0"><code>列：
-+-+-+
+-+-+-
-+-+-+
+-+-+-
-+-+-+
+-+-+-

行：
+-+-+-
-+-+-+
+-+-+-
-+-+-+
+-+-+-
-+-+-+
</code></pre><p>时间复杂度 $O(nm(n+m))$。</p>
<h3 id="code-1">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#a90d91">typedef</span> <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">ll</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">typedef</span> <span style="color:#a90d91">unsigned</span> <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">ull</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">int</span> <span style="color:#000">read</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">char</span> <span style="color:#000">ch</span> <span style="color:#000">=</span> <span style="color:#000">getchar</span>();
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (; <span style="color:#000">!</span><span style="color:#000">isdigit</span>(<span style="color:#000">ch</span>); <span style="color:#000">ch</span> <span style="color:#000">=</span> <span style="color:#000">getchar</span>())
</span></span><span style="display:flex;"><span>        ;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (; <span style="color:#000">isdigit</span>(<span style="color:#000">ch</span>); <span style="color:#000">ch</span> <span style="color:#000">=</span> <span style="color:#000">getchar</span>())
</span></span><span style="display:flex;"><span>        <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">x</span> <span style="color:#000">*</span> <span style="color:#1c01ce">10</span> <span style="color:#000">+</span> <span style="color:#000">ch</span> <span style="color:#000">-</span> <span style="color:#2300ce">&#39;0&#39;</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">bool</span> <span style="color:#000">MEM1</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">namespace</span> <span style="color:#000">solve</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">310</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">n</span>, <span style="color:#000">m</span>, <span style="color:#000">b</span>[<span style="color:#000">maxn</span>][<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#000">ll</span> <span style="color:#000">a</span>[<span style="color:#000">maxn</span>][<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">struct</span> <span style="color:#3f6e75">edge</span>
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">y</span>, <span style="color:#000">w</span>;
</span></span><span style="display:flex;"><span>    };
</span></span><span style="display:flex;"><span>    <span style="color:#000">vector</span><span style="color:#000">&lt;</span><span style="color:#000">edge</span><span style="color:#000">&gt;</span> <span style="color:#000">e</span>[<span style="color:#000">maxn</span> <span style="color:#000">*</span> <span style="color:#000">maxn</span> <span style="color:#000">*</span> <span style="color:#1c01ce">2</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">add</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>, <span style="color:#a90d91">int</span> <span style="color:#000">w</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">e</span>[<span style="color:#000">x</span>].<span style="color:#000">push_back</span>({<span style="color:#000">y</span>, <span style="color:#000">w</span>});
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">void</span> <span style="color:#000">clear</span>()
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">memset</span>(<span style="color:#000">a</span>, <span style="color:#1c01ce">0</span>, <span style="color:#a90d91">sizeof</span>(<span style="color:#000">a</span>)), <span style="color:#000">memset</span>(<span style="color:#000">b</span>, <span style="color:#1c01ce">0</span>, <span style="color:#a90d91">sizeof</span>(<span style="color:#000">b</span>));
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span> <span style="color:#000">+</span> <span style="color:#000">m</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">e</span>[<span style="color:#000">i</span>].<span style="color:#000">clear</span>();
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">int</span> <span style="color:#000">X</span>(<span style="color:#a90d91">int</span> <span style="color:#000">i</span>) { <span style="color:#a90d91">return</span> <span style="color:#000">i</span>; }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">int</span> <span style="color:#000">Y</span>(<span style="color:#a90d91">int</span> <span style="color:#000">i</span>) { <span style="color:#a90d91">return</span> <span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#000">n</span>; }
</span></span><span style="display:flex;"><span>    <span style="color:#000">ll</span> <span style="color:#000">dis</span>[<span style="color:#000">maxn</span> <span style="color:#000">*</span> <span style="color:#000">maxn</span> <span style="color:#000">*</span> <span style="color:#1c01ce">2</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">vis</span>[<span style="color:#000">maxn</span> <span style="color:#000">*</span> <span style="color:#000">maxn</span> <span style="color:#000">*</span> <span style="color:#1c01ce">2</span>], <span style="color:#000">cnt</span>[<span style="color:#000">maxn</span> <span style="color:#000">*</span> <span style="color:#000">maxn</span> <span style="color:#000">*</span> <span style="color:#1c01ce">2</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">bool</span> <span style="color:#000">spfa</span>()
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">memset</span>(<span style="color:#000">dis</span>, <span style="color:#1c01ce">0x3f</span>, <span style="color:#a90d91">sizeof</span>(<span style="color:#000">dis</span>)), <span style="color:#000">memset</span>(<span style="color:#000">vis</span>, <span style="color:#1c01ce">0</span>, <span style="color:#a90d91">sizeof</span>(<span style="color:#000">vis</span>)), <span style="color:#000">memset</span>(<span style="color:#000">cnt</span>, <span style="color:#1c01ce">0</span>, <span style="color:#a90d91">sizeof</span>(<span style="color:#000">cnt</span>));
</span></span><span style="display:flex;"><span>        <span style="color:#000">queue</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">q</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">q</span>.<span style="color:#000">push</span>(<span style="color:#000">n</span> <span style="color:#000">+</span> <span style="color:#000">m</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>), <span style="color:#000">vis</span>[<span style="color:#000">n</span> <span style="color:#000">+</span> <span style="color:#000">m</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">dis</span>[<span style="color:#000">n</span> <span style="color:#000">+</span> <span style="color:#000">m</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">while</span> (<span style="color:#000">!</span><span style="color:#000">q</span>.<span style="color:#000">empty</span>())
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">int</span> <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">q</span>.<span style="color:#000">front</span>();
</span></span><span style="display:flex;"><span>            <span style="color:#000">q</span>.<span style="color:#000">pop</span>();
</span></span><span style="display:flex;"><span>            <span style="color:#000">vis</span>[<span style="color:#000">x</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">auto</span> <span style="color:#000">k</span> : <span style="color:#000">e</span>[<span style="color:#000">x</span>])
</span></span><span style="display:flex;"><span>            {
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">int</span> <span style="color:#000">y</span> <span style="color:#000">=</span> <span style="color:#000">k</span>.<span style="color:#000">y</span>, <span style="color:#000">w</span> <span style="color:#000">=</span> <span style="color:#000">k</span>.<span style="color:#000">w</span>;
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">if</span> (<span style="color:#000">dis</span>[<span style="color:#000">x</span>] <span style="color:#000">+</span> <span style="color:#000">w</span> <span style="color:#000">&lt;</span> <span style="color:#000">dis</span>[<span style="color:#000">y</span>])
</span></span><span style="display:flex;"><span>                {
</span></span><span style="display:flex;"><span>                    <span style="color:#000">dis</span>[<span style="color:#000">y</span>] <span style="color:#000">=</span> <span style="color:#000">dis</span>[<span style="color:#000">x</span>] <span style="color:#000">+</span> <span style="color:#000">w</span>, <span style="color:#000">cnt</span>[<span style="color:#000">y</span>]<span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>                    <span style="color:#a90d91">if</span> (<span style="color:#000">cnt</span>[<span style="color:#000">y</span>] <span style="color:#000">&gt;</span> <span style="color:#000">n</span> <span style="color:#000">+</span> <span style="color:#000">m</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>                        <span style="color:#a90d91">return</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>                    <span style="color:#a90d91">if</span> (<span style="color:#000">!</span><span style="color:#000">vis</span>[<span style="color:#000">y</span>])
</span></span><span style="display:flex;"><span>                        <span style="color:#000">vis</span>[<span style="color:#000">y</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">q</span>.<span style="color:#000">push</span>(<span style="color:#000">y</span>);
</span></span><span style="display:flex;"><span>                }
</span></span><span style="display:flex;"><span>            }
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">void</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">n</span> <span style="color:#000">=</span> <span style="color:#000">read</span>(), <span style="color:#000">m</span> <span style="color:#000">=</span> <span style="color:#000">read</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;</span> <span style="color:#000">m</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">b</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>] <span style="color:#000">=</span> <span style="color:#000">read</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#000">n</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&gt;=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#000">m</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">j</span> <span style="color:#000">&gt;=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">j</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">a</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>] <span style="color:#000">=</span> <span style="color:#000">b</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>] <span style="color:#000">-</span> <span style="color:#000">a</span>[<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>][<span style="color:#000">j</span>] <span style="color:#000">-</span> <span style="color:#000">a</span>[<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>][<span style="color:#000">j</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">-</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>];
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            {
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">if</span> ((<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#000">j</span>) <span style="color:#000">%</span> <span style="color:#1c01ce">2</span> <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>                    <span style="color:#000">add</span>(<span style="color:#000">Y</span>(<span style="color:#000">j</span>), <span style="color:#000">X</span>(<span style="color:#000">i</span>), <span style="color:#1c01ce">1e6</span> <span style="color:#000">-</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>]), <span style="color:#000">add</span>(<span style="color:#000">X</span>(<span style="color:#000">i</span>), <span style="color:#000">Y</span>(<span style="color:#000">j</span>), <span style="color:#000">a</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>]);
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>                    <span style="color:#000">add</span>(<span style="color:#000">X</span>(<span style="color:#000">i</span>), <span style="color:#000">Y</span>(<span style="color:#000">j</span>), <span style="color:#1c01ce">1e6</span> <span style="color:#000">-</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>]), <span style="color:#000">add</span>(<span style="color:#000">Y</span>(<span style="color:#000">j</span>), <span style="color:#000">X</span>(<span style="color:#000">i</span>), <span style="color:#000">a</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>]);
</span></span><span style="display:flex;"><span>            }
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">add</span>(<span style="color:#000">n</span> <span style="color:#000">+</span> <span style="color:#000">m</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">X</span>(<span style="color:#000">i</span>), <span style="color:#1c01ce">0</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">add</span>(<span style="color:#000">n</span> <span style="color:#000">+</span> <span style="color:#000">m</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">Y</span>(<span style="color:#000">i</span>), <span style="color:#1c01ce">0</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">spfa</span>())
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">puts</span>(<span style="color:#c41a16">&#34;NO&#34;</span>);
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">puts</span>(<span style="color:#c41a16">&#34;YES&#34;</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>, <span style="color:#000">puts</span>(<span style="color:#c41a16">&#34;&#34;</span>))
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                {
</span></span><span style="display:flex;"><span>                    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>] <span style="color:#000">+</span> ((<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#000">j</span>) <span style="color:#000">%</span> <span style="color:#1c01ce">2</span> <span style="color:#000">?</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span> <span style="color:#000">:</span> <span style="color:#1c01ce">1</span>) <span style="color:#000">*</span> (<span style="color:#000">dis</span>[<span style="color:#000">X</span>(<span style="color:#000">i</span>)] <span style="color:#000">-</span> <span style="color:#000">dis</span>[<span style="color:#000">Y</span>(<span style="color:#000">j</span>)]) <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span>;
</span></span><span style="display:flex;"><span>                }
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="图函数httpsuojacproblem626"><a href="https://uoj.ac/problem/626">图函数</a></h2>
<h3 id="description-2">Description</h3>
<p>对于一张 $n$ 个点 $m$ 条边的有向图 $G$ (顶点从 $1 \sim n$ 编号)，定义函数 $f(u, G)$ :</p>
<ol>
<li>初始化返回值 $cnt = 0$，图 $G′ = G$。</li>
<li>从 $1$ 至 $n$ 按顺序枚举顶点 $v$，如果当前的图 $G′$ 中，从 $u$ 到 $v$ 与从 $v$ 到 $u$ 的路径都存在，则将 $cnt + 1$，并在图 $G′$ 中删去顶点 $v$ 以及与它相关的边。</li>
<li>第 $2$ 步结束后，返回值 $cnt$ 即为函数值。</li>
</ol>
<p>现在给定一张有向图 G,请你求出 $h(G) = f(1, G) + f(2, G) + \dots + f(n, G)$ 的值。</p>
<p>更进一步地，记删除（按输入顺序给出的）第 $1 \sim i$ 条边后的图为 $G_i (1 \leq i \leq m)$，请你求出所有 $h(G_i)$ 的值。</p>
<p>$2 \leq n \leq 1000, 1 \leq m \leq 2 \times 10^5, 1 \leq x_i, y_i \leq n$。</p>
<h3 id="solution-2">Solution</h3>
<p>很神秘的一道题。</p>
<p>我们先看一下 $f(u,G)$，首先如果 $v&gt;u$ 肯定是没意义的，因为 $u$ 会被自己删除掉。</p>
<p>发现点对 $(u,v)$ （$u&gt;v$） 会对这个函数有贡献当且仅当存在一条不经过点标号大于 $v$ 的路径 $u\rightarrow v$ 和 $v\rightarrow u$。</p>
<p>用反证法证明，假设路径上存在一个点 $k&lt;v$，分两种情况：</p>
<ul>
<li>$k$ 已经被删掉，那么显然不成立。</li>
<li>$k$ 没被删掉，那么如果还能走回来，就会矛盾（画画图就知道了）。</li>
</ul>
<p>这样对于 $h(G)$，我们只需要求出 $(u,v)$（$u&gt;v$）的对数，其中 $(u,v)$ 满足上面条件。</p>
<p>然后我们考虑删边这个事情，套路地，转化为加边。</p>
<p>那么一个点对显然会对答案的前缀产生贡献，开始产生贡献的时间就是 $u$ 到 $v$ （以及 $v$ 到 $u$ ）所有路径上加入时间最晚的边的最大值，这里显然可以把边的删除时间当作一种“边权”。</p>
<p>我试图用单源最短路解决这个问题，但是无果。</p>
<p>回头看看满足条件的点对，即只考虑 $[v,n]$ 内点，求 $u,v$ 联通性以及互相联通的时间。</p>
<p>emmm，floyd？好像从大到小枚举 $k$ 就能满足要求。</p>
<p>时间复杂度 $O(n^3+m)$，注意常数优化即可通过本题。</p>
<p>可能没讲清楚，看下面代码吧。</p>
<h3 id="code-2">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#define min(x, y) ((x) &lt; (y) ? (x) : (y))
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#define max(x, y) ((x) &gt; (y) ? (x) : (y))
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#a90d91">namespace</span> <span style="color:#000">std</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">namespace</span> <span style="color:#000">solve</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1e3</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxm</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2e5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">inf</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1e6</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">f</span>[<span style="color:#000">maxn</span>][<span style="color:#000">maxn</span>], <span style="color:#000">n</span>, <span style="color:#000">m</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">ans</span>[<span style="color:#000">maxm</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">void</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">ios</span><span style="color:#000">::</span><span style="color:#000">sync_with_stdio</span>(<span style="color:#a90d91">false</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">m</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">x</span>, <span style="color:#000">y</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">x</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">y</span>, <span style="color:#000">f</span>[<span style="color:#000">x</span>][<span style="color:#000">y</span>] <span style="color:#000">=</span> <span style="color:#000">i</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">f</span>[<span style="color:#000">i</span>][<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">m</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">k</span> <span style="color:#000">=</span> <span style="color:#000">n</span>; <span style="color:#000">k</span> <span style="color:#000">&gt;=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">k</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;=</span> (<span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">k</span> <span style="color:#000">?</span> <span style="color:#000">n</span> : <span style="color:#000">k</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>); <span style="color:#000">j</span><span style="color:#000">++</span>) <span style="color:#177500">// i j 至少一个小于 k
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>                    <span style="color:#000">f</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>] <span style="color:#000">=</span> <span style="color:#000">max</span>(<span style="color:#000">f</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>], <span style="color:#000">min</span>(<span style="color:#000">f</span>[<span style="color:#000">i</span>][<span style="color:#000">k</span>], <span style="color:#000">f</span>[<span style="color:#000">k</span>][<span style="color:#000">j</span>]));
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;=</span> <span style="color:#000">i</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">ans</span>[<span style="color:#000">min</span>(<span style="color:#000">f</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>], <span style="color:#000">f</span>[<span style="color:#000">j</span>][<span style="color:#000">i</span>])]<span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#000">m</span>; <span style="color:#000">i</span> <span style="color:#000">&gt;=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">ans</span>[<span style="color:#000">i</span>] <span style="color:#000">+=</span> <span style="color:#000">ans</span>[<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>];
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">ans</span>[<span style="color:#000">i</span>] <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div>]]></content:encoded>
    </item>
    
    <item>
      <title>Codeforces Round 646 (Div. 2)</title>
      <link>https://luoyisu.github.io/posts/cf-contest1363/</link>
      <pubDate>Fri, 31 Dec 2021 09:46:26 +0000</pubDate>
      
      <guid>https://luoyisu.github.io/posts/cf-contest1363/</guid>
      <description>&lt;h2 id=&#34;概述&#34;&gt;概述&lt;/h2&gt;
&lt;p&gt;不是特别难，F 倒不简单。&lt;/p&gt;</description>
      <content:encoded><![CDATA[<h2 id="概述">概述</h2>
<p>不是特别难，F 倒不简单。</p>
<h2 id="ahttpscodeforcescontest1363problema"><a href="https://codeforc.es/contest/1363/problem/A">A</a></h2>
<h3 id="description">Description</h3>
<p>给出一个 $n$ 项的数列，要求选出 $x$ 个数（不要求连续），使这 $x$ 个数的和为奇数。判断这是否可能。</p>
<h3 id="solution">Solution</h3>
<p>这显然是 奇数+奇数=偶数 和 奇数+偶数=奇数 这两个结论的简单运用</p>
<p>首先先选一个奇数，如果还要选奇数个数那么必须选一个偶数。</p>
<p>然后尽可能选看最后够不够即可。</p>
<h3 id="code">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cctype&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1100</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">cnt1</span>, <span style="color:#000">cnt2</span>, <span style="color:#000">n</span>, <span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">T</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">T</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> (<span style="color:#000">T</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">cnt1</span> <span style="color:#000">=</span> <span style="color:#000">cnt2</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">x</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">x</span>, (<span style="color:#000">x</span> <span style="color:#000">%</span> <span style="color:#1c01ce">2</span> <span style="color:#000">==</span> <span style="color:#1c01ce">0</span> <span style="color:#000">?</span> <span style="color:#000">cnt1</span> : <span style="color:#000">cnt2</span>)<span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">cnt2</span> <span style="color:#000">&lt;</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">puts</span>(<span style="color:#c41a16">&#34;No&#34;</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">continue</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#000">x</span><span style="color:#000">--</span>, <span style="color:#000">cnt2</span><span style="color:#000">--</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">cnt1</span> <span style="color:#000">&gt;=</span> <span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">puts</span>(<span style="color:#c41a16">&#34;Yes&#34;</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">continue</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">x</span> <span style="color:#000">%</span> <span style="color:#1c01ce">2</span> <span style="color:#000">==</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">cnt1</span> <span style="color:#000">&lt;</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>            {
</span></span><span style="display:flex;"><span>                <span style="color:#000">puts</span>(<span style="color:#c41a16">&#34;No&#34;</span>);
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">continue</span>;
</span></span><span style="display:flex;"><span>            }
</span></span><span style="display:flex;"><span>            <span style="color:#000">cnt1</span><span style="color:#000">--</span>, <span style="color:#000">x</span><span style="color:#000">--</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#000">x</span> <span style="color:#000">-=</span> <span style="color:#000">cnt2</span> <span style="color:#000">/</span> <span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#1c01ce">2</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">x</span> <span style="color:#000">-=</span> <span style="color:#000">cnt1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">puts</span>(<span style="color:#000">x</span> <span style="color:#000">&gt;</span> <span style="color:#1c01ce">0</span> <span style="color:#000">?</span> <span style="color:#c41a16">&#34;No&#34;</span> <span style="color:#000">:</span> <span style="color:#c41a16">&#34;Yes&#34;</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="bhttpscodeforcescontest1363problemb"><a href="https://codeforc.es/contest/1363/problem/B">B</a></h2>
<h3 id="description-1">Description</h3>
<p>对于一个 $01$ 字符串，如果这个字符串没有子序列（可以不连续）是 $101$ 或 $010$，那么它是好的。</p>
<p>给定一个 $01$ 字符串 $s$。你可以选择一些位置，并翻转该位置的数 —— $0$ 变 $1$，$1$ 变 $0$。</p>
<p>你需要求出，至少要选择多少个位置翻转，才能使这个字符串变成好的。</p>
<h3 id="solution-1">Solution</h3>
<p>看一下这个要求，显然符合条件的字符串只有 ：<code>00000</code>、<code>11111</code>，<code>111000</code>、<code>000111</code> 这四种形式。</p>
<p>做个前缀和看看具体改成哪种即可。</p>
<h3 id="code-1">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1100</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">sum0</span>[<span style="color:#000">maxn</span>], <span style="color:#000">sum1</span>[<span style="color:#000">maxn</span>], <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">char</span> <span style="color:#000">s</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">q</span>(<span style="color:#a90d91">int</span> <span style="color:#000">l</span>, <span style="color:#a90d91">int</span> <span style="color:#000">r</span>) { <span style="color:#a90d91">return</span> <span style="color:#000">l</span> <span style="color:#000">&gt;</span> <span style="color:#000">r</span> <span style="color:#000">?</span> <span style="color:#1c01ce">0</span> <span style="color:#000">:</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">min</span>(<span style="color:#000">sum0</span>[<span style="color:#000">r</span>] <span style="color:#000">-</span> <span style="color:#000">sum0</span>[<span style="color:#000">l</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>], <span style="color:#000">sum1</span>[<span style="color:#000">r</span>] <span style="color:#000">-</span> <span style="color:#000">sum1</span>[<span style="color:#000">l</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>]); }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">T</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">T</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> (<span style="color:#000">T</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> (<span style="color:#000">s</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">n</span> <span style="color:#000">=</span> <span style="color:#000">strlen</span>(<span style="color:#000">s</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">sum0</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">sum0</span>[<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>], <span style="color:#000">sum1</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">sum1</span>[<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>], (<span style="color:#000">s</span>[<span style="color:#000">i</span>] <span style="color:#000">-</span> <span style="color:#2300ce">&#39;0&#39;</span> <span style="color:#000">?</span> <span style="color:#000">sum1</span>[<span style="color:#000">i</span>] <span style="color:#000">:</span> <span style="color:#000">sum0</span>[<span style="color:#000">i</span>])<span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">30</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">min</span>(<span style="color:#000">ans</span>, <span style="color:#000">q</span>(<span style="color:#1c01ce">1</span>, <span style="color:#000">i</span>) <span style="color:#000">+</span> <span style="color:#000">q</span>(<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">n</span>));
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">ans</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="chttpscodeforcescontest1363problemc"><a href="https://codeforc.es/contest/1363/problem/C">C</a></h2>
<h3 id="description-2">Description</h3>
<p>给定 $n$ 个节点的无根树。</p>
<p>两名选手轮流操作，每次可以选择一个叶节点并删除它以及所有和它相连的边。叶节点指度数不超过 $1$ 的节点。删除节点 $x$ 的选手胜利。</p>
<p>你需要判断先手是否有必胜策略。具体来讲，如果先手有必胜策略，输出 <code>Ayush</code>，否则输出 <code>Ashish</code>。</p>
<h3 id="solution-2">Solution</h3>
<p>首先，当 $x$ 的度数小于等于 $1$ 时，先手必胜。</p>
<p>而如果度数比 $1$ 大，比如是 $2$，那么先手一定会最后删掉与 $x$ 相邻的点，换成后手也同理。</p>
<p>所以我们直接看 $n$ 的奇偶性就能知道轮流删之后谁能删掉 $x$。</p>
<p>具体地：偶数先手赢，奇数后手赢。</p>
<h3 id="code-2">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1100</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">deg</span>[<span style="color:#000">maxn</span>], <span style="color:#000">n</span>, <span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">T</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">T</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> (<span style="color:#000">T</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">memset</span>(<span style="color:#000">deg</span>, <span style="color:#1c01ce">0</span>, <span style="color:#a90d91">sizeof</span>(<span style="color:#000">deg</span>));
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">x</span>, <span style="color:#000">y</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">x</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">y</span>, <span style="color:#000">deg</span>[<span style="color:#000">x</span>]<span style="color:#000">++</span>, <span style="color:#000">deg</span>[<span style="color:#000">y</span>]<span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">deg</span>[<span style="color:#000">x</span>] <span style="color:#000">&lt;=</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">puts</span>(<span style="color:#c41a16">&#34;Ayush&#34;</span>);
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span> <span style="color:#a90d91">if</span> (<span style="color:#000">n</span> <span style="color:#000">%</span> <span style="color:#1c01ce">2</span> <span style="color:#000">==</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">puts</span>(<span style="color:#c41a16">&#34;Ashish&#34;</span>);
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">puts</span>(<span style="color:#c41a16">&#34;Ayush&#34;</span>);
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="dhttpscodeforcescontest1363problemd"><a href="https://codeforc.es/contest/1363/problem/D">D</a></h2>
<h3 id="description-3">Description</h3>
<p>这是一道<strong>交互题</strong>。</p>
<p>给定长为 $n$ 的数组 $a=[a_1,a_2,&hellip;,a_n]$ 和 $k$ 个互不相交的子集 $S_1,S_2,&hellip;,S_k$，这些子集中的元素都是 $[1,n]$ 之间的正整数。这些子集两两的交集为空。</p>
<p>你可以进行最多 $12$ 次询问。每次询问你可以给出 $c$ 个互不相同且在 $[1,n]$ 之间的正整数 $v_1,v_2,&hellip;,v_c$，然后你会得到 $\max\{v_i\}$。</p>
<p>对于每个子集 $S_i$，你需要求出 $P_i=\max\limits_{j \notin S_i} a_j$。</p>
<p>$2 \leq n \leq 1000,1 \leq a_i,k \leq n,1 \leq c&lt; n$。​​</p>
<h3 id="solution-3">Solution</h3>
<p>看到 $12$ 次询问，显然我们需要询问 $\log n$ 次。可以向二分的思路上靠。</p>
<p>注意到子集无交，那么有一个重要的结论：除了包含数组中最大数的集合，其他集合的答案一定是这个最大的数。</p>
<p>我们可以通过 $1$ 次询问得到最大的数，再通过 $\log_2n$ 次询问找到这个最大的数的位置。</p>
<p>最后再通过一次询问得到这个包含最大数的答案即可，正好 $12$ 次。</p>
<h3 id="code-3">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1100</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">n</span>, <span style="color:#000">k</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">vector</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">a</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">ans</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">char</span> <span style="color:#000">s</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">ask</span>(<span style="color:#a90d91">int</span> <span style="color:#000">l</span>, <span style="color:#a90d91">int</span> <span style="color:#000">r</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34;?&#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">r</span> <span style="color:#000">-</span> <span style="color:#000">l</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#000">l</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">r</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">i</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">clear</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">k</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">clear</span>();
</span></span><span style="display:flex;"><span>    <span style="color:#000">memset</span>(<span style="color:#000">ans</span>, <span style="color:#1c01ce">0</span>, <span style="color:#a90d91">sizeof</span>(<span style="color:#000">ans</span>));
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">ios</span><span style="color:#000">::</span><span style="color:#000">sync_with_stdio</span>(<span style="color:#a90d91">false</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">T</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">T</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> (<span style="color:#000">T</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">k</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">x</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">k</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">int</span> <span style="color:#000">c</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">c</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">while</span> (<span style="color:#000">c</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">x</span>, <span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">push_back</span>(<span style="color:#000">x</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">sort</span>(<span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">begin</span>(), <span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">end</span>());  
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">mx</span> <span style="color:#000">=</span> <span style="color:#000">ask</span>(<span style="color:#1c01ce">1</span>, <span style="color:#000">n</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">l</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">r</span> <span style="color:#000">=</span> <span style="color:#000">n</span>, <span style="color:#000">pos</span> <span style="color:#000">=</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">while</span> (<span style="color:#000">l</span> <span style="color:#000">&lt;=</span> <span style="color:#000">r</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">int</span> <span style="color:#000">mid</span> <span style="color:#000">=</span> (<span style="color:#000">l</span> <span style="color:#000">+</span> <span style="color:#000">r</span>) <span style="color:#000">/</span> <span style="color:#1c01ce">2</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">ask</span>(<span style="color:#1c01ce">1</span>, <span style="color:#000">mid</span>) <span style="color:#000">==</span> <span style="color:#000">mx</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">pos</span> <span style="color:#000">=</span> <span style="color:#000">mid</span>, <span style="color:#000">r</span> <span style="color:#000">=</span> <span style="color:#000">mid</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>                <span style="color:#000">l</span> <span style="color:#000">=</span> <span style="color:#000">mid</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#177500">//cout &lt;&lt; pos &lt;&lt; endl;
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">k</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">auto</span> <span style="color:#000">p</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">lower_bound</span>(<span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">begin</span>(), <span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">end</span>(), <span style="color:#000">pos</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">p</span> <span style="color:#000">==</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">end</span>() <span style="color:#000">||</span> <span style="color:#000">*</span><span style="color:#000">p</span> <span style="color:#000">!=</span> <span style="color:#000">pos</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">ans</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">mx</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>            {
</span></span><span style="display:flex;"><span>                <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34;?&#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">n</span> <span style="color:#000">-</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">size</span>() <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span>;
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                {
</span></span><span style="display:flex;"><span>                    <span style="color:#a90d91">auto</span> <span style="color:#000">p</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">lower_bound</span>(<span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">begin</span>(), <span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">end</span>(), <span style="color:#000">j</span>);
</span></span><span style="display:flex;"><span>                    <span style="color:#a90d91">if</span> (<span style="color:#000">p</span> <span style="color:#000">==</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">end</span>() <span style="color:#000">||</span> <span style="color:#000">*</span><span style="color:#000">p</span> <span style="color:#000">!=</span> <span style="color:#000">j</span>)
</span></span><span style="display:flex;"><span>                        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">j</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span>;
</span></span><span style="display:flex;"><span>                }
</span></span><span style="display:flex;"><span>                <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>                <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">ans</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>            }
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34;!&#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">k</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">ans</span>[<span style="color:#000">i</span>] <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">s</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">clear</span>();
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="ehttpscodeforcescontest1363probleme"><a href="https://codeforc.es/contest/1363/problem/E">E</a></h2>
<h3 id="description-4">Description</h3>
<p>给定 $n$​ 个节点标号为 $1$​ 到 $n$​ 的树，且 $1$​ 为树根，每个节点上有三个数字 $a_i,b_i,c_i$​。$a_i$​ 表示修改代价。$b_i,c_i$​ 的值为 $0$​ 或 $1$​ ， $b_i$​为初始值，$c_i$​为目标值。</p>
<p>每次可以选择以节点 $u$​ 为根节点的子树，去把该子树的所有结点从初始值修改成目标值。修改方法为：可以选择该子树中任意 $k$​ 个节点进行交换初始值，使之与该节点的目标值相等，代价为 $k\times a_u$​。</p>
<p>判断能否把左右点从初始值变为目标值，并输出最小的代价。</p>
<h3 id="solution-4">Solution</h3>
<p>很水的一个题。</p>
<p>对于一个点，在哪里交换是一样的，区别只有代价。</p>
<p>那么我们显然应该用这个点到根路径上所有点代价的最小值去修改它。</p>
<p>直接把代价下放然后取最小值即可，这样我们就可以非常贪心，如果能改直接在深度大的点改即可。</p>
<p>具体到一个子树需要修改几次呢？</p>
<p>随便写个 DP：$f(i,0/1)$ 表示以 $i$ 为根子树内还有多少个初始值为 $0/1$ 的点未被修改。</p>
<p>然后对于一个子树我们能修改的就是 $\min(f(i,0),f(i,1))$ 个点，算一下代价然后修改 $f$ 数组即可。</p>
<h3 id="code-4">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2e5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">typedef</span> <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">ll</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">a</span>[<span style="color:#000">maxn</span>], <span style="color:#000">b</span>[<span style="color:#000">maxn</span>], <span style="color:#000">c</span>[<span style="color:#000">maxn</span>], <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span><span style="color:#000">ll</span> <span style="color:#000">ans</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">f</span>[<span style="color:#000">maxn</span>][<span style="color:#1c01ce">2</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">vector</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">e</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">add</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>) { <span style="color:#000">e</span>[<span style="color:#000">x</span>].<span style="color:#000">push_back</span>(<span style="color:#000">y</span>), <span style="color:#000">e</span>[<span style="color:#000">y</span>].<span style="color:#000">push_back</span>(<span style="color:#000">x</span>); }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">dfs</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">fa</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">a</span>[<span style="color:#000">x</span>] <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">min</span>(<span style="color:#000">a</span>[<span style="color:#000">x</span>], <span style="color:#000">a</span>[<span style="color:#000">fa</span>]);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">b</span>[<span style="color:#000">x</span>] <span style="color:#000">!=</span> <span style="color:#000">c</span>[<span style="color:#000">x</span>])
</span></span><span style="display:flex;"><span>        <span style="color:#000">f</span>[<span style="color:#000">x</span>][<span style="color:#000">b</span>[<span style="color:#000">x</span>] <span style="color:#000">==</span> <span style="color:#1c01ce">1</span>]<span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">v</span> : <span style="color:#000">e</span>[<span style="color:#000">x</span>])
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">v</span> <span style="color:#000">!=</span> <span style="color:#000">fa</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">dfs</span>(<span style="color:#000">v</span>, <span style="color:#000">x</span>), <span style="color:#000">f</span>[<span style="color:#000">x</span>][<span style="color:#1c01ce">0</span>] <span style="color:#000">+=</span> <span style="color:#000">f</span>[<span style="color:#000">v</span>][<span style="color:#1c01ce">0</span>], <span style="color:#000">f</span>[<span style="color:#000">x</span>][<span style="color:#1c01ce">1</span>] <span style="color:#000">+=</span> <span style="color:#000">f</span>[<span style="color:#000">v</span>][<span style="color:#1c01ce">1</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">need</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">min</span>(<span style="color:#000">f</span>[<span style="color:#000">x</span>][<span style="color:#1c01ce">0</span>], <span style="color:#000">f</span>[<span style="color:#000">x</span>][<span style="color:#1c01ce">1</span>]);
</span></span><span style="display:flex;"><span>    <span style="color:#000">ans</span> <span style="color:#000">+=</span> <span style="color:#1c01ce">1ll</span> <span style="color:#000">*</span> <span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">need</span> <span style="color:#000">*</span> <span style="color:#000">a</span>[<span style="color:#000">x</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#000">f</span>[<span style="color:#000">x</span>][<span style="color:#1c01ce">0</span>] <span style="color:#000">-=</span> <span style="color:#000">need</span>, <span style="color:#000">f</span>[<span style="color:#000">x</span>][<span style="color:#1c01ce">1</span>] <span style="color:#000">-=</span> <span style="color:#000">need</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">ios</span><span style="color:#000">::</span><span style="color:#000">sync_with_stdio</span>(<span style="color:#a90d91">false</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>] <span style="color:#000">&gt;&gt;</span> <span style="color:#000">b</span>[<span style="color:#000">i</span>] <span style="color:#000">&gt;&gt;</span> <span style="color:#000">c</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">x</span>, <span style="color:#000">y</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">x</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">y</span>, <span style="color:#000">add</span>(<span style="color:#000">x</span>, <span style="color:#000">y</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">a</span>[<span style="color:#1c01ce">0</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">30</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">dfs</span>(<span style="color:#1c01ce">1</span>, <span style="color:#1c01ce">0</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">f</span>[<span style="color:#1c01ce">1</span>][<span style="color:#1c01ce">0</span>] <span style="color:#000">!=</span> <span style="color:#1c01ce">0</span> <span style="color:#000">||</span> <span style="color:#000">f</span>[<span style="color:#1c01ce">1</span>][<span style="color:#1c01ce">1</span>] <span style="color:#000">!=</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">ans</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="fhttpscodeforcescontest1363problemf"><a href="https://codeforc.es/contest/1363/problem/F">F</a></h2>
<h3 id="description-5">Description</h3>
<p>给定两个长度为 $n$ 的字符串 $s$，$t$。定义一次操作为选择 $s$ 的一个子串 $s_{l, l +1, \dots, r}$，然后将之修改为 $s_{r, l, l + 1, l + 2, \dots, r - 1 }$。请求助使 $s$ 与 $t$ 相等的最小操作次数。无解输出 $-1$。</p>
<p>多组数据，$\sum n \leq 2000$，$s, t$ 中只有小写字母。</p>
<h3 id="solution-5">Solution</h3>
<p>这个操作的实质就是把一个字符提到前面去。</p>
<p>首先如果有一种字符出现次数不同就一定无解，否则一定能构造出一组解。</p>
<p>可以想到一个 DP：$f_{i,j}$​ 表示 $s$​ 匹配到第 $i$​ 位，$t$​ 匹配到第 $j$​ 位的最小操作次数，这里限制 $j\geq i$​。</p>
<p>为什么 $j$​ 可以比 $i$​ 大呢？意思就是在匹配时我们可以把 $s$ 串中后面的移到前面来。</p>
<p>转移有三种情况：</p>
<ul>
<li>
<p>当 $s_i=t_j$，$f_{i,j}=f_{i-1,j-1}$，很显然；</p>
</li>
<li>
<p>当出现次数允许（即 $i$ 后面有多的 $t_j$），我们可以从后面拿一个字符过来，即 $f_{i,j}=f_{i,j-1}$。这个东西看着很不对，但我们还有下面的转移：</p>
</li>
<li>
<p>$f_{i,j}=f_{i-1,j}+1$。这个就是我们之前拿的字符，现在计算代价。</p>
</li>
</ul>
<p>好像很不对，但其实是对的：假如根本没拿过来，那就不会被转移到。</p>
<h3 id="code-5">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2010</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">char</span> <span style="color:#000">s</span>[<span style="color:#000">maxn</span>], <span style="color:#000">t</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">f</span>[<span style="color:#000">maxn</span>][<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">sum1</span>[<span style="color:#000">maxn</span>][<span style="color:#1c01ce">30</span>], <span style="color:#000">sum2</span>[<span style="color:#000">maxn</span>][<span style="color:#1c01ce">30</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">updmi</span>(<span style="color:#a90d91">int</span> <span style="color:#000">&amp;</span><span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>) { <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">min</span>(<span style="color:#000">x</span>, <span style="color:#000">y</span>); }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">bool</span> <span style="color:#000">check</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#1c01ce">26</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">sum1</span>[<span style="color:#000">n</span>][<span style="color:#000">i</span>] <span style="color:#000">!=</span> <span style="color:#000">sum2</span>[<span style="color:#000">n</span>][<span style="color:#000">i</span>])
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">return</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">ios</span><span style="color:#000">::</span><span style="color:#000">sync_with_stdio</span>(<span style="color:#a90d91">false</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">T</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">T</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> (<span style="color:#000">T</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> (<span style="color:#000">s</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>) <span style="color:#000">&gt;&gt;</span> (<span style="color:#000">t</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">memset</span>(<span style="color:#000">sum1</span>, <span style="color:#1c01ce">0</span>, <span style="color:#a90d91">sizeof</span>(<span style="color:#000">sum1</span>)), <span style="color:#000">memset</span>(<span style="color:#000">sum2</span>, <span style="color:#1c01ce">0</span>, <span style="color:#a90d91">sizeof</span>(<span style="color:#000">sum2</span>));
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">sum1</span>[<span style="color:#000">i</span>][<span style="color:#000">s</span>[<span style="color:#000">i</span>] <span style="color:#000">-</span> <span style="color:#2300ce">&#39;a&#39;</span>]<span style="color:#000">++</span>, <span style="color:#000">sum2</span>[<span style="color:#000">i</span>][<span style="color:#000">t</span>[<span style="color:#000">i</span>] <span style="color:#000">-</span> <span style="color:#2300ce">&#39;a&#39;</span>]<span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;</span> <span style="color:#1c01ce">26</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">sum1</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>] <span style="color:#000">+=</span> <span style="color:#000">sum1</span>[<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>][<span style="color:#000">j</span>], <span style="color:#000">sum2</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>] <span style="color:#000">+=</span> <span style="color:#000">sum2</span>[<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>][<span style="color:#000">j</span>];
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">check</span>() <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">continue</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">f</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">25</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">f</span>[<span style="color:#1c01ce">0</span>][<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#000">i</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            {
</span></span><span style="display:flex;"><span>                <span style="color:#000">f</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>] <span style="color:#000">=</span> <span style="color:#000">f</span>[<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>][<span style="color:#000">j</span>] <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">if</span> (<span style="color:#000">s</span>[<span style="color:#000">i</span>] <span style="color:#000">==</span> <span style="color:#000">t</span>[<span style="color:#000">j</span>])
</span></span><span style="display:flex;"><span>                    <span style="color:#000">updmi</span>(<span style="color:#000">f</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>], <span style="color:#000">f</span>[<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>][<span style="color:#000">j</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>]);
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">if</span> (<span style="color:#000">sum1</span>[<span style="color:#000">i</span>][<span style="color:#000">t</span>[<span style="color:#000">j</span>] <span style="color:#000">-</span> <span style="color:#2300ce">&#39;a&#39;</span>] <span style="color:#000">&lt;</span> <span style="color:#000">sum2</span>[<span style="color:#000">j</span>][<span style="color:#000">t</span>[<span style="color:#000">j</span>] <span style="color:#000">-</span> <span style="color:#2300ce">&#39;a&#39;</span>])
</span></span><span style="display:flex;"><span>                    <span style="color:#000">updmi</span>(<span style="color:#000">f</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>], <span style="color:#000">f</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>]);
</span></span><span style="display:flex;"><span>            }
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">f</span>[<span style="color:#000">n</span>][<span style="color:#000">n</span>] <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div>]]></content:encoded>
    </item>
    
    <item>
      <title>Codeforces Round 337 (Div. 2)</title>
      <link>https://luoyisu.github.io/posts/cf-contest610/</link>
      <pubDate>Tue, 28 Dec 2021 13:32:13 +0000</pubDate>
      
      <guid>https://luoyisu.github.io/posts/cf-contest610/</guid>
      <description>&lt;h2 id=&#34;概述&#34;&gt;概述&lt;/h2&gt;
&lt;p&gt;虽说是 Div2，但也不是特别简单，E 还是不太裸的。。&lt;/p&gt;</description>
      <content:encoded><![CDATA[<h2 id="概述">概述</h2>
<p>虽说是 Div2，但也不是特别简单，E 还是不太裸的。。</p>
<h2 id="ahttpscodeforcescontest610problema"><a href="https://codeforc.es/contest/610/problem/A">A</a></h2>
<h3 id="description">Description</h3>
<p>Pasha 有一个正整数长度的木棍 $n$​。他想要完成三次切割以获得四个部分。每个部分必须有一些正整数长度，这些长度的总和显然是 $n$。</p>
<p>Pasha 喜欢长方形但讨厌正方形，所以他想知道，有多少种方法可以将棍子分成四个部分，这样就可以用这些部分形成一个矩形，但不可能形成正方形。</p>
<p>你的任务是帮助 Pasha 并计算这些方式的数量。</p>
<h3 id="solution">Solution</h3>
<p>看代码。</p>
<h3 id="code">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> (<span style="color:#000">n</span> <span style="color:#000">%</span> <span style="color:#1c01ce">2</span> <span style="color:#000">?</span> <span style="color:#1c01ce">0</span> <span style="color:#000">:</span> (<span style="color:#000">n</span> <span style="color:#000">/</span> <span style="color:#1c01ce">2</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>) <span style="color:#000">/</span> <span style="color:#1c01ce">2</span>) <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="bhttpscodeforcescontest610problemb"><a href="https://codeforc.es/contest/610/problem/B">B</a></h2>
<h3 id="description-1">Description</h3>
<p>Vika 有 $n$ 桶油漆，第 $i$ 桶有 $a_i$ 升油漆。</p>
<p>Vika 有一张无限长的长方形纸条，她将长方形纸条分成了无限个正方形，她将按照以下规则对正方形涂色。</p>
<ul>
<li>涂一个正方形需要 $1$ 升油漆。</li>
<li>第一个正方形可以用第任意第 $i$ 桶油漆。</li>
<li>若第 $k$ 个正方形用了第 $x$ 桶油漆，则第 $k+1$ 个正方形将用第 $x+1$ 桶油漆，若 $x=n$，则第 $k+1$ 个正方形将用第 $1$ 桶油漆。若 $a_x = 0$ 则停止涂色。</li>
</ul>
<p>求 Vika 最多可以涂多少个正方形。</p>
<h3 id="solution-1">Solution</h3>
<p>设最小的元素是 $x$，很显然答案的下界是 $nx$。</p>
<p>把所有元素都减去 $x$ 之后，我们需要找到一段所有元素都大于零的最长连续段，把这部分也加进答案里即可。</p>
<p>这个最长连续段要么就是连续的一段，要么是头尾相接的一段，都模拟一下就好了。</p>
<h3 id="code-1">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2e5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">a</span>[<span style="color:#000">maxn</span>], <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">pos</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">a</span>[<span style="color:#1c01ce">0</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">2e9</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">a</span>[<span style="color:#000">i</span>] <span style="color:#000">&lt;=</span> <span style="color:#000">a</span>[<span style="color:#000">pos</span>])
</span></span><span style="display:flex;"><span>            <span style="color:#000">pos</span> <span style="color:#000">=</span> <span style="color:#000">i</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">lpos</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">a</span>[<span style="color:#000">i</span>] <span style="color:#000">==</span> <span style="color:#000">a</span>[<span style="color:#000">pos</span>])
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">lpos</span> <span style="color:#000">=</span> <span style="color:#000">i</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">break</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">lst</span> <span style="color:#000">=</span> <span style="color:#000">lpos</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">sum</span> <span style="color:#000">=</span> <span style="color:#000">lpos</span> <span style="color:#000">+</span> <span style="color:#000">n</span> <span style="color:#000">-</span> <span style="color:#000">pos</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#000">lpos</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">a</span>[<span style="color:#000">i</span>] <span style="color:#000">!=</span> <span style="color:#000">a</span>[<span style="color:#000">pos</span>])
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">continue</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">sum</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">max</span>(<span style="color:#000">sum</span>, <span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#000">lst</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>);  
</span></span><span style="display:flex;"><span>        <span style="color:#000">lst</span> <span style="color:#000">=</span> <span style="color:#000">i</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> (<span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span>)<span style="color:#000">a</span>[<span style="color:#000">pos</span>] <span style="color:#000">*</span> <span style="color:#000">n</span> <span style="color:#000">+</span> <span style="color:#000">sum</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="chttpscodeforcescontest610problemc"><a href="https://codeforc.es/contest/610/problem/C">C</a></h2>
<h3 id="description-2">Description</h3>
<p>给定 $k$，求 $2^k$ 个 $2^k$ 维向量满足每个向量的坐标表示中任意一维都为 $1$ 或 $-1$，且这些向量两两点积为 $0$。</p>
<p>$0\leq k\leq 9$。</p>
<h3 id="solution-2">Solution</h3>
<p>这个题一看就比较找规律，再联想分治&hellip;</p>
<p>先构造一个如下的矩阵（$1$ 表示 $1$，$0$ 表示 $-1$）。</p>
<pre tabindex="0"><code>11
10
</code></pre><p>这是 $k=1$ 的情况，很显然满足要求。</p>
<p>怎么从它扩展到 $k=2$ 呢？可以构造一个如下的矩阵：</p>
<pre tabindex="0"><code>1111
1010
1100
1001
</code></pre><p>就是把 $k=1$​ 的矩阵在四个地方复制一份，再把右下角的矩阵取反就行。</p>
<p>然后重复以上操作就构造完了。</p>
<p>证明一下：首先左半部分在原来两个矩阵内部内积是 $0$，取反之后仍然在内部内积是 $0$，而两个矩阵相同的行内积在右面正好会抵消，于是这么构造就是对的。</p>
<h3 id="code-2">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">a</span>[<span style="color:#000">maxn</span>][<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">solve</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>, <span style="color:#a90d91">int</span> <span style="color:#000">len</span>, <span style="color:#a90d91">int</span> <span style="color:#000">opt</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">len</span> <span style="color:#000">==</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">a</span>[<span style="color:#000">x</span>][<span style="color:#000">y</span>] <span style="color:#000">=</span> <span style="color:#000">opt</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">p</span> <span style="color:#000">=</span> <span style="color:#000">len</span> <span style="color:#000">/</span> <span style="color:#1c01ce">2</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">solve</span>(<span style="color:#000">x</span>, <span style="color:#000">y</span>, <span style="color:#000">p</span>, <span style="color:#000">opt</span>), <span style="color:#000">solve</span>(<span style="color:#000">x</span>, <span style="color:#000">y</span> <span style="color:#000">+</span> <span style="color:#000">p</span>, <span style="color:#000">p</span>, <span style="color:#000">opt</span>), <span style="color:#000">solve</span>(<span style="color:#000">x</span> <span style="color:#000">+</span> <span style="color:#000">p</span>, <span style="color:#000">y</span>, <span style="color:#000">p</span>, <span style="color:#000">opt</span>), <span style="color:#000">solve</span>(<span style="color:#000">x</span> <span style="color:#000">+</span> <span style="color:#000">p</span>, <span style="color:#000">y</span> <span style="color:#000">+</span> <span style="color:#000">p</span>, <span style="color:#000">p</span>, <span style="color:#000">opt</span> <span style="color:#000">^</span> <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">k</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">k</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">solve</span>(<span style="color:#1c01ce">1</span>, <span style="color:#1c01ce">1</span>, <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">k</span>, <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> (<span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">k</span>); <span style="color:#000">i</span><span style="color:#000">++</span>, <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;=</span> (<span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">k</span>); <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> (<span style="color:#000">a</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>] <span style="color:#000">?</span> <span style="color:#2300ce">&#39;+&#39;</span> <span style="color:#000">:</span> <span style="color:#2300ce">&#39;*&#39;</span>);  
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="dhttpscodeforcescontest610problemd"><a href="https://codeforc.es/contest/610/problem/D">D</a></h2>
<h3 id="description-3">Description</h3>
<p>有一个网格，给出 $n$ 条线段，每条线段覆盖一些网格，问被覆盖的网格的面积并是多少。</p>
<p>$n\leq10000$。</p>
<h3 id="solution-3">Solution</h3>
<p>太扫描线了！！！</p>
<p>把题目的网格图转成平面直角坐标系，线段转成点，然后扫描线即可。</p>
<h3 id="code-3">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cmath&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;utility&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2e5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">typedef</span> <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">ll</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">struct</span> <span style="color:#3f6e75">node</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">x1</span>, <span style="color:#000">x2</span>, <span style="color:#000">y</span>, <span style="color:#000">opt</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">bool</span> <span style="color:#a90d91">operator</span><span style="color:#000">&lt;</span>(<span style="color:#a90d91">const</span> <span style="color:#000">node</span> <span style="color:#000">&amp;</span><span style="color:#000">b</span>) <span style="color:#a90d91">const</span> { <span style="color:#a90d91">return</span> <span style="color:#000">y</span> <span style="color:#000">&lt;</span> <span style="color:#000">b</span>.<span style="color:#000">y</span>; }
</span></span><span style="display:flex;"><span>} <span style="color:#000">a</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">p</span>[<span style="color:#000">maxn</span>], <span style="color:#000">tot</span>, <span style="color:#000">n</span>, <span style="color:#000">cnt</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">struct</span> <span style="color:#3f6e75">Tree</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">struct</span> <span style="color:#3f6e75">Node</span>
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">l</span>, <span style="color:#000">r</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">ll</span> <span style="color:#000">sum</span>, <span style="color:#000">lzy</span>;
</span></span><span style="display:flex;"><span>    } <span style="color:#000">t</span>[<span style="color:#000">maxn</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">3</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">int</span> <span style="color:#000">ls</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>) { <span style="color:#a90d91">return</span> <span style="color:#000">x</span> <span style="color:#000">*</span> <span style="color:#1c01ce">2</span>; }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">int</span> <span style="color:#000">rs</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>) { <span style="color:#a90d91">return</span> <span style="color:#000">x</span> <span style="color:#000">*</span> <span style="color:#1c01ce">2</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>; }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">push_up</span>(<span style="color:#a90d91">int</span> <span style="color:#000">k</span>) { <span style="color:#000">t</span>[<span style="color:#000">k</span>].<span style="color:#000">sum</span> <span style="color:#000">=</span> <span style="color:#000">t</span>[<span style="color:#000">k</span>].<span style="color:#000">lzy</span> <span style="color:#000">&gt;</span> <span style="color:#1c01ce">0</span> <span style="color:#000">?</span> <span style="color:#000">p</span>[<span style="color:#000">t</span>[<span style="color:#000">k</span>].<span style="color:#000">r</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">-</span> <span style="color:#000">p</span>[<span style="color:#000">t</span>[<span style="color:#000">k</span>].<span style="color:#000">l</span>] <span style="color:#000">:</span> <span style="color:#000">t</span>[<span style="color:#000">ls</span>(<span style="color:#000">k</span>)].<span style="color:#000">sum</span> <span style="color:#000">+</span> <span style="color:#000">t</span>[<span style="color:#000">rs</span>(<span style="color:#000">k</span>)].<span style="color:#000">sum</span>; }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">void</span> <span style="color:#000">build</span>(<span style="color:#a90d91">int</span> <span style="color:#000">l</span>, <span style="color:#a90d91">int</span> <span style="color:#000">r</span>, <span style="color:#a90d91">int</span> <span style="color:#000">k</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">t</span>[<span style="color:#000">k</span>].<span style="color:#000">l</span> <span style="color:#000">=</span> <span style="color:#000">l</span>, <span style="color:#000">t</span>[<span style="color:#000">k</span>].<span style="color:#000">r</span> <span style="color:#000">=</span> <span style="color:#000">r</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">l</span> <span style="color:#000">==</span> <span style="color:#000">r</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">t</span>[<span style="color:#000">k</span>].<span style="color:#000">sum</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">return</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">mid</span> <span style="color:#000">=</span> (<span style="color:#000">l</span> <span style="color:#000">+</span> <span style="color:#000">r</span>) <span style="color:#000">/</span> <span style="color:#1c01ce">2</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">build</span>(<span style="color:#000">l</span>, <span style="color:#000">mid</span>, <span style="color:#000">ls</span>(<span style="color:#000">k</span>)), <span style="color:#000">build</span>(<span style="color:#000">mid</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">r</span>, <span style="color:#000">rs</span>(<span style="color:#000">k</span>));
</span></span><span style="display:flex;"><span>        <span style="color:#000">push_up</span>(<span style="color:#000">k</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">void</span> <span style="color:#000">modify</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>, <span style="color:#a90d91">int</span> <span style="color:#000">v</span>, <span style="color:#a90d91">int</span> <span style="color:#000">k</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">p</span>[<span style="color:#000">t</span>[<span style="color:#000">k</span>].<span style="color:#000">r</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">&lt;=</span> <span style="color:#000">x</span> <span style="color:#000">||</span> <span style="color:#000">p</span>[<span style="color:#000">t</span>[<span style="color:#000">k</span>].<span style="color:#000">l</span>] <span style="color:#000">&gt;=</span> <span style="color:#000">y</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">return</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">p</span>[<span style="color:#000">t</span>[<span style="color:#000">k</span>].<span style="color:#000">r</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">&lt;=</span> <span style="color:#000">y</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">p</span>[<span style="color:#000">t</span>[<span style="color:#000">k</span>].<span style="color:#000">l</span>] <span style="color:#000">&gt;=</span> <span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">t</span>[<span style="color:#000">k</span>].<span style="color:#000">lzy</span> <span style="color:#000">+=</span> <span style="color:#000">v</span>, <span style="color:#000">push_up</span>(<span style="color:#000">k</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">return</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">mid</span> <span style="color:#000">=</span> <span style="color:#000">floor</span>((<span style="color:#000">x</span> <span style="color:#000">+</span> <span style="color:#000">y</span>) <span style="color:#000">/</span> <span style="color:#1c01ce">2.0</span>); <span style="color:#177500">// 注意，坐标有负数，需要向下取整而不是向零取整
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>        <span style="color:#a90d91">if</span> (<span style="color:#000">x</span> <span style="color:#000">&lt;=</span> <span style="color:#000">mid</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">modify</span>(<span style="color:#000">x</span>, <span style="color:#000">y</span>, <span style="color:#000">v</span>, <span style="color:#000">ls</span>(<span style="color:#000">k</span>));
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">y</span> <span style="color:#000">&gt;</span> <span style="color:#000">mid</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">modify</span>(<span style="color:#000">x</span>, <span style="color:#000">y</span>, <span style="color:#000">v</span>, <span style="color:#000">rs</span>(<span style="color:#000">k</span>));
</span></span><span style="display:flex;"><span>        <span style="color:#000">push_up</span>(<span style="color:#000">k</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>} <span style="color:#000">t</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">signed</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">ios</span><span style="color:#000">::</span><span style="color:#000">sync_with_stdio</span>(<span style="color:#a90d91">false</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">x1</span>, <span style="color:#000">x2</span>, <span style="color:#000">y1</span>, <span style="color:#000">y2</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">x1</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">y1</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">x2</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">y2</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">y1</span> <span style="color:#000">==</span> <span style="color:#000">y2</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">x1</span> <span style="color:#000">&gt;</span> <span style="color:#000">x2</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">swap</span>(<span style="color:#000">x1</span>, <span style="color:#000">x2</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#000">x2</span><span style="color:#000">++</span>, <span style="color:#000">y2</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">a</span>[<span style="color:#000">++</span><span style="color:#000">tot</span>] <span style="color:#000">=</span> {<span style="color:#000">x1</span>, <span style="color:#000">x2</span>, <span style="color:#000">y1</span>, <span style="color:#1c01ce">1</span>}, <span style="color:#000">a</span>[<span style="color:#000">++</span><span style="color:#000">tot</span>] <span style="color:#000">=</span> {<span style="color:#000">x1</span>, <span style="color:#000">x2</span>, <span style="color:#000">y2</span>, <span style="color:#000">-</span><span style="color:#1c01ce">1</span>};
</span></span><span style="display:flex;"><span>            <span style="color:#000">p</span>[<span style="color:#000">++</span><span style="color:#000">cnt</span>] <span style="color:#000">=</span> <span style="color:#000">x1</span>, <span style="color:#000">p</span>[<span style="color:#000">++</span><span style="color:#000">cnt</span>] <span style="color:#000">=</span> <span style="color:#000">x2</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">y1</span> <span style="color:#000">&gt;</span> <span style="color:#000">y2</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">swap</span>(<span style="color:#000">y1</span>, <span style="color:#000">y2</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#000">x2</span><span style="color:#000">++</span>, <span style="color:#000">y2</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">a</span>[<span style="color:#000">++</span><span style="color:#000">tot</span>] <span style="color:#000">=</span> {<span style="color:#000">x1</span>, <span style="color:#000">x2</span>, <span style="color:#000">y1</span>, <span style="color:#1c01ce">1</span>}, <span style="color:#000">a</span>[<span style="color:#000">++</span><span style="color:#000">tot</span>] <span style="color:#000">=</span> {<span style="color:#000">x1</span>, <span style="color:#000">x2</span>, <span style="color:#000">y2</span>, <span style="color:#000">-</span><span style="color:#1c01ce">1</span>};
</span></span><span style="display:flex;"><span>            <span style="color:#000">p</span>[<span style="color:#000">++</span><span style="color:#000">cnt</span>] <span style="color:#000">=</span> <span style="color:#000">x1</span>, <span style="color:#000">p</span>[<span style="color:#000">++</span><span style="color:#000">cnt</span>] <span style="color:#000">=</span> <span style="color:#000">x2</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">sort</span>(<span style="color:#000">p</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">p</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">+</span> <span style="color:#000">cnt</span>), <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">sort</span>(<span style="color:#000">a</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">a</span> <span style="color:#000">+</span> <span style="color:#000">tot</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">cnt</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">unique</span>(<span style="color:#000">p</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">p</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">+</span> <span style="color:#000">cnt</span>) <span style="color:#000">-</span> <span style="color:#000">p</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">t</span>.<span style="color:#000">build</span>(<span style="color:#1c01ce">1</span>, <span style="color:#000">cnt</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>, <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">ll</span> <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>, <span style="color:#000">lst</span> <span style="color:#000">=</span> <span style="color:#000">a</span>[<span style="color:#1c01ce">1</span>].<span style="color:#000">y</span>; 
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">tot</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">ans</span> <span style="color:#000">+=</span> (<span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">y</span> <span style="color:#000">-</span> <span style="color:#000">lst</span>) <span style="color:#000">*</span> <span style="color:#000">t</span>.<span style="color:#000">t</span>[<span style="color:#1c01ce">1</span>].<span style="color:#000">sum</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">t</span>.<span style="color:#000">modify</span>(<span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">x1</span>, <span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">x2</span>, <span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">opt</span>, <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">lst</span> <span style="color:#000">=</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">y</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">ans</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="ehttpscodeforcescontest610probleme"><a href="https://codeforc.es/contest/610/problem/E">E</a></h2>
<h3 id="description-4">Description</h3>
<p>给定一个长度为 $n$​​（$n&lt;200000$​）的字符串 $s$，有两种指令：</p>
<ol>
<li>
<p>将区间 $[L,R]$​ 内的字符变为 $ch$；</p>
</li>
<li>
<p>给定长度为 $k$​​​​​（$1\leq k\leq10$​​​​）的字符串排列 $t$​​​，向 $s$​​ 串中添加字符，使得 $s$​ 以 $t$ 为模式循环，求最少的循环次数。</p>
</li>
</ol>
<p>最多 $20000$ 条指令。</p>
<p>字符集大小为 $k$。</p>
<h3 id="solution-4">Solution</h3>
<p>首先有一个结论：当两个相邻字符在字符串排列中前后顺序相同，这两个一定在同一个循环节内（因为不在的话会导致循环节增加一个）。</p>
<p>这样对于一次询问，一个很暴力的想法是：把字符串遍历一遍，看相邻字符在排列中的顺序。</p>
<p>注意到 $k$ 很小，我们尝试把询问的复杂度降到和 $k$ 有关。</p>
<p>发现我们只需要相邻字符的信息，而且这个信息是个数，那我们可以直接把每两种字符的相邻次数存下来询问时 $O(k^2)$ 枚举一遍字符集，把顺序不同的加进答案即可。</p>
<p>询问解决了，下一步是修改。</p>
<p>我们需要区间赋值，整体查询，且维护信息可以合并，那直接选择线段树，每个结点维护这段区间中上文的数组，以及最左元素、最右元素方便合并。</p>
<p>时间复杂度 $O(nk^2+mk^2\log n)$。</p>
<h3 id="code-4">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cmath&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;utility&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2e5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>, <span style="color:#000">maxk</span> <span style="color:#000">=</span> <span style="color:#1c01ce">11</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">char</span> <span style="color:#000">s</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">n</span>, <span style="color:#000">m</span>, <span style="color:#000">k</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">struct</span> <span style="color:#3f6e75">Tree</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">static</span> <span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#000">::</span><span style="color:#000">maxn</span> <span style="color:#000">*</span> <span style="color:#1c01ce">4</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">cnt</span>[<span style="color:#000">maxn</span>][<span style="color:#000">maxk</span>][<span style="color:#000">maxk</span>], <span style="color:#000">lch</span>[<span style="color:#000">maxn</span>], <span style="color:#000">rch</span>[<span style="color:#000">maxn</span>], <span style="color:#000">lzy</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">int</span> <span style="color:#000">ls</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>) { <span style="color:#a90d91">return</span> <span style="color:#000">x</span> <span style="color:#000">*</span> <span style="color:#1c01ce">2</span>; }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">int</span> <span style="color:#000">rs</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>) { <span style="color:#a90d91">return</span> <span style="color:#000">x</span> <span style="color:#000">*</span> <span style="color:#1c01ce">2</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>; }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">void</span> <span style="color:#000">push_up</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">k</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;</span> <span style="color:#000">k</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">cnt</span>[<span style="color:#000">x</span>][<span style="color:#000">i</span>][<span style="color:#000">j</span>] <span style="color:#000">=</span> <span style="color:#000">cnt</span>[<span style="color:#000">ls</span>(<span style="color:#000">x</span>)][<span style="color:#000">i</span>][<span style="color:#000">j</span>] <span style="color:#000">+</span> <span style="color:#000">cnt</span>[<span style="color:#000">rs</span>(<span style="color:#000">x</span>)][<span style="color:#000">i</span>][<span style="color:#000">j</span>];
</span></span><span style="display:flex;"><span>        <span style="color:#000">cnt</span>[<span style="color:#000">x</span>][<span style="color:#000">rch</span>[<span style="color:#000">ls</span>(<span style="color:#000">x</span>)]][<span style="color:#000">lch</span>[<span style="color:#000">rs</span>(<span style="color:#000">x</span>)]]<span style="color:#000">++</span>, <span style="color:#000">lch</span>[<span style="color:#000">x</span>] <span style="color:#000">=</span> <span style="color:#000">lch</span>[<span style="color:#000">ls</span>(<span style="color:#000">x</span>)], <span style="color:#000">rch</span>[<span style="color:#000">x</span>] <span style="color:#000">=</span> <span style="color:#000">rch</span>[<span style="color:#000">rs</span>(<span style="color:#000">x</span>)];
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">void</span> <span style="color:#000">access</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">ch</span>, <span style="color:#a90d91">int</span> <span style="color:#000">len</span>) { <span style="color:#000">memset</span>(<span style="color:#000">cnt</span>[<span style="color:#000">x</span>], <span style="color:#1c01ce">0</span>, <span style="color:#a90d91">sizeof</span>(<span style="color:#000">cnt</span>[<span style="color:#000">x</span>])), <span style="color:#000">cnt</span>[<span style="color:#000">x</span>][<span style="color:#000">ch</span>][<span style="color:#000">ch</span>] <span style="color:#000">=</span> <span style="color:#000">len</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">lch</span>[<span style="color:#000">x</span>] <span style="color:#000">=</span> <span style="color:#000">rch</span>[<span style="color:#000">x</span>] <span style="color:#000">=</span> <span style="color:#000">lzy</span>[<span style="color:#000">x</span>] <span style="color:#000">=</span> <span style="color:#000">ch</span>; }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">void</span> <span style="color:#000">push_down</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">l</span>, <span style="color:#a90d91">int</span> <span style="color:#000">r</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">lzy</span>[<span style="color:#000">x</span>] <span style="color:#000">==</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">return</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">mid</span> <span style="color:#000">=</span> (<span style="color:#000">l</span> <span style="color:#000">+</span> <span style="color:#000">r</span>) <span style="color:#000">/</span> <span style="color:#1c01ce">2</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">access</span>(<span style="color:#000">ls</span>(<span style="color:#000">x</span>), <span style="color:#000">lzy</span>[<span style="color:#000">x</span>], <span style="color:#000">mid</span> <span style="color:#000">-</span> <span style="color:#000">l</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>), <span style="color:#000">access</span>(<span style="color:#000">rs</span>(<span style="color:#000">x</span>), <span style="color:#000">lzy</span>[<span style="color:#000">x</span>], <span style="color:#000">r</span> <span style="color:#000">-</span> <span style="color:#000">mid</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">lzy</span>[<span style="color:#000">x</span>] <span style="color:#000">=</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">void</span> <span style="color:#000">build</span>(<span style="color:#a90d91">int</span> <span style="color:#000">l</span>, <span style="color:#a90d91">int</span> <span style="color:#000">r</span>, <span style="color:#a90d91">int</span> <span style="color:#000">k</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">l</span> <span style="color:#000">==</span> <span style="color:#000">r</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">lch</span>[<span style="color:#000">k</span>] <span style="color:#000">=</span> <span style="color:#000">rch</span>[<span style="color:#000">k</span>] <span style="color:#000">=</span> <span style="color:#000">s</span>[<span style="color:#000">l</span>] <span style="color:#000">-</span> <span style="color:#2300ce">&#39;a&#39;</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">return</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">mid</span> <span style="color:#000">=</span> (<span style="color:#000">l</span> <span style="color:#000">+</span> <span style="color:#000">r</span>) <span style="color:#000">/</span> <span style="color:#1c01ce">2</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">build</span>(<span style="color:#000">l</span>, <span style="color:#000">mid</span>, <span style="color:#000">ls</span>(<span style="color:#000">k</span>)), <span style="color:#000">build</span>(<span style="color:#000">mid</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">r</span>, <span style="color:#000">rs</span>(<span style="color:#000">k</span>));
</span></span><span style="display:flex;"><span>        <span style="color:#000">push_up</span>(<span style="color:#000">k</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">void</span> <span style="color:#000">modify</span>(<span style="color:#a90d91">int</span> <span style="color:#000">l</span>, <span style="color:#a90d91">int</span> <span style="color:#000">r</span>, <span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>, <span style="color:#a90d91">int</span> <span style="color:#000">v</span>, <span style="color:#a90d91">int</span> <span style="color:#000">k</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">l</span> <span style="color:#000">&gt;=</span> <span style="color:#000">x</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">r</span> <span style="color:#000">&lt;=</span> <span style="color:#000">y</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">access</span>(<span style="color:#000">k</span>, <span style="color:#000">v</span>, <span style="color:#000">r</span> <span style="color:#000">-</span> <span style="color:#000">l</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">return</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">mid</span> <span style="color:#000">=</span> (<span style="color:#000">l</span> <span style="color:#000">+</span> <span style="color:#000">r</span>) <span style="color:#000">/</span> <span style="color:#1c01ce">2</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">push_down</span>(<span style="color:#000">k</span>, <span style="color:#000">l</span>, <span style="color:#000">r</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">x</span> <span style="color:#000">&lt;=</span> <span style="color:#000">mid</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">modify</span>(<span style="color:#000">l</span>, <span style="color:#000">mid</span>, <span style="color:#000">x</span>, <span style="color:#000">y</span>, <span style="color:#000">v</span>, <span style="color:#000">ls</span>(<span style="color:#000">k</span>));
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">y</span> <span style="color:#000">&gt;</span> <span style="color:#000">mid</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">modify</span>(<span style="color:#000">mid</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">r</span>, <span style="color:#000">x</span>, <span style="color:#000">y</span>, <span style="color:#000">v</span>, <span style="color:#000">rs</span>(<span style="color:#000">k</span>));
</span></span><span style="display:flex;"><span>        <span style="color:#000">push_up</span>(<span style="color:#000">k</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">Tree</span>() { <span style="color:#000">memset</span>(<span style="color:#000">lzy</span>, <span style="color:#000">-</span><span style="color:#1c01ce">1</span>, <span style="color:#a90d91">sizeof</span>(<span style="color:#000">lzy</span>)); }
</span></span><span style="display:flex;"><span>} <span style="color:#000">t</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">pos</span>[<span style="color:#000">maxk</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">ios</span><span style="color:#000">::</span><span style="color:#000">sync_with_stdio</span>(<span style="color:#a90d91">false</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">m</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">k</span> <span style="color:#000">&gt;&gt;</span> (<span style="color:#000">s</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">t</span>.<span style="color:#000">build</span>(<span style="color:#1c01ce">1</span>, <span style="color:#000">n</span>, <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">opt</span>, <span style="color:#000">x</span>, <span style="color:#000">y</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">char</span> <span style="color:#000">ch</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> (<span style="color:#000">m</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">opt</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">opt</span> <span style="color:#000">==</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">x</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">y</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">ch</span>, <span style="color:#000">t</span>.<span style="color:#000">modify</span>(<span style="color:#1c01ce">1</span>, <span style="color:#000">n</span>, <span style="color:#000">x</span>, <span style="color:#000">y</span>, <span style="color:#000">ch</span> <span style="color:#000">-</span> <span style="color:#2300ce">&#39;a&#39;</span>, <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> (<span style="color:#000">s</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">k</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">pos</span>[<span style="color:#000">s</span>[<span style="color:#000">i</span>] <span style="color:#000">-</span> <span style="color:#2300ce">&#39;a&#39;</span>] <span style="color:#000">=</span> <span style="color:#000">i</span>;
</span></span><span style="display:flex;"><span>              
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">k</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;</span> <span style="color:#000">k</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                    <span style="color:#a90d91">if</span> (<span style="color:#000">pos</span>[<span style="color:#000">i</span>] <span style="color:#000">&gt;=</span> <span style="color:#000">pos</span>[<span style="color:#000">j</span>])
</span></span><span style="display:flex;"><span>                        <span style="color:#000">ans</span> <span style="color:#000">+=</span> <span style="color:#000">t</span>.<span style="color:#000">cnt</span>[<span style="color:#1c01ce">1</span>][<span style="color:#000">i</span>][<span style="color:#000">j</span>];
</span></span><span style="display:flex;"><span>            <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">ans</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div>]]></content:encoded>
    </item>
    
    <item>
      <title>Codeforces Round 544 (Div. 3)</title>
      <link>https://luoyisu.github.io/posts/cf-contest1133/</link>
      <pubDate>Mon, 27 Dec 2021 09:19:11 +0000</pubDate>
      
      <guid>https://luoyisu.github.io/posts/cf-contest1133/</guid>
      <description>&lt;h2 id=&#34;概述&#34;&gt;概述&lt;/h2&gt;
&lt;p&gt;很水的一场比赛，快来做前几场比赛的小清新题！！&lt;/p&gt;</description>
      <content:encoded><![CDATA[<h2 id="概述">概述</h2>
<p>很水的一场比赛，快来做前几场比赛的小清新题！！</p>
<h2 id="ahttpscodeforcescontest1133problema"><a href="https://codeforc.es/contest/1133/problem/A">A</a></h2>
<h3 id="description">Description</h3>
<p>给出两个时间，求它们中点时间。</p>
<h3 id="solution">Solution</h3>
<p>把小时和分钟转化成分钟再取中点，再转化回去即可。</p>
<h3 id="code">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;string&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cctype&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cerr</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">char</span> <span style="color:#000">a</span>[<span style="color:#000">maxn</span>], <span style="color:#000">b</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">change</span>(<span style="color:#a90d91">char</span> <span style="color:#000">*</span><span style="color:#000">a</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">h</span> <span style="color:#000">=</span> (<span style="color:#000">a</span>[<span style="color:#1c01ce">0</span>] <span style="color:#000">-</span> <span style="color:#2300ce">&#39;0&#39;</span>) <span style="color:#000">*</span> <span style="color:#1c01ce">10</span> <span style="color:#000">+</span> <span style="color:#000">a</span>[<span style="color:#1c01ce">1</span>] <span style="color:#000">-</span> <span style="color:#2300ce">&#39;0&#39;</span>, <span style="color:#000">m</span> <span style="color:#000">=</span> (<span style="color:#000">a</span>[<span style="color:#1c01ce">3</span>] <span style="color:#000">-</span> <span style="color:#2300ce">&#39;0&#39;</span>) <span style="color:#000">*</span> <span style="color:#1c01ce">10</span> <span style="color:#000">+</span> <span style="color:#000">a</span>[<span style="color:#1c01ce">4</span>] <span style="color:#000">-</span> <span style="color:#2300ce">&#39;0&#39;</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#000">h</span> <span style="color:#000">*</span> <span style="color:#1c01ce">60</span> <span style="color:#000">+</span> <span style="color:#000">m</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">string</span> <span style="color:#000">enchange</span>(<span style="color:#a90d91">int</span> <span style="color:#000">mid</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">string</span> <span style="color:#000">s</span> <span style="color:#000">=</span> <span style="color:#c41a16">&#34;     &#34;</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">h</span> <span style="color:#000">=</span> <span style="color:#000">mid</span> <span style="color:#000">/</span> <span style="color:#1c01ce">60</span>, <span style="color:#000">m</span> <span style="color:#000">=</span> <span style="color:#000">mid</span> <span style="color:#000">%</span> <span style="color:#1c01ce">60</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">s</span>[<span style="color:#1c01ce">0</span>] <span style="color:#000">=</span> <span style="color:#000">h</span> <span style="color:#000">/</span> <span style="color:#1c01ce">10</span> <span style="color:#000">+</span> <span style="color:#2300ce">&#39;0&#39;</span>, <span style="color:#000">s</span>[<span style="color:#1c01ce">1</span>] <span style="color:#000">=</span> <span style="color:#000">h</span> <span style="color:#000">%</span> <span style="color:#1c01ce">10</span> <span style="color:#000">+</span> <span style="color:#2300ce">&#39;0&#39;</span>, <span style="color:#000">s</span>[<span style="color:#1c01ce">2</span>] <span style="color:#000">=</span> <span style="color:#2300ce">&#39;:&#39;</span>, <span style="color:#000">s</span>[<span style="color:#1c01ce">3</span>] <span style="color:#000">=</span> <span style="color:#000">m</span> <span style="color:#000">/</span> <span style="color:#1c01ce">10</span> <span style="color:#000">+</span> <span style="color:#2300ce">&#39;0&#39;</span>, <span style="color:#000">s</span>[<span style="color:#1c01ce">4</span>] <span style="color:#000">=</span> <span style="color:#000">m</span> <span style="color:#000">%</span> <span style="color:#1c01ce">10</span> <span style="color:#000">+</span> <span style="color:#2300ce">&#39;0&#39;</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#000">s</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">a</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">b</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">p</span> <span style="color:#000">=</span> <span style="color:#000">change</span>(<span style="color:#000">a</span>), <span style="color:#000">q</span> <span style="color:#000">=</span> <span style="color:#000">change</span>(<span style="color:#000">b</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">mid</span> <span style="color:#000">=</span> (<span style="color:#000">p</span> <span style="color:#000">+</span> <span style="color:#000">q</span>) <span style="color:#000">/</span> <span style="color:#1c01ce">2</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">enchange</span>(<span style="color:#000">mid</span>) <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="bhttpscodeforcescontest1133problemb"><a href="https://codeforc.es/contest/1133/problem/B">B</a></h2>
<h3 id="description-1">Description</h3>
<p>从 $n$​ 个数中每次选两个数，这两个数的和必须为 $k$ 的倍数。问最多能选出多少个数满足条件。</p>
<h3 id="solution-1">Solution</h3>
<p>显然加入一个数模 $k$ 是 $x$，那么他只能和模 $k$ 是 $k-x$​ 的数配对。</p>
<p>开一个桶记录一下每种余数的个数然后统计答案即可。</p>
<h3 id="code-1">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cctype&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cerr</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2e5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">a</span>[<span style="color:#000">maxn</span>], <span style="color:#000">b</span>[<span style="color:#000">maxn</span>], <span style="color:#000">k</span>, <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">ios</span><span style="color:#000">::</span><span style="color:#000">sync_with_stdio</span>(<span style="color:#a90d91">false</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">k</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">x</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">x</span>, <span style="color:#000">b</span>[<span style="color:#000">x</span> <span style="color:#000">%</span> <span style="color:#000">k</span>]<span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#000">b</span>[<span style="color:#1c01ce">0</span>] <span style="color:#000">/</span> <span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#1c01ce">2</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">k</span> <span style="color:#000">/</span> <span style="color:#1c01ce">2</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">ans</span> <span style="color:#000">+=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">min</span>(<span style="color:#000">b</span>[<span style="color:#000">i</span>], <span style="color:#000">b</span>[<span style="color:#000">k</span> <span style="color:#000">-</span> <span style="color:#000">i</span>]) <span style="color:#000">*</span> <span style="color:#1c01ce">2</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">k</span> <span style="color:#000">%</span> <span style="color:#1c01ce">2</span> <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">ans</span> <span style="color:#000">+=</span> <span style="color:#000">b</span>[<span style="color:#000">k</span> <span style="color:#000">/</span> <span style="color:#1c01ce">2</span>] <span style="color:#000">/</span> <span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#1c01ce">2</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>        <span style="color:#000">ans</span> <span style="color:#000">+=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">min</span>(<span style="color:#000">b</span>[<span style="color:#000">k</span> <span style="color:#000">/</span> <span style="color:#1c01ce">2</span>], <span style="color:#000">b</span>[<span style="color:#000">k</span> <span style="color:#000">/</span> <span style="color:#1c01ce">2</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>]) <span style="color:#000">*</span> <span style="color:#1c01ce">2</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">ans</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="chttpscodeforcescontest1133problemc"><a href="https://codeforc.es/contest/1133/problem/C">C</a></h2>
<h3 id="description-2">Description</h3>
<p>给 $n$​​​​ 个数，让你找出 $m$​​​ 个数，使得这 $m$​​ 个数中的最大值减去最小值不大于 $5$​，求最大的 $m$。</p>
<h3 id="solution-2">Solution</h3>
<p>排序 + 双指针，太水了我都不知道该说什么。</p>
<h3 id="code-2">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cctype&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cerr</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2e5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">a</span>[<span style="color:#000">maxn</span>], <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">sort</span>(<span style="color:#000">a</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">a</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">+</span> <span style="color:#000">n</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">l</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">r</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> (<span style="color:#000">l</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">while</span> (<span style="color:#000">r</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">a</span>[<span style="color:#000">r</span>] <span style="color:#000">-</span> <span style="color:#000">a</span>[<span style="color:#000">l</span>] <span style="color:#000">&lt;=</span> <span style="color:#1c01ce">5</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">r</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">max</span>(<span style="color:#000">ans</span>, <span style="color:#000">r</span> <span style="color:#000">-</span> <span style="color:#000">l</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">l</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">ans</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="dhttpscodeforcescontest1133problemd"><a href="https://codeforc.es/contest/1133/problem/D">D</a></h2>
<h3 id="description-3">Description</h3>
<p>给出两个长度为 $n$ 的数组 $a,b$。</p>
<p>你想要创建一个长度为 $n$​​ 的数组 $c$​​，且 $c_i=d\times a_i+b_i,i\in[1, n]$​​，要求你给 $d$​  赋值，使得数组 $c$​​ 中的 $0$​​ 的个数最多并输出最多的 $0$​​ 的个数。</p>
<h3 id="solution-3">Solution</h3>
<p>$$
c_i=d\times a_i+b_i\Rightarrow d=\frac{-b_i}{a_i}
$$</p>
<p>可以算出来让每个数变成 $0$​ 的 $d$​ 是多少，然后看看出现次数最多是多少。</p>
<p>为了避免浮点误差，我们把分子分母约分一下然后放进 map 里。</p>
<p>特判一下本来就是 $0$ 的情况。</p>
<h3 id="code-3">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cctype&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;map&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;utility&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cerr</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">gcd</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>) { <span style="color:#a90d91">return</span> <span style="color:#000">y</span> <span style="color:#000">==</span> <span style="color:#1c01ce">0</span> <span style="color:#000">?</span> <span style="color:#000">x</span> : <span style="color:#000">gcd</span>(<span style="color:#000">y</span>, <span style="color:#000">x</span> <span style="color:#000">%</span> <span style="color:#000">y</span>); }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">typedef</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">pair</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span>, <span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">pii</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1e6</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">map</span><span style="color:#000">&lt;</span><span style="color:#000">pii</span>, <span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">mp</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">a</span>[<span style="color:#000">maxn</span>], <span style="color:#000">b</span>[<span style="color:#000">maxn</span>], <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">ans</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">b</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">a</span>[<span style="color:#000">i</span>] <span style="color:#000">&lt;</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">a</span>[<span style="color:#000">i</span>] <span style="color:#000">*=</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span>, <span style="color:#000">b</span>[<span style="color:#000">i</span>] <span style="color:#000">*=</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span> <span style="color:#a90d91">if</span> (<span style="color:#000">a</span>[<span style="color:#000">i</span>] <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">ans</span> <span style="color:#000">+=</span> <span style="color:#000">b</span>[<span style="color:#000">i</span>] <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">a</span>[<span style="color:#000">i</span>] <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">continue</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">d</span> <span style="color:#000">=</span> <span style="color:#000">gcd</span>(<span style="color:#000">a</span>[<span style="color:#000">i</span>], <span style="color:#000">b</span>[<span style="color:#000">i</span>] <span style="color:#000">&lt;</span> <span style="color:#1c01ce">0</span> <span style="color:#000">?</span> <span style="color:#000">-</span><span style="color:#000">b</span>[<span style="color:#000">i</span>] <span style="color:#000">:</span> <span style="color:#000">b</span>[<span style="color:#000">i</span>]);
</span></span><span style="display:flex;"><span>        <span style="color:#000">a</span>[<span style="color:#000">i</span>] <span style="color:#000">/=</span> <span style="color:#000">d</span>, <span style="color:#000">b</span>[<span style="color:#000">i</span>] <span style="color:#000">/=</span> <span style="color:#000">d</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">mp</span>[<span style="color:#000">pii</span>(<span style="color:#000">a</span>[<span style="color:#000">i</span>], <span style="color:#000">b</span>[<span style="color:#000">i</span>])]<span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">cnt</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">auto</span> <span style="color:#000">k</span> : <span style="color:#000">mp</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">cnt</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">max</span>(<span style="color:#000">cnt</span>, <span style="color:#000">k</span>.<span style="color:#000">second</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">ans</span> <span style="color:#000">+</span> <span style="color:#000">cnt</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="ehttpscodeforcescontest1133probleme"><a href="https://codeforc.es/contest/1133/problem/E">E</a></h2>
<h3 id="description-4">Description</h3>
<p>您是本地大学的教练，有 $n$ ​位选手在你这里学习，并且已知第 $i$ ​位的能力值为 $a_i$​。</p>
<p>现在您需要挑选出若干位选手组成至多 $k$ ​支队伍。众所周知，参赛的人数越多，你的大学获胜的概率越大。所以，你需要使得你选出的至多$k$​支（至少$1$​支）<strong>非空</strong>队伍的<strong>总人数</strong>最多。但是，你知道<strong>每支</strong>队伍中队员们的实力应当<em>差不多</em>，这意味着对于<strong>任意</strong>一支队伍，不应当存在两名实力值相差超过 $5$ ​​的选手。所有的队伍都是相互独立的（这意味着我们不考虑来自两只不同队伍的选手的实力值差距）。</p>
<p>可能有的选手不属于任何一支队伍。</p>
<p>您的任务是求出满足以上要求的至多 $k$​（至少 $1$​​）支<strong>非空</strong>队伍的<strong>总人数</strong>。</p>
<p>$n,k\leq5000$。</p>
<h3 id="solution-4">Solution</h3>
<p>数据范围告诉我们要 DP。</p>
<p>我们把实力值排个序，显然如果选了一个人，把和他实力值相差小于 $5$ 的人全选上是最优的。</p>
<p>预处理一个 $lst_i$ 表示第 $i$ 个人，上一个实力值比他小超过 $5$ 的人的位置。</p>
<p>设 $f(i,j)$ 表示前 $i$ 个人，已经组了 $j$​​ 个队伍的参赛总人数。</p>
<p>然后考虑这个人选不选，有：
$$
f(i,j)=\max(f(i-1,j),f(lst_i,j-1)+i-lst_i)
$$
前面是不选，后面是选。</p>
<p>直接转移即可，时间复杂度 $O(nk)$。</p>
<h3 id="code-4">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cctype&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cerr</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">5010</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">lst</span>[<span style="color:#000">maxn</span>], <span style="color:#000">f</span>[<span style="color:#000">maxn</span>][<span style="color:#000">maxn</span>], <span style="color:#000">a</span>[<span style="color:#000">maxn</span>], <span style="color:#000">n</span>, <span style="color:#000">k</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">ios</span><span style="color:#000">::</span><span style="color:#000">sync_with_stdio</span>(<span style="color:#a90d91">false</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">k</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">sort</span>(<span style="color:#000">a</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">a</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">+</span> <span style="color:#000">n</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">pos</span> <span style="color:#000">=</span> <span style="color:#000">i</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">while</span> (<span style="color:#000">pos</span> <span style="color:#000">&gt;=</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>] <span style="color:#000">-</span> <span style="color:#000">a</span>[<span style="color:#000">pos</span>] <span style="color:#000">&lt;=</span> <span style="color:#1c01ce">5</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">pos</span><span style="color:#000">--</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">lst</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">pos</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;=</span> <span style="color:#000">k</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">f</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>] <span style="color:#000">=</span> <span style="color:#000">f</span>[<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>][<span style="color:#000">j</span>];
</span></span><span style="display:flex;"><span>            <span style="color:#000">f</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>] <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">max</span>(<span style="color:#000">f</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>], <span style="color:#000">f</span>[<span style="color:#000">lst</span>[<span style="color:#000">i</span>]][<span style="color:#000">j</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">+</span> <span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#000">lst</span>[<span style="color:#000">i</span>]);
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">f</span>[<span style="color:#000">n</span>][<span style="color:#000">k</span>] <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="f1httpscodeforcescontest1133problemf1"><a href="https://codeforc.es/contest/1133/problem/F1">F1</a></h2>
<h3 id="description-5">Description</h3>
<p>给出了一个由 $n$​ 个顶点和 $m$ 条边组成的无向无权连通图。它保证在给定的图中没有自环或重边。</p>
<p>你的任务是找到这个图的一棵生成树，使得树上点的最大度数尽可能地大。</p>
<h3 id="solution-5">Solution</h3>
<p>很显然我们可以构造出一棵以原图中度数最大的点为根，包括其在原图上所有相邻结点的树。</p>
<p>BFS 构造一下就行。</p>
<h3 id="code-5">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;queue&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cctype&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cerr</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2e5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">n</span>, <span style="color:#000">m</span>, <span style="color:#000">d</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">vector</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">e</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">add</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>) { <span style="color:#000">e</span>[<span style="color:#000">x</span>].<span style="color:#000">push_back</span>(<span style="color:#000">y</span>), <span style="color:#000">e</span>[<span style="color:#000">y</span>].<span style="color:#000">push_back</span>(<span style="color:#000">x</span>); }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">cnt</span>, <span style="color:#000">vis</span>[<span style="color:#000">maxn</span>], <span style="color:#000">vis2</span>[<span style="color:#000">maxn</span>], <span style="color:#000">used</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">bfs</span>(<span style="color:#a90d91">int</span> <span style="color:#000">s</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">queue</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">q</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">vis2</span>[<span style="color:#000">s</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">q</span>.<span style="color:#000">push</span>(<span style="color:#000">s</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> (<span style="color:#000">!</span><span style="color:#000">q</span>.<span style="color:#000">empty</span>())
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">q</span>.<span style="color:#000">front</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#000">q</span>.<span style="color:#000">pop</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">v</span> : <span style="color:#000">e</span>[<span style="color:#000">x</span>])
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">!</span><span style="color:#000">vis2</span>[<span style="color:#000">v</span>])
</span></span><span style="display:flex;"><span>                <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">x</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">v</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>, <span style="color:#000">q</span>.<span style="color:#000">push</span>(<span style="color:#000">v</span>), <span style="color:#000">vis2</span>[<span style="color:#000">v</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">m</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>, <span style="color:#000">x</span>, <span style="color:#000">y</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">m</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">x</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">y</span>, <span style="color:#000">add</span>(<span style="color:#000">x</span>, <span style="color:#000">y</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">s</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">e</span>[<span style="color:#000">i</span>].<span style="color:#000">size</span>() <span style="color:#000">&gt;</span> <span style="color:#000">e</span>[<span style="color:#000">s</span>].<span style="color:#000">size</span>())
</span></span><span style="display:flex;"><span>            <span style="color:#000">s</span> <span style="color:#000">=</span> <span style="color:#000">i</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">bfs</span>(<span style="color:#000">s</span>);
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="f2httpscodeforcescontest1133problemf2"><a href="https://codeforc.es/contest/1133/problem/F2">F2</a></h2>
<h3 id="description-6">Description</h3>
<p>给你一个图，让你构造出一个编号为 $1$ 的点的度数为 $D$​ ​的树</p>
<p>（保证没有自环和重边）</p>
<h3 id="solution-6">Solution</h3>
<p>我们设这棵树以 $1$ 为根。</p>
<p>一开始想的是假如 $1$ 的一个子树内有一条边连向另一个子树，那么这条边就可以删掉。</p>
<p>感觉很点双啊。。。。。。</p>
<p>后来转念一想，都点双了，我们直接把 $1$ 号点删掉然后看有几个联通块不就能得到能删掉几条边了吗？。。。</p>
<p>这样就能判断出来有解的条件：</p>
<ul>
<li>点 $1$ 的度数不小于 $D$；</li>
<li>删掉 $1$ 之后连通块个数不大于 $D$​。</li>
</ul>
<p>可以 DFS 找连通块，用和 F1 类似的 BFS 做法输出答案。</p>
<h3 id="code-6">Code</h3>
<p>很丑。</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;queue&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cctype&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cerr</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2e5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">n</span>, <span style="color:#000">m</span>, <span style="color:#000">d</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">vector</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">e</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">add</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>) { <span style="color:#000">e</span>[<span style="color:#000">x</span>].<span style="color:#000">push_back</span>(<span style="color:#000">y</span>), <span style="color:#000">e</span>[<span style="color:#000">y</span>].<span style="color:#000">push_back</span>(<span style="color:#000">x</span>); }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">cnt</span>, <span style="color:#000">vis</span>[<span style="color:#000">maxn</span>], <span style="color:#000">vis2</span>[<span style="color:#000">maxn</span>], <span style="color:#000">used</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">dfs</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">p</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">vis</span>[<span style="color:#000">x</span>] <span style="color:#000">=</span> <span style="color:#000">p</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">v</span> : <span style="color:#000">e</span>[<span style="color:#000">x</span>])
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">v</span> <span style="color:#000">!=</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">!</span><span style="color:#000">vis</span>[<span style="color:#000">v</span>])
</span></span><span style="display:flex;"><span>            <span style="color:#000">dfs</span>(<span style="color:#000">v</span>, <span style="color:#000">p</span>);
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">bfs</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">queue</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">q</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">vis2</span>[<span style="color:#1c01ce">1</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">tot</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> (<span style="color:#a90d91">int</span>)<span style="color:#000">e</span>[<span style="color:#1c01ce">1</span>].<span style="color:#000">size</span>(); <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">!</span><span style="color:#000">used</span>[<span style="color:#000">vis</span>[<span style="color:#000">e</span>[<span style="color:#1c01ce">1</span>][<span style="color:#000">i</span>]]])
</span></span><span style="display:flex;"><span>            <span style="color:#000">q</span>.<span style="color:#000">push</span>(<span style="color:#000">e</span>[<span style="color:#1c01ce">1</span>][<span style="color:#000">i</span>]), <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">e</span>[<span style="color:#1c01ce">1</span>][<span style="color:#000">i</span>] <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>, <span style="color:#000">vis2</span>[<span style="color:#000">e</span>[<span style="color:#1c01ce">1</span>][<span style="color:#000">i</span>]] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">used</span>[<span style="color:#000">vis</span>[<span style="color:#000">e</span>[<span style="color:#1c01ce">1</span>][<span style="color:#000">i</span>]]] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">tot</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">v</span> : <span style="color:#000">e</span>[<span style="color:#1c01ce">1</span>])
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">!</span><span style="color:#000">vis2</span>[<span style="color:#000">v</span>])
</span></span><span style="display:flex;"><span>            <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">v</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>, <span style="color:#000">vis2</span>[<span style="color:#000">v</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">tot</span><span style="color:#000">++</span>, <span style="color:#000">q</span>.<span style="color:#000">push</span>(<span style="color:#000">v</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">tot</span> <span style="color:#000">==</span> <span style="color:#000">d</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">break</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> (<span style="color:#000">!</span><span style="color:#000">q</span>.<span style="color:#000">empty</span>())
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">q</span>.<span style="color:#000">front</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#000">q</span>.<span style="color:#000">pop</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">v</span> : <span style="color:#000">e</span>[<span style="color:#000">x</span>])
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">!</span><span style="color:#000">vis2</span>[<span style="color:#000">v</span>])
</span></span><span style="display:flex;"><span>                <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">x</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">v</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>, <span style="color:#000">q</span>.<span style="color:#000">push</span>(<span style="color:#000">v</span>), <span style="color:#000">vis2</span>[<span style="color:#000">v</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">m</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">d</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>, <span style="color:#000">x</span>, <span style="color:#000">y</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">m</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">x</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">y</span>, <span style="color:#000">add</span>(<span style="color:#000">x</span>, <span style="color:#000">y</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">!</span><span style="color:#000">vis</span>[<span style="color:#000">i</span>])
</span></span><span style="display:flex;"><span>            <span style="color:#000">dfs</span>(<span style="color:#000">i</span>, <span style="color:#000">++</span><span style="color:#000">cnt</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> ((<span style="color:#a90d91">int</span>)<span style="color:#000">e</span>[<span style="color:#1c01ce">1</span>].<span style="color:#000">size</span>() <span style="color:#000">&lt;</span> <span style="color:#000">d</span> <span style="color:#000">||</span> <span style="color:#000">cnt</span> <span style="color:#000">&gt;</span> <span style="color:#000">d</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">puts</span>(<span style="color:#c41a16">&#34;NO&#34;</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#177500">//for (int i = 1; i &lt;= n; i++)
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>    <span style="color:#177500">//    cout &lt;&lt; vis[i] &lt;&lt; &#34; &#34;;
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>    <span style="color:#177500">//cout &lt;&lt; endl;
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>    <span style="color:#000">puts</span>(<span style="color:#c41a16">&#34;YES&#34;</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">bfs</span>();
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div>]]></content:encoded>
    </item>
    
    <item>
      <title>Codeforces Testing Round 5</title>
      <link>https://luoyisu.github.io/posts/cf-contest267/</link>
      <pubDate>Sat, 25 Dec 2021 11:22:20 +0000</pubDate>
      
      <guid>https://luoyisu.github.io/posts/cf-contest267/</guid>
      <description>&lt;h2 id=&#34;概述&#34;&gt;概述&lt;/h2&gt;
&lt;p&gt;C 可以一做。&lt;/p&gt;
&lt;p&gt;别问为什么就三道题。&lt;/p&gt;</description>
      <content:encoded><![CDATA[<h2 id="概述">概述</h2>
<p>C 可以一做。</p>
<p>别问为什么就三道题。</p>
<h2 id="ahttpscodeforcescontest267problema"><a href="https://codeforc.es/contest/267/problem/A">A</a></h2>
<h3 id="description">Description</h3>
<p>给定两个数，每次用大数减去小数的差代替这个数，并称为一次操作。问有一个数为 $0$ 的时候一共有多少次操作。</p>
<p>输入：第一行是一个正整数 $n$，表示数据的组数。接下来 $n$ 行，每行两个正整数 $a_i$ 和 $b_i$ 表示给定的两数。</p>
<p>$a_i,b_i\leq10^9$。</p>
<h3 id="solution">Solution</h3>
<p>发现这就是一个辗转相减求最大公约数的流程，显然暴力不行。</p>
<p>但我们在普通辗转相除求最大公约数的时候统计一下答案就行。</p>
<p>属实是考验了对基础算法的理解。</p>
<h3 id="code">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">gcd</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">y</span> <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">ans</span> <span style="color:#000">+=</span> <span style="color:#000">x</span> <span style="color:#000">/</span> <span style="color:#000">y</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#000">gcd</span>(<span style="color:#000">y</span>, <span style="color:#000">x</span> <span style="color:#000">%</span> <span style="color:#000">y</span>);
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">T</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">T</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> (<span style="color:#000">T</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">a</span>, <span style="color:#000">b</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">a</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">b</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">a</span> <span style="color:#000">&lt;</span> <span style="color:#000">b</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">swap</span>(<span style="color:#000">a</span>, <span style="color:#000">b</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">gcd</span>(<span style="color:#000">a</span>, <span style="color:#000">b</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">ans</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="bhttpscodeforcescontest267problemb"><a href="https://codeforc.es/contest/267/problem/B">B</a></h2>
<h3 id="description-1">Description</h3>
<p>给定 $n$ 和 $n$ 个二元组 $(a_i,b_i)$ 。</p>
<p>你可以任意排列这几个二元组，也可以任意更换一个二元组之间的两个元素的顺序。</p>
<p>是否存在一种解，使得任意相邻的两个二元组中，相邻的两个元素相等。</p>
<p>输出其排列顺序，并输出其是否需要改变两个元素的顺序。</p>
<h3 id="solution-1">Solution</h3>
<p>这个东西一看就非常欧拉路，我们把二元组的两个数之间连一个双向边，然后找欧拉路即可。</p>
<p>最后输出边的方案。</p>
<h3 id="code-1">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;stack&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cctype&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cerr</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">110</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">struct</span> <span style="color:#3f6e75">edge</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">y</span>, <span style="color:#000">i</span>, <span style="color:#000">pos</span>;
</span></span><span style="display:flex;"><span>};
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">vector</span><span style="color:#000">&lt;</span><span style="color:#000">edge</span><span style="color:#000">&gt;</span> <span style="color:#000">e</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">add</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>, <span style="color:#a90d91">int</span> <span style="color:#000">i</span>) { <span style="color:#000">e</span>[<span style="color:#000">x</span>].<span style="color:#000">push_back</span>({<span style="color:#000">y</span>, <span style="color:#000">i</span>, <span style="color:#1c01ce">1</span>}), <span style="color:#000">e</span>[<span style="color:#000">y</span>].<span style="color:#000">push_back</span>({<span style="color:#000">x</span>, <span style="color:#000">i</span>, <span style="color:#1c01ce">0</span>}); }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">stack</span><span style="color:#000">&lt;</span><span style="color:#000">edge</span><span style="color:#000">&gt;</span> <span style="color:#000">ans</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">vis</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">dfs</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">edge</span> <span style="color:#000">i</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> (<span style="color:#000">e</span>[<span style="color:#000">x</span>].<span style="color:#000">size</span>())
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">y</span> <span style="color:#000">=</span> <span style="color:#000">e</span>[<span style="color:#000">x</span>].<span style="color:#000">back</span>().<span style="color:#000">y</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#000">e</span>[<span style="color:#000">x</span>].<span style="color:#000">back</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#000">e</span>[<span style="color:#000">x</span>].<span style="color:#000">pop_back</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">vis</span>[<span style="color:#000">i</span>.<span style="color:#000">i</span>])
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">continue</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">vis</span>[<span style="color:#000">i</span>.<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">dfs</span>(<span style="color:#000">y</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">ans</span>.<span style="color:#000">push</span>(<span style="color:#000">i</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">deg</span>[<span style="color:#000">maxn</span>], <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">ios</span><span style="color:#000">::</span><span style="color:#000">sync_with_stdio</span>(<span style="color:#a90d91">false</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">mx</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">s</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">x</span>, <span style="color:#000">y</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">x</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">y</span>, <span style="color:#000">add</span>(<span style="color:#000">x</span>, <span style="color:#000">y</span>, <span style="color:#000">i</span>), <span style="color:#000">deg</span>[<span style="color:#000">x</span>]<span style="color:#000">++</span>, <span style="color:#000">deg</span>[<span style="color:#000">y</span>]<span style="color:#000">++</span>, <span style="color:#000">s</span> <span style="color:#000">=</span> <span style="color:#000">y</span>, <span style="color:#000">mx</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">max</span>(<span style="color:#000">mx</span>, <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">max</span>(<span style="color:#000">x</span>, <span style="color:#000">y</span>));
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">flag</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">mx</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">deg</span>[<span style="color:#000">i</span>] <span style="color:#000">&amp;</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">s</span> <span style="color:#000">=</span> <span style="color:#000">i</span>, <span style="color:#000">flag</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">flag</span> <span style="color:#000">!=</span> <span style="color:#1c01ce">0</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">flag</span> <span style="color:#000">!=</span> <span style="color:#1c01ce">2</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">puts</span>(<span style="color:#c41a16">&#34;No solution&#34;</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">dfs</span>(<span style="color:#000">s</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> ((<span style="color:#a90d91">int</span>)<span style="color:#000">ans</span>.<span style="color:#000">size</span>() <span style="color:#000">!=</span> <span style="color:#000">n</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">puts</span>(<span style="color:#c41a16">&#34;No solution&#34;</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> (<span style="color:#000">!</span><span style="color:#000">ans</span>.<span style="color:#000">empty</span>())
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">auto</span> <span style="color:#000">p</span> <span style="color:#000">=</span> <span style="color:#000">ans</span>.<span style="color:#000">top</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#000">ans</span>.<span style="color:#000">pop</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">p</span>.<span style="color:#000">i</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span> <span style="color:#000">&lt;&lt;</span> (<span style="color:#000">p</span>.<span style="color:#000">pos</span> <span style="color:#000">?</span> <span style="color:#2300ce">&#39;+&#39;</span> <span style="color:#000">:</span> <span style="color:#2300ce">&#39;-&#39;</span>) <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="chttpscodeforcescontest267problemc"><a href="https://codeforc.es/contest/267/problem/C">C</a></h2>
<h3 id="description-2">Description</h3>
<p>给定一张 $n$ 点 $m$ 边的无向的网络流，源点为 $1$，汇点为 $n$。</p>
<p>第 $i$ 条边用<strong>有序</strong>数对 $(a_i,b_i) (a_i\not= b_i)$ 和容量值 $c_i$ 描述，表示连接 $a_i$ 与 $b_i$，容量为 $c_i$。</p>
<p>你应当给这条边赋一个实数流量 $x_i$，满足 $|x_i|\le c_i$，如果是正的表示从 $a_i$ 流向 $b_i$ 大小为 $x_i$，否则表示从 $b_i$ 流向 $a_i$ 大小为 $-x_i$。</p>
<p>你构造的流需要满足：</p>
<ul>
<li>
<p>流守恒。即对所有不为 $1$ 或 $n$ 的点 $u$，进入 $u$ 的流等于从 $u$ 出去的流。</p>
</li>
<li>
<p>对任意两个连通的节点 $x,y$，从 $x$ 到 $y$ 的所有路径 $x_i$（流量）的和都是相等的。</p>
</li>
</ul>
<p>现在请输出最大流（可以理解为 $\sum_v x_{1,v}$），并构造一个方案。</p>
<p>$1\leq n\leq100,1\leq m\leq5000$。</p>
<h3 id="solution-2">Solution</h3>
<p>这个题看上去挺莫名其妙的。把样例二画出来：</p>
<p><a href="https://imgtu.com/i/TU3Hl6">
  <img loading="lazy" src="https://s4.ax1x.com/2021/12/25/TU3Hl6.png" alt="sample"  /></a></p>
<p>看看这个图，和红的数字，似乎能发现什么东西&hellip;</p>
<p>我们给每个点一个高度（即图中红色的数字）。</p>
<p>根据第二个要求，任意两点之间，不管怎么走，高度的差值是一定的，而相邻两点高度差值就是这条边的流量。</p>
<p>再仔细想一想，在这道题中，图的形态固定，每条边的流量应该是有一个固定的比例的。</p>
<p>根据第一个要求：每个点出的流量和入的流量相等。</p>
<p>设 $out(i)$ 表示 $i$ 连向的点，$in(i)$ 表示连向 $i$ 的点，可以列出来一个方程：$\sum (h_i-h_{in(i)})=\sum(h_{out(i)}-h_i)$。</p>
<p>那么总共有 $n-2$ 个方程。</p>
<p>因为我们实际上是想要求流量，那么源点和汇点高度具体的值是无所谓的，减一下都会按照比例消掉。</p>
<p>我们自己设一下源点和汇点高度。</p>
<p>这样总共就有 $n$ 个方程，我们就可以解出来所有点的高度。（高斯消元）</p>
<p>很显然，如果我们把所有点高度都按照一定比例缩放，这两个限制仍然是成立的。</p>
<p>我们找到能缩放的最大比例，然后进行缩放，就得到了最大流（即和汇点相连的边的流量之和）和每条边的流量。</p>
<p>重边是不用特殊处理的。</p>
<p>复杂度是高斯消元的 $O(n^3)$。</p>
<h3 id="code-2">Code</h3>
<p>注意除以 $0$。</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cmath&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cctype&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cerr</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">110</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">double</span> <span style="color:#000">eps</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1e-8</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">e</span>[<span style="color:#000">maxn</span>][<span style="color:#000">maxn</span>], <span style="color:#000">n</span>, <span style="color:#000">m</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">double</span> <span style="color:#000">change</span>(<span style="color:#a90d91">double</span> <span style="color:#000">x</span>) { <span style="color:#a90d91">return</span> <span style="color:#000">x</span> <span style="color:#000">&lt;</span> <span style="color:#000">eps</span> <span style="color:#000">?</span> <span style="color:#000">eps</span> : <span style="color:#000">x</span>; }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">double</span> <span style="color:#000">a</span>[<span style="color:#000">maxn</span>][<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">double</span> <span style="color:#000">root</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">guass</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">i</span> <span style="color:#000">==</span> <span style="color:#000">j</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">continue</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">fabs</span>(<span style="color:#000">a</span>[<span style="color:#000">i</span>][<span style="color:#000">i</span>]) <span style="color:#000">&lt;</span> <span style="color:#000">eps</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">continue</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">double</span> <span style="color:#000">d</span> <span style="color:#000">=</span> <span style="color:#000">a</span>[<span style="color:#000">j</span>][<span style="color:#000">i</span>] <span style="color:#000">/</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>][<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">k</span> <span style="color:#000">=</span> <span style="color:#000">i</span>; <span style="color:#000">k</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">k</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">a</span>[<span style="color:#000">j</span>][<span style="color:#000">k</span>] <span style="color:#000">-=</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>][<span style="color:#000">k</span>] <span style="color:#000">*</span> <span style="color:#000">d</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">fabs</span>(<span style="color:#000">a</span>[<span style="color:#000">i</span>][<span style="color:#000">i</span>]) <span style="color:#000">&gt;</span> <span style="color:#000">eps</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">root</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>][<span style="color:#000">n</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">/</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>][<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">struct</span> <span style="color:#3f6e75">edge</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#000">y</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">double</span> <span style="color:#000">cap</span>;
</span></span><span style="display:flex;"><span>};
</span></span><span style="display:flex;"><span><span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">vector</span><span style="color:#000">&lt;</span><span style="color:#000">edge</span><span style="color:#000">&gt;</span> <span style="color:#000">edges</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">add</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>, <span style="color:#a90d91">double</span> <span style="color:#000">cap</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">edges</span>.<span style="color:#000">push_back</span>({<span style="color:#000">x</span>, <span style="color:#000">y</span>, <span style="color:#000">cap</span>});
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">x</span> <span style="color:#000">!=</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">x</span> <span style="color:#000">&lt;</span> <span style="color:#000">n</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">a</span>[<span style="color:#000">x</span>][<span style="color:#000">x</span>]<span style="color:#000">--</span>, <span style="color:#000">a</span>[<span style="color:#000">x</span>][<span style="color:#000">y</span>]<span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">y</span> <span style="color:#000">!=</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">y</span> <span style="color:#000">&lt;</span> <span style="color:#000">n</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">a</span>[<span style="color:#000">y</span>][<span style="color:#000">y</span>]<span style="color:#000">--</span>, <span style="color:#000">a</span>[<span style="color:#000">y</span>][<span style="color:#000">x</span>]<span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>    
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">m</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">double</span> <span style="color:#000">c</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">x</span>, <span style="color:#000">y</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">x</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">y</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">c</span>, <span style="color:#000">add</span>(<span style="color:#000">x</span>, <span style="color:#000">y</span>, <span style="color:#000">c</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">a</span>[<span style="color:#1c01ce">1</span>][<span style="color:#000">n</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">a</span>[<span style="color:#000">n</span>][<span style="color:#000">n</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">=</span> <span style="color:#000">n</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">a</span>[<span style="color:#1c01ce">1</span>][<span style="color:#1c01ce">1</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">a</span>[<span style="color:#000">n</span>][<span style="color:#000">n</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">guass</span>();
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">double</span> <span style="color:#000">mul</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1e18</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">flag</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">auto</span> <span style="color:#000">k</span> : <span style="color:#000">edges</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">fabs</span>(<span style="color:#000">root</span>[<span style="color:#000">k</span>.<span style="color:#000">y</span>] <span style="color:#000">-</span> <span style="color:#000">root</span>[<span style="color:#000">k</span>.<span style="color:#000">x</span>]) <span style="color:#000">&lt;</span> <span style="color:#000">eps</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">continue</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">mul</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">min</span>(<span style="color:#000">mul</span>, <span style="color:#1c01ce">1.0</span> <span style="color:#000">*</span> <span style="color:#000">k</span>.<span style="color:#000">cap</span> <span style="color:#000">/</span> <span style="color:#000">fabs</span>(<span style="color:#000">root</span>[<span style="color:#000">k</span>.<span style="color:#000">y</span>] <span style="color:#000">-</span> <span style="color:#000">root</span>[<span style="color:#000">k</span>.<span style="color:#000">x</span>])), <span style="color:#000">flag</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">!</span><span style="color:#000">flag</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">mul</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">root</span>[<span style="color:#000">i</span>] <span style="color:#000">*=</span> <span style="color:#000">mul</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">double</span> <span style="color:#000">sum</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">auto</span> <span style="color:#000">k</span> : <span style="color:#000">edges</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">k</span>.<span style="color:#000">x</span> <span style="color:#000">==</span> <span style="color:#000">n</span> <span style="color:#000">||</span> <span style="color:#000">k</span>.<span style="color:#000">y</span> <span style="color:#000">==</span> <span style="color:#000">n</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">sum</span> <span style="color:#000">+=</span> <span style="color:#000">fabs</span>(<span style="color:#000">root</span>[<span style="color:#000">k</span>.<span style="color:#000">y</span>] <span style="color:#000">-</span> <span style="color:#000">root</span>[<span style="color:#000">k</span>.<span style="color:#000">x</span>]);
</span></span><span style="display:flex;"><span>    <span style="color:#000">printf</span>(<span style="color:#c41a16">&#34;%lf</span><span style="color:#c41a16">\\</span><span style="color:#c41a16">n&#34;</span>, <span style="color:#000">sum</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">auto</span> <span style="color:#000">k</span> : <span style="color:#000">edges</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">printf</span>(<span style="color:#c41a16">&#34;%lf</span><span style="color:#c41a16">\\</span><span style="color:#c41a16">n&#34;</span>, <span style="color:#000">root</span>[<span style="color:#000">k</span>.<span style="color:#000">y</span>] <span style="color:#000">-</span> <span style="color:#000">root</span>[<span style="color:#000">k</span>.<span style="color:#000">x</span>]);
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div>]]></content:encoded>
    </item>
    
    <item>
      <title>Codeforces Round 214 (Div. 2)</title>
      <link>https://luoyisu.github.io/posts/cf-contest366/</link>
      <pubDate>Fri, 24 Dec 2021 10:36:36 +0000</pubDate>
      
      <guid>https://luoyisu.github.io/posts/cf-contest366/</guid>
      <description>&lt;h2 id=&#34;概述&#34;&gt;概述&lt;/h2&gt;
&lt;p&gt;没啥难题，也没有什么特别推荐的题。（快来做前几天的题！！）&lt;/p&gt;</description>
      <content:encoded><![CDATA[<h2 id="概述">概述</h2>
<p>没啥难题，也没有什么特别推荐的题。（快来做前几天的题！！）</p>
<h2 id="ahttpscodeforcescontest366problema"><a href="https://codeforc.es/contest/366/problem/A">A</a></h2>
<h3 id="description">Description</h3>
<p>有四个房间，每个房间有两个守卫，每个守卫可以用不小于一给定价钱的巧克力或果汁贿赂。</p>
<p>现在你有 $n$ 元要恰好花完，要贿赂一个房间里的两个守卫，问怎么分配钱。</p>
<h3 id="solution">Solution</h3>
<p>关键在于读懂英文题面，转化成上面的意思，然后就做完了。</p>
<h3 id="code">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cctype&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cerr</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">a</span>, <span style="color:#000">b</span>, <span style="color:#000">c</span>, <span style="color:#000">d</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">a</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">b</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">c</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">d</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">min</span>(<span style="color:#000">a</span>, <span style="color:#000">b</span>), <span style="color:#000">y</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">min</span>(<span style="color:#000">c</span>, <span style="color:#000">d</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">x</span> <span style="color:#000">+</span> <span style="color:#000">y</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">i</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">x</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">n</span> <span style="color:#000">-</span> <span style="color:#000">x</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">return</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="bhttpscodeforcescontest366problemb"><a href="https://codeforc.es/contest/366/problem/B">B</a></h2>
<h3 id="description-1">Description</h3>
<p>有 $n$ 个任务，你每次可以做连续的 $k$ 个，做完这 $k$ 个之后会接着做连续的 $k$ 个任务。一直做到不能做结束。你每次开始做任务时会得到一个对应的怒气值，而连续做的任务不会得到怒气值。</p>
<p>问从哪个任务开始做得到怒气值最小。（建议看英文题面）</p>
<h3 id="solution-1">Solution</h3>
<p>发现从第 $i$ 个任务开始做，就会得到任务 $i,i+k,i+2k&hellip;$ 的怒气值。也就是说任务被分成了 $k$ 组。</p>
<p>没啥可说的，直接预处理每组任务怒气值然后输出最小值就可以了。</p>
<h3 id="code-1">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cctype&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cerr</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1e5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">a</span>[<span style="color:#000">maxn</span>], <span style="color:#000">n</span>, <span style="color:#000">k</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">sum</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">k</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">k</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#000">i</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">j</span> <span style="color:#000">+=</span> <span style="color:#000">k</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">sum</span>[<span style="color:#000">i</span>] <span style="color:#000">+=</span> <span style="color:#000">a</span>[<span style="color:#000">j</span>];
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">sum</span>[<span style="color:#1c01ce">0</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">30</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">k</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">sum</span>[<span style="color:#000">i</span>] <span style="color:#000">&lt;</span> <span style="color:#000">sum</span>[<span style="color:#000">ans</span>])
</span></span><span style="display:flex;"><span>            <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#000">i</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">ans</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="chttpscodeforcescontest366problemc"><a href="https://codeforc.es/contest/366/problem/C">C</a></h2>
<h3 id="description-2">Description</h3>
<p>有 $n$ 个水果，每个水果有两个属性：美味值 $a$ 和卡路里值 $b$ 。现在选用若干个（至少 $1$ 个）水果制作一份特殊的沙拉，沙拉的美味值为所选的水果的美味值的和，沙拉的卡路里值为所选水果的卡路里值的和。沙拉的美味值恰好是卡路里值的 $k$ 倍。请计算该沙拉美味值最大为多少。</p>
<p>$n,a_i,b_i\leq100,k\leq10$</p>
<h3 id="solution-2">Solution</h3>
<p>把卡路里值乘一下 $k$，问题转化为美味值和卡路里相等。</p>
<p>这个东西就非常背包。</p>
<p>随便乱写一个 DP：$f(i,j,k)$ 表示前 $i$ 个水果，美味值和为 $j$，卡路里和为 $k$ 的最大美味值。然后 $f(i,j,k)=\max(f(i-1,j,k),f(i-1,j-a_i,k-b_i)+a_i)$。这玩意稍微算一下就知道过不去。</p>
<p>因为转移已经是 $O(1)$ 的了，只能从状态入手。发现 $j,k$ 的转移都只和 $i$ 有关，可以搞成一维（类似emiya家今天的饭）：$f(i,d)$ 表示前 $i$ 个水果，卡路里与美味值差为 $d$ 的最大美味值。然后 $f(i,d)=\max(f(i-1,d),f(i-1,d-(b_i-a_i))$。</p>
<p>这样就解决了。</p>
<h3 id="code-2">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cctype&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cerr</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">110</span>, <span style="color:#000">maxm</span> <span style="color:#000">=</span> <span style="color:#1c01ce">3e5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">f</span>[<span style="color:#000">maxm</span>], <span style="color:#000">a</span>[<span style="color:#000">maxn</span>], <span style="color:#000">b</span>[<span style="color:#000">maxn</span>], <span style="color:#000">n</span>, <span style="color:#000">k</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">k</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">b</span>[<span style="color:#000">i</span>], <span style="color:#000">b</span>[<span style="color:#000">i</span>] <span style="color:#000">*=</span> <span style="color:#000">k</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">M</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1e5</span>, <span style="color:#000">D</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2e5</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">memset</span>(<span style="color:#000">f</span>, <span style="color:#000">-</span><span style="color:#1c01ce">1</span>, <span style="color:#a90d91">sizeof</span>(<span style="color:#000">f</span>));
</span></span><span style="display:flex;"><span>    <span style="color:#000">f</span>[<span style="color:#000">D</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">d</span> <span style="color:#000">=</span> <span style="color:#000">b</span>[<span style="color:#000">i</span>] <span style="color:#000">-</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">d</span> <span style="color:#000">&gt;</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#000">-</span><span style="color:#000">M</span>; <span style="color:#000">j</span> <span style="color:#000">+</span> <span style="color:#000">d</span> <span style="color:#000">&lt;=</span> <span style="color:#000">M</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            {
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">if</span> (<span style="color:#000">f</span>[<span style="color:#000">j</span> <span style="color:#000">+</span> <span style="color:#000">D</span> <span style="color:#000">+</span> <span style="color:#000">d</span>] <span style="color:#000">!=</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>                    <span style="color:#000">f</span>[<span style="color:#000">j</span> <span style="color:#000">+</span> <span style="color:#000">D</span>] <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">max</span>(<span style="color:#000">f</span>[<span style="color:#000">j</span> <span style="color:#000">+</span> <span style="color:#000">D</span>], <span style="color:#000">f</span>[<span style="color:#000">j</span> <span style="color:#000">+</span> <span style="color:#000">d</span> <span style="color:#000">+</span> <span style="color:#000">D</span>] <span style="color:#000">+</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>]);
</span></span><span style="display:flex;"><span>            }
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#000">M</span>; <span style="color:#000">j</span> <span style="color:#000">+</span> <span style="color:#000">d</span> <span style="color:#000">&gt;=</span> <span style="color:#000">-</span><span style="color:#000">M</span>; <span style="color:#000">j</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">if</span> (<span style="color:#000">f</span>[<span style="color:#000">j</span> <span style="color:#000">+</span> <span style="color:#000">D</span> <span style="color:#000">+</span> <span style="color:#000">d</span>] <span style="color:#000">!=</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>                    <span style="color:#000">f</span>[<span style="color:#000">j</span> <span style="color:#000">+</span> <span style="color:#000">D</span>] <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">max</span>(<span style="color:#000">f</span>[<span style="color:#000">j</span> <span style="color:#000">+</span> <span style="color:#000">D</span>], <span style="color:#000">f</span>[<span style="color:#000">j</span> <span style="color:#000">+</span> <span style="color:#000">d</span> <span style="color:#000">+</span> <span style="color:#000">D</span>] <span style="color:#000">+</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>]);
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> (<span style="color:#000">f</span>[<span style="color:#000">D</span>] <span style="color:#000">==</span> <span style="color:#1c01ce">0</span> <span style="color:#000">?</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span> <span style="color:#000">:</span> <span style="color:#000">f</span>[<span style="color:#000">D</span>]) <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="dhttpscodeforcescontest366problemd"><a href="https://codeforc.es/contest/366/problem/D">D</a></h2>
<h3 id="description-3">Description</h3>
<p>给出一个 $n$ 个点，$m$ 条边的无向图，每条边有区间 $\left[l_i,r_i\right]$，求从 $1$ 到 $n$ 路径组成的边集，使该边集中所有区间的交内的正整数元素个数最多。</p>
<p>$2\leq n\leq10^3,0\leq m\leq3\times10^3$。</p>
<h3 id="solution-3">Solution</h3>
<p>数据范围这么小，我们直接枚举。</p>
<p>考虑枚举一个区间的左端点，然后二分找最大的右端点，再 check 一下图是否联通即可。</p>
<p>时间复杂度 $O(mn\log m)$。</p>
<h3 id="code-3">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cctype&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cerr</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">3e3</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">struct</span> <span style="color:#3f6e75">UFS</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">father</span>[<span style="color:#000">maxn</span>], <span style="color:#000">siz</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">void</span> <span style="color:#000">init</span>(<span style="color:#a90d91">int</span> <span style="color:#000">n</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1e3</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">father</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">i</span>, <span style="color:#000">siz</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">find</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>) { <span style="color:#a90d91">return</span> <span style="color:#000">x</span> <span style="color:#000">==</span> <span style="color:#000">father</span>[<span style="color:#000">x</span>] <span style="color:#000">?</span> <span style="color:#000">x</span> : <span style="color:#000">father</span>[<span style="color:#000">x</span>] <span style="color:#000">=</span> <span style="color:#000">find</span>(<span style="color:#000">father</span>[<span style="color:#000">x</span>]); }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">void</span> <span style="color:#000">uni</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">xx</span> <span style="color:#000">=</span> <span style="color:#000">find</span>(<span style="color:#000">x</span>), <span style="color:#000">yy</span> <span style="color:#000">=</span> <span style="color:#000">find</span>(<span style="color:#000">y</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">siz</span>[<span style="color:#000">xx</span>] <span style="color:#000">&gt;</span> <span style="color:#000">siz</span>[<span style="color:#000">yy</span>])
</span></span><span style="display:flex;"><span>            <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">swap</span>(<span style="color:#000">xx</span>, <span style="color:#000">yy</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">father</span>[<span style="color:#000">xx</span>] <span style="color:#000">=</span> <span style="color:#000">find</span>(<span style="color:#000">yy</span>), <span style="color:#000">siz</span>[<span style="color:#000">yy</span>] <span style="color:#000">+=</span> <span style="color:#000">siz</span>[<span style="color:#000">xx</span>];
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">bool</span> <span style="color:#000">ask</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>) { <span style="color:#a90d91">return</span> <span style="color:#000">find</span>(<span style="color:#000">x</span>) <span style="color:#000">==</span> <span style="color:#000">find</span>(<span style="color:#000">y</span>); }
</span></span><span style="display:flex;"><span>} <span style="color:#000">ufs</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">struct</span> <span style="color:#3f6e75">edge</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#000">y</span>, <span style="color:#000">l</span>, <span style="color:#000">r</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">bool</span> <span style="color:#a90d91">operator</span><span style="color:#000">&lt;</span>(<span style="color:#a90d91">const</span> <span style="color:#000">edge</span> <span style="color:#000">&amp;</span><span style="color:#000">b</span>) <span style="color:#a90d91">const</span> { <span style="color:#a90d91">return</span> <span style="color:#000">r</span> <span style="color:#000">&lt;</span> <span style="color:#000">b</span>.<span style="color:#000">r</span>; }
</span></span><span style="display:flex;"><span>} <span style="color:#000">e</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">n</span>, <span style="color:#000">m</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">bool</span> <span style="color:#000">check</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">ufs</span>.<span style="color:#000">init</span>(<span style="color:#000">n</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">e</span>[<span style="color:#000">i</span>].<span style="color:#000">l</span> <span style="color:#000">&lt;=</span> <span style="color:#000">x</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">e</span>[<span style="color:#000">i</span>].<span style="color:#000">r</span> <span style="color:#000">&gt;=</span> <span style="color:#000">y</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">ufs</span>.<span style="color:#000">uni</span>(<span style="color:#000">e</span>[<span style="color:#000">i</span>].<span style="color:#000">x</span>, <span style="color:#000">e</span>[<span style="color:#000">i</span>].<span style="color:#000">y</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#000">ufs</span>.<span style="color:#000">ask</span>(<span style="color:#1c01ce">1</span>, <span style="color:#000">n</span>);
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">solve</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">l</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">r</span> <span style="color:#000">=</span> <span style="color:#000">m</span>, <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> (<span style="color:#000">l</span> <span style="color:#000">&lt;=</span> <span style="color:#000">r</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">mid</span> <span style="color:#000">=</span> (<span style="color:#000">l</span> <span style="color:#000">+</span> <span style="color:#000">r</span>) <span style="color:#000">/</span> <span style="color:#1c01ce">2</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">check</span>(<span style="color:#000">x</span>, <span style="color:#000">e</span>[<span style="color:#000">mid</span>].<span style="color:#000">r</span>))
</span></span><span style="display:flex;"><span>            <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#000">mid</span>, <span style="color:#000">l</span> <span style="color:#000">=</span> <span style="color:#000">mid</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>            <span style="color:#000">r</span> <span style="color:#000">=</span> <span style="color:#000">mid</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#177500">//cout &lt;&lt; x &lt;&lt; &#34; &#34; &lt;&lt; e[ans].r &lt;&lt; endl;
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>    <span style="color:#a90d91">return</span> <span style="color:#000">e</span>[<span style="color:#000">ans</span>].<span style="color:#000">r</span> <span style="color:#000">-</span> <span style="color:#000">x</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">scanf</span>(<span style="color:#c41a16">&#34;%d%d&#34;</span>, <span style="color:#000">&amp;</span><span style="color:#000">n</span>, <span style="color:#000">&amp;</span><span style="color:#000">m</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">scanf</span>(<span style="color:#c41a16">&#34;%d%d%d%d&#34;</span>, <span style="color:#000">&amp;</span><span style="color:#000">e</span>[<span style="color:#000">i</span>].<span style="color:#000">x</span>, <span style="color:#000">&amp;</span><span style="color:#000">e</span>[<span style="color:#000">i</span>].<span style="color:#000">y</span>, <span style="color:#000">&amp;</span><span style="color:#000">e</span>[<span style="color:#000">i</span>].<span style="color:#000">l</span>, <span style="color:#000">&amp;</span><span style="color:#000">e</span>[<span style="color:#000">i</span>].<span style="color:#000">r</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">sort</span>(<span style="color:#000">e</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">e</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">+</span> <span style="color:#000">m</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">max</span>(<span style="color:#000">solve</span>(<span style="color:#000">e</span>[<span style="color:#000">i</span>].<span style="color:#000">l</span>), <span style="color:#000">ans</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> (<span style="color:#000">ans</span> <span style="color:#000">==</span> <span style="color:#1c01ce">0</span> <span style="color:#000">?</span> <span style="color:#c41a16">&#34;Nice work, Dima!&#34;</span> <span style="color:#000">:</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">to_string</span>(<span style="color:#000">ans</span>)) <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="ehttpscodeforcescontest366probleme"><a href="https://codeforc.es/contest/366/problem/E">E</a></h2>
<h3 id="description-4">Description</h3>
<p>给你一个 $n\times m$ 矩阵。矩阵中有 $k$ 种元素。给你一个序列，你要将序列中的每一个元素转化为矩阵上的对应数字的坐标，并使得相邻元素表示的坐标的曼哈顿距离中的最大值最大，求出这个最大值。（建议看原题面）。</p>
<p>$n,m\leq2000$。$k\leq9$。</p>
<h3 id="solution-4">Solution</h3>
<p>我们考虑算出每两种元素之间最大曼哈顿距离。</p>
<p>有一个比较套路的做法：把曼哈顿距离展开：
$$
dis=\begin{cases}(x_1+y_1)-(x_2+y_2)\\(x_1-y_1)-(x_2-y_2)\\-(x_1-y_1)+(x_2-y_2)\\-(x_1+y_1)+(x_2+y_2)\end{cases}
$$
也就是说最大曼哈顿距离一定是这四种中的一个，我们对每个颜色维护 $x_1+y_1,x_1-y_1$ 的最大值和最小值然后在上面四种情况里取最大值即可。</p>
<h3 id="code-4">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;queue&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cctype&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cerr</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2010</span>;
</span></span><span style="display:flex;"><span><span style="color:#177500">//const int dx[] = {0, 0, 1, -1};
</span></span></span><span style="display:flex;"><span><span style="color:#177500">//const int dy[] = {1, -1, 0, 0};
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">ans</span>[<span style="color:#1c01ce">10</span>][<span style="color:#1c01ce">10</span>], <span style="color:#000">a</span>[<span style="color:#000">maxn</span>][<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">mxadd</span>[<span style="color:#1c01ce">10</span>], <span style="color:#000">miadd</span>[<span style="color:#1c01ce">10</span>], <span style="color:#000">mxmus</span>[<span style="color:#1c01ce">10</span>], <span style="color:#000">mimus</span>[<span style="color:#1c01ce">10</span>], <span style="color:#000">q</span>[<span style="color:#000">maxn</span>], <span style="color:#000">n</span>, <span style="color:#000">m</span>, <span style="color:#000">k</span>, <span style="color:#000">s</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">upd</span>(<span style="color:#a90d91">int</span> <span style="color:#000">&amp;</span><span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>) { <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">max</span>(<span style="color:#000">x</span>, <span style="color:#000">y</span>); }
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">upd2</span>(<span style="color:#a90d91">int</span> <span style="color:#000">&amp;</span><span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>) { <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">min</span>(<span style="color:#000">x</span>, <span style="color:#000">y</span>); }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">struct</span> <span style="color:#3f6e75">point</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#000">y</span>;
</span></span><span style="display:flex;"><span>};
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">scanf</span>(<span style="color:#c41a16">&#34;%d%d%d%d&#34;</span>, <span style="color:#000">&amp;</span><span style="color:#000">n</span>, <span style="color:#000">&amp;</span><span style="color:#000">m</span>, <span style="color:#000">&amp;</span><span style="color:#000">k</span>, <span style="color:#000">&amp;</span><span style="color:#000">s</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">scanf</span>(<span style="color:#c41a16">&#34;%d&#34;</span>, <span style="color:#000">&amp;</span><span style="color:#000">a</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>]);
</span></span><span style="display:flex;"><span>    <span style="color:#000">memset</span>(<span style="color:#000">mimus</span>, <span style="color:#1c01ce">1</span>, <span style="color:#a90d91">sizeof</span>(<span style="color:#000">mimus</span>)), <span style="color:#000">memset</span>(<span style="color:#000">miadd</span>, <span style="color:#1c01ce">1</span>, <span style="color:#a90d91">sizeof</span>(<span style="color:#000">miadd</span>));
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">upd</span>(<span style="color:#000">mxadd</span>[<span style="color:#000">a</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>]], <span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#000">j</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#000">upd2</span>(<span style="color:#000">miadd</span>[<span style="color:#000">a</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>]], <span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#000">j</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#000">upd</span>(<span style="color:#000">mxmus</span>[<span style="color:#000">a</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>]], <span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#000">j</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#000">upd2</span>(<span style="color:#000">mimus</span>[<span style="color:#000">a</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>]], <span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#000">j</span>);
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">k</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;=</span> <span style="color:#000">k</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">ans</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>] <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">max</span>(<span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">max</span>(<span style="color:#000">abs</span>(<span style="color:#000">mxadd</span>[<span style="color:#000">i</span>] <span style="color:#000">-</span> <span style="color:#000">miadd</span>[<span style="color:#000">j</span>]), <span style="color:#000">abs</span>(<span style="color:#000">mxadd</span>[<span style="color:#000">j</span>] <span style="color:#000">-</span> <span style="color:#000">miadd</span>[<span style="color:#000">i</span>])), 
</span></span><span style="display:flex;"><span>                    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">max</span>(<span style="color:#000">abs</span>(<span style="color:#000">mxmus</span>[<span style="color:#000">i</span>] <span style="color:#000">-</span> <span style="color:#000">mimus</span>[<span style="color:#000">j</span>]), <span style="color:#000">abs</span>(<span style="color:#000">mxmus</span>[<span style="color:#000">j</span>] <span style="color:#000">-</span> <span style="color:#000">mimus</span>[<span style="color:#000">i</span>])));
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">res</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">s</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">scanf</span>(<span style="color:#c41a16">&#34;%d&#34;</span>, <span style="color:#000">&amp;</span><span style="color:#000">q</span>[<span style="color:#000">i</span>]);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">s</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">res</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">max</span>(<span style="color:#000">res</span>, <span style="color:#000">ans</span>[<span style="color:#000">q</span>[<span style="color:#000">i</span>]][<span style="color:#000">q</span>[<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>]]);
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">res</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div>]]></content:encoded>
    </item>
    
    <item>
      <title>Codeforces Round 668 (Div. 1&amp;2)</title>
      <link>https://luoyisu.github.io/posts/cf-contest1404/</link>
      <pubDate>Thu, 23 Dec 2021 21:15:48 +0000</pubDate>
      
      <guid>https://luoyisu.github.io/posts/cf-contest1404/</guid>
      <description>&lt;h2 id=&#34;概述&#34;&gt;概述&lt;/h2&gt;
&lt;p&gt;不简单，但也不算特别难。&lt;/p&gt;
&lt;p&gt;Div1 的 BCDE 都值得一做。&lt;/p&gt;
&lt;p&gt;因为写得比较着急，可能有各种疏漏，见谅。&lt;/p&gt;</description>
      <content:encoded><![CDATA[<h2 id="概述">概述</h2>
<p>不简单，但也不算特别难。</p>
<p>Div1 的 BCDE 都值得一做。</p>
<p>因为写得比较着急，可能有各种疏漏，见谅。</p>
<h2 id="div2-ahttpscodeforcescomcontest1405problema"><a href="https://codeforces.com/contest/1405/problem/A">Div2 A</a></h2>
<h3 id="description">Description</h3>
<p>对于一个长度为 $n$ 的排列 $p$，定义其 <strong>fingerprint</strong> $F(p)$ 为 $p$ 中相邻元素和排序后得到的数组。更形式化地，</p>
<p>$$F(p)=\text{sort}([p_1+p_2,p_2+p_3,\cdots,p_{n-1}+p_n])$$​。</p>
<p>给定一个长度为 $n$ 的排列 $p$，你需要找到一个与 $p$​ 不同但 fingerprint 相同的排列。</p>
<h3 id="solution">Solution</h3>
<p>没啥可说的，看一看这个定义，因为是排列，直接倒序输出即可。</p>
<h3 id="code">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cctype&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cerr</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">T</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">T</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> (<span style="color:#000">T</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">vector</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">a</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">x</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">x</span>, <span style="color:#000">a</span>.<span style="color:#000">push_back</span>(<span style="color:#000">x</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">reverse</span>(<span style="color:#000">a</span>.<span style="color:#000">begin</span>(), <span style="color:#000">a</span>.<span style="color:#000">end</span>());
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">u</span> : <span style="color:#000">a</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">u</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="div2-bhttpscodeforcescomcontest1405problemb"><a href="https://codeforces.com/contest/1405/problem/B">Div2 B</a></h2>
<h3 id="description-1">Description</h3>
<p>给定一个序列 $a[1]-a[n]$​，满足 $\sum_{i=1}^{n}a[i]=0$​。</p>
<p>每次可以选两个数 $i$​，$j$​，使 $a[i]$ ​变为 $a[i]-1$​， $a[j]$ ​变为 $a[j]+1$​。</p>
<p>当 $i&lt;j$ ​​使操作无花费，否则操作花费 $1$​​。</p>
<p>求使所有数都变为 $0$ ​所需的最小花费。</p>
<h3 id="solution-1">Solution</h3>
<p>显然我们需要尽可能进行无花费的操作。</p>
<p>尽可能让前面的数减小，后面的数增加，但是要是已经是负的了，那么就需要花费代价。</p>
<p>想一想再玩一玩样例，发现答案是最小前缀和的相反数（感性理解）。</p>
<h3 id="code-1">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cctype&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cmath&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cerr</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1e5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">a</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">sum</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">T</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">T</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> (<span style="color:#000">T</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1ll</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">60</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>], <span style="color:#000">sum</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">sum</span>[<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">+</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>], <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">min</span>(<span style="color:#000">ans</span>, <span style="color:#000">sum</span>[<span style="color:#000">i</span>]);
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">abs</span>(<span style="color:#000">ans</span>) <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="ahttpscodeforcescomcontest1404problema"><a href="https://codeforces.com/contest/1404/problem/A">A</a></h2>
<h3 id="description-2">Description</h3>
<p>给定一个二进制字符串 由 <code>0,1,?</code> 组成。</p>
<p><code>?</code> 可以是 <code>1</code> 或者 <code>0</code>，由你自由选择。</p>
<p>问你是否能构造出一个字符串，使得这个字符串每个长度为 $k$ 的子串中 <code>0</code> 和 <code>1</code> 的个数相等。</p>
<h3 id="solution-2">Solution</h3>
<p>不会做就找规律（）</p>
<p>看样例发现这个东西很循环，往这个方面想一想就能想到：第 $s_i=s_{i+k}$。很显然不证明了。</p>
<p>那么整个字符串就被分成了 $k$ 组，把已经确定的组都确定好，如果组内有矛盾显然无解。接着只检查 $s_1\sim s_k$​ 合不合法即可。</p>
<h3 id="code-2">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cctype&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cmath&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cerr</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">3e5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">a</span>[<span style="color:#000">maxn</span>], <span style="color:#000">n</span>, <span style="color:#000">k</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">char</span> <span style="color:#000">s</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">bool</span> <span style="color:#000">solve</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">k</span> <span style="color:#000">&gt;&gt;</span> (<span style="color:#000">s</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">a</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">s</span>[<span style="color:#000">i</span>] <span style="color:#000">==</span> <span style="color:#2300ce">&#39;?&#39;</span> <span style="color:#000">?</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span> <span style="color:#000">:</span> <span style="color:#000">s</span>[<span style="color:#000">i</span>] <span style="color:#000">-</span> <span style="color:#2300ce">&#39;0&#39;</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">k</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">p</span> <span style="color:#000">=</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#000">k</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">j</span> <span style="color:#000">+=</span> <span style="color:#000">k</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">a</span>[<span style="color:#000">j</span>] <span style="color:#000">!=</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">p</span> <span style="color:#000">=</span> <span style="color:#000">a</span>[<span style="color:#000">j</span>];
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#000">i</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">j</span> <span style="color:#000">+=</span> <span style="color:#000">k</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">a</span>[<span style="color:#000">j</span>] <span style="color:#000">!=</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">a</span>[<span style="color:#000">j</span>] <span style="color:#000">!=</span> <span style="color:#000">p</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">return</span> <span style="color:#a90d91">false</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">a</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">p</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">cnt1</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>, <span style="color:#000">cnt2</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">k</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">a</span>[<span style="color:#000">i</span>] <span style="color:#000">==</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">cnt1</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span> <span style="color:#a90d91">if</span> (<span style="color:#000">a</span>[<span style="color:#000">i</span>] <span style="color:#000">==</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">cnt2</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">cnt1</span> <span style="color:#000">&lt;=</span> <span style="color:#000">k</span> <span style="color:#000">/</span> <span style="color:#1c01ce">2</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">cnt1</span> <span style="color:#000">+</span> <span style="color:#000">cnt2</span> <span style="color:#000">&gt;=</span> <span style="color:#000">k</span> <span style="color:#000">/</span> <span style="color:#1c01ce">2</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#a90d91">true</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#a90d91">false</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">T</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">T</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> (<span style="color:#000">T</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">puts</span>(<span style="color:#000">solve</span>() <span style="color:#000">?</span> <span style="color:#c41a16">&#34;YES&#34;</span> <span style="color:#000">:</span> <span style="color:#c41a16">&#34;NO&#34;</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="bhttpscodeforcescomcontest1404problemb"><a href="https://codeforces.com/contest/1404/problem/B">B</a></h2>
<h3 id="description-3">Description</h3>
<p>有一棵 $n$ 个点的树， Alice 和 Bob 初始在这棵树上的节点 $a$, $b$。</p>
<p>他们可以在树上轮流移动一段距离不超过 $da$ 和 $db$ 的路径。</p>
<p>路径长度的定义是两点之间树上简单路径的边数。</p>
<p>如果 Alice 能在 $10^{100}$​ 次内追到 Bob ，那么则算 Alice 赢，否则算 Bob 赢。</p>
<p>Alice 先走。</p>
<h3 id="solution-3">Solution</h3>
<p>看起来是个结论题，实际上也确实是。</p>
<p>想一想加画一画能想到 Alice 获胜有以下三种情况。否则输。</p>
<ul>
<li>$dis(a,b)\leq da$，一步就抓到了；</li>
<li>$2da\geq db$，可以一步一步逼近 Bob 胜利；</li>
<li>Alice 走到一个能控制树上所有点的点，这样 Bob 不管怎么走都会输。这个时候需要满足 $2da\geq d$，$d$ 是树的直径。</li>
</ul>
<p>第一种情况很显然，第二种情况也挺显然：不管 Bob 怎么走，Alice 一定能拉近距离。</p>
<p>第三种情况是很极限的情况，Bob 最远也只能走直径长度的路径，如果 Alice 能占据直径中点那自然必胜（建议画图理解）。</p>
<h3 id="code-3">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cctype&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cerr</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1e5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">n</span>, <span style="color:#000">a</span>, <span style="color:#000">da</span>, <span style="color:#000">b</span>, <span style="color:#000">db</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">vector</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">e</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">add</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>) { <span style="color:#000">e</span>[<span style="color:#000">x</span>].<span style="color:#000">push_back</span>(<span style="color:#000">y</span>), <span style="color:#000">e</span>[<span style="color:#000">y</span>].<span style="color:#000">push_back</span>(<span style="color:#000">x</span>); }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">clear</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">e</span>[<span style="color:#000">i</span>].<span style="color:#000">clear</span>();
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">dep</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">dfs</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">fa</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">dep</span>[<span style="color:#000">x</span>] <span style="color:#000">=</span> <span style="color:#000">dep</span>[<span style="color:#000">fa</span>] <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">v</span> : <span style="color:#000">e</span>[<span style="color:#000">x</span>])
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">v</span> <span style="color:#000">!=</span> <span style="color:#000">fa</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">dfs</span>(<span style="color:#000">v</span>, <span style="color:#000">x</span>);
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">bool</span> <span style="color:#000">solve</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">dep</span>[<span style="color:#1c01ce">0</span>] <span style="color:#000">=</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span>, <span style="color:#000">dfs</span>(<span style="color:#000">b</span>, <span style="color:#1c01ce">0</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">rt</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">dis</span> <span style="color:#000">=</span> <span style="color:#000">dep</span>[<span style="color:#000">a</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">dis</span> <span style="color:#000">&lt;=</span> <span style="color:#000">da</span> <span style="color:#000">||</span> <span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">da</span> <span style="color:#000">&gt;=</span> <span style="color:#000">db</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#a90d91">true</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">dep</span>[<span style="color:#000">i</span>] <span style="color:#000">&gt;</span> <span style="color:#000">dep</span>[<span style="color:#000">rt</span>])
</span></span><span style="display:flex;"><span>            <span style="color:#000">rt</span> <span style="color:#000">=</span> <span style="color:#000">i</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">dfs</span>(<span style="color:#000">rt</span>, <span style="color:#1c01ce">0</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">dep</span>[<span style="color:#000">i</span>] <span style="color:#000">&gt;</span> <span style="color:#000">dep</span>[<span style="color:#000">rt</span>])
</span></span><span style="display:flex;"><span>            <span style="color:#000">rt</span> <span style="color:#000">=</span> <span style="color:#000">i</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">d</span> <span style="color:#000">=</span> <span style="color:#000">dep</span>[<span style="color:#000">rt</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#177500">//cout &lt;&lt; d &lt;&lt; endl;
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>    <span style="color:#a90d91">if</span> (<span style="color:#000">da</span> <span style="color:#000">+</span> <span style="color:#000">da</span> <span style="color:#000">&gt;=</span> <span style="color:#000">d</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#a90d91">true</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#a90d91">false</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">ios</span><span style="color:#000">::</span><span style="color:#000">sync_with_stdio</span>(<span style="color:#a90d91">false</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">T</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">T</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> (<span style="color:#000">T</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">a</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">b</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">da</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">db</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">x</span>, <span style="color:#000">y</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">x</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">y</span>, <span style="color:#000">add</span>(<span style="color:#000">x</span>, <span style="color:#000">y</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">puts</span>(<span style="color:#000">solve</span>() <span style="color:#000">?</span> <span style="color:#c41a16">&#34;Alice&#34;</span> <span style="color:#000">:</span> <span style="color:#c41a16">&#34;Bob&#34;</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">clear</span>();
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="chttpscodeforcescomcontest1404problemc"><a href="https://codeforces.com/contest/1404/problem/C">C</a></h2>
<h3 id="description-4">Description</h3>
<p>给定一个含有 $n$​ 个正整数的序列 $a$​ ，对于一次操作，你可以任选一个位置 $i$​ 且满足 $a_i=i$​ ,那么就可以移除这个元素，并将后面所有的元素向前移动一位。</p>
<p>对于每个相互独立的询问 $x,y$ 需要你求出在前 $x$ 个元素以及后 $y$ 个元素不能被移除的情况下，最多可以进行几次操作。</p>
<p>$n,q \leq 3\times 10^5$。</p>
<h3 id="solution-4">Solution</h3>
<p>能想到能删除几个点和删除的顺序是没什么关系的，只要一个数前面能被删除的数足够多那么他就可以被删除（因为先删后面的不影响前面的）。</p>
<p>考虑到这一点，我们直接让 $a_i=i-a_i$，每次删除一个数相当于区间减 $1$ 。显然负数永远都消不掉。</p>
<p>这种奇怪的东西我们尝试把它离线下来。</p>
<p>然后就不会了，我数据结构太差了qwq，直接看题解。。。</p>
<p>要求解答案，我们需要尝试维护 $f_i$ 表示从 $i$ 开始能删掉几个数。</p>
<p>我们把询问按照右端点排序，考虑加进去一个数之后对上面这个东西的贡献。</p>
<p>显然 $f_i$ 是单调不增的，也就是说，对于前一部分，会使 $f_i$ 增加 $1$，后面不变。</p>
<p>或者换个说法：$f_k\geq q_r&gt;f_{k+1}$。</p>
<p>区间加 $1$，单点查询，选择树状数组。</p>
<p>实际上只需要记录操作次数即可。</p>
<p>至于怎么找这个 $k$​，树状数组上二分即可。</p>
<p>有时间会写个线段树版，树状数组上二分还是很难受的。</p>
<h3 id="code-4">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cctype&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cerr</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">3e5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">int</span> <span style="color:#000">lowbit</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>) { <span style="color:#a90d91">return</span> <span style="color:#000">x</span> <span style="color:#000">&amp;</span> <span style="color:#000">-</span><span style="color:#000">x</span>; }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">n</span>, <span style="color:#000">a</span>[<span style="color:#000">maxn</span>], <span style="color:#000">t</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">modify</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">v</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (; <span style="color:#000">x</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">x</span> <span style="color:#000">+=</span> <span style="color:#000">lowbit</span>(<span style="color:#000">x</span>))
</span></span><span style="display:flex;"><span>        <span style="color:#000">t</span>[<span style="color:#000">x</span>] <span style="color:#000">+=</span> <span style="color:#000">v</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">query</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">res</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (; <span style="color:#000">x</span>; <span style="color:#000">x</span> <span style="color:#000">-=</span> <span style="color:#000">lowbit</span>(<span style="color:#000">x</span>))
</span></span><span style="display:flex;"><span>        <span style="color:#000">res</span> <span style="color:#000">+=</span> <span style="color:#000">t</span>[<span style="color:#000">x</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#000">res</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">kth</span>(<span style="color:#a90d91">int</span> <span style="color:#000">k</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">res</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">18</span>; <span style="color:#000">i</span>; <span style="color:#000">i</span> <span style="color:#000">&gt;&gt;=</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">res</span> <span style="color:#000">+</span> <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">k</span> <span style="color:#000">-</span> <span style="color:#000">t</span>[<span style="color:#000">res</span> <span style="color:#000">+</span> <span style="color:#000">i</span>] <span style="color:#000">&gt;</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">res</span> <span style="color:#000">+=</span> <span style="color:#000">i</span>, <span style="color:#000">k</span> <span style="color:#000">-=</span> <span style="color:#000">t</span>[<span style="color:#000">res</span>];
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#000">res</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">struct</span> <span style="color:#3f6e75">Q</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">l</span>, <span style="color:#000">r</span>, <span style="color:#000">ans</span>, <span style="color:#000">id</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">bool</span> <span style="color:#a90d91">operator</span><span style="color:#000">&lt;</span>(<span style="color:#a90d91">const</span> <span style="color:#000">Q</span> <span style="color:#000">&amp;</span><span style="color:#000">b</span>) <span style="color:#a90d91">const</span> { <span style="color:#a90d91">return</span> <span style="color:#000">r</span> <span style="color:#000">&lt;</span> <span style="color:#000">b</span>.<span style="color:#000">r</span>; }
</span></span><span style="display:flex;"><span>} <span style="color:#000">q</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">bool</span> <span style="color:#000">cmp</span>(<span style="color:#a90d91">const</span> <span style="color:#000">Q</span> <span style="color:#000">&amp;</span><span style="color:#000">a</span>, <span style="color:#a90d91">const</span> <span style="color:#000">Q</span> <span style="color:#000">&amp;</span><span style="color:#000">b</span>) { <span style="color:#a90d91">return</span> <span style="color:#000">a</span>.<span style="color:#000">id</span> <span style="color:#000">&lt;</span> <span style="color:#000">b</span>.<span style="color:#000">id</span>; }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">m</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">scanf</span>(<span style="color:#c41a16">&#34;%d%d&#34;</span>, <span style="color:#000">&amp;</span><span style="color:#000">n</span>, <span style="color:#000">&amp;</span><span style="color:#000">m</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">scanf</span>(<span style="color:#c41a16">&#34;%d&#34;</span>, <span style="color:#000">&amp;</span><span style="color:#000">a</span>[<span style="color:#000">i</span>]), <span style="color:#000">a</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">l</span>, <span style="color:#000">r</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">scanf</span>(<span style="color:#c41a16">&#34;%d%d&#34;</span>, <span style="color:#000">&amp;</span><span style="color:#000">l</span>, <span style="color:#000">&amp;</span><span style="color:#000">r</span>), <span style="color:#000">q</span>[<span style="color:#000">i</span>].<span style="color:#000">id</span> <span style="color:#000">=</span> <span style="color:#000">i</span>, <span style="color:#000">q</span>[<span style="color:#000">i</span>].<span style="color:#000">l</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span> <span style="color:#000">+</span> <span style="color:#000">l</span>, <span style="color:#000">q</span>[<span style="color:#000">i</span>].<span style="color:#000">r</span> <span style="color:#000">=</span> <span style="color:#000">n</span> <span style="color:#000">-</span> <span style="color:#000">r</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">sort</span>(<span style="color:#000">q</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">q</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">+</span> <span style="color:#000">m</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">now</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">while</span> (<span style="color:#000">now</span> <span style="color:#000">&lt;=</span> <span style="color:#000">q</span>[<span style="color:#000">i</span>].<span style="color:#000">r</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">int</span> <span style="color:#000">pos</span> <span style="color:#000">=</span> <span style="color:#000">a</span>[<span style="color:#000">now</span>] <span style="color:#000">&lt;</span> <span style="color:#1c01ce">0</span> <span style="color:#000">?</span> <span style="color:#1c01ce">1</span> <span style="color:#000">:</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">min</span>(<span style="color:#000">kth</span>(<span style="color:#000">now</span> <span style="color:#000">-</span> <span style="color:#000">a</span>[<span style="color:#000">now</span>]), <span style="color:#000">now</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#000">modify</span>(<span style="color:#000">pos</span>, <span style="color:#1c01ce">1</span>), <span style="color:#000">now</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#000">q</span>[<span style="color:#000">i</span>].<span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#000">q</span>[<span style="color:#000">i</span>].<span style="color:#000">r</span> <span style="color:#000">-</span> <span style="color:#000">query</span>(<span style="color:#000">q</span>[<span style="color:#000">i</span>].<span style="color:#000">l</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">sort</span>(<span style="color:#000">q</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">q</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">+</span> <span style="color:#000">m</span>, <span style="color:#000">cmp</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">printf</span>(<span style="color:#c41a16">&#34;%d</span><span style="color:#c41a16">\\</span><span style="color:#c41a16">n&#34;</span>, <span style="color:#000">q</span>[<span style="color:#000">i</span>].<span style="color:#000">ans</span>);
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="dhttpscodeforcescomcontest1404problemd"><a href="https://codeforces.com/contest/1404/problem/D">D</a></h2>
<h3 id="description-5">Description</h3>
<p><strong>这是一道交互题</strong></p>
<p>给定 $2n$ 个数 $1,2\sim 2n$，A 和 B 进行交互，如下规则：</p>
<ul>
<li>A 需要将元素分成 $n$ 组 $\mathbf{pair}$（二元组）</li>
<li>B 从每组 $\mathbf{pair}$ 中选择一个元素，如果权值和是 $2n$ 的倍数那么 B 胜，否则 A 胜。</li>
</ul>
<p>你需要选择 A/B 中的一者扮演角色，并取得胜利。</p>
<p>$n\le 5\times 10^5$​。</p>
<h3 id="solution-5">Solution</h3>
<p>观察样例 + 手算，发现当 $n$ 是偶数的时候，A 可以胜利：排一个 $(1,1+n),(2,2+n)&hellip;$  即可。</p>
<p>简易证明：取出来 $n$ 个数的和在模 $n$ 意义下是 $n(n-1)/2$，设 $n=2m$，则和为 $m(2m-1)$，这玩意是必然没法被 $2m$ 整除的，也就是说在和在模 $n$ 意义下都没法是 $0$，那 $2n$ 就更不行了。</p>
<p>然后盲猜：当 $n$ 是奇数，B 胜利。</p>
<p>有了刚刚的偶数，我们可以考虑试图取在模 $n$ 意义下是 $0,1,2,&hellip;,n-1$​ 的数，这些数加在一起一定是 $2n$ 的倍数。</p>
<p>稍微证明一下为什么一定能取到：因为模 $n$ 相同的一个数有两个，取了一个就必然不会取另一个，我们把 $i,i+n$ 连起来，表示只选其中一个。</p>
<p>同一组的两个数也不能同时选，我们也连起来。</p>
<p>这样每个点的度数就是 $2$，也就是说连出了一堆环，且 $i,i+n$​​ 在一个环里且相邻。这样就能得出一定能取到了（好像不太严谨，感性理解吧）。</p>
<p>选一个就不能选另一个，这是啥？无疑是二分图染色。</p>
<p>我们对每个环二分图染色就能得到结果了。</p>
<h3 id="code-5">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cctype&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;utility&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cerr</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">end</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1e6</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">typedef</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">pair</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span>, <span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">pii</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">used</span>[<span style="color:#000">maxn</span>], <span style="color:#000">must</span>[<span style="color:#000">maxn</span>], <span style="color:#000">vis</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">vector</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">e</span>[<span style="color:#000">maxn</span>], <span style="color:#000">ans</span>[<span style="color:#1c01ce">2</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">add</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>) { <span style="color:#000">e</span>[<span style="color:#000">x</span>].<span style="color:#000">push_back</span>(<span style="color:#000">y</span>), <span style="color:#000">e</span>[<span style="color:#000">y</span>].<span style="color:#000">push_back</span>(<span style="color:#000">x</span>); }
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">lst</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">dfs</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">d</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">ans</span>[<span style="color:#000">d</span>].<span style="color:#000">push_back</span>(<span style="color:#000">x</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">vis</span>[<span style="color:#000">x</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">v</span> : <span style="color:#000">e</span>[<span style="color:#000">x</span>])
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">!</span><span style="color:#000">vis</span>[<span style="color:#000">v</span>])
</span></span><span style="display:flex;"><span>            <span style="color:#000">dfs</span>(<span style="color:#000">v</span>, <span style="color:#000">d</span> <span style="color:#000">^</span> <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">ios</span><span style="color:#000">::</span><span style="color:#000">sync_with_stdio</span>(<span style="color:#a90d91">false</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">n</span> <span style="color:#000">%</span> <span style="color:#1c01ce">2</span> <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34;First&#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">i</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">i</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">end</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34;Second&#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span> <span style="color:#000">*</span> <span style="color:#1c01ce">2</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">int</span> <span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">lst</span>[<span style="color:#000">x</span>])
</span></span><span style="display:flex;"><span>                <span style="color:#000">add</span>(<span style="color:#000">lst</span>[<span style="color:#000">x</span>], <span style="color:#000">i</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>                <span style="color:#000">lst</span>[<span style="color:#000">x</span>] <span style="color:#000">=</span> <span style="color:#000">i</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">add</span>(<span style="color:#000">i</span>, <span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#000">n</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">!</span><span style="color:#000">vis</span>[<span style="color:#000">i</span>])
</span></span><span style="display:flex;"><span>                <span style="color:#000">dfs</span>(<span style="color:#000">i</span>, <span style="color:#1c01ce">0</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">sum</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">k</span> : <span style="color:#000">ans</span>[<span style="color:#1c01ce">0</span>])
</span></span><span style="display:flex;"><span>            <span style="color:#000">sum</span> <span style="color:#000">+=</span> <span style="color:#000">k</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">sum</span> <span style="color:#000">%</span> (<span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">n</span>))
</span></span><span style="display:flex;"><span>            <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">swap</span>(<span style="color:#000">ans</span>[<span style="color:#1c01ce">0</span>], <span style="color:#000">ans</span>[<span style="color:#1c01ce">1</span>]);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">k</span> : <span style="color:#000">ans</span>[<span style="color:#1c01ce">0</span>])
</span></span><span style="display:flex;"><span>            <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">k</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">end</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="ehttpswwwluogucomcnproblemcf1404e"><a href="https://www.luogu.com.cn/problem/CF1404E">E</a></h2>
<h3 id="description-6">Description</h3>
<p>你有一个 $n\times m\space(1 \leq n, m\leq200)$​ 的格子纸，格子要么涂黑（<code>#</code>）要么涂白（<code>.</code>）。你需要用若干个 $1\times n$ ​和 $n\times 1$ ​的长方形去覆盖所有黑色格子，要求不能盖到白色格子上，不能盖到其他长方形上，不能出格子纸的边界，求最小用多少个长方形。</p>
<h3 id="solution-6">Solution</h3>
<p>遇事不决看样例。发现对于一个点，横着的边和竖着的边不能同时选。</p>
<p>选一个边就相当于少了一个矩形，那么我们就要尽可能多选边。</p>
<p>一个常规套路：把边看成点，那么有两种点，且选了一个就不能选另一个，这是啥？不还是二分图吗！</p>
<p>我们把与一个点相邻的相互垂直的边两两连起来。</p>
<p>因为要多选点，也就是说要求二分图最大点独立集，那么只要求最大匹配即可，最大点独立集的大小就是点数减去最大匹配。</p>
<p>就这么简单？确实就这么简单，但还有点小细节：假如一个黑色格子周围没有边，它应该被算进答案，但我们刚刚没算。</p>
<p>那就加上即可，或者直接懒一点：最终答案 = 黑格子数 - 边数 + 最大匹配。</p>
<h3 id="code-6">Code</h3>
<p>我这个代码感觉加边部分还是很清晰的。</p>
<p>我是用点编号来代替边的编号，很简单。</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cctype&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;queue&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cerr</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">100010</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">char</span> <span style="color:#000">str</span>[<span style="color:#1c01ce">210</span>][<span style="color:#1c01ce">210</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">struct</span> <span style="color:#3f6e75">edge</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#000">y</span>, <span style="color:#000">cap</span>, <span style="color:#000">flow</span>;
</span></span><span style="display:flex;"><span>};
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">struct</span> <span style="color:#3f6e75">Dinic</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">vector</span><span style="color:#000">&lt;</span><span style="color:#000">edge</span><span style="color:#000">&gt;</span> <span style="color:#000">edges</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">vector</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">e</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">add</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>, <span style="color:#a90d91">int</span> <span style="color:#000">cap</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#177500">//cout &lt;&lt; &#34;added: &#34; &lt;&lt; x &lt;&lt; &#34; &#34; &lt;&lt; y &lt;&lt; endl;
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>        <span style="color:#000">edges</span>.<span style="color:#000">push_back</span>({<span style="color:#000">x</span>, <span style="color:#000">y</span>, <span style="color:#000">cap</span>, <span style="color:#1c01ce">0</span>});
</span></span><span style="display:flex;"><span>        <span style="color:#000">edges</span>.<span style="color:#000">push_back</span>({<span style="color:#000">y</span>, <span style="color:#000">x</span>, <span style="color:#1c01ce">0</span>, <span style="color:#1c01ce">0</span>});
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">m</span> <span style="color:#000">=</span> <span style="color:#000">edges</span>.<span style="color:#000">size</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#000">e</span>[<span style="color:#000">x</span>].<span style="color:#000">push_back</span>(<span style="color:#000">m</span> <span style="color:#000">-</span> <span style="color:#1c01ce">2</span>), <span style="color:#000">e</span>[<span style="color:#000">y</span>].<span style="color:#000">push_back</span>(<span style="color:#000">m</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">dis</span>[<span style="color:#000">maxn</span>], <span style="color:#000">vis</span>[<span style="color:#000">maxn</span>], <span style="color:#000">cur</span>[<span style="color:#000">maxn</span>], <span style="color:#000">s</span>, <span style="color:#000">t</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">bool</span> <span style="color:#000">bfs</span>()
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">queue</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">q</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">memset</span>(<span style="color:#000">vis</span>, <span style="color:#1c01ce">0</span>, <span style="color:#a90d91">sizeof</span>(<span style="color:#000">vis</span>));
</span></span><span style="display:flex;"><span>        <span style="color:#000">q</span>.<span style="color:#000">push</span>(<span style="color:#000">s</span>), <span style="color:#000">vis</span>[<span style="color:#000">s</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">dis</span>[<span style="color:#000">s</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">while</span> (<span style="color:#000">!</span><span style="color:#000">q</span>.<span style="color:#000">empty</span>())
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">int</span> <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">q</span>.<span style="color:#000">front</span>();
</span></span><span style="display:flex;"><span>            <span style="color:#000">q</span>.<span style="color:#000">pop</span>();
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> : <span style="color:#000">e</span>[<span style="color:#000">x</span>])
</span></span><span style="display:flex;"><span>            {
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">auto</span> <span style="color:#000">&amp;</span><span style="color:#000">k</span> <span style="color:#000">=</span> <span style="color:#000">edges</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">if</span> (<span style="color:#000">!</span><span style="color:#000">vis</span>[<span style="color:#000">k</span>.<span style="color:#000">y</span>] <span style="color:#000">&amp;&amp;</span> <span style="color:#000">k</span>.<span style="color:#000">cap</span> <span style="color:#000">-</span> <span style="color:#000">k</span>.<span style="color:#000">flow</span> <span style="color:#000">&gt;</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>                    <span style="color:#000">dis</span>[<span style="color:#000">k</span>.<span style="color:#000">y</span>] <span style="color:#000">=</span> <span style="color:#000">dis</span>[<span style="color:#000">x</span>] <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">vis</span>[<span style="color:#000">k</span>.<span style="color:#000">y</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">q</span>.<span style="color:#000">push</span>(<span style="color:#000">k</span>.<span style="color:#000">y</span>);
</span></span><span style="display:flex;"><span>            }
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#000">vis</span>[<span style="color:#000">t</span>];
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">dfs</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">lim</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">x</span> <span style="color:#000">==</span> <span style="color:#000">t</span> <span style="color:#000">||</span> <span style="color:#000">lim</span> <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">return</span> <span style="color:#000">lim</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">res</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>, <span style="color:#000">f</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">&amp;</span><span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#000">cur</span>[<span style="color:#000">x</span>]; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> (<span style="color:#a90d91">int</span>)<span style="color:#000">e</span>[<span style="color:#000">x</span>].<span style="color:#000">size</span>(); <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">auto</span> <span style="color:#000">&amp;</span><span style="color:#000">k</span> <span style="color:#000">=</span> <span style="color:#000">edges</span>[<span style="color:#000">e</span>[<span style="color:#000">x</span>][<span style="color:#000">i</span>]];
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">dis</span>[<span style="color:#000">k</span>.<span style="color:#000">y</span>] <span style="color:#000">!=</span> <span style="color:#000">dis</span>[<span style="color:#000">x</span>] <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">||</span> (<span style="color:#000">f</span> <span style="color:#000">=</span> <span style="color:#000">dfs</span>(<span style="color:#000">k</span>.<span style="color:#000">y</span>, <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">min</span>(<span style="color:#000">lim</span>, <span style="color:#000">k</span>.<span style="color:#000">cap</span> <span style="color:#000">-</span> <span style="color:#000">k</span>.<span style="color:#000">flow</span>))) <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">continue</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">k</span>.<span style="color:#000">flow</span> <span style="color:#000">+=</span> <span style="color:#000">f</span>, <span style="color:#000">edges</span>[<span style="color:#000">e</span>[<span style="color:#000">x</span>][<span style="color:#000">i</span>] <span style="color:#000">^</span> <span style="color:#1c01ce">1</span>].<span style="color:#000">flow</span> <span style="color:#000">-=</span> <span style="color:#000">f</span>, <span style="color:#000">res</span> <span style="color:#000">+=</span> <span style="color:#000">f</span>, <span style="color:#000">lim</span> <span style="color:#000">-=</span> <span style="color:#000">f</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">lim</span> <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">break</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#000">res</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">dinic</span>(<span style="color:#a90d91">int</span> <span style="color:#000">s_</span>, <span style="color:#a90d91">int</span> <span style="color:#000">t_</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">s</span> <span style="color:#000">=</span> <span style="color:#000">s_</span>, <span style="color:#000">t</span> <span style="color:#000">=</span> <span style="color:#000">t_</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">while</span> (<span style="color:#000">bfs</span>())
</span></span><span style="display:flex;"><span>            <span style="color:#000">memset</span>(<span style="color:#000">cur</span>, <span style="color:#1c01ce">0</span>, <span style="color:#a90d91">sizeof</span>(<span style="color:#000">cur</span>)), <span style="color:#000">ans</span> <span style="color:#000">+=</span> <span style="color:#000">dfs</span>(<span style="color:#000">s</span>, <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">30</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#000">ans</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>} <span style="color:#000">G</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">n</span>, <span style="color:#000">m</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">int</span> <span style="color:#000">id</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>) { <span style="color:#a90d91">return</span> (<span style="color:#000">y</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>) <span style="color:#000">*</span> <span style="color:#000">n</span> <span style="color:#000">+</span> <span style="color:#000">x</span> <span style="color:#000">+</span> <span style="color:#000">n</span> <span style="color:#000">*</span> <span style="color:#000">m</span> <span style="color:#000">+</span> <span style="color:#1c01ce">2</span>; }
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">int</span> <span style="color:#000">id2</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>) { <span style="color:#a90d91">return</span> <span style="color:#000">m</span> <span style="color:#000">*</span> (<span style="color:#000">x</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>) <span style="color:#000">+</span> <span style="color:#000">y</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>; }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">scanf</span>(<span style="color:#c41a16">&#34;%d%d&#34;</span>, <span style="color:#000">&amp;</span><span style="color:#000">n</span>, <span style="color:#000">&amp;</span><span style="color:#000">m</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">scanf</span>(<span style="color:#c41a16">&#34;%s&#34;</span>, <span style="color:#000">str</span>[<span style="color:#000">i</span>] <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">s</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">t</span> <span style="color:#000">=</span> <span style="color:#000">n</span> <span style="color:#000">*</span> <span style="color:#000">m</span> <span style="color:#000">*</span> <span style="color:#1c01ce">2</span> <span style="color:#000">+</span> <span style="color:#1c01ce">3</span>, <span style="color:#000">tot</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>, <span style="color:#000">cnt_p</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">str</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>] <span style="color:#000">==</span> <span style="color:#2300ce">&#39;#&#39;</span>)
</span></span><span style="display:flex;"><span>            {
</span></span><span style="display:flex;"><span>                <span style="color:#000">cnt_p</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">if</span> (<span style="color:#000">str</span>[<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>][<span style="color:#000">j</span>] <span style="color:#000">==</span> <span style="color:#2300ce">&#39;#&#39;</span>)
</span></span><span style="display:flex;"><span>                    <span style="color:#000">tot</span><span style="color:#000">++</span>, <span style="color:#000">G</span>.<span style="color:#000">add</span>(<span style="color:#1c01ce">1</span>, <span style="color:#000">id2</span>(<span style="color:#000">i</span>, <span style="color:#000">j</span>), <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>            }
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;</span> <span style="color:#000">m</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">str</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>] <span style="color:#000">==</span> <span style="color:#2300ce">&#39;#&#39;</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">str</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">==</span> <span style="color:#2300ce">&#39;#&#39;</span>)
</span></span><span style="display:flex;"><span>            {
</span></span><span style="display:flex;"><span>                <span style="color:#177500">//cout &lt;&lt; &#34;cur: &#34; &lt;&lt; i &lt;&lt; &#34; &#34; &lt;&lt; j &lt;&lt; endl;
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>                <span style="color:#000">G</span>.<span style="color:#000">add</span>(<span style="color:#000">id</span>(<span style="color:#000">i</span>, <span style="color:#000">j</span>), <span style="color:#000">t</span>, <span style="color:#1c01ce">1</span>), <span style="color:#000">tot</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">if</span> (<span style="color:#000">i</span> <span style="color:#000">&gt;</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">str</span>[<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>][<span style="color:#000">j</span>] <span style="color:#000">==</span> <span style="color:#2300ce">&#39;#&#39;</span>)
</span></span><span style="display:flex;"><span>                    <span style="color:#000">G</span>.<span style="color:#000">add</span>(<span style="color:#000">id2</span>(<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">j</span>), <span style="color:#000">id</span>(<span style="color:#000">i</span>, <span style="color:#000">j</span>), <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">if</span> (<span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">n</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">str</span>[<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>][<span style="color:#000">j</span>] <span style="color:#000">==</span> <span style="color:#2300ce">&#39;#&#39;</span>)
</span></span><span style="display:flex;"><span>                    <span style="color:#000">G</span>.<span style="color:#000">add</span>(<span style="color:#000">id2</span>(<span style="color:#000">i</span>, <span style="color:#000">j</span>), <span style="color:#000">id</span>(<span style="color:#000">i</span>, <span style="color:#000">j</span>), <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">if</span> (<span style="color:#000">i</span> <span style="color:#000">&gt;</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">str</span>[<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>][<span style="color:#000">j</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">==</span> <span style="color:#2300ce">&#39;#&#39;</span>)
</span></span><span style="display:flex;"><span>                    <span style="color:#000">G</span>.<span style="color:#000">add</span>(<span style="color:#000">id2</span>(<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">j</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>), <span style="color:#000">id</span>(<span style="color:#000">i</span>, <span style="color:#000">j</span>), <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">if</span> (<span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">n</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">str</span>[<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>][<span style="color:#000">j</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">==</span> <span style="color:#2300ce">&#39;#&#39;</span>)
</span></span><span style="display:flex;"><span>                    <span style="color:#000">G</span>.<span style="color:#000">add</span>(<span style="color:#000">id2</span>(<span style="color:#000">i</span>, <span style="color:#000">j</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>), <span style="color:#000">id</span>(<span style="color:#000">i</span>, <span style="color:#000">j</span>), <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>            }
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">cnt_p</span> <span style="color:#000">-</span> (<span style="color:#000">tot</span> <span style="color:#000">-</span> <span style="color:#000">G</span>.<span style="color:#000">dinic</span>(<span style="color:#000">s</span>, <span style="color:#000">t</span>)) <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div>]]></content:encoded>
    </item>
    
    <item>
      <title>Codeforces Round 542 (Div. 1&amp;2)</title>
      <link>https://luoyisu.github.io/posts/cf-contest1129/</link>
      <pubDate>Tue, 21 Dec 2021 14:36:53 +0000</pubDate>
      
      <guid>https://luoyisu.github.io/posts/cf-contest1129/</guid>
      <description>&lt;h2 id=&#34;概述&#34;&gt;概述&lt;/h2&gt;
&lt;p&gt;Div1 的 B、C、D、E 都值得一做。&lt;/p&gt;</description>
      <content:encoded><![CDATA[<h2 id="概述">概述</h2>
<p>Div1 的 B、C、D、E 都值得一做。</p>
<h2 id="div2-ahttpscodeforcescontest1130problema"><a href="https://codeforc.es/contest/1130/problem/A">Div2 A</a></h2>
<h3 id="description">Description</h3>
<p>有一个长度为 $n$​ 的序列，你需要找到一个非零整数 $d$​ 满足：当所有数都除以 $d$​ 之后（可以为小数），正数的个数要大于 $\lceil\dfrac{n}{2}\rceil$​。</p>
<h3 id="solution">Solution</h3>
<p>当正数数量足够，$d=1$；当负数数量足够，$d=-1$，否则无解。</p>
<h3 id="code">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cctype&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cmath&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cerr</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">cnt</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>, <span style="color:#000">n</span>, <span style="color:#000">cnt2</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">x</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">x</span>, <span style="color:#000">cnt</span> <span style="color:#000">+=</span> <span style="color:#000">x</span> <span style="color:#000">&gt;</span> <span style="color:#1c01ce">0</span>, <span style="color:#000">cnt2</span> <span style="color:#000">+=</span> <span style="color:#000">x</span> <span style="color:#000">&lt;</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">p</span> <span style="color:#000">=</span> <span style="color:#000">ceil</span>(<span style="color:#1c01ce">1.0</span> <span style="color:#000">*</span> <span style="color:#000">n</span> <span style="color:#000">/</span> <span style="color:#1c01ce">2</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">cnt</span> <span style="color:#000">&gt;=</span> <span style="color:#000">p</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">puts</span>(<span style="color:#c41a16">&#34;1&#34;</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">else</span> <span style="color:#a90d91">if</span> (<span style="color:#000">cnt2</span> <span style="color:#000">&gt;=</span> <span style="color:#000">p</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">puts</span>(<span style="color:#c41a16">&#34;-1&#34;</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>        <span style="color:#000">puts</span>(<span style="color:#c41a16">&#34;0&#34;</span>);
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="div2-bhttpscodeforcescontest1130problemb"><a href="https://codeforc.es/contest/1130/problem/B">Div2 B</a></h2>
<h3 id="description-1">Description</h3>
<p>萨沙和迪玛要做两个 $N$​ 层蛋糕，已知一条街上的 $2n$ 个商店 $a_1,a_2&hellip;.a_{2n}$ ​每家只能提供一个 $a_i$ ​层蛋糕，蛋糕必须按照从 $1\sim n$（从小到大）的顺序购买。最初，萨沙和迪玛位于第一个（最左边）房子附近。输出他们在购买两个蛋糕时必须行走的最小距离。相邻两栋房子之间的距离正好是 $1$。​</p>
<h3 id="solution-1">Solution</h3>
<p>显然两个人并没有什么特殊要求，找距离和最小的走即可。</p>
<h3 id="code-1">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cmath&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cctype&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cerr</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2e5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">a</span>[<span style="color:#000">maxn</span>], <span style="color:#000">b</span>[<span style="color:#000">maxn</span>][<span style="color:#1c01ce">2</span>], <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">int</span> <span style="color:#000">dis</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>) { <span style="color:#a90d91">return</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">abs</span>(<span style="color:#000">x</span> <span style="color:#000">-</span> <span style="color:#000">y</span>); }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">b</span>[<span style="color:#000">a</span>[<span style="color:#000">i</span>]][<span style="color:#1c01ce">0</span>])
</span></span><span style="display:flex;"><span>            <span style="color:#000">b</span>[<span style="color:#000">a</span>[<span style="color:#000">i</span>]][<span style="color:#1c01ce">1</span>] <span style="color:#000">=</span> <span style="color:#000">i</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>            <span style="color:#000">b</span>[<span style="color:#000">a</span>[<span style="color:#000">i</span>]][<span style="color:#1c01ce">0</span>] <span style="color:#000">=</span> <span style="color:#000">i</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">nowa</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">nowb</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">b</span>[<span style="color:#000">i</span>][<span style="color:#1c01ce">0</span>], <span style="color:#000">y</span> <span style="color:#000">=</span> <span style="color:#000">b</span>[<span style="color:#000">i</span>][<span style="color:#1c01ce">1</span>];
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">dis</span>(<span style="color:#000">nowa</span>, <span style="color:#000">x</span>) <span style="color:#000">+</span> <span style="color:#000">dis</span>(<span style="color:#000">nowb</span>, <span style="color:#000">y</span>) <span style="color:#000">&lt;</span> <span style="color:#000">dis</span>(<span style="color:#000">nowa</span>, <span style="color:#000">y</span>) <span style="color:#000">+</span> <span style="color:#000">dis</span>(<span style="color:#000">nowb</span>, <span style="color:#000">x</span>))
</span></span><span style="display:flex;"><span>            <span style="color:#000">ans</span> <span style="color:#000">+=</span> <span style="color:#000">dis</span>(<span style="color:#000">nowa</span>, <span style="color:#000">x</span>) <span style="color:#000">+</span> <span style="color:#000">dis</span>(<span style="color:#000">nowb</span>, <span style="color:#000">y</span>), <span style="color:#000">nowa</span> <span style="color:#000">=</span> <span style="color:#000">x</span>, <span style="color:#000">nowb</span> <span style="color:#000">=</span> <span style="color:#000">y</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>            <span style="color:#000">ans</span> <span style="color:#000">+=</span> <span style="color:#000">dis</span>(<span style="color:#000">nowa</span>, <span style="color:#000">y</span>) <span style="color:#000">+</span> <span style="color:#000">dis</span>(<span style="color:#000">nowb</span>, <span style="color:#000">x</span>), <span style="color:#000">nowa</span> <span style="color:#000">=</span> <span style="color:#000">y</span>, <span style="color:#000">nowb</span> <span style="color:#000">=</span> <span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">ans</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="div2-chttpscodeforcescontest1130problemc"><a href="https://codeforc.es/contest/1130/problem/C">Div2 C</a></h2>
<h3 id="description-2">Description</h3>
<p>有一个 $n\times n$ 的网格，有一些部分是陆地，剩下的是海洋。海洋不能通行。一个人想从一个格子出发到另一个格子。</p>
<p>你可以造至多一个隧道连接两个格子，如果从 $(x_1,y_1)$ 连到 $(x_2,y_2)$，代价是 $(x_1-x_2)^2+(y_1-y_2)^2$。在陆地上行走没有代价。</p>
<p>问最小代价是多少。$n\leq50$。</p>
<h3 id="solution-2">Solution</h3>
<p>因为只能造一个隧道，我们只能在出发点所在陆地和终点所在陆地造一个隧道。</p>
<p>$n$ 这么小，直接最暴力的暴力即可，找到出发地所在联通块所有点和终点所在联通块所有点，直接暴力找最小代价即可。</p>
<p>时间复杂度 $O(n^4)$。</p>
<p>优化其实也可以，我们只求出来每个联通块最外圈的点，这样就是 $O(n^2)$ 的了。</p>
<h3 id="code-2">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cctype&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cerr</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">dx</span>[] <span style="color:#000">=</span> {<span style="color:#1c01ce">1</span>, <span style="color:#000">-</span><span style="color:#1c01ce">1</span>, <span style="color:#1c01ce">0</span>, <span style="color:#1c01ce">0</span>};
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">dy</span>[] <span style="color:#000">=</span> {<span style="color:#1c01ce">0</span>, <span style="color:#1c01ce">0</span>, <span style="color:#000">-</span><span style="color:#1c01ce">1</span>, <span style="color:#1c01ce">1</span>};
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">55</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">struct</span> <span style="color:#3f6e75">point</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#000">y</span>;
</span></span><span style="display:flex;"><span>} <span style="color:#000">s</span>, <span style="color:#000">t</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">char</span> <span style="color:#000">ss</span>[<span style="color:#000">maxn</span>][<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">a</span>[<span style="color:#000">maxn</span>][<span style="color:#000">maxn</span>], <span style="color:#000">vis</span>[<span style="color:#000">maxn</span>][<span style="color:#000">maxn</span>], <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">bool</span> <span style="color:#000">is_in</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>) { <span style="color:#a90d91">return</span> <span style="color:#000">x</span> <span style="color:#000">&gt;=</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">x</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">y</span> <span style="color:#000">&gt;=</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">y</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">dfs</span>(<span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">vector</span><span style="color:#000">&lt;</span><span style="color:#000">point</span><span style="color:#000">&gt;</span> <span style="color:#000">&amp;</span><span style="color:#000">p</span>, <span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">vis</span>[<span style="color:#000">x</span>][<span style="color:#000">y</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">p</span>.<span style="color:#000">push_back</span>({<span style="color:#000">x</span>, <span style="color:#000">y</span>});
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#1c01ce">4</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">nx</span> <span style="color:#000">=</span> <span style="color:#000">x</span> <span style="color:#000">+</span> <span style="color:#000">dx</span>[<span style="color:#000">i</span>], <span style="color:#000">ny</span> <span style="color:#000">=</span> <span style="color:#000">y</span> <span style="color:#000">+</span> <span style="color:#000">dy</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">is_in</span>(<span style="color:#000">nx</span>, <span style="color:#000">ny</span>) <span style="color:#000">&amp;&amp;</span> <span style="color:#000">!</span><span style="color:#000">vis</span>[<span style="color:#000">nx</span>][<span style="color:#000">ny</span>] <span style="color:#000">&amp;&amp;</span> <span style="color:#000">a</span>[<span style="color:#000">nx</span>][<span style="color:#000">ny</span>] <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">dfs</span>(<span style="color:#000">p</span>, <span style="color:#000">nx</span>, <span style="color:#000">ny</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">int</span> <span style="color:#000">pow_2</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>) { <span style="color:#a90d91">return</span> <span style="color:#000">x</span> <span style="color:#000">*</span> <span style="color:#000">x</span>; }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">s</span>.<span style="color:#000">x</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">s</span>.<span style="color:#000">y</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">t</span>.<span style="color:#000">x</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">t</span>.<span style="color:#000">y</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> (<span style="color:#000">ss</span>[<span style="color:#000">i</span>] <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">a</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>] <span style="color:#000">=</span> <span style="color:#000">ss</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>] <span style="color:#000">==</span> <span style="color:#2300ce">&#39;1&#39;</span> <span style="color:#000">?</span> <span style="color:#1c01ce">1</span> <span style="color:#000">:</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">vector</span><span style="color:#000">&lt;</span><span style="color:#000">point</span><span style="color:#000">&gt;</span> <span style="color:#000">p</span>, <span style="color:#000">q</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">dfs</span>(<span style="color:#000">p</span>, <span style="color:#000">s</span>.<span style="color:#000">x</span>, <span style="color:#000">s</span>.<span style="color:#000">y</span>), <span style="color:#000">memset</span>(<span style="color:#000">vis</span>, <span style="color:#1c01ce">0</span>, <span style="color:#a90d91">sizeof</span>(<span style="color:#000">vis</span>)), <span style="color:#000">dfs</span>(<span style="color:#000">q</span>, <span style="color:#000">t</span>.<span style="color:#000">x</span>, <span style="color:#000">t</span>.<span style="color:#000">y</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">30</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">auto</span> <span style="color:#000">k</span> : <span style="color:#000">p</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">auto</span> <span style="color:#000">f</span> : <span style="color:#000">q</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">min</span>(<span style="color:#000">ans</span>, <span style="color:#000">pow_2</span>(<span style="color:#000">k</span>.<span style="color:#000">x</span> <span style="color:#000">-</span> <span style="color:#000">f</span>.<span style="color:#000">x</span>) <span style="color:#000">+</span> <span style="color:#000">pow_2</span>(<span style="color:#000">k</span>.<span style="color:#000">y</span> <span style="color:#000">-</span> <span style="color:#000">f</span>.<span style="color:#000">y</span>));
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">ans</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="ahttpscodeforcescontest1129problema2"><a href="https://codeforc.es/contest/1129/problem/A2">A</a></h2>
<h3 id="description-3">Description</h3>
<p>有 $n$ 个站台和一个玩具火车，第 $i$ 个站台单向连向第 $i+1$ 个站台，特殊地，第 $n$ 个站台连向第 $1$ 个站台。</p>
<p>有 $m$ 个糖果，每个糖果初始在 $a_i$ 站台，要被送到 $b_i$​ 站台。</p>
<p>火车经过一个站台时，可以卸下任意数量糖果，但只能往火车上装一个糖果。</p>
<p>问从每个站台出发，把所有糖果运送到指定位置需要的时间。（经过一条边需要 $1$ 的时间）。</p>
<h3 id="solution-3">Solution</h3>
<p>一个站台里的糖果数决定了要经过这个站台的次数。</p>
<p>显然只有最后一次经过拿的糖果的目的地能影响时间，我们贪心地让这个时间最小。</p>
<p>预处理出从 $1$ 出发把每个车站的糖果的都送完的时间加上 $1$。</p>
<p>输出一个车站的答案后，只需要把这个车站的时间都加上 $n$ 并更新答案即可。</p>
<h3 id="code-3">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cctype&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cerr</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">5100</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">n</span>, <span style="color:#000">m</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">vector</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">all</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">ios</span><span style="color:#000">::</span><span style="color:#000">sync_with_stdio</span>(<span style="color:#a90d91">false</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">m</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">mx</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">x</span>, <span style="color:#000">y</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">x</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">y</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">all</span>[<span style="color:#000">x</span>].<span style="color:#000">push_back</span>(<span style="color:#000">y</span> <span style="color:#000">&lt;</span> <span style="color:#000">x</span> <span style="color:#000">?</span> <span style="color:#000">y</span> <span style="color:#000">+</span> <span style="color:#000">n</span> : <span style="color:#000">y</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">sort</span>(<span style="color:#000">all</span>[<span style="color:#000">i</span>].<span style="color:#000">begin</span>(), <span style="color:#000">all</span>[<span style="color:#000">i</span>].<span style="color:#000">end</span>(), <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">greater</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span><span style="color:#000">&gt;</span>());
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">now</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">auto</span> <span style="color:#000">&amp;</span><span style="color:#000">p</span> : <span style="color:#000">all</span>[<span style="color:#000">i</span>])
</span></span><span style="display:flex;"><span>            <span style="color:#000">p</span> <span style="color:#000">+=</span> <span style="color:#000">now</span>, <span style="color:#000">now</span> <span style="color:#000">+=</span> <span style="color:#000">n</span>, <span style="color:#000">mx</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">max</span>(<span style="color:#000">mx</span>, <span style="color:#000">p</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">mx</span> <span style="color:#000">-</span> <span style="color:#000">i</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">auto</span> <span style="color:#000">&amp;</span><span style="color:#000">p</span> : <span style="color:#000">all</span>[<span style="color:#000">i</span>])
</span></span><span style="display:flex;"><span>            <span style="color:#000">p</span> <span style="color:#000">+=</span> <span style="color:#000">n</span>, <span style="color:#000">mx</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">max</span>(<span style="color:#000">p</span>, <span style="color:#000">mx</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="bhttpscodeforcescontest1129problemb"><a href="https://codeforc.es/contest/1129/problem/B">B</a></h2>
<h3 id="description-4">Description</h3>
<p>给定一个序列 $a$，有 $n$ 个元素，编号从 $0$ 到 $n-1$。求 $\max\limits_{0 \leq l \leq r \leq n-1}(r-l+1)\times\sum\limits_{l\leq i\leq r}a_i$。</p>
<p>有一个错误算法：</p>
<pre tabindex="0"><code>```
function find_answer(n, a)
    # Assumes n is an integer between 1 and 2000, inclusive
    # Assumes a is a list containing n integers: a[0], a[1], ..., a[n-1]
    res = 0
    cur = 0
    k = -1
    for i = 0 to i = n-1
        cur = cur + a[i]
        if cur &lt; 0
            cur = 0
            k = i
        res = max(res, (i-k)*cur)
    return res
```
</code></pre><p>你需要构造一组数据，使这个标准答案减去错误算法得出的答案是 $k$。</p>
<p>$|a_i| \leq 10^6,n \leq 2000$。</p>
<h3 id="solution-4">Solution</h3>
<p>不难发现这个错误做法会在出现负数的时候出错，那么我们先安排一个 $-1$ 进去。</p>
<p>这时候错误做法的答案是 $(\sum a_i+1)(n-1)$，而正确答案是 $n\times\sum a_i$。</p>
<p>那么应该新加进去的数是 $k-\sum a_i+n$（这里的 $\sum a_i,n$ 都是加进去之前的）。</p>
<p>如果这个数比 $10^6$ 大我们就加进去 $10^6$，否则直接加该加的数即可。</p>
<h3 id="code-4">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cctype&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cerr</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">mx</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1e6</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">vector</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">ans</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">k</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">ans</span>.<span style="color:#000">push_back</span>(<span style="color:#000">-</span><span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">sum</span> <span style="color:#000">=</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span>, <span style="color:#000">n</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">k</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> (<span style="color:#000">sum</span> <span style="color:#000">-</span> <span style="color:#000">n</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;</span> <span style="color:#000">k</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">k</span> <span style="color:#000">-</span> <span style="color:#000">sum</span> <span style="color:#000">+</span> <span style="color:#000">n</span> <span style="color:#000">&lt;=</span> <span style="color:#000">mx</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">ans</span>.<span style="color:#000">push_back</span>(<span style="color:#000">k</span> <span style="color:#000">-</span> <span style="color:#000">sum</span> <span style="color:#000">+</span> <span style="color:#000">n</span>), <span style="color:#000">n</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>            <span style="color:#000">n</span><span style="color:#000">++</span>, <span style="color:#000">ans</span>.<span style="color:#000">push_back</span>(<span style="color:#000">mx</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">sum</span> <span style="color:#000">+=</span> <span style="color:#000">ans</span>.<span style="color:#000">back</span>();
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">ans</span>.<span style="color:#000">size</span>() <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">p</span> : <span style="color:#000">ans</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">p</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="chttpscodeforcescontest1129problemc"><a href="https://codeforc.es/contest/1129/problem/C">C</a></h2>
<h3 id="description-5">Description</h3>
<p>在摩尔斯电码（以下简称“摩码”）中，字母表中的一个字母被表示为一个长度为$1\sim4$的 <code>01</code> 串。长度为 $1\sim4$ 的 <code>01</code>串共有 $2^1+2^2+2^3+2^4=30$ 个，而字母只有 $26$ 个，所以有 $4$ 个 <code>01</code> 串不表示任何字母——<code>0011</code>、<code>0101</code>、<code>1110</code>、<code>1111</code>，其他 $26$ 个 <code>01</code> 串表示互不相同的 $26$ 个字母。
你有一个 <code>01</code> 串 $S$，初始为空。现在有 $m$ 次添加，每次往 $S$ 的末尾添加一个字符（<code>0</code> 或 <code>1</code>）。对于每一次添加，你都要回答目前的 $S$ 的所有非空子串用摩码所能表示的字母串的总数。由于答案可能巨大，你只需要输出答案模 $10^9+7$ 的结果。</p>
<p>$m\leq3000$。</p>
<h3 id="solution-5">Solution</h3>
<p>$m$ 很小，我们可以考虑用暴力一点的方法草过去这个题。</p>
<p>可以考虑对每个操作计算其对答案的贡献，那么我们就是要计算后缀对答案的贡献。</p>
<p>发现我们的字母串是本质不相同的，使用 Trie 树就可以维护之前的所有前缀。</p>
<p>进行一个操作时，我们在 Trie 树上的所有叶子节点下面都新开一个点，然后找它的 $4$ 个父亲（即枚举新后缀所在摩尔斯电码的长度），直接把方案数加上去就行。</p>
<p>复杂度 $O(m^2)$。</p>
<h3 id="code-5">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cctype&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cerr</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">3000</span> <span style="color:#000">*</span> <span style="color:#1c01ce">3000</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>, <span style="color:#000">mod</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1e9</span> <span style="color:#000">+</span> <span style="color:#1c01ce">7</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">typedef</span> <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">ll</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">upd</span>(<span style="color:#a90d91">int</span> <span style="color:#000">&amp;</span><span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>) { <span style="color:#000">x</span> <span style="color:#000">+=</span> <span style="color:#000">y</span> <span style="color:#000">%</span> <span style="color:#000">mod</span>, <span style="color:#000">x</span> <span style="color:#000">%=</span> <span style="color:#000">mod</span>; }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">struct</span> <span style="color:#3f6e75">Tree</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">ch</span>[<span style="color:#000">maxn</span>][<span style="color:#1c01ce">2</span>], <span style="color:#000">f</span>[<span style="color:#000">maxn</span>], <span style="color:#000">tot</span>, <span style="color:#000">father</span>[<span style="color:#000">maxn</span>], <span style="color:#000">a</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">void</span> <span style="color:#000">dp</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">p</span> <span style="color:#000">=</span> <span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">s</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#1c01ce">4</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">int</span> <span style="color:#000">fa</span> <span style="color:#000">=</span> <span style="color:#000">father</span>[<span style="color:#000">x</span>];
</span></span><span style="display:flex;"><span>            <span style="color:#177500">//cout &lt;&lt; x &lt;&lt; &#34; &#34; &lt;&lt; fa &lt;&lt; endl;
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>            <span style="color:#a90d91">int</span> <span style="color:#000">now</span> <span style="color:#000">=</span> <span style="color:#000">ch</span>[<span style="color:#000">fa</span>][<span style="color:#1c01ce">1</span>] <span style="color:#000">==</span> <span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">s</span> <span style="color:#000">+=</span> <span style="color:#000">now</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">i</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">fa</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">i</span> <span style="color:#000">==</span> <span style="color:#1c01ce">3</span> <span style="color:#000">&amp;&amp;</span> (<span style="color:#000">s</span> <span style="color:#000">==</span> <span style="color:#1c01ce">3</span> <span style="color:#000">||</span> <span style="color:#000">s</span> <span style="color:#000">==</span> <span style="color:#1c01ce">5</span> <span style="color:#000">||</span> <span style="color:#000">s</span> <span style="color:#000">==</span> <span style="color:#1c01ce">14</span> <span style="color:#000">||</span> <span style="color:#000">s</span> <span style="color:#000">==</span> <span style="color:#1c01ce">15</span>))
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">continue</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">upd</span>(<span style="color:#000">f</span>[<span style="color:#000">p</span>], <span style="color:#000">f</span>[<span style="color:#000">x</span>]);
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">x</span> <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">break</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#000">upd</span>(<span style="color:#000">ans</span>, <span style="color:#000">f</span>[<span style="color:#000">p</span>]);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">void</span> <span style="color:#000">insert</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">pos</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">a</span>[<span style="color:#000">pos</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">pos</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">int</span> <span style="color:#000">p</span> <span style="color:#000">=</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">!</span><span style="color:#000">ch</span>[<span style="color:#000">p</span>][<span style="color:#000">x</span>])
</span></span><span style="display:flex;"><span>                <span style="color:#000">ch</span>[<span style="color:#000">p</span>][<span style="color:#000">x</span>] <span style="color:#000">=</span> <span style="color:#000">++</span><span style="color:#000">tot</span>, <span style="color:#000">father</span>[<span style="color:#000">tot</span>] <span style="color:#000">=</span> <span style="color:#000">p</span>, <span style="color:#000">dp</span>(<span style="color:#000">tot</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#000">a</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">ch</span>[<span style="color:#000">p</span>][<span style="color:#000">x</span>];
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>} <span style="color:#000">t</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">m</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">m</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">t</span>.<span style="color:#000">f</span>[<span style="color:#1c01ce">0</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">t</span>.<span style="color:#000">insert</span>(<span style="color:#000">x</span>, <span style="color:#000">i</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">ans</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="dhttpscodeforcescontest1129problemd"><a href="https://codeforc.es/contest/1129/problem/D">D</a></h2>
<h3 id="description-6">Description</h3>
<p>给出一个长度为 $n$ 的序列，把它划分成若干段，使得每一段中出现过<strong>恰好</strong>一次的元素个数 $\le k$，求方案数对 $998244353$ 取模后的结果。</p>
<h3 id="solution-6">Solution</h3>
<p>不难想到一个  DP：$f(i)$ 表示前 $i$ 位的答案。$f(i) = \sum\limits_{0 \leq j &lt; i \wedge g(j+1, i) \leq k} f(j)$。其中 $g(i,j)$ 表示区间 $[i,j]$ 中出现过恰好一次的元素个数。</p>
<p>直接转移是 $O(n^2)$ 甚至 $O(n^3)$​ 的，想办法优化。</p>
<p>不会，下文包括代码全是抄题解。</p>
<p>因为恰好一次，我们想办法记录一个 $lst_i$​ 数组表示 $i$​ 上一次出现位置。</p>
<p>我们维护 $g_j=g(j+1,i)$</p>
<p>那么新加入 $a_i$​ 时，我们应该把 $[lst_{lst_{a_i}},lst_{a_i}-1)$​ 里的 $g$​​ 减一，把 $[lst_{a_i},i)$ 里的 $g$ 加上 $1$。</p>
<p>问题变成有一个序列，每个元素有一个权值和键值。我们每次将区间键值 $\pm1$，查询序列中键值 $\leq k$​ 的元素权值和。</p>
<p>对这种莫名其妙的维护我们可以尝试分块。</p>
<p>对序列进行分块，对每个块维护一个 $sum(i,j)$ 表示第 $i$ 个块中 $g_p\geq j$ 的 $f_p$ 之和。并维护一个 $all_i$ 表示块内所有 $f_p$​​​ 之和。</p>
<p>$lzy$ 是块上的加法懒标记。</p>
<p>查询直接遍历所有块把答案加进去即可（用 $all_i-sum(i,k-lzy_i+1)$ 就得到这个块的答案了）。</p>
<p>修改怎么办呢？对于整块，我们直接加懒标记。</p>
<p>对于散点，我们如果要把 $g_j$​​ 加上 $1$​​，那么就相当于把 $sum(i,g_j)$​​ 加上 $f_j$，反之同理。</p>
<p>这样查询和修改就是 $O(1)$​ 的。</p>
<p>时间复杂度 $O(nw+\dfrac{n^2}{w})\geq O(n\sqrt n)$。</p>
<h3 id="code-6">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cmath&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cctype&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cerr</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1e5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>, <span style="color:#000">mod</span> <span style="color:#000">=</span> <span style="color:#1c01ce">998244353</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">typedef</span> <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">ll</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">n</span>, <span style="color:#000">k</span>, <span style="color:#000">len</span>, <span style="color:#000">id</span>[<span style="color:#000">maxn</span>], <span style="color:#000">lst</span>[<span style="color:#000">maxn</span>], <span style="color:#000">tot</span>; 
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">f</span>[<span style="color:#000">maxn</span>], <span style="color:#000">sum</span>[<span style="color:#1c01ce">410</span>][<span style="color:#000">maxn</span>], <span style="color:#000">lzy</span>[<span style="color:#000">maxn</span>], <span style="color:#000">bl</span>[<span style="color:#000">maxn</span>], <span style="color:#000">cnt</span>[<span style="color:#000">maxn</span>], <span style="color:#000">br</span>[<span style="color:#000">maxn</span>], <span style="color:#000">all</span>[<span style="color:#000">maxn</span>], <span style="color:#000">a</span>[<span style="color:#000">maxn</span>], <span style="color:#000">llst</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">upd</span>(<span style="color:#a90d91">int</span> <span style="color:#000">&amp;</span><span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>) { <span style="color:#000">x</span> <span style="color:#000">+=</span> (<span style="color:#000">y</span> <span style="color:#000">+</span> <span style="color:#000">mod</span>) <span style="color:#000">%</span> <span style="color:#000">mod</span>, <span style="color:#000">x</span> <span style="color:#000">%=</span> <span style="color:#000">mod</span>; }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">add</span>(<span style="color:#a90d91">int</span> <span style="color:#000">l</span>, <span style="color:#a90d91">int</span> <span style="color:#000">r</span>, <span style="color:#a90d91">int</span> <span style="color:#000">v</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">l</span> <span style="color:#000">&gt;</span> <span style="color:#000">r</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">id</span>[<span style="color:#000">l</span>] <span style="color:#000">==</span> <span style="color:#000">id</span>[<span style="color:#000">r</span>])
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#000">l</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">r</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">v</span> <span style="color:#000">==</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">upd</span>(<span style="color:#000">sum</span>[<span style="color:#000">id</span>[<span style="color:#000">l</span>]][<span style="color:#000">++</span><span style="color:#000">cnt</span>[<span style="color:#000">i</span>]], <span style="color:#000">f</span>[<span style="color:#000">i</span>]);
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>                <span style="color:#000">upd</span>(<span style="color:#000">sum</span>[<span style="color:#000">id</span>[<span style="color:#000">l</span>]][<span style="color:#000">cnt</span>[<span style="color:#000">i</span>]<span style="color:#000">--</span>], <span style="color:#000">-</span><span style="color:#000">f</span>[<span style="color:#000">i</span>]);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#000">l</span>; <span style="color:#000">id</span>[<span style="color:#000">i</span>] <span style="color:#000">==</span> <span style="color:#000">id</span>[<span style="color:#000">l</span>]; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">v</span> <span style="color:#000">==</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">upd</span>(<span style="color:#000">sum</span>[<span style="color:#000">id</span>[<span style="color:#000">l</span>]][<span style="color:#000">++</span><span style="color:#000">cnt</span>[<span style="color:#000">i</span>]], <span style="color:#000">f</span>[<span style="color:#000">i</span>]);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>            <span style="color:#000">upd</span>(<span style="color:#000">sum</span>[<span style="color:#000">id</span>[<span style="color:#000">l</span>]][<span style="color:#000">cnt</span>[<span style="color:#000">i</span>]<span style="color:#000">--</span>], <span style="color:#000">-</span><span style="color:#000">f</span>[<span style="color:#000">i</span>]);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#000">r</span>; <span style="color:#000">id</span>[<span style="color:#000">i</span>] <span style="color:#000">==</span> <span style="color:#000">id</span>[<span style="color:#000">r</span>]; <span style="color:#000">i</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">v</span> <span style="color:#000">==</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">upd</span>(<span style="color:#000">sum</span>[<span style="color:#000">id</span>[<span style="color:#000">r</span>]][<span style="color:#000">++</span><span style="color:#000">cnt</span>[<span style="color:#000">i</span>]], <span style="color:#000">f</span>[<span style="color:#000">i</span>]);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>            <span style="color:#000">upd</span>(<span style="color:#000">sum</span>[<span style="color:#000">id</span>[<span style="color:#000">r</span>]][<span style="color:#000">cnt</span>[<span style="color:#000">i</span>]<span style="color:#000">--</span>], <span style="color:#000">-</span><span style="color:#000">f</span>[<span style="color:#000">i</span>]);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#000">id</span>[<span style="color:#000">l</span>] <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">id</span>[<span style="color:#000">r</span>]; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">lzy</span>[<span style="color:#000">i</span>] <span style="color:#000">+=</span> <span style="color:#000">v</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">work</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">res</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">tot</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">upd</span>(<span style="color:#000">res</span>, <span style="color:#000">all</span>[<span style="color:#000">i</span>]);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">k</span> <span style="color:#000">-</span> <span style="color:#000">lzy</span>[<span style="color:#000">i</span>] <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&gt;=</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">upd</span>(<span style="color:#000">res</span>, <span style="color:#000">-</span><span style="color:#000">sum</span>[<span style="color:#000">i</span>][<span style="color:#000">k</span> <span style="color:#000">-</span> <span style="color:#000">lzy</span>[<span style="color:#000">i</span>] <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>]);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>            <span style="color:#000">upd</span>(<span style="color:#000">res</span>, <span style="color:#000">-</span><span style="color:#000">all</span>[<span style="color:#000">i</span>]);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#000">res</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">ios</span><span style="color:#000">::</span><span style="color:#000">sync_with_stdio</span>(<span style="color:#a90d91">false</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">k</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">f</span>[<span style="color:#1c01ce">0</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">len</span> <span style="color:#000">=</span> <span style="color:#000">sqrt</span>(<span style="color:#000">n</span>), <span style="color:#000">tot</span> <span style="color:#000">=</span> <span style="color:#000">n</span> <span style="color:#000">/</span> <span style="color:#000">len</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">tot</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">bl</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> (<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>) <span style="color:#000">*</span> <span style="color:#000">len</span>, <span style="color:#000">br</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">min</span>(<span style="color:#000">i</span> <span style="color:#000">*</span> <span style="color:#000">len</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">n</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#000">bl</span>[<span style="color:#000">i</span>]; <span style="color:#000">j</span> <span style="color:#000">&lt;=</span> <span style="color:#000">br</span>[<span style="color:#000">i</span>]; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">id</span>[<span style="color:#000">j</span>] <span style="color:#000">=</span> <span style="color:#000">i</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">sum</span>[<span style="color:#1c01ce">1</span>][<span style="color:#1c01ce">0</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">all</span>[<span style="color:#1c01ce">1</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">add</span>(<span style="color:#000">llst</span>[<span style="color:#000">a</span>[<span style="color:#000">i</span>]], <span style="color:#000">lst</span>[<span style="color:#000">a</span>[<span style="color:#000">i</span>]] <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">-</span><span style="color:#1c01ce">1</span>), <span style="color:#000">add</span>(<span style="color:#000">lst</span>[<span style="color:#000">a</span>[<span style="color:#000">i</span>]], <span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>, <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">llst</span>[<span style="color:#000">a</span>[<span style="color:#000">i</span>]] <span style="color:#000">=</span> <span style="color:#000">lst</span>[<span style="color:#000">a</span>[<span style="color:#000">i</span>]], <span style="color:#000">lst</span>[<span style="color:#000">a</span>[<span style="color:#000">i</span>]] <span style="color:#000">=</span> <span style="color:#000">i</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">f</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">work</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#000">upd</span>(<span style="color:#000">sum</span>[<span style="color:#000">id</span>[<span style="color:#000">i</span>]][<span style="color:#1c01ce">0</span>], <span style="color:#000">f</span>[<span style="color:#000">i</span>]), <span style="color:#000">upd</span>(<span style="color:#000">all</span>[<span style="color:#000">id</span>[<span style="color:#000">i</span>]], <span style="color:#000">f</span>[<span style="color:#000">i</span>]);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">f</span>[<span style="color:#000">n</span>] <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="ehttpscodeforcescontest1129probleme"><a href="https://codeforc.es/contest/1129/problem/E">E</a></h2>
<h3 id="description-7">Description</h3>
<p><strong>这是一道交互题</strong>。</p>
<p>有一个 $n$ 个节点的树，你需要通过不超过 $11111$ 次询问得知树的形态。</p>
<p>询问方式为给出两个非空<strong>无交</strong>点集 $S$ ，$T$ 和一个点 $u$，可以得到满足 $s \in S , t \in T$ 且路径 $(s,t)$ 经过 $u$ 点的二元组 $(s,t)$ 的总数。</p>
<p>$n\leq500$。</p>
<h3 id="solution-7">Solution</h3>
<p>没什么头绪，看看我们能通过询问得到什么。</p>
<p>假设我们以 $1$ 为根，每次询问 $(\{1\},\{2,3,&hellip;,n\},i)$ 能得到以 $i$ 为根子树大小。</p>
<p>那么把子树大小按从小到大排序，一个点儿子必定在其左侧，现在我们把问题转化为找儿子了。</p>
<p>设现在还没有确定父亲的点集合为 $S$。</p>
<p>问一次 $(\{1\},S,i)$ 能得到点 $i$ 的儿子个数 $k$，我们接下来二分 $k$ 次，每次找到一个最小的 $p$，使询问 $(\{1\},\{S_1,S_2,&hellip;,S_p\},i)$ 的结果非零。</p>
<p>那么这个 $p$​ 就是一个儿子。我们把它删掉接着二分就找到了所有儿子。</p>
<p>找完之后把点 $i$ 加进集合里就行。</p>
<p>时间复杂度 $O(n^2\log n)$，询问次数大概是 $2n+2n\log_2n$。</p>
<h3 id="code-7">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cctype&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cerr</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">510</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">struct</span> <span style="color:#3f6e75">node</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">id</span>, <span style="color:#000">siz</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">bool</span> <span style="color:#a90d91">operator</span><span style="color:#000">&lt;</span>(<span style="color:#a90d91">const</span> <span style="color:#000">node</span> <span style="color:#000">&amp;</span><span style="color:#000">b</span>) <span style="color:#a90d91">const</span> { <span style="color:#a90d91">return</span> <span style="color:#000">siz</span> <span style="color:#000">&lt;</span> <span style="color:#000">b</span>.<span style="color:#000">siz</span>; }
</span></span><span style="display:flex;"><span>} <span style="color:#000">a</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">father</span>[<span style="color:#000">maxn</span>], <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">get_siz</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">a</span>[<span style="color:#1c01ce">1</span>].<span style="color:#000">id</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">a</span>[<span style="color:#1c01ce">1</span>].<span style="color:#000">siz</span> <span style="color:#000">=</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">n</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">i</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">i</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">siz</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">id</span> <span style="color:#000">=</span> <span style="color:#000">i</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">sort</span>(<span style="color:#000">a</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">a</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">+</span> <span style="color:#000">n</span>);
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">S</span>[<span style="color:#000">maxn</span>], <span style="color:#000">top</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">bool</span> <span style="color:#000">check</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">pos</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">x</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">x</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">a</span>[<span style="color:#000">S</span>[<span style="color:#000">i</span>]].<span style="color:#000">id</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">pos</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">res</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">res</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#000">res</span> <span style="color:#000">&gt;</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">solve</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#177500">//for (int i = 1; i &lt;= n; i++)
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>    <span style="color:#177500">//    cout &lt;&lt; a[i].id &lt;&lt; &#34; &#34; &lt;&lt; a[i].siz &lt;&lt; endl;
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">siz</span> <span style="color:#000">==</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">S</span>[<span style="color:#000">++</span><span style="color:#000">top</span>] <span style="color:#000">=</span> <span style="color:#000">i</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#177500">//cout &lt;&lt; a[i].id &lt;&lt; &#34; &#34; &lt;&lt; a[i].siz &lt;&lt; &#34;!!!\\n&#34;;
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>            <span style="color:#a90d91">int</span> <span style="color:#000">times</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">top</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">top</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">a</span>[<span style="color:#000">S</span>[<span style="color:#000">i</span>]].<span style="color:#000">id</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">id</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">times</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">while</span> (<span style="color:#000">times</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>            {
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">int</span> <span style="color:#000">l</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">r</span> <span style="color:#000">=</span> <span style="color:#000">top</span>, <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">while</span> (<span style="color:#000">l</span> <span style="color:#000">&lt;=</span> <span style="color:#000">r</span>)
</span></span><span style="display:flex;"><span>                {
</span></span><span style="display:flex;"><span>                    <span style="color:#a90d91">int</span> <span style="color:#000">mid</span> <span style="color:#000">=</span> (<span style="color:#000">l</span> <span style="color:#000">+</span> <span style="color:#000">r</span>) <span style="color:#000">/</span> <span style="color:#1c01ce">2</span>;
</span></span><span style="display:flex;"><span>                    <span style="color:#a90d91">if</span> (<span style="color:#000">check</span>(<span style="color:#000">mid</span>, <span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">id</span>))
</span></span><span style="display:flex;"><span>                        <span style="color:#000">r</span> <span style="color:#000">=</span> <span style="color:#000">mid</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#000">mid</span>;
</span></span><span style="display:flex;"><span>                    <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>                        <span style="color:#000">l</span> <span style="color:#000">=</span> <span style="color:#000">mid</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>                }
</span></span><span style="display:flex;"><span>                <span style="color:#000">father</span>[<span style="color:#000">a</span>[<span style="color:#000">S</span>[<span style="color:#000">ans</span>]].<span style="color:#000">id</span>] <span style="color:#000">=</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">id</span>;
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">int</span> <span style="color:#000">flag</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">top</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                {
</span></span><span style="display:flex;"><span>                    <span style="color:#a90d91">if</span> (<span style="color:#000">i</span> <span style="color:#000">==</span> <span style="color:#000">ans</span>)
</span></span><span style="display:flex;"><span>                        <span style="color:#000">flag</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>                    <span style="color:#a90d91">if</span> (<span style="color:#000">flag</span>)
</span></span><span style="display:flex;"><span>                        <span style="color:#000">S</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">S</span>[<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>];
</span></span><span style="display:flex;"><span>                }
</span></span><span style="display:flex;"><span>                <span style="color:#000">top</span><span style="color:#000">--</span>;
</span></span><span style="display:flex;"><span>            }
</span></span><span style="display:flex;"><span>            <span style="color:#000">S</span>[<span style="color:#000">++</span><span style="color:#000">top</span>] <span style="color:#000">=</span> <span style="color:#000">i</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">ios</span><span style="color:#000">::</span><span style="color:#000">sync_with_stdio</span>(<span style="color:#a90d91">false</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">get_siz</span>(), <span style="color:#000">solve</span>();
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34;ANSWER&#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">father</span>[<span style="color:#000">i</span>] <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">i</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div>]]></content:encoded>
    </item>
    
    <item>
      <title>Codeforces Round 345 (Div. 1&amp;2)</title>
      <link>https://luoyisu.github.io/posts/cf-contest650/</link>
      <pubDate>Mon, 20 Dec 2021 16:21:07 +0000</pubDate>
      
      <guid>https://luoyisu.github.io/posts/cf-contest650/</guid>
      <description>&lt;h2 id=&#34;概述&#34;&gt;概述&lt;/h2&gt;
&lt;p&gt;除了 Div2 的两道题，其他题都挺好的，建议做（）&lt;/p&gt;</description>
      <content:encoded><![CDATA[<h2 id="概述">概述</h2>
<p>除了 Div2 的两道题，其他题都挺好的，建议做（）</p>
<h2 id="div2-ahttpscodeforcescomcontest651problema"><a href="https://codeforces.com/contest/651/problem/A">Div2 A</a></h2>
<h3 id="description">Description</h3>
<p>有两个游戏机，当前电量分别为 $a,b$，你每秒可以给游戏机充 $1\%$ 电，另一个游戏机会损失 $2\%$ 电，问两个游戏机能同时工作的最长时间。</p>
<h3 id="solution">Solution</h3>
<p>选择电量较小的充电然后模拟。</p>
<h3 id="code">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cctype&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cerr</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">a</span>, <span style="color:#000">b</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">a</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">b</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">a</span> <span style="color:#000">==</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">b</span> <span style="color:#000">==</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">0</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> (<span style="color:#000">a</span> <span style="color:#000">&gt;</span> <span style="color:#1c01ce">0</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">b</span> <span style="color:#000">&gt;</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">a</span> <span style="color:#000">&gt;=</span> <span style="color:#000">b</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">b</span> <span style="color:#000">+=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">a</span> <span style="color:#000">-=</span> <span style="color:#1c01ce">2</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>            <span style="color:#000">a</span> <span style="color:#000">+=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">b</span> <span style="color:#000">-=</span> <span style="color:#1c01ce">2</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">ans</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">ans</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="div2-bhttpscodeforcescomcontest651problemb"><a href="https://codeforces.com/contest/651/problem/B">Div2 B</a></h2>
<h3 id="description-1">Description</h3>
<p>有 $n$ 幅画，每幅画有一个美丽值 $a_i$，你可以任意排列这些画。当一个人从一幅画走到一幅美丽值更高的画时，他的心情会增加 $1$。</p>
<p>求这个人从 $1$ 到 $n$ 依次经过这些画能得到的最高心情。</p>
<h3 id="solution-1">Solution</h3>
<p>我们贪心地找还没选过的美丽值最小的画，然后再选比它美丽值大的美丽值最小的画。用 <code>multiset</code> 实现。</p>
<h3 id="code-1">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cctype&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;set&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;queue&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cerr</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1e5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">multiset</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">S</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">n</span>, <span style="color:#000">a</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>], <span style="color:#000">S</span>.<span style="color:#000">insert</span>(<span style="color:#000">a</span>[<span style="color:#000">i</span>]);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">cnt</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> (<span style="color:#000">S</span>.<span style="color:#000">size</span>())
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">now</span> <span style="color:#000">=</span> <span style="color:#000">*</span><span style="color:#000">S</span>.<span style="color:#000">begin</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#000">S</span>.<span style="color:#000">erase</span>(<span style="color:#000">S</span>.<span style="color:#000">find</span>(<span style="color:#000">now</span>));
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">auto</span> <span style="color:#000">pos</span> <span style="color:#000">=</span> <span style="color:#000">S</span>.<span style="color:#000">lower_bound</span>(<span style="color:#000">now</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">while</span> (<span style="color:#000">pos</span> <span style="color:#000">!=</span> <span style="color:#000">S</span>.<span style="color:#000">end</span>())
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">cnt</span><span style="color:#000">++</span>, <span style="color:#000">S</span>.<span style="color:#000">erase</span>(<span style="color:#000">pos</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#000">now</span> <span style="color:#000">=</span> <span style="color:#000">*</span><span style="color:#000">pos</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">pos</span> <span style="color:#000">=</span> <span style="color:#000">S</span>.<span style="color:#000">lower_bound</span>(<span style="color:#000">now</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">cnt</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="ahttpscodeforcescomcontest650problema"><a href="https://codeforces.com/contest/650/problem/A">A</a></h2>
<h3 id="description-2">Description</h3>
<p>给出 $n$ 对坐标 $(x_i,y_i)$。求问曼哈顿距离和欧氏距离相等的坐标组 $(i,j)$（$1\leq i&lt;j\leq n$）有多少对？$1\leq n\leq 2\times 10^5,|x_i|,|y_i|\leq 10^9$。</p>
<h3 id="solution-2">Solution</h3>
<p>不难发现两个点满足题目条件当且仅当两个点横坐标相同或纵坐标相同。</p>
<p>容斥一下，答案等于横坐标相同的方案数 + 纵坐标相同的方案数 - 横纵坐标都相同的方案数。</p>
<h3 id="code-2">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cctype&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;utility&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;map&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cerr</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">typedef</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">pair</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span>, <span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">pii</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">map</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span>, <span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">mpx</span>, <span style="color:#000">mpy</span>;
</span></span><span style="display:flex;"><span><span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">map</span><span style="color:#000">&lt;</span><span style="color:#000">pii</span>, <span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">mp</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>, <span style="color:#000">x</span>, <span style="color:#000">y</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">x</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">y</span>, <span style="color:#000">mpx</span>[<span style="color:#000">x</span>]<span style="color:#000">++</span>, <span style="color:#000">mpy</span>[<span style="color:#000">y</span>]<span style="color:#000">++</span>, <span style="color:#000">mp</span>[<span style="color:#000">pii</span>(<span style="color:#000">x</span>, <span style="color:#000">y</span>)]<span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">auto</span> <span style="color:#000">k</span> : <span style="color:#000">mpx</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">ans</span> <span style="color:#000">+=</span> <span style="color:#1c01ce">1ll</span> <span style="color:#000">*</span> <span style="color:#000">k</span>.<span style="color:#000">second</span> <span style="color:#000">*</span> (<span style="color:#000">k</span>.<span style="color:#000">second</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>) <span style="color:#000">/</span> <span style="color:#1c01ce">2</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">auto</span> <span style="color:#000">k</span> : <span style="color:#000">mpy</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">ans</span> <span style="color:#000">+=</span> <span style="color:#1c01ce">1ll</span> <span style="color:#000">*</span> <span style="color:#000">k</span>.<span style="color:#000">second</span> <span style="color:#000">*</span> (<span style="color:#000">k</span>.<span style="color:#000">second</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>) <span style="color:#000">/</span> <span style="color:#1c01ce">2</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">auto</span> <span style="color:#000">k</span> : <span style="color:#000">mp</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">ans</span> <span style="color:#000">-=</span> <span style="color:#1c01ce">1ll</span> <span style="color:#000">*</span> <span style="color:#000">k</span>.<span style="color:#000">second</span> <span style="color:#000">*</span> (<span style="color:#000">k</span>.<span style="color:#000">second</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>) <span style="color:#000">/</span> <span style="color:#1c01ce">2</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">ans</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="bhttpscodeforcescomcontest650problemb"><a href="https://codeforces.com/contest/650/problem/B">B</a></h2>
<h3 id="description-3">Description</h3>
<p>从第一张照片开始看，可以向左翻或者向右翻，第 $1$​​​​​​ 张左边是第 $n$​​​​​ 张，第 $n$​​​​ 张右边是第一张，翻一次要 $a$​​​ 时间，照片有 <code>w</code> 和 <code>h</code> 两种摆放，<code>w</code> 的照片要耗费 $b$​​ 时间翻转，看一张照片要 $1$​ 个单位时间，一共有 $T$​ 个单位时间，问最多可以看多少张照片？</p>
<p>建议看原题面。</p>
<h3 id="solution-3">Solution</h3>
<p>把环变成链，然后双指针就行。</p>
<p>从 $l=2,r=n+1$ 开始移动指针。</p>
<p>判断是否合法就是长度不超过 $n$，且当前区域看照片的时间加上移动的保底时间（$r-l-1$​）和折返的时间。</p>
<p>建议多手玩。。。。</p>
<p>说起来轻巧，但细节真多啊啊啊啊啊。</p>
<h3 id="code-3">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cctype&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cerr</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1e6</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">n</span>, <span style="color:#000">a</span>, <span style="color:#000">b</span>, <span style="color:#000">t</span>, <span style="color:#000">p</span>[<span style="color:#000">maxn</span>], <span style="color:#000">ans</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">char</span> <span style="color:#000">s</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">ios</span><span style="color:#000">::</span><span style="color:#000">sync_with_stdio</span>(<span style="color:#a90d91">false</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">a</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">b</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">t</span> <span style="color:#000">&gt;&gt;</span> (<span style="color:#000">s</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">p</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span> <span style="color:#000">+</span> (<span style="color:#000">s</span>[<span style="color:#000">i</span>] <span style="color:#000">==</span> <span style="color:#2300ce">&#39;w&#39;</span> <span style="color:#000">?</span> <span style="color:#000">b</span> : <span style="color:#1c01ce">0</span>), <span style="color:#000">p</span>[<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#000">n</span>] <span style="color:#000">=</span> <span style="color:#000">p</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">l</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2</span>, <span style="color:#000">r</span> <span style="color:#000">=</span> <span style="color:#000">n</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">sum</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span> <span style="color:#000">+</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">sum</span> <span style="color:#000">+=</span> <span style="color:#000">p</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#177500">//for (int i = 1; i &lt;= 2 * n; i++)
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>    <span style="color:#177500">//    cout &lt;&lt; p[i] &lt;&lt; endl;
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>    <span style="color:#a90d91">while</span> (<span style="color:#000">l</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">r</span> <span style="color:#000">&lt;=</span> <span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">n</span>) 
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">sum</span> <span style="color:#000">+=</span> <span style="color:#000">p</span>[<span style="color:#000">r</span>], <span style="color:#000">r</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">while</span> (<span style="color:#000">r</span> <span style="color:#000">-</span> <span style="color:#000">l</span> <span style="color:#000">&gt;</span> <span style="color:#000">n</span> <span style="color:#000">||</span> <span style="color:#000">sum</span> <span style="color:#000">+</span> <span style="color:#000">a</span> <span style="color:#000">*</span> (<span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">min</span>(<span style="color:#000">r</span> <span style="color:#000">-</span> <span style="color:#000">n</span> <span style="color:#000">-</span> <span style="color:#1c01ce">2</span>, <span style="color:#000">n</span> <span style="color:#000">-</span> <span style="color:#000">l</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>) <span style="color:#000">+</span> <span style="color:#000">r</span> <span style="color:#000">-</span> <span style="color:#000">l</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>) <span style="color:#000">&gt;</span> <span style="color:#000">t</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">sum</span> <span style="color:#000">-=</span> <span style="color:#000">p</span>[<span style="color:#000">l</span>], <span style="color:#000">l</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">max</span>(<span style="color:#000">ans</span>, <span style="color:#000">r</span> <span style="color:#000">-</span> <span style="color:#000">l</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#177500">//cout &lt;&lt; l &lt;&lt; &#34; &#34; &lt;&lt; r &lt;&lt; &#34; &#34; &lt;&lt; sum &lt;&lt; endl;
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">ans</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="chttpscodeforcescomcontest650problemc"><a href="https://codeforces.com/contest/650/problem/C">C</a></h2>
<h3 id="description-4">Description</h3>
<p>给定一 $N\times M$​ 的表格 $a$，让你对其进行压缩，使得：</p>
<ul>
<li>每一行与每一列相对大小不变，即若 $a_{i,j}&lt;a_{i,k}$​，则压缩后的 $a_{i,j}&lt;a_{i,k}$​，对于小于及等于的情况和同列不同行的情况同理。</li>
<li>压缩后表格中的最大值尽量小。</li>
</ul>
<p>输出压缩后的表格。</p>
<p>$1\leq n,m$ 且 $nm\leq10^6$，$a_{i,j}\leq10^9$​。</p>
<h3 id="solution-4">Solution</h3>
<p>发现题目唯一限制就是大小关系，很容易想到差分约束，我们对每一行和每一列，从小的连向大的，最后求一下最长路。</p>
<p>对于相同的数，我们用一个并查集缩成一个点。</p>
<p>能发现这个图是一个 DAG，我们直接 BFS 求最长路就行。</p>
<p>可以建一个超级源点。</p>
<h3 id="code-4">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;queue&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cctype&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cerr</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1e6</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">n</span>, <span style="color:#000">m</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">int</span> <span style="color:#000">id</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>) { <span style="color:#a90d91">return</span> (<span style="color:#000">x</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>) <span style="color:#000">*</span> <span style="color:#000">m</span> <span style="color:#000">+</span> <span style="color:#000">y</span>; }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">struct</span> <span style="color:#3f6e75">node</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">id</span>, <span style="color:#000">val</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">bool</span> <span style="color:#a90d91">operator</span><span style="color:#000">&lt;</span>(<span style="color:#a90d91">const</span> <span style="color:#000">node</span> <span style="color:#000">&amp;</span><span style="color:#000">b</span>) <span style="color:#a90d91">const</span> { <span style="color:#a90d91">return</span> <span style="color:#000">val</span> <span style="color:#000">&lt;</span> <span style="color:#000">b</span>.<span style="color:#000">val</span>; }
</span></span><span style="display:flex;"><span>};
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">vector</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">e</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">vector</span><span style="color:#000">&lt;</span><span style="color:#000">node</span><span style="color:#000">&gt;</span> <span style="color:#000">line</span>[<span style="color:#000">maxn</span>], <span style="color:#000">row</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">add</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>) { <span style="color:#000">e</span>[<span style="color:#000">x</span>].<span style="color:#000">push_back</span>(<span style="color:#000">y</span>); }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">father</span>[<span style="color:#000">maxn</span>], <span style="color:#000">rd</span>[<span style="color:#000">maxn</span>], <span style="color:#000">f</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">find</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>) { <span style="color:#a90d91">return</span> <span style="color:#000">x</span> <span style="color:#000">==</span> <span style="color:#000">father</span>[<span style="color:#000">x</span>] <span style="color:#000">?</span> <span style="color:#000">x</span> : <span style="color:#000">father</span>[<span style="color:#000">x</span>] <span style="color:#000">=</span> <span style="color:#000">find</span>(<span style="color:#000">father</span>[<span style="color:#000">x</span>]); }
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">uni</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>) { <span style="color:#000">father</span>[<span style="color:#000">find</span>(<span style="color:#000">x</span>)] <span style="color:#000">=</span> <span style="color:#000">find</span>(<span style="color:#000">y</span>); }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">ios</span><span style="color:#000">::</span><span style="color:#000">sync_with_stdio</span>(<span style="color:#a90d91">false</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">m</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">x</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">father</span>[<span style="color:#000">id</span>(<span style="color:#000">i</span>, <span style="color:#000">j</span>)] <span style="color:#000">=</span> <span style="color:#000">id</span>(<span style="color:#000">i</span>, <span style="color:#000">j</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#000">line</span>[<span style="color:#000">i</span>].<span style="color:#000">push_back</span>({<span style="color:#000">id</span>(<span style="color:#000">i</span>, <span style="color:#000">j</span>), <span style="color:#000">x</span>});
</span></span><span style="display:flex;"><span>            <span style="color:#000">row</span>[<span style="color:#000">j</span>].<span style="color:#000">push_back</span>({<span style="color:#000">id</span>(<span style="color:#000">i</span>, <span style="color:#000">j</span>), <span style="color:#000">x</span>});
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">sort</span>(<span style="color:#000">line</span>[<span style="color:#000">i</span>].<span style="color:#000">begin</span>(), <span style="color:#000">line</span>[<span style="color:#000">i</span>].<span style="color:#000">end</span>());
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;</span> <span style="color:#000">m</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">line</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>].<span style="color:#000">val</span> <span style="color:#000">==</span> <span style="color:#000">line</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>].<span style="color:#000">val</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">uni</span>(<span style="color:#000">line</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>].<span style="color:#000">id</span>, <span style="color:#000">line</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>].<span style="color:#000">id</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">sort</span>(<span style="color:#000">row</span>[<span style="color:#000">i</span>].<span style="color:#000">begin</span>(), <span style="color:#000">row</span>[<span style="color:#000">i</span>].<span style="color:#000">end</span>());
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;</span> <span style="color:#000">n</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">row</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>].<span style="color:#000">val</span> <span style="color:#000">==</span> <span style="color:#000">row</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>].<span style="color:#000">val</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">uni</span>(<span style="color:#000">row</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>].<span style="color:#000">id</span>, <span style="color:#000">row</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>].<span style="color:#000">id</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span> <span style="color:#000">*</span> <span style="color:#000">m</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">find</span>(<span style="color:#000">i</span>) <span style="color:#000">==</span> <span style="color:#000">i</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">add</span>(<span style="color:#1c01ce">0</span>, <span style="color:#000">i</span>), <span style="color:#000">rd</span>[<span style="color:#000">i</span>]<span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;</span> <span style="color:#000">m</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">line</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>].<span style="color:#000">val</span> <span style="color:#000">!=</span> <span style="color:#000">line</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>].<span style="color:#000">val</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">add</span>(<span style="color:#000">find</span>(<span style="color:#000">line</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>].<span style="color:#000">id</span>), <span style="color:#000">find</span>(<span style="color:#000">line</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>].<span style="color:#000">id</span>)), <span style="color:#000">rd</span>[<span style="color:#000">find</span>(<span style="color:#000">line</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>].<span style="color:#000">id</span>)]<span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;</span> <span style="color:#000">n</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">row</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>].<span style="color:#000">val</span> <span style="color:#000">!=</span> <span style="color:#000">row</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>].<span style="color:#000">val</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">add</span>(<span style="color:#000">find</span>(<span style="color:#000">row</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>].<span style="color:#000">id</span>), <span style="color:#000">find</span>(<span style="color:#000">row</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>].<span style="color:#000">id</span>)), <span style="color:#000">rd</span>[<span style="color:#000">find</span>(<span style="color:#000">row</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>].<span style="color:#000">id</span>)]<span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">queue</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">q</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">q</span>.<span style="color:#000">push</span>(<span style="color:#1c01ce">0</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> (<span style="color:#000">!</span><span style="color:#000">q</span>.<span style="color:#000">empty</span>())
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">now</span> <span style="color:#000">=</span> <span style="color:#000">q</span>.<span style="color:#000">front</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#000">q</span>.<span style="color:#000">pop</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">v</span> : <span style="color:#000">e</span>[<span style="color:#000">now</span>])
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">f</span>[<span style="color:#000">v</span>] <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">max</span>(<span style="color:#000">f</span>[<span style="color:#000">v</span>], <span style="color:#000">f</span>[<span style="color:#000">now</span>] <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#000">rd</span>[<span style="color:#000">v</span>]<span style="color:#000">--</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">rd</span>[<span style="color:#000">v</span>] <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">q</span>.<span style="color:#000">push</span>(<span style="color:#000">v</span>);
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>, <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">f</span>[<span style="color:#000">find</span>(<span style="color:#000">id</span>(<span style="color:#000">i</span>, <span style="color:#000">j</span>))] <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="dhttpscodeforcescomcontest650problemd"><a href="https://codeforces.com/contest/650/problem/D">D</a></h2>
<h3 id="description-5">Description</h3>
<p>给定一个长度为 $n$ 的序列以及 $m$ 个操作，每个操作形如 $a_i~b_i$，表示将序列中第 $a_i$ 个数改为 $b_i$。</p>
<p>对于每个操作，求出序列的最长严格上升子序列长度。</p>
<p>注意：每个操作之间彼此独立。（即每次操作未进行时的序列是输入时的原序列，而不是上一次操作后得到的序列）</p>
<p>$1\leq n,m\leq4\times10^5$</p>
<h3 id="solution-5">Solution</h3>
<p>下文称“最长严格上升子序列”为 LIS。</p>
<p>询问每次独立。求出原序列的答案之后，可以发现，每次修改之后 LIS 的变化只有以下三种：</p>
<ol>
<li>修改之后就没法选了，LIS 长度减小 $1$，这时原 LIS 必定包括这个数；</li>
<li>原来 LIS 不包括这个数，改完之后就能包括了，LIS 长度增加 $1$​；</li>
<li>其他，LIS 不变。</li>
</ol>
<p>问题转化为修改一个数之后怎么快速求出包含这个数的 LIS 长度。</p>
<p>设 $f_i$ 为以 $i$ 结尾的 LIS 长度，$g_i$ 表示以 $i$ 开头的 LIS 长度。</p>
<p>首先求原序列，这个离散化之后用树状数组直接正着求 $f$​，倒着求 $g$​ 就可以。</p>
<p>原序列的答案就是 $ans=\max\{f_i+g_i-1\}$​。</p>
<p>设把一个数 $i$ 修改后新的 $f_i,g_i$ 为 $f_i&rsquo;,g_i&rsquo;$ 。我们可以把以上的三种情况合并成 $2$​ 种：</p>
<ul>
<li>原 LIS 包括这个数，新答案为 $\max(ans-1,f_i&rsquo;+g_i&rsquo;-1)$。</li>
<li>不包括，新答案为 $\max(ans,f_i&rsquo;+g_i&rsquo;-1)$​。</li>
</ul>
<p>所有询问的 $f_i&rsquo;,g_i&rsquo;$​​ 可以离线之后用一样的方法求出来。（想在线可以用主席树）</p>
<p>现在只剩一个问题了，怎么判断一个数是否在 LIS 中？</p>
<p>我们对 $f_i+g_i-1=ans$ 的 $f_i$ 都存起来，如果唯一就说明一定选了这个数。</p>
<h3 id="code-5">Code</h3>
<p>有点重工业。重复的事情干很多次。</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cctype&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cerr</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">8e5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">n</span>, <span style="color:#000">m</span>, <span style="color:#000">tot</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">pool</span>[<span style="color:#000">maxn</span>], <span style="color:#000">a</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">f</span>[<span style="color:#000">maxn</span>], <span style="color:#000">g</span>[<span style="color:#000">maxn</span>], <span style="color:#000">cnt</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">struct</span> <span style="color:#3f6e75">Q</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">id</span>, <span style="color:#000">val</span>, <span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">f</span>, <span style="color:#000">g</span>, <span style="color:#000">ans</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">bool</span> <span style="color:#a90d91">operator</span><span style="color:#000">&lt;</span>(<span style="color:#a90d91">const</span> <span style="color:#000">Q</span> <span style="color:#000">&amp;</span><span style="color:#000">b</span>) <span style="color:#a90d91">const</span> { <span style="color:#a90d91">return</span> <span style="color:#000">x</span> <span style="color:#000">==</span> <span style="color:#000">b</span>.<span style="color:#000">x</span> <span style="color:#000">?</span> <span style="color:#000">val</span> <span style="color:#000">&lt;</span> <span style="color:#000">b</span>.<span style="color:#000">val</span> : <span style="color:#000">x</span> <span style="color:#000">&lt;</span> <span style="color:#000">b</span>.<span style="color:#000">x</span>; }
</span></span><span style="display:flex;"><span>} <span style="color:#000">q</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">bool</span> <span style="color:#000">cmpid</span>(<span style="color:#a90d91">const</span> <span style="color:#000">Q</span> <span style="color:#000">&amp;</span><span style="color:#000">a</span>, <span style="color:#a90d91">const</span> <span style="color:#000">Q</span> <span style="color:#000">&amp;</span><span style="color:#000">b</span>) { <span style="color:#a90d91">return</span> <span style="color:#000">a</span>.<span style="color:#000">id</span> <span style="color:#000">&lt;</span> <span style="color:#000">b</span>.<span style="color:#000">id</span>; }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">int</span> <span style="color:#000">lowbit</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>) { <span style="color:#a90d91">return</span> <span style="color:#000">x</span> <span style="color:#000">&amp;</span> <span style="color:#000">-</span><span style="color:#000">x</span>; }
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">t</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">modify</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">v</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (; <span style="color:#000">x</span> <span style="color:#000">&lt;=</span> <span style="color:#000">tot</span>; <span style="color:#000">x</span> <span style="color:#000">+=</span> <span style="color:#000">lowbit</span>(<span style="color:#000">x</span>))
</span></span><span style="display:flex;"><span>        <span style="color:#000">t</span>[<span style="color:#000">x</span>] <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">max</span>(<span style="color:#000">t</span>[<span style="color:#000">x</span>], <span style="color:#000">v</span>);
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">query</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">res</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (; <span style="color:#000">x</span>; <span style="color:#000">x</span> <span style="color:#000">-=</span> <span style="color:#000">lowbit</span>(<span style="color:#000">x</span>))
</span></span><span style="display:flex;"><span>        <span style="color:#000">res</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">max</span>(<span style="color:#000">res</span>, <span style="color:#000">t</span>[<span style="color:#000">x</span>]);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#000">res</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">init</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">ios</span><span style="color:#000">::</span><span style="color:#000">sync_with_stdio</span>(<span style="color:#a90d91">false</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">m</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>], <span style="color:#000">pool</span>[<span style="color:#000">++</span><span style="color:#000">tot</span>] <span style="color:#000">=</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">q</span>[<span style="color:#000">i</span>].<span style="color:#000">x</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">q</span>[<span style="color:#000">i</span>].<span style="color:#000">val</span>, <span style="color:#000">q</span>[<span style="color:#000">i</span>].<span style="color:#000">id</span> <span style="color:#000">=</span> <span style="color:#000">i</span>, <span style="color:#000">pool</span>[<span style="color:#000">++</span><span style="color:#000">tot</span>] <span style="color:#000">=</span> <span style="color:#000">q</span>[<span style="color:#000">i</span>].<span style="color:#000">val</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">sort</span>(<span style="color:#000">pool</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">pool</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">+</span> <span style="color:#000">tot</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">tot</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">unique</span>(<span style="color:#000">pool</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">pool</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">+</span> <span style="color:#000">tot</span>) <span style="color:#000">-</span> <span style="color:#000">pool</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">a</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">lower_bound</span>(<span style="color:#000">pool</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">pool</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">+</span> <span style="color:#000">tot</span>, <span style="color:#000">a</span>[<span style="color:#000">i</span>]) <span style="color:#000">-</span> <span style="color:#000">pool</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">q</span>[<span style="color:#000">i</span>].<span style="color:#000">val</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">lower_bound</span>(<span style="color:#000">pool</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">pool</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">+</span> <span style="color:#000">tot</span>, <span style="color:#000">q</span>[<span style="color:#000">i</span>].<span style="color:#000">val</span>) <span style="color:#000">-</span> <span style="color:#000">pool</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">f</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">query</span>(<span style="color:#000">a</span>[<span style="color:#000">i</span>] <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>) <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">modify</span>(<span style="color:#000">a</span>[<span style="color:#000">i</span>], <span style="color:#000">f</span>[<span style="color:#000">i</span>]);
</span></span><span style="display:flex;"><span>    <span style="color:#000">memset</span>(<span style="color:#000">t</span>, <span style="color:#1c01ce">0</span>, <span style="color:#a90d91">sizeof</span>(<span style="color:#000">t</span>));
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span> <span style="color:#000">&gt;=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">g</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">query</span>(<span style="color:#000">tot</span> <span style="color:#000">-</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>]) <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">modify</span>(<span style="color:#000">tot</span> <span style="color:#000">-</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>] <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">g</span>[<span style="color:#000">i</span>]);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">max</span>(<span style="color:#000">ans</span>, <span style="color:#000">f</span>[<span style="color:#000">i</span>] <span style="color:#000">+</span> <span style="color:#000">g</span>[<span style="color:#000">i</span>] <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">f</span>[<span style="color:#000">i</span>] <span style="color:#000">+</span> <span style="color:#000">g</span>[<span style="color:#000">i</span>] <span style="color:#000">-</span> <span style="color:#1c01ce">1</span> <span style="color:#000">==</span> <span style="color:#000">ans</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">cnt</span>[<span style="color:#000">f</span>[<span style="color:#000">i</span>]]<span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>} 
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">init</span>();
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">sort</span>(<span style="color:#000">q</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">q</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">+</span> <span style="color:#000">m</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">now</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">memset</span>(<span style="color:#000">t</span>, <span style="color:#1c01ce">0</span>, <span style="color:#a90d91">sizeof</span>(<span style="color:#000">t</span>));
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">while</span> (<span style="color:#000">now</span> <span style="color:#000">&lt;</span> <span style="color:#000">q</span>[<span style="color:#000">i</span>].<span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">modify</span>(<span style="color:#000">a</span>[<span style="color:#000">now</span>], <span style="color:#000">f</span>[<span style="color:#000">now</span>]), <span style="color:#000">now</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">q</span>[<span style="color:#000">i</span>].<span style="color:#000">f</span> <span style="color:#000">=</span> <span style="color:#000">query</span>(<span style="color:#000">q</span>[<span style="color:#000">i</span>].<span style="color:#000">val</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>) <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">now</span> <span style="color:#000">=</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">memset</span>(<span style="color:#000">t</span>, <span style="color:#1c01ce">0</span>, <span style="color:#a90d91">sizeof</span>(<span style="color:#000">t</span>));
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#000">m</span>; <span style="color:#000">i</span> <span style="color:#000">&gt;=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">while</span> (<span style="color:#000">now</span> <span style="color:#000">&gt;</span> <span style="color:#000">q</span>[<span style="color:#000">i</span>].<span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">modify</span>(<span style="color:#000">tot</span> <span style="color:#000">-</span> <span style="color:#000">a</span>[<span style="color:#000">now</span>] <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">g</span>[<span style="color:#000">now</span>]), <span style="color:#000">now</span><span style="color:#000">--</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">q</span>[<span style="color:#000">i</span>].<span style="color:#000">g</span> <span style="color:#000">=</span> <span style="color:#000">query</span>(<span style="color:#000">tot</span> <span style="color:#000">-</span> <span style="color:#000">q</span>[<span style="color:#000">i</span>].<span style="color:#000">val</span>) <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#177500">//for (int i = 1; i &lt;= m; i++)
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>     <span style="color:#177500">//   cout &lt;&lt; q[i].x &lt;&lt; &#34; &#34; &lt;&lt; q[i].val &lt;&lt; &#34; &#34; &lt;&lt; q[i].f &lt;&lt; &#34; &#34; &lt;&lt; q[i].g &lt;&lt; endl;
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">f</span>[<span style="color:#000">q</span>[<span style="color:#000">i</span>].<span style="color:#000">x</span>] <span style="color:#000">+</span> <span style="color:#000">g</span>[<span style="color:#000">q</span>[<span style="color:#000">i</span>].<span style="color:#000">x</span>] <span style="color:#000">-</span> <span style="color:#1c01ce">1</span> <span style="color:#000">==</span> <span style="color:#000">ans</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">cnt</span>[<span style="color:#000">f</span>[<span style="color:#000">q</span>[<span style="color:#000">i</span>].<span style="color:#000">x</span>]] <span style="color:#000">==</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">q</span>[<span style="color:#000">i</span>].<span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">max</span>(<span style="color:#000">ans</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">q</span>[<span style="color:#000">i</span>].<span style="color:#000">f</span> <span style="color:#000">+</span> <span style="color:#000">q</span>[<span style="color:#000">i</span>].<span style="color:#000">g</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>            <span style="color:#000">q</span>[<span style="color:#000">i</span>].<span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">max</span>(<span style="color:#000">ans</span>, <span style="color:#000">q</span>[<span style="color:#000">i</span>].<span style="color:#000">f</span> <span style="color:#000">+</span> <span style="color:#000">q</span>[<span style="color:#000">i</span>].<span style="color:#000">g</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">sort</span>(<span style="color:#000">q</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">q</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">+</span> <span style="color:#000">m</span>, <span style="color:#000">cmpid</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">q</span>[<span style="color:#000">i</span>].<span style="color:#000">ans</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="ehttpscodeforcescomcontest650probleme"><a href="https://codeforces.com/contest/650/problem/E">E</a></h2>
<h3 id="description-6">Description</h3>
<p>给出两棵 $n$ 个节点的树，每次操作可以把第一棵树的一条边删掉然后连两个点，且必须满足每次操作完之后仍是一棵树。</p>
<p>问最少需要多少步操作才能把第一棵树变成第二棵树（是完全相同，并不是同构），并输出方案。</p>
<p>$n \leq 5\times 10^5$。</p>
<h3 id="solution-6">Solution</h3>
<p>同为 $3000+$ 分，这个题比前几天抄的一个 <a href="https://luoyisu.github.io/CF-contest1190/">重工业数学题CF1190F</a> 小清新多了。</p>
<p>显然原来就相同的边不会被删掉，这样就得到了答案的下界。</p>
<p>我们尝试构造一组达到下界的解。</p>
<p>先 DFS 两棵树。</p>
<p>用并查集把这些不用修改的边缩成一个点，每个集合代表元素就是这个集合在新树中深度最小的点。</p>
<p>然后从原树从底向上进行操作，找到不在同一个集合的两个点，断开原来的边，连上深度大的点在新树的父亲。</p>
<p>因为我们是从下到上操作，相当于每次操作时都是断开原树中叶子和它父亲的边，就能保证操作是合法的。</p>
<h3 id="code-6">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;set&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;utility&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;queue&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cctype&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cerr</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">5e5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">typedef</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">pair</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span>, <span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">pii</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">struct</span> <span style="color:#3f6e75">Graph</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">vector</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">e</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">add</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>) { <span style="color:#000">e</span>[<span style="color:#000">x</span>].<span style="color:#000">push_back</span>(<span style="color:#000">y</span>), <span style="color:#000">e</span>[<span style="color:#000">y</span>].<span style="color:#000">push_back</span>(<span style="color:#000">x</span>); }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">father</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">void</span> <span style="color:#000">dfs</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">fa</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">father</span>[<span style="color:#000">x</span>] <span style="color:#000">=</span> <span style="color:#000">fa</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">v</span> : <span style="color:#000">e</span>[<span style="color:#000">x</span>])
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">v</span> <span style="color:#000">!=</span> <span style="color:#000">fa</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">dfs</span>(<span style="color:#000">v</span>, <span style="color:#000">x</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">h</span>[<span style="color:#000">maxn</span>], <span style="color:#000">tot</span>, <span style="color:#000">vis</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">void</span> <span style="color:#000">bfs</span>()
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">queue</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">q</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">q</span>.<span style="color:#000">push</span>(<span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">h</span>[<span style="color:#000">++</span><span style="color:#000">tot</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">while</span> (<span style="color:#000">!</span><span style="color:#000">q</span>.<span style="color:#000">empty</span>())
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">int</span> <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">q</span>.<span style="color:#000">front</span>();
</span></span><span style="display:flex;"><span>            <span style="color:#000">vis</span>[<span style="color:#000">x</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">h</span>[<span style="color:#000">++</span><span style="color:#000">tot</span>] <span style="color:#000">=</span> <span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">q</span>.<span style="color:#000">pop</span>();
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">v</span> : <span style="color:#000">e</span>[<span style="color:#000">x</span>])
</span></span><span style="display:flex;"><span>               <span style="color:#a90d91">if</span> (<span style="color:#000">!</span><span style="color:#000">vis</span>[<span style="color:#000">v</span>])
</span></span><span style="display:flex;"><span>                   <span style="color:#000">q</span>.<span style="color:#000">push</span>(<span style="color:#000">v</span>);
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>} <span style="color:#000">g1</span>, <span style="color:#000">g2</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">father</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">find</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>) { <span style="color:#a90d91">return</span> <span style="color:#000">x</span> <span style="color:#000">==</span> <span style="color:#000">father</span>[<span style="color:#000">x</span>] <span style="color:#000">?</span> <span style="color:#000">x</span> : <span style="color:#000">father</span>[<span style="color:#000">x</span>] <span style="color:#000">=</span> <span style="color:#000">find</span>(<span style="color:#000">father</span>[<span style="color:#000">x</span>]); }
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">uni</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>) { <span style="color:#000">father</span>[<span style="color:#000">find</span>(<span style="color:#000">x</span>)] <span style="color:#000">=</span> <span style="color:#000">find</span>(<span style="color:#000">y</span>); }
</span></span><span style="display:flex;"><span><span style="color:#a90d91">bool</span> <span style="color:#000">ask</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>) { <span style="color:#a90d91">return</span> <span style="color:#000">find</span>(<span style="color:#000">x</span>) <span style="color:#000">==</span> <span style="color:#000">find</span>(<span style="color:#000">y</span>); }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">solve</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">fa</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">v</span> : <span style="color:#000">g1</span>.<span style="color:#000">e</span>[<span style="color:#000">x</span>])
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">v</span> <span style="color:#000">==</span> <span style="color:#000">fa</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">continue</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">solve</span>(<span style="color:#000">v</span>, <span style="color:#000">x</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">!</span><span style="color:#000">ask</span>(<span style="color:#000">v</span>, <span style="color:#000">x</span>))
</span></span><span style="display:flex;"><span>            <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">v</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">x</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">find</span>(<span style="color:#000">v</span>) <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">g2</span>.<span style="color:#000">father</span>[<span style="color:#000">find</span>(<span style="color:#000">v</span>)] <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">ios</span><span style="color:#000">::</span><span style="color:#000">sync_with_stdio</span>(<span style="color:#a90d91">false</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">x</span>, <span style="color:#000">y</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">x</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">y</span>, <span style="color:#000">g1</span>.<span style="color:#000">add</span>(<span style="color:#000">x</span>, <span style="color:#000">y</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">x</span>, <span style="color:#000">y</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">x</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">y</span>, <span style="color:#000">g2</span>.<span style="color:#000">add</span>(<span style="color:#000">x</span>, <span style="color:#000">y</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">g1</span>.<span style="color:#000">dfs</span>(<span style="color:#1c01ce">1</span>, <span style="color:#1c01ce">0</span>), <span style="color:#000">g2</span>.<span style="color:#000">dfs</span>(<span style="color:#1c01ce">1</span>, <span style="color:#1c01ce">0</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">father</span>[<span style="color:#1c01ce">1</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#000">n</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">f</span> <span style="color:#000">=</span> <span style="color:#000">g2</span>.<span style="color:#000">father</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">g1</span>.<span style="color:#000">father</span>[<span style="color:#000">i</span>] <span style="color:#000">==</span> <span style="color:#000">f</span> <span style="color:#000">||</span> <span style="color:#000">g1</span>.<span style="color:#000">father</span>[<span style="color:#000">f</span>] <span style="color:#000">==</span> <span style="color:#000">i</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">father</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">f</span>, <span style="color:#000">ans</span><span style="color:#000">--</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>            <span style="color:#000">father</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">i</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">ans</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">solve</span>(<span style="color:#1c01ce">1</span>, <span style="color:#1c01ce">0</span>);
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div>]]></content:encoded>
    </item>
    
    <item>
      <title>Codeforces Round 525 (Div. 2)</title>
      <link>https://luoyisu.github.io/posts/cf-contest1088/</link>
      <pubDate>Fri, 17 Dec 2021 16:02:24 +0000</pubDate>
      
      <guid>https://luoyisu.github.io/posts/cf-contest1088/</guid>
      <description>&lt;p&gt;还可以。&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>还可以。</p>
<h2 id="ahttpscodeforcescontest1088problema"><a href="https://codeforc.es/contest/1088/problem/A">A</a></h2>
<h3 id="description">Description</h3>
<p>有一个整数 $x$，找到一对满足以下条件的两个正整数 $a,b$：</p>
<ul>
<li>
<p>$1\leq a,b\leq x$；</p>
</li>
<li>
<p>$a$ 能被 $b$ 整除；</p>
</li>
<li>
<p>$ab&gt;x$；</p>
</li>
<li>
<p>$\dfrac{a}{b}&lt;x$。</p>
</li>
</ul>
<p>$x\leq100$。</p>
<h3 id="solution">Solution</h3>
<p>$x$ 很小，直接枚举 $a,b$。</p>
<h3 id="code">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">a</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">a</span> <span style="color:#000">&lt;=</span> <span style="color:#000">x</span>; <span style="color:#000">a</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">b</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">b</span> <span style="color:#000">&lt;=</span> <span style="color:#000">x</span>; <span style="color:#000">b</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">a</span> <span style="color:#000">%</span> <span style="color:#000">b</span> <span style="color:#000">==</span> <span style="color:#1c01ce">0</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">a</span> <span style="color:#000">*</span> <span style="color:#000">b</span> <span style="color:#000">&gt;</span> <span style="color:#000">x</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#1c01ce">1.0</span> <span style="color:#000">*</span> <span style="color:#000">a</span> <span style="color:#000">/</span> <span style="color:#000">b</span> <span style="color:#000">&lt;</span> <span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>            {
</span></span><span style="display:flex;"><span>                <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">a</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">b</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">return</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>            }
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="bhttpscodeforcescontest1088problemb"><a href="https://codeforc.es/contest/1088/problem/B">B</a></h2>
<h3 id="description-1">Description</h3>
<p>有一个数组 $a$​，和一个正整数 $k$，你需要重复一下操作 $k$ 次：找到最小的非零数，把其它的数都减去这个数，把这个数变为 $0$。输出每次操作找到的数。</p>
<h3 id="solution-1">Solution</h3>
<p>排序然后模拟。</p>
<h3 id="code-1">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1e5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">n</span>, <span style="color:#000">a</span>[<span style="color:#000">maxn</span>], <span style="color:#000">k</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">k</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">sort</span>(<span style="color:#000">a</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">a</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">+</span> <span style="color:#000">n</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">pos</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">lzy</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> (<span style="color:#000">k</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">now</span> <span style="color:#000">=</span> <span style="color:#000">pos</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">pos</span> <span style="color:#000">&gt;</span> <span style="color:#000">n</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">0</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">continue</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">while</span> (<span style="color:#000">pos</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">a</span>[<span style="color:#000">pos</span>] <span style="color:#000">==</span> <span style="color:#000">a</span>[<span style="color:#000">now</span>])
</span></span><span style="display:flex;"><span>            <span style="color:#000">pos</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">a</span>[<span style="color:#000">now</span>] <span style="color:#000">-</span> <span style="color:#000">lzy</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">lzy</span> <span style="color:#000">+=</span> <span style="color:#000">a</span>[<span style="color:#000">now</span>] <span style="color:#000">-</span> <span style="color:#000">lzy</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="chttpscodeforcescontest1088problemc"><a href="https://codeforc.es/contest/1088/problem/C">C</a></h2>
<h3 id="description-2">Description</h3>
<p>有一个长度为 $n$ 的数组 $\{a_i\}$，你可以对其进行一下两个操作之一：</p>
<ul>
<li>选一个下标 $i$ 和一个正整数 $x$，将这个数组以 $i$ 为结尾的前缀都加上 $x$；</li>
<li>选一个下标 $i$ 和一个正整数 $x$，将这个数组以 $i$ 为结尾的前缀都加对 $x$​ 取模。</li>
</ul>
<p>你需要在 $n+1$​ 个操作内把这个数组变成严格单调递增的，输出你的操作。、</p>
<p>$1\leq n\leq2000,0\leq a_i\leq10^5$，你选择的 $x$ 需要满足 $1\leq x\leq10^6$。</p>
<h3 id="solution-2">Solution</h3>
<p>发现 $n,a_i$ 都和 $x$ 差了很多，很容易想到构造一个 $1\sim n+1$ 的数组的方法：我们可以直接把整个数组都加上一个很大的数，设这个数是 $X$，那么接下来 $n$ 次操作依次取模即可。</p>
<p>具体地，第 $i$ 次第二个操作是把以 $i$ 为结尾的前缀对 $a_i+X-i$ 取模。</p>
<p>确定 $X$ 的值也很简单，$X=(a_i-i)_{max}$​。</p>
<h3 id="code-2">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2010</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">X</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1e6</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">a</span>[<span style="color:#000">maxn</span>], <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">ios</span><span style="color:#000">::</span><span style="color:#000">sync_with_stdio</span>(<span style="color:#a90d91">false</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">mx</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>], <span style="color:#000">mx</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">max</span>(<span style="color:#000">mx</span>, <span style="color:#000">a</span>[<span style="color:#000">i</span>] <span style="color:#000">-</span> <span style="color:#000">i</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">X</span> <span style="color:#000">-=</span> <span style="color:#000">mx</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">n</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">n</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">X</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">2</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">i</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>] <span style="color:#000">+</span> <span style="color:#000">X</span> <span style="color:#000">-</span> <span style="color:#000">i</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="dhttpscodeforcescontest1088problemd"><a href="https://codeforc.es/contest/1088/problem/D">D</a></h2>
<h3 id="description-3">Description</h3>
<p><strong>这是一道交互题。</strong></p>
<p>交互库选择了两个数 $(a,b)$​ 。每次询问一个二元组 $(c,d)$，返回 $a\oplus c$ 和 $b\oplus d$ 的大小关系。你需要在 $62$ 次询问内确定 $a,b$，保证 $0\leq a,b\leq2^{30}$。</p>
<h3 id="solution-3">Solution</h3>
<p>我们显然可以一位一位考虑，尝试在 $2$ 次操作之内得到一位的答案。</p>
<p>考虑我们能得到什么信息，显然一开始询问 $(0,0)$ 可以得到 $a,b$ 的大小关系，那么我们就从大小关系入手。</p>
<p>因为大小比较是从高到低比的，我们就从高到低确定每一位。</p>
<p>假设我们在第 $i$​​ 位，有 $a,b$​​ 中包括这一位以及比这一位低的数的大小关系 $flag$​，比第 $i$​ 位高的已经确定好的 $a,b$​ 。我们先问一遍 $c=a\oplus2^i,d=b\oplus2^i$​​​。如果得到的大小关系和 $flag$ 不一样，那么 $a,b$ 在这一位就不相等，根据原先的 $flag$ 就能确定这一个 $1$ 在 $a,b$​ 的哪个数上，然后再问一次更新 $flag$；如果相等就再问一次确定这一位是 $1$ 还是 $0$。</p>
<h3 id="code-3">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">flag</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">ask</span>(<span style="color:#a90d91">int</span> <span style="color:#000">a</span>, <span style="color:#a90d91">int</span> <span style="color:#000">b</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34;? &#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">a</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">b</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">x</span> <span style="color:#000">==</span> <span style="color:#000">-</span><span style="color:#1c01ce">2</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">exit</span>(<span style="color:#1c01ce">0</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">a</span>, <span style="color:#000">b</span>, <span style="color:#000">lsta</span>, <span style="color:#000">lstb</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">flag</span> <span style="color:#000">=</span> <span style="color:#000">ask</span>(<span style="color:#1c01ce">0</span>, <span style="color:#1c01ce">0</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">29</span>; <span style="color:#000">i</span> <span style="color:#000">&gt;=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">res</span> <span style="color:#000">=</span> <span style="color:#000">ask</span>(<span style="color:#000">a</span> <span style="color:#000">^</span> (<span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">i</span>), <span style="color:#000">b</span> <span style="color:#000">^</span> (<span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">i</span>));
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">res</span> <span style="color:#000">!=</span> <span style="color:#000">flag</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">flag</span> <span style="color:#000">==</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">b</span> <span style="color:#000">^=</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">i</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>                <span style="color:#000">a</span> <span style="color:#000">^=</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">i</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">flag</span> <span style="color:#000">=</span> <span style="color:#000">ask</span>(<span style="color:#000">a</span>, <span style="color:#000">b</span>);
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">int</span> <span style="color:#000">p</span> <span style="color:#000">=</span> <span style="color:#000">ask</span>(<span style="color:#000">a</span> <span style="color:#000">^</span> (<span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">i</span>), <span style="color:#000">b</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">p</span> <span style="color:#000">==</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">a</span> <span style="color:#000">^=</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">i</span>, <span style="color:#000">b</span> <span style="color:#000">^=</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">i</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34;!&#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">a</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">b</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="ehttpscodeforcescomcontest1088probleme"><a href="https://codeforces.com/contest/1088/problem/E">E</a></h2>
<h3 id="description-4">Description</h3>
<p>给定一棵 $n$​​​ 个节点的树，点有点权 $a_u$​​，可能为负。现在请你在树上找出 $k$​（$1~\leq~k~\leq~n$）个不相交集合，每个集合中的点构成一个联通块。</p>
<p>设选出的所有点的集合为 $s$，最大化 $\dfrac{\sum_{u\in s}a_u}{k}$，在满足前面那个东西最大的前提下，最大化 $k$。</p>
<h3 id="solution-4">Solution</h3>
<p>发现我们是要最大化每个集合中点权和的平均值。</p>
<p>那么有一个结论（感性理解）：我们选点权最大的集合，平均值最大。</p>
<p>那么还要最大化 $k$，就尽可能多选这个点权最大的集合就行。</p>
<p>设计一个很简单的树形 DP：$f(i)$ 为选 $i$​ 为根子树最大权值。$f(i)=w_i+\sum max(0,f(v))$。</p>
<p>然后统计一下最大值，再 DP 一次，然后再算一次 $f(i)$，这次当其已经成为最大值时，我们直接把这个连通块删掉，即把 $f(i)$ 设置为极小值即可。</p>
<h3 id="code-4">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cctype&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cerr</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">3e5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">inf</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1ll</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">60</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">vector</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">e</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">add</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>) { <span style="color:#000">e</span>[<span style="color:#000">x</span>].<span style="color:#000">push_back</span>(<span style="color:#000">y</span>), <span style="color:#000">e</span>[<span style="color:#000">y</span>].<span style="color:#000">push_back</span>(<span style="color:#000">x</span>); }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">w</span>[<span style="color:#000">maxn</span>], <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">f</span>[<span style="color:#000">maxn</span>], <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#000">-</span><span style="color:#000">inf</span>, <span style="color:#000">cnt</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">dfs</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">fa</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">f</span>[<span style="color:#000">x</span>] <span style="color:#000">=</span> <span style="color:#000">w</span>[<span style="color:#000">x</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">v</span> : <span style="color:#000">e</span>[<span style="color:#000">x</span>])
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">v</span> <span style="color:#000">!=</span> <span style="color:#000">fa</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">dfs</span>(<span style="color:#000">v</span>, <span style="color:#000">x</span>), <span style="color:#000">f</span>[<span style="color:#000">x</span>] <span style="color:#000">+=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">max</span>(<span style="color:#000">f</span>[<span style="color:#000">v</span>], <span style="color:#1c01ce">0ll</span>);
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">dfs2</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">fa</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">f</span>[<span style="color:#000">x</span>] <span style="color:#000">=</span> <span style="color:#000">w</span>[<span style="color:#000">x</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">v</span> : <span style="color:#000">e</span>[<span style="color:#000">x</span>])
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">v</span> <span style="color:#000">!=</span> <span style="color:#000">fa</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">dfs2</span>(<span style="color:#000">v</span>, <span style="color:#000">x</span>), <span style="color:#000">f</span>[<span style="color:#000">x</span>] <span style="color:#000">+=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">max</span>(<span style="color:#000">f</span>[<span style="color:#000">v</span>], <span style="color:#1c01ce">0ll</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">f</span>[<span style="color:#000">x</span>] <span style="color:#000">==</span> <span style="color:#000">ans</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cnt</span><span style="color:#000">++</span>, <span style="color:#000">f</span>[<span style="color:#000">x</span>] <span style="color:#000">=</span> <span style="color:#000">-</span><span style="color:#000">inf</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">ios</span><span style="color:#000">::</span><span style="color:#000">sync_with_stdio</span>(<span style="color:#a90d91">false</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">w</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">x</span>, <span style="color:#000">y</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">x</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">y</span>, <span style="color:#000">add</span>(<span style="color:#000">x</span>, <span style="color:#000">y</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">dfs</span>(<span style="color:#1c01ce">1</span>, <span style="color:#1c01ce">0</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">max</span>(<span style="color:#000">ans</span>, <span style="color:#000">f</span>[<span style="color:#000">i</span>]);
</span></span><span style="display:flex;"><span>    <span style="color:#000">memset</span>(<span style="color:#000">f</span>, <span style="color:#1c01ce">0</span>, <span style="color:#a90d91">sizeof</span>(<span style="color:#000">f</span>));
</span></span><span style="display:flex;"><span>    <span style="color:#000">dfs2</span>(<span style="color:#1c01ce">1</span>, <span style="color:#1c01ce">0</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">ans</span> <span style="color:#000">*</span> <span style="color:#000">cnt</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">cnt</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="fhttpscodeforcescomcontest1088problemf"><a href="https://codeforces.com/contest/1088/problem/F">F</a></h2>
<h3 id="description-5">Description</h3>
<p>有一个给定一棵树，点有点权，其中这棵树满足除了权值最小的点外，每个点都有一个权值比它小的点与它相邻。权值最小的点唯一要求你重新构建这棵树，使得代价最小。计算代价的方法如下：</p>
<ul>
<li>一个点的代价为：$\text{deg}_u \times a_u$​​​，其中 $\text{deg}_u$​​ 表示点 $u$​ 的度数，即新树中与 $u$ 直接相连的节点数。</li>
<li>一条边 $(u,v)$​​​​ 的代价为 $\lceil \log_2 \text{dis}(u,v) \rceil \times \min(a_u,a_v)$​​​)，其中 $\text{dis}(u,v)$​​ 为 $u$​ 和 $v$ 在原树中的距离。</li>
</ul>
<h3 id="solution-5">Solution</h3>
<p>考虑最小生成树。</p>
<p>这个点的代价就很怪，发现可以转到边上，那么在 $(u,v)$ 之间加一条边的代价就是 $a_u+a_v+\lceil \log_2 \text{dis}(u,v) \rceil \times \min(a_u,a_v)$。</p>
<p>直接加边是 $O(n^2)$ 的，过不去。</p>
<p>发现有一个条件没用，这个条件就是说如果我们以最小值为根遍历原树，每个点有且仅有一个点的权值小于它，就是他的父亲。</p>
<p>边太多了，我们考虑少加一些边，即去掉一些肯定不优的。</p>
<p>再次看一下式子，并想一想生成树——每个点只会往生成树里连一条边，也就是说我们需要给每个点找一个代价最小的边。</p>
<p>那么对于一个点 $u$ ，显然不能从它的儿子里找，这显然比从祖先找要劣。再想一想，最远就是和根连边，因为如果不从他到根这条路径上找点，其他的点权值肯定比根大，距离也更长。</p>
<p>因此就是要最小化 $a_v\times(\lceil \log_2 \text{dis}(u,v)\rceil+1)$​，因为有 $\log_2$，我们可以倍增找这个最小值。</p>
<p>然后就做完了。</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cmath&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cctype&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cerr</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">namespace</span> <span style="color:#000">IO</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>	<span style="color:#177500">// 省略
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>}
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#a90d91">namespace</span> <span style="color:#000">IO</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">5e5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>, <span style="color:#000">inf</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">30</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">typedef</span> <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">ll</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">vector</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">e</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">add</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>) { <span style="color:#000">e</span>[<span style="color:#000">x</span>].<span style="color:#000">push_back</span>(<span style="color:#000">y</span>), <span style="color:#000">e</span>[<span style="color:#000">y</span>].<span style="color:#000">push_back</span>(<span style="color:#000">x</span>); }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">f</span>[<span style="color:#000">maxn</span>][<span style="color:#1c01ce">26</span>], <span style="color:#000">a</span>[<span style="color:#000">maxn</span>], <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">mi</span>[<span style="color:#000">maxn</span>][<span style="color:#1c01ce">26</span>], <span style="color:#000">mii</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">dep</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">dfs</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">fa</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">f</span>[<span style="color:#000">x</span>][<span style="color:#1c01ce">0</span>] <span style="color:#000">=</span> <span style="color:#000">fa</span>, <span style="color:#000">mi</span>[<span style="color:#000">x</span>][<span style="color:#1c01ce">0</span>] <span style="color:#000">=</span> <span style="color:#000">a</span>[<span style="color:#000">fa</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#000">dep</span>[<span style="color:#000">x</span>] <span style="color:#000">=</span> <span style="color:#000">dep</span>[<span style="color:#000">fa</span>] <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">m</span> <span style="color:#000">=</span> <span style="color:#000">a</span>[<span style="color:#000">fa</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#1c01ce">25</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">f</span>[<span style="color:#000">x</span>][<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">f</span>[<span style="color:#000">f</span>[<span style="color:#000">x</span>][<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>]][<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>];
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">f</span>[<span style="color:#000">x</span>][<span style="color:#000">i</span>] <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">break</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">m</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">min</span>(<span style="color:#000">m</span>, <span style="color:#1c01ce">1ll</span> <span style="color:#000">*</span> <span style="color:#000">a</span>[<span style="color:#000">f</span>[<span style="color:#000">x</span>][<span style="color:#000">i</span>]] <span style="color:#000">*</span> (<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>));
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">m</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">min</span>(<span style="color:#000">m</span>, <span style="color:#1c01ce">1ll</span> <span style="color:#000">*</span> <span style="color:#000">a</span>[<span style="color:#000">mii</span>] <span style="color:#000">*</span> (<span style="color:#a90d91">int</span>(<span style="color:#000">ceil</span>(<span style="color:#000">log2</span>(<span style="color:#000">dep</span>[<span style="color:#000">x</span>] <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>))) <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>));
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">fa</span> <span style="color:#000">!=</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">ans</span> <span style="color:#000">+=</span> <span style="color:#000">m</span> <span style="color:#000">+</span> <span style="color:#000">a</span>[<span style="color:#000">x</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">v</span> : <span style="color:#000">e</span>[<span style="color:#000">x</span>])
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">v</span> <span style="color:#000">!=</span> <span style="color:#000">fa</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">dfs</span>(<span style="color:#000">v</span>, <span style="color:#000">x</span>);
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>   <span style="color:#000">n</span> <span style="color:#000">=</span> <span style="color:#000">read</span>(), <span style="color:#000">a</span>[<span style="color:#1c01ce">0</span>] <span style="color:#000">=</span> <span style="color:#000">inf</span>;
</span></span><span style="display:flex;"><span>   <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>       <span style="color:#000">a</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">read</span>(), <span style="color:#000">mii</span> <span style="color:#000">=</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>] <span style="color:#000">&lt;</span> <span style="color:#000">a</span>[<span style="color:#000">mii</span>] <span style="color:#000">?</span> <span style="color:#000">i</span> : <span style="color:#000">mii</span>;
</span></span><span style="display:flex;"><span>   <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>       <span style="color:#000">add</span>(<span style="color:#000">read</span>(), <span style="color:#000">read</span>());
</span></span><span style="display:flex;"><span>    <span style="color:#000">dfs</span>(<span style="color:#000">mii</span>, <span style="color:#1c01ce">0</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">writeln</span>(<span style="color:#000">ans</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div>]]></content:encoded>
    </item>
    
    <item>
      <title>Codeforces Round 573 (Div. 1&amp;2)</title>
      <link>https://luoyisu.github.io/posts/cf-contest1190/</link>
      <pubDate>Thu, 16 Dec 2021 15:23:16 +0000</pubDate>
      
      <guid>https://luoyisu.github.io/posts/cf-contest1190/</guid>
      <description>&lt;p&gt;挺难的，但没有 DP 好评（）&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>挺难的，但没有 DP 好评（）</p>
<h2 id="div2-ahttpscodeforcescontest1191problema"><a href="https://codeforc.es/contest/1191/problem/A">Div2 A</a></h2>
<h3 id="description">Description</h3>
<p>假设一个人有 $n$ 点血，定义他的等级为 $$
\begin{cases}\text{A}&amp;n\bmod4=1\\
\text{B}&amp;n\bmod4=3\\
\text{C}&amp;n\bmod4=2\\
\text{D}&amp;n\bmod4=0
\end{cases}$$。并定义等级由 $\text{D}\sim\text{A}$ 依次更好。</p>
<p>现在给出一个人的血量 $x$，他可以回 $0\sim2$ 点血。问回几点血得到的等级最高。</p>
<h3 id="solution">Solution</h3>
<p>分类讨论即可。</p>
<h3 id="code">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">n</span> <span style="color:#000">%</span> <span style="color:#1c01ce">4</span> <span style="color:#000">==</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">0</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34;A&#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">else</span> <span style="color:#a90d91">if</span> (<span style="color:#000">n</span> <span style="color:#000">%</span> <span style="color:#1c01ce">4</span> <span style="color:#000">==</span> <span style="color:#1c01ce">2</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34;B&#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">else</span> <span style="color:#a90d91">if</span> (<span style="color:#000">n</span> <span style="color:#000">%</span> <span style="color:#1c01ce">4</span> <span style="color:#000">==</span> <span style="color:#1c01ce">3</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">2</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34;A&#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34;A&#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="div2-bhttpscodeforcescontest1191problemb"><a href="https://codeforc.es/contest/1191/problem/B">Div2 B</a></h2>
<h3 id="description-1">Description</h3>
<p>Tokitsukaze 有 $3$ 块麻将，每个麻将上有一个 $2$ 位的字符串，由 $1\sim9$ 的一位数字和 m/s/p 组成，现在有两种出牌方式：</p>
<ol>
<li>3个完全一样的麻将；</li>
<li>第2位相同，前面是连号的（比如1p，2p，3p就可以）。</li>
</ol>
<p>但是 Tokitsukaze 不是个遵守规则的人，TA可以把任意一个麻将换成另一种麻将，可以换多次，也可以不换。问 Tokitsukaze 至少要换多少次才能一次出完 $3$ 个麻将？</p>
<h3 id="solution-1">Solution</h3>
<p>模拟，但是可以想办法简化代码。</p>
<h3 id="code-1">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;string&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">string</span> <span style="color:#000">a</span>, <span style="color:#000">b</span>, <span style="color:#000">c</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">string</span> <span style="color:#000">s</span>[<span style="color:#1c01ce">3</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">a</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">b</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">c</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">a</span> <span style="color:#000">==</span> <span style="color:#000">b</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">b</span> <span style="color:#000">==</span> <span style="color:#000">c</span>) <span style="color:#177500">// 三个一样
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">0</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">s</span>[<span style="color:#1c01ce">0</span>] <span style="color:#000">=</span> <span style="color:#000">a</span>, <span style="color:#000">s</span>[<span style="color:#1c01ce">1</span>] <span style="color:#000">=</span> <span style="color:#000">b</span>, <span style="color:#000">s</span>[<span style="color:#1c01ce">2</span>] <span style="color:#000">=</span> <span style="color:#000">c</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">sort</span>(<span style="color:#000">s</span>, <span style="color:#000">s</span> <span style="color:#000">+</span> <span style="color:#1c01ce">3</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">s</span>[<span style="color:#1c01ce">0</span>][<span style="color:#1c01ce">0</span>] <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">==</span> <span style="color:#000">s</span>[<span style="color:#1c01ce">1</span>][<span style="color:#1c01ce">0</span>] <span style="color:#000">&amp;&amp;</span> <span style="color:#000">s</span>[<span style="color:#1c01ce">1</span>][<span style="color:#1c01ce">0</span>] <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">==</span> <span style="color:#000">s</span>[<span style="color:#1c01ce">2</span>][<span style="color:#1c01ce">0</span>] <span style="color:#000">&amp;&amp;</span> <span style="color:#000">s</span>[<span style="color:#1c01ce">0</span>][<span style="color:#1c01ce">1</span>] <span style="color:#000">==</span> <span style="color:#000">s</span>[<span style="color:#1c01ce">1</span>][<span style="color:#1c01ce">1</span>] <span style="color:#000">&amp;&amp;</span> <span style="color:#000">s</span>[<span style="color:#1c01ce">2</span>][<span style="color:#1c01ce">1</span>] <span style="color:#000">==</span> <span style="color:#000">s</span>[<span style="color:#1c01ce">1</span>][<span style="color:#1c01ce">1</span>])
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">0</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>; <span style="color:#177500">// 已经是顺子
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>        <span style="color:#a90d91">return</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">s</span>[<span style="color:#1c01ce">0</span>] <span style="color:#000">==</span> <span style="color:#000">s</span>[<span style="color:#1c01ce">1</span>] <span style="color:#000">||</span> <span style="color:#000">s</span>[<span style="color:#1c01ce">1</span>] <span style="color:#000">==</span> <span style="color:#000">s</span>[<span style="color:#1c01ce">2</span>] <span style="color:#000">||</span> <span style="color:#000">s</span>[<span style="color:#1c01ce">0</span>] <span style="color:#000">==</span> <span style="color:#000">s</span>[<span style="color:#1c01ce">2</span>])
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>; <span style="color:#177500">// 两个一样
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>        <span style="color:#a90d91">return</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#1c01ce">2</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;</span> <span style="color:#1c01ce">3</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> ((<span style="color:#000">s</span>[<span style="color:#000">i</span>][<span style="color:#1c01ce">0</span>] <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">==</span> <span style="color:#000">s</span>[<span style="color:#000">j</span>][<span style="color:#1c01ce">0</span>] <span style="color:#000">||</span> <span style="color:#000">s</span>[<span style="color:#000">j</span>][<span style="color:#1c01ce">0</span>] <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">==</span> <span style="color:#000">s</span>[<span style="color:#000">i</span>][<span style="color:#1c01ce">0</span>] <span style="color:#000">||</span> <span style="color:#000">s</span>[<span style="color:#000">i</span>][<span style="color:#1c01ce">0</span>] <span style="color:#000">+</span> <span style="color:#1c01ce">2</span> <span style="color:#000">==</span> <span style="color:#000">s</span>[<span style="color:#000">j</span>][<span style="color:#1c01ce">0</span>] <span style="color:#000">||</span> <span style="color:#000">s</span>[<span style="color:#000">j</span>][<span style="color:#1c01ce">0</span>] <span style="color:#000">+</span> <span style="color:#1c01ce">2</span> <span style="color:#000">==</span> <span style="color:#000">s</span>[<span style="color:#000">i</span>][<span style="color:#1c01ce">0</span>]) <span style="color:#000">&amp;&amp;</span> <span style="color:#000">s</span>[<span style="color:#000">i</span>][<span style="color:#1c01ce">1</span>] <span style="color:#000">==</span> <span style="color:#000">s</span>[<span style="color:#000">j</span>][<span style="color:#1c01ce">1</span>])
</span></span><span style="display:flex;"><span>            {
</span></span><span style="display:flex;"><span>                <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>; <span style="color:#177500">// 两个相邻或差一个
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>                <span style="color:#a90d91">return</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>            }
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">2</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="ahttpscodeforcescontest1190problema"><a href="https://codeforc.es/contest/1190/problem/A">A</a></h2>
<h3 id="description-2">Description</h3>
<p>最近，Tokitsukaze 发现了一个有趣的游戏。在游戏开始，有 $n$ 个数（$1\sim n$）。这 $n$ 个数每 $k$ 个被分为一组（最后一组可能不到 $k$ 个）。现在她想拿出 $m$个数 $p_1, p_2,\dots,p_m$（输入保证该序列为升序）。她会从 $1$ 到 $n$ 逐个看，如果发现了她想要的数，那么她会将这组数中所有她想要的都取走，算作一次操作。一次操作结束后，数列中的数会自动左移补上被拿出的数的位置，但数值不变。求经过多少次操作后，她能取到所有她想要的数？$1\leq n\leq10^{18},1\leq m\leq10^5$。</p>
<h3 id="solution-2">Solution</h3>
<p>显然需要一个 $O(m)$ 的算法，我们对于每个数，算出来它在哪个块里，然后把在块里的数全跳过去就行。</p>
<p>假设当前数是 $p_i$，之前已经拿了 $del=i-1$ 个数，那么它所在的块就是 $\lceil\dfrac{p_i-del}{k}\rceil$。</p>
<h3 id="code-2">Code</h3>
<p>要注意 <code>ceil</code> 返回值是 <code>double</code>，会有精度问题，用返回值是 <code>long double</code> 的 <code>ceill</code> 就没有这个问题了。</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;string&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cmath&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1e5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">typedef</span> <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">ll</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000">ll</span> <span style="color:#000">n</span>, <span style="color:#000">m</span>, <span style="color:#000">k</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000">ll</span> <span style="color:#000">a</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">m</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">k</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">ll</span> <span style="color:#000">now</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> (<span style="color:#000">now</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">ll</span> <span style="color:#000">del</span> <span style="color:#000">=</span> <span style="color:#000">now</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">ll</span> <span style="color:#000">nowblock</span> <span style="color:#000">=</span> <span style="color:#000">ceill</span>(<span style="color:#1c01ce">1.0</span><span style="color:#000">l</span> <span style="color:#000">*</span> (<span style="color:#000">a</span>[<span style="color:#000">now</span>] <span style="color:#000">-</span> <span style="color:#000">del</span>) <span style="color:#000">/</span> <span style="color:#000">k</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">while</span> ((<span style="color:#000">ll</span>)<span style="color:#000">ceill</span>(<span style="color:#1c01ce">1.0</span><span style="color:#000">l</span> <span style="color:#000">*</span> (<span style="color:#000">a</span>[<span style="color:#000">now</span>] <span style="color:#000">-</span> <span style="color:#000">del</span>) <span style="color:#000">/</span> <span style="color:#000">k</span>) <span style="color:#000">==</span> <span style="color:#000">nowblock</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">now</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">ans</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">ans</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="bhttpscodeforcescontest1190problemb"><a href="https://codeforc.es/contest/1190/problem/B">B</a></h2>
<h3 id="description-3">Description</h3>
<p>A 和 B 在玩一个小游戏，轮流从 $n$ 堆石子里拿石子，一次拿一个。当拿之前所有石子都被拿完了或拿完一个石子之后有两堆石子剩余个数一样（包括都为空的石子），A 先手，问谁能赢。</p>
<h3 id="solution-3">Solution</h3>
<p>手玩一下发现当两个人开始轮流取的时候，取什么都是一样的，而最终一定会变成每堆石子的数目分别为 $0\sim n-1$ 这种情况。</p>
<p>所以直接算一下每堆石子和最终状态差值，看看是奇数还是偶数就知道谁赢了。</p>
<p>需要提前看一下能不能进入轮流取的情况，即先手拿完第一下会不会输。</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;string&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cmath&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;map&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1e5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">n</span>, <span style="color:#000">a</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">map</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span>, <span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">cnt</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">bool</span> <span style="color:#000">check</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">cnt</span>.<span style="color:#000">clear</span>();
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">cnt</span>.<span style="color:#000">count</span>(<span style="color:#000">a</span>[<span style="color:#000">i</span>]))
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">return</span> <span style="color:#a90d91">false</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>            <span style="color:#000">cnt</span>[<span style="color:#000">a</span>[<span style="color:#000">i</span>]] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">cnt</span>[<span style="color:#1c01ce">0</span>] <span style="color:#000">==</span> <span style="color:#000">n</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#a90d91">false</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#a90d91">true</span>;  
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">ios</span><span style="color:#000">::</span><span style="color:#000">sync_with_stdio</span>(<span style="color:#a90d91">false</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>], <span style="color:#000">cnt</span>[<span style="color:#000">a</span>[<span style="color:#000">i</span>]]<span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">ok</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">cnt</span>[<span style="color:#1c01ce">0</span>] <span style="color:#000">&gt;=</span> <span style="color:#1c01ce">2</span>) <span style="color:#177500">// 有不止一个 0，先手输
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34;cslnb&#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">tot</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">cnt</span>[<span style="color:#000">a</span>[<span style="color:#000">i</span>]] <span style="color:#000">&gt;=</span> <span style="color:#1c01ce">3</span>) <span style="color:#177500">// 同一个数出现超过两次，先手输
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">ok</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">break</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span> <span style="color:#a90d91">if</span> (<span style="color:#000">cnt</span>[<span style="color:#000">a</span>[<span style="color:#000">i</span>]] <span style="color:#000">&gt;=</span> <span style="color:#1c01ce">2</span>) <span style="color:#177500">// 同一个数出现两次，比它小 1 的数出现过，先手输
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">cnt</span>[<span style="color:#000">a</span>[<span style="color:#000">i</span>] <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">&gt;=</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>            {
</span></span><span style="display:flex;"><span>                <span style="color:#000">ok</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">break</span>;
</span></span><span style="display:flex;"><span>            }
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">auto</span> <span style="color:#000">k</span> : <span style="color:#000">cnt</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">k</span>.<span style="color:#000">second</span> <span style="color:#000">&gt;=</span> <span style="color:#1c01ce">2</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">tot</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>    }      
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">tot</span> <span style="color:#000">&gt;=</span> <span style="color:#1c01ce">2</span>) <span style="color:#177500">// 出现两次的数超过 1 个，先手输
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">ok</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">!</span><span style="color:#000">ok</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34;cslnb&#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">sort</span>(<span style="color:#000">a</span>, <span style="color:#000">a</span> <span style="color:#000">+</span> <span style="color:#000">n</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">sum</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">sum</span> <span style="color:#000">+=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">max</span>(<span style="color:#1c01ce">0</span>, <span style="color:#000">a</span>[<span style="color:#000">i</span>] <span style="color:#000">-</span> <span style="color:#000">i</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>  
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> (<span style="color:#000">sum</span> <span style="color:#000">%</span> <span style="color:#1c01ce">2</span> <span style="color:#000">?</span> <span style="color:#c41a16">&#34;sjfnb&#34;</span> <span style="color:#000">:</span> <span style="color:#c41a16">&#34;cslnb&#34;</span>) <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="chttpscodeforcescontest1190problemc"><a href="https://codeforc.es/contest/1190/problem/C">C</a></h2>
<h3 id="description-4">Description</h3>
<p>有一个长度为 $n$ 的01字符串，和一个整数 $k$。A、B。二人进行做博弈游戏，每个人必须选择连续的 $k$ 个字符，把这连续的 $k$ 个字符全变为 $0$ 或者 $1$。</p>
<p>如果某次操作之后整个字符串全为 $1$ 或者 $0$，那么这个人胜利，假设二人都绝顶聪明。给你初始局面，A先手，问 A、B 谁能赢，又或者平局。</p>
<h3 id="solution-4">Solution</h3>
<p>发现一个事情：如果先手第一次操作后赢不了，那么以后永远都赢不了。因为后手可以把他的操作改回去。</p>
<p>而如果后手第一次操作后赢不了，那么必定平局——即把先手操作改回去来防御，如此循环。</p>
<p>判断先手能不能赢很简单，前缀和一下即可。</p>
<p>怎么判断后手能不能赢呢？</p>
<p>首先必须满足 $k\neq1\operatorname{and}2k\geq n$，前一个要求很好理解，后一个要求就是说如果先手赢不了，他直接修改两边就行，后手赢不了。</p>
<p>我们先枚举先手选的区间 $[l,r]$，如果 $a_{l-1}\neq a_{l}\operatorname{or} a_r\neq a_{r+1}$，那么就会平局（先手可以把这个区间全改成挨着它的那个颜色，这样后手就改不过来）。如果每一个区间先手都没法让他变平局，后手胜利。</p>
<h3 id="code-3">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1e5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">n</span>, <span style="color:#000">a</span>[<span style="color:#000">maxn</span>], <span style="color:#000">sum</span>[<span style="color:#000">maxn</span>], <span style="color:#000">k</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">char</span> <span style="color:#000">ss</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">int</span> <span style="color:#000">s</span>(<span style="color:#a90d91">int</span> <span style="color:#000">l</span>, <span style="color:#a90d91">int</span> <span style="color:#000">r</span>) { <span style="color:#a90d91">return</span> <span style="color:#000">l</span> <span style="color:#000">&gt;</span> <span style="color:#000">r</span> <span style="color:#000">?</span> <span style="color:#1c01ce">0</span> <span style="color:#000">:</span> <span style="color:#000">sum</span>[<span style="color:#000">r</span>] <span style="color:#000">-</span> <span style="color:#000">sum</span>[<span style="color:#000">l</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>]; }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">bool</span> <span style="color:#000">check1</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#000">k</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">p</span> <span style="color:#000">=</span> <span style="color:#000">s</span>(<span style="color:#1c01ce">1</span>, <span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>) <span style="color:#000">+</span> <span style="color:#000">s</span>(<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#000">k</span>, <span style="color:#000">n</span>); <span style="color:#177500">// 判断先手必胜
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>        <span style="color:#a90d91">if</span> (<span style="color:#000">p</span> <span style="color:#000">==</span> <span style="color:#1c01ce">0</span> <span style="color:#000">||</span> <span style="color:#000">p</span> <span style="color:#000">+</span> <span style="color:#000">k</span> <span style="color:#000">==</span> <span style="color:#000">n</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">return</span> <span style="color:#a90d91">true</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#a90d91">false</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">bool</span> <span style="color:#000">check2</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">k</span> <span style="color:#000">==</span> <span style="color:#1c01ce">1</span> <span style="color:#000">||</span> <span style="color:#000">k</span> <span style="color:#000">*</span> <span style="color:#1c01ce">2</span> <span style="color:#000">&lt;</span> <span style="color:#000">n</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#a90d91">false</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span> <span style="color:#000">-</span> <span style="color:#000">k</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">a</span>[<span style="color:#000">i</span>] <span style="color:#000">!=</span> <span style="color:#000">a</span>[<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">||</span> <span style="color:#000">a</span>[<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#000">k</span>] <span style="color:#000">!=</span> <span style="color:#000">a</span>[<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#000">k</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>])
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">return</span> <span style="color:#a90d91">false</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#000">a</span>[<span style="color:#1c01ce">1</span>] <span style="color:#000">!=</span> <span style="color:#000">a</span>[<span style="color:#000">n</span>];
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">k</span> <span style="color:#000">&gt;&gt;</span> (<span style="color:#000">ss</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">a</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">ss</span>[<span style="color:#000">i</span>] <span style="color:#000">-</span> <span style="color:#2300ce">&#39;0&#39;</span>, <span style="color:#000">sum</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">sum</span>[<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">+</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">check1</span>())
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34;tokitsukaze&#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">else</span> <span style="color:#a90d91">if</span> (<span style="color:#000">check2</span>())
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34;quailty&#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34;once again&#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="dhttpscodeforcescontest1190problemd"><a href="https://codeforc.es/contest/1190/problem/D">D</a></h2>
<h3 id="description-5">Description</h3>
<p>平面上有 $n$ 个点，坐标为 $(x_i,y_i)$，有三条直线，两条平行 $y$ 轴，一条平行 $x$ 轴，他们会围起一些点。如图：</p>
<p>
  <img loading="lazy" src="https://codeforces.cdn.menci.xyz/menci/espresso/com/da2aefca33f93cc613b170675755eb2a06da1a9c.png" alt="图"  /></p>
<p>求对于这三条线所有的可能，有多少种非空点集会被这三条线围起来。</p>
<p>$n\leq2\times10^5,1\leq x_i,y_i\leq10^9$。</p>
<h3 id="solution-5">Solution</h3>
<p>发现这个平行 $x$ 轴的直线可以作为突破点。</p>
<p>首先把所有点坐标离散化一下。</p>
<p>我们从上到下移动这条线 $y=a$，当它扫到一个点时，我们把所有 $y\geq a$ 的点的答案都算进去。这样就不会算重也不会漏。</p>
<p>考虑这条线上只有一个点的情况，那么新的点集数就是 $cnt(1,x)\times cnt(x,x_{max})$，其中 $cnt(l,r)$ 表示在 $x=l$ 到 $x=r$ 这段闭区间内每条总共有几个横坐标不同的点（注意新扫到的点也算在内），解释就是从左面的直线有 $cnt(1,x)$ 种可以取的地方，右面同理，然后乘法原理一下。</p>
<p>如果直线上有多个点呢？我们先把所有点都算进去，然后对于每个点的贡献就是 $cnt(nxt+1,x)\times cnt(x,x_{max})$，其中 $nxt$ 是这条直线上在当前点左面的点的横坐标。</p>
<p>怎么维护 $cnt$？发现我们需要单点加区间求和，那么树状数组就可以胜任了。</p>
<p>时间复杂度 $O(n\log n)$。</p>
<h3 id="code-4">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2e5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">struct</span> <span style="color:#3f6e75">point</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#000">y</span>;
</span></span><span style="display:flex;"><span>} <span style="color:#000">a</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">XX</span>[<span style="color:#000">maxn</span>], <span style="color:#000">YY</span>[<span style="color:#000">maxn</span>], <span style="color:#000">n</span>, <span style="color:#000">totx</span>, <span style="color:#000">toty</span>, <span style="color:#000">cnt</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">vector</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">p</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">int</span> <span style="color:#000">lowbit</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>) { <span style="color:#a90d91">return</span> <span style="color:#000">x</span> <span style="color:#000">&amp;</span> <span style="color:#000">-</span><span style="color:#000">x</span>; }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">struct</span> <span style="color:#3f6e75">Tree</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">t</span>[<span style="color:#000">maxn</span>], <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">void</span> <span style="color:#000">modify</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">v</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (; <span style="color:#000">x</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">x</span> <span style="color:#000">+=</span> <span style="color:#000">lowbit</span>(<span style="color:#000">x</span>))
</span></span><span style="display:flex;"><span>            <span style="color:#000">t</span>[<span style="color:#000">x</span>] <span style="color:#000">+=</span> <span style="color:#000">v</span>;   
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">get</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">res</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (; <span style="color:#000">x</span>; <span style="color:#000">x</span> <span style="color:#000">-=</span> <span style="color:#000">lowbit</span>(<span style="color:#000">x</span>))
</span></span><span style="display:flex;"><span>            <span style="color:#000">res</span> <span style="color:#000">+=</span> <span style="color:#000">t</span>[<span style="color:#000">x</span>];
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#000">res</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">query</span>(<span style="color:#a90d91">int</span> <span style="color:#000">l</span>, <span style="color:#a90d91">int</span> <span style="color:#000">r</span>) { <span style="color:#a90d91">return</span> <span style="color:#000">get</span>(<span style="color:#000">r</span>) <span style="color:#000">-</span> <span style="color:#000">get</span>(<span style="color:#000">l</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>); }
</span></span><span style="display:flex;"><span>} <span style="color:#000">t</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">init</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">scanf</span>(<span style="color:#c41a16">&#34;%d&#34;</span>, <span style="color:#000">&amp;</span><span style="color:#000">n</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">scanf</span>(<span style="color:#c41a16">&#34;%d%d&#34;</span>, <span style="color:#000">&amp;</span><span style="color:#000">XX</span>[<span style="color:#000">i</span>], <span style="color:#000">&amp;</span><span style="color:#000">YY</span>[<span style="color:#000">i</span>]), <span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">XX</span>[<span style="color:#000">i</span>], <span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">y</span> <span style="color:#000">=</span> <span style="color:#000">YY</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">sort</span>(<span style="color:#000">XX</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">XX</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">+</span> <span style="color:#000">n</span>), <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">sort</span>(<span style="color:#000">YY</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">YY</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">+</span> <span style="color:#000">n</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">totx</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">unique</span>(<span style="color:#000">XX</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">XX</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">+</span> <span style="color:#000">n</span>) <span style="color:#000">-</span> <span style="color:#000">XX</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">toty</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">unique</span>(<span style="color:#000">YY</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">YY</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">+</span> <span style="color:#000">n</span>) <span style="color:#000">-</span> <span style="color:#000">YY</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">lower_bound</span>(<span style="color:#000">XX</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">XX</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">+</span> <span style="color:#000">totx</span>, <span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">x</span>) <span style="color:#000">-</span> <span style="color:#000">XX</span>, <span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">y</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">lower_bound</span>(<span style="color:#000">YY</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">YY</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">+</span> <span style="color:#000">toty</span>, <span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">y</span>) <span style="color:#000">-</span> <span style="color:#000">YY</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">p</span>[<span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">y</span>].<span style="color:#000">push_back</span>(<span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">x</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">toty</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">sort</span>(<span style="color:#000">p</span>[<span style="color:#000">i</span>].<span style="color:#000">begin</span>(), <span style="color:#000">p</span>[<span style="color:#000">i</span>].<span style="color:#000">end</span>());
</span></span><span style="display:flex;"><span>    <span style="color:#000">t</span>.<span style="color:#000">n</span> <span style="color:#000">=</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">init</span>();
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">y</span> <span style="color:#000">=</span> <span style="color:#000">toty</span>; <span style="color:#000">y</span> <span style="color:#000">&gt;=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">y</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">nxt</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">x</span> : <span style="color:#000">p</span>[<span style="color:#000">y</span>])
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">cnt</span>[<span style="color:#000">x</span>] <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">t</span>.<span style="color:#000">modify</span>(<span style="color:#000">x</span>, <span style="color:#1c01ce">1</span>), <span style="color:#000">cnt</span>[<span style="color:#000">x</span>]<span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">x</span> : <span style="color:#000">p</span>[<span style="color:#000">y</span>])
</span></span><span style="display:flex;"><span>            <span style="color:#000">ans</span> <span style="color:#000">+=</span> <span style="color:#1c01ce">1ll</span> <span style="color:#000">*</span> <span style="color:#000">t</span>.<span style="color:#000">query</span>(<span style="color:#000">nxt</span>, <span style="color:#000">x</span>) <span style="color:#000">*</span> <span style="color:#000">t</span>.<span style="color:#000">query</span>(<span style="color:#000">x</span>, <span style="color:#000">totx</span>), <span style="color:#000">nxt</span> <span style="color:#000">=</span> <span style="color:#000">x</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">ans</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="ehttpscodeforcescontest1190probleme"><a href="https://codeforc.es/contest/1190/problem/E">E</a></h2>
<h3 id="description-6">Description</h3>
<p>给定平面上$N$个关键点，现在你可以放置 $M$ 条直线，直线之间可以相交，需要满足所有关键点与原点之间的线段至少与你放置的一条直线相交（相交在端点也算相交）。如果有一个关键点就是原点，那么一定要满足有一条直线经过原点。</p>
<p>你需要求出在满足上述条件的情况下原点到所有放置的直线的距离的最小值的最大可能值是多少。</p>
<p>$n,x_i,y_i,m\leq10^5$。</p>
<h3 id="solution-6">Solution</h3>
<p>显然可以二分答案 $ans$，可以发现我们选择的直线一定在原点为圆心，半径为 $ans$ 的圆的切线上（因为这样更优）。</p>
<p>发现一个点到原点的直线被一条选择的直线经过等价于这条被选择的直线与圆的切点在这个点到圆两条切线之间的圆弧上。</p>
<p>那么我们的问题就转化为圆上有若干个圆弧，要覆盖整个圆，求这 $m$ 个圆弧能不能达成目的。</p>
<p>这个问题如果在序列上做是很经典的题，就是区间覆盖，按照左端点排序即可。我们可以把一个圆弧用两个角度来表示就实现了转化。</p>
<p>但是现在是在一个环上，我们肯定把长度变为二倍然后变成序列题目。</p>
<p>直接找一个起点跑是 $O(n^2)$ 的，不行。</p>
<p>我们可以想办法预处理一些什么东西。</p>
<p>发现对于每条线段，我们如果选择它，那么选择的下一条线段是确定的。这个东西可以用类似双指针的算法预处理出来。</p>
<p>然后，如果每步的决策是固定的，我们显然可以倍增优化。</p>
<p>$f_{i,j}$ 表示第 $i$ 条线段选 $2^j$ 条线段之后下一个到了哪条线段。然后就行了。</p>
<p>时间复杂度 $O(n\log n\log d)$，$d$ 是到原点最近的点到原点的距离。</p>
<h3 id="code-5">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cmath&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1e5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">double</span> <span style="color:#000">eps</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1e-10</span>, <span style="color:#000">pi</span> <span style="color:#000">=</span> <span style="color:#000">acos</span>(<span style="color:#000">-</span><span style="color:#1c01ce">1.0</span>), <span style="color:#000">pi2</span> <span style="color:#000">=</span> <span style="color:#000">pi</span> <span style="color:#000">*</span> <span style="color:#1c01ce">2</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">struct</span> <span style="color:#3f6e75">seg</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">double</span> <span style="color:#000">l</span>, <span style="color:#000">r</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">bool</span> <span style="color:#a90d91">operator</span><span style="color:#000">&lt;</span>(<span style="color:#a90d91">const</span> <span style="color:#000">seg</span> <span style="color:#000">&amp;</span><span style="color:#000">b</span>) <span style="color:#a90d91">const</span> { <span style="color:#a90d91">return</span> <span style="color:#000">l</span> <span style="color:#000">&lt;</span> <span style="color:#000">b</span>.<span style="color:#000">l</span>; }
</span></span><span style="display:flex;"><span>} <span style="color:#000">s</span>[<span style="color:#000">maxn</span> <span style="color:#000">*</span> <span style="color:#1c01ce">2</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">struct</span> <span style="color:#3f6e75">point</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">double</span> <span style="color:#000">x</span>, <span style="color:#000">y</span>, <span style="color:#000">diss</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">double</span> <span style="color:#000">dis</span>() { <span style="color:#a90d91">return</span> <span style="color:#000">diss</span> <span style="color:#000">=</span> <span style="color:#000">sqrt</span>(<span style="color:#000">x</span> <span style="color:#000">*</span> <span style="color:#000">x</span> <span style="color:#000">+</span> <span style="color:#000">y</span> <span style="color:#000">*</span> <span style="color:#000">y</span>); }
</span></span><span style="display:flex;"><span>} <span style="color:#000">p</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">n</span>, <span style="color:#000">m</span>, <span style="color:#000">n2</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">f</span>[<span style="color:#000">maxn</span> <span style="color:#000">*</span> <span style="color:#1c01ce">2</span>][<span style="color:#1c01ce">25</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">end</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">d</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">d</span>; <span style="color:#000">i</span><span style="color:#000">++</span>, <span style="color:#000">d</span> <span style="color:#000">&gt;&gt;=</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">d</span> <span style="color:#000">&amp;</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">f</span>[<span style="color:#000">x</span>][<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">bool</span> <span style="color:#000">check</span>(<span style="color:#a90d91">double</span> <span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">double</span> <span style="color:#000">k</span> <span style="color:#000">=</span> <span style="color:#000">atan2</span>(<span style="color:#000">p</span>[<span style="color:#000">i</span>].<span style="color:#000">y</span>, <span style="color:#000">p</span>[<span style="color:#000">i</span>].<span style="color:#000">x</span>), <span style="color:#000">delta</span> <span style="color:#000">=</span> <span style="color:#000">acos</span>(<span style="color:#000">x</span> <span style="color:#000">/</span> <span style="color:#000">p</span>[<span style="color:#000">i</span>].<span style="color:#000">diss</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">s</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> {<span style="color:#000">k</span> <span style="color:#000">-</span> <span style="color:#000">delta</span>, <span style="color:#000">k</span> <span style="color:#000">+</span> <span style="color:#000">delta</span>};
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">s</span>[<span style="color:#000">i</span>].<span style="color:#000">l</span> <span style="color:#000">&lt;</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">s</span>[<span style="color:#000">i</span>].<span style="color:#000">l</span> <span style="color:#000">+=</span> <span style="color:#000">pi2</span>, <span style="color:#000">s</span>[<span style="color:#000">i</span>].<span style="color:#000">r</span> <span style="color:#000">+=</span> <span style="color:#000">pi2</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">s</span>[<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#000">n</span>] <span style="color:#000">=</span> {<span style="color:#000">s</span>[<span style="color:#000">i</span>].<span style="color:#000">l</span> <span style="color:#000">+</span> <span style="color:#000">pi2</span>, <span style="color:#000">s</span>[<span style="color:#000">i</span>].<span style="color:#000">r</span> <span style="color:#000">+</span> <span style="color:#000">pi2</span>};
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">sort</span>(<span style="color:#000">s</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">s</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">+</span> <span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">n</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">f</span>[<span style="color:#000">n2</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>][<span style="color:#1c01ce">0</span>] <span style="color:#000">=</span> <span style="color:#000">n2</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">r</span> <span style="color:#000">=</span> <span style="color:#000">n2</span>, <span style="color:#000">l</span> <span style="color:#000">=</span> <span style="color:#000">n2</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (; <span style="color:#000">l</span>; <span style="color:#000">l</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">while</span> (<span style="color:#000">s</span>[<span style="color:#000">r</span>].<span style="color:#000">l</span> <span style="color:#000">&gt;</span> <span style="color:#000">s</span>[<span style="color:#000">l</span>].<span style="color:#000">r</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">r</span><span style="color:#000">--</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">f</span>[<span style="color:#000">l</span>][<span style="color:#1c01ce">0</span>] <span style="color:#000">=</span> <span style="color:#000">r</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#1c01ce">19</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n2</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">f</span>[<span style="color:#000">j</span>][<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">f</span>[<span style="color:#000">f</span>[<span style="color:#000">j</span>][<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>]][<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">end</span>(<span style="color:#000">i</span>, <span style="color:#000">m</span>) <span style="color:#000">&gt;=</span> <span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#000">n</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">return</span> <span style="color:#a90d91">true</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#a90d91">false</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">m</span>, <span style="color:#000">n2</span> <span style="color:#000">=</span> <span style="color:#000">n</span> <span style="color:#000">*</span> <span style="color:#1c01ce">2</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">double</span> <span style="color:#000">r</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1e18</span>, <span style="color:#000">l</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0.0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">p</span>[<span style="color:#000">i</span>].<span style="color:#000">x</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">p</span>[<span style="color:#000">i</span>].<span style="color:#000">y</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">r</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">min</span>(<span style="color:#000">p</span>[<span style="color:#000">i</span>].<span style="color:#000">dis</span>(), <span style="color:#000">r</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> (<span style="color:#000">r</span> <span style="color:#000">-</span> <span style="color:#000">l</span> <span style="color:#000">&gt;</span> <span style="color:#000">eps</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">double</span> <span style="color:#000">mid</span> <span style="color:#000">=</span> (<span style="color:#000">l</span> <span style="color:#000">+</span> <span style="color:#000">r</span>) <span style="color:#000">/</span> <span style="color:#1c01ce">2</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">check</span>(<span style="color:#000">mid</span>))
</span></span><span style="display:flex;"><span>            <span style="color:#000">l</span> <span style="color:#000">=</span> <span style="color:#000">mid</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>            <span style="color:#000">r</span> <span style="color:#000">=</span> <span style="color:#000">mid</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">printf</span>(<span style="color:#c41a16">&#34;%.10lf</span><span style="color:#c41a16">\\</span><span style="color:#c41a16">n&#34;</span>, <span style="color:#000">l</span>);
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="fhttpscodeforcescontest1190problemf"><a href="https://codeforc.es/contest/1190/problem/F">F</a></h2>
<h3 id="description-7">Description</h3>
<p>给出三个整数 $n,m,p$，试求出 $n$ 个互不相同的整数使得它们中的每个整数 $x$ 均满足以下条件：</p>
<ul>
<li>$x \in [0,m-1]$</li>
<li>$\gcd(m,x) = 1$</li>
<li>$\nexists e,k \in \mathbb{N},p^e = km+x$</li>
</ul>
<p>如果能够找到，输出可能的选择方案，否则输出 <code>-1</code>。</p>
<p>$1 \leq n \leq 5 \times 10^5 , 1 \leq p &lt; m \leq 10^{18}$，保证 $m$ 是某个质数的正整数次幂。</p>
<h3 id="solution-7">Solution</h3>
<p>完全不会，以下是从各路题解拼凑出来的东西。</p>
<p>明确一下题目要求，设 $S=\{x|x\in\mathbb Z,0\leq x&lt;m,\gcd(m,x)=1\},T=\{p^e\bmod m|e\in N\}$，我们需要从集合 $S-T$ 中找出 $n$ 个数。</p>
<p>设 $m=q^k$。</p>
<p>要判断有解，我们显然需要判断 $S-T$ 的大小。显然 $|S|=\varphi(m)=q^k-q^{k-1}=m(1-\dfrac{1}{q})$。</p>
<p>当 $\gcd(q,m)&gt;1$，$m$ 是 $q$ 的倍数，那么 $T=\{p^0\}=\{1\}$。（$0$ 不合法）此时 $|S-T|=\varphi(m)-1$，判是否有解然后暴力枚举一组解就行。</p>
<p>否则 $T\subseteq S$，我们需要求出来 $|T|$，集合 $T$ 肯定是循环的，其实就是求 $p$ 的阶 $\text{order(p)}$，这玩意是 $\varphi(m)$ 的约数，而约数个数是不多的，我们可以用 Pollard-Rou 分解质因数然后枚举因数检查就能知道 $p$ 的阶。那么如果 $\varphi(m)-\text{order}(p)&lt;n$，无解。</p>
<p>下面是构造解的过程：</p>
<p>当 $m$ 存在原根 $g$ 时，设 $p\equiv g^u\pmod m$，那么一个数 $p^e=g^{ue}\equiv g^{ue\ \bmod\ \varphi(m)}\pmod m$ （由欧拉定理）在 $T$ 中当且仅当关于 $e$ 的方程 $ue\equiv v\pmod{\varphi(m)}$ 有解。这个有解的充要条件是 $\gcd(u,\varphi(m))\mid v$。又由于 $(g^{u})^{\text{order}(p)}\equiv1\pmod m$，可以得出 $u=\dfrac{\varphi(m)}{\text{order}(p)}$（欧拉定理）。</p>
<p>这样就得出了不合法的数的性质，我们从小到大暴力枚举指数，检查是否合法即可。</p>
<p>当 $m$ 不存在原根即 $m=2^k,k\geq3$，且 $p$ 是奇数（因为要互质）。</p>
<p>用以下做法：</p>
<ul>
<li>当 $m\leq10^7$，暴力。</li>
<li>当 $p=4x+1$，$\forall e\in\mathbb N,p^e\equiv1\pmod4$，那么我们直接在模 $4$ 余 $3$ 的数里选即可，因为数据范围很大，总能找到。</li>
<li>当 $p=4x+3$，我们只能选模 $4$ 余 $1$ 的数，注意到在 $p^e$ 中，$1$ 和 $3$ 总是交替出现。那么把 $p$ 换成 $p^2$。还有一个事情是：在模 $2^k$（$k\geq3$）意义下，取一个伪原根 $g&rsquo;=5$，任意一个模 $4$ 余 $1$ 的数都可以用 $g&rsquo;$ 的若干次幂表示出。可以对 $k$ 用归纳法证明，我懒了。于是就用有原根的方法做即可。</li>
</ul>
<p>顺便一提，怎么找原根呢？上定理！</p>
<blockquote>
<p><strong>原根判定定理</strong>：设 $m \geqslant 3, \gcd(a,m)=1$，则 $a$ 是模 $m$ 的原根的充要条件是，对于 $\varphi(m)$ 的每个素因数 $p$，都有 $a^{\frac{\varphi(m)}{p}}\not\equiv 1\pmod m$。</p>
</blockquote>
<blockquote>
<p><strong>最小原根的数量级</strong>：若 $m$ 有原根，则其最小原根是不多于 $m^{0.25}$ 级别的。</p>
</blockquote>
<p>我们只需要分解质因数，然后从小到大原根枚举检验即可。</p>
<h3 id="code-6">Code</h3>
<p>不好写，因为这题实在太难，参考了 CF 上别人的代码。</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdlib&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;ctime&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;map&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;random&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;set&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cerr</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">typedef</span> <span style="color:#000">__int128_t</span> <span style="color:#000">ll</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">namespace</span> <span style="color:#000">IO</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">mxsiz</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">20</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">char</span> <span style="color:#000">inbuf</span>[<span style="color:#000">mxsiz</span>], <span style="color:#000">*</span><span style="color:#000">p1</span>, <span style="color:#000">*</span><span style="color:#000">p2</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">char</span> <span style="color:#000">outbuf</span>[<span style="color:#000">mxsiz</span>], <span style="color:#000">*</span><span style="color:#000">op</span> <span style="color:#000">=</span> <span style="color:#000">outbuf</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">struct</span> <span style="color:#3f6e75">endio</span>
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">endio</span>(){};
</span></span><span style="display:flex;"><span>        <span style="color:#000">~</span><span style="color:#000">endio</span>() { <span style="color:#000">fwrite</span>(<span style="color:#000">outbuf</span>, <span style="color:#1c01ce">1</span>, <span style="color:#000">op</span> <span style="color:#000">-</span> <span style="color:#000">outbuf</span>, <span style="color:#000">stdout</span>); }
</span></span><span style="display:flex;"><span>    } <span style="color:#000">useless_var</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">char</span> <span style="color:#000">gc</span>() { <span style="color:#a90d91">return</span> <span style="color:#000">p1</span> <span style="color:#000">==</span> <span style="color:#000">p2</span> <span style="color:#000">&amp;&amp;</span> (<span style="color:#000">p2</span> <span style="color:#000">=</span> (<span style="color:#000">p1</span> <span style="color:#000">=</span> <span style="color:#000">inbuf</span>) <span style="color:#000">+</span> <span style="color:#000">fread</span>(<span style="color:#000">inbuf</span>, <span style="color:#1c01ce">1</span>, <span style="color:#000">mxsiz</span>, <span style="color:#000">stdin</span>), <span style="color:#000">p1</span> <span style="color:#000">==</span> <span style="color:#000">p2</span>) <span style="color:#000">?</span> <span style="color:#000">EOF</span> : <span style="color:#000">*</span><span style="color:#000">p1</span><span style="color:#000">++</span>; }
</span></span><span style="display:flex;"><span><span style="color:#633820">#define isdigit(x) (x &gt;= &#39;0&#39; &amp;&amp; x &lt;= &#39;9&#39;) </span><span style="color:#177500">// 防止忘记打 &lt;cctype&gt; 头文件
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>    <span style="color:#a90d91">inline</span> <span style="color:#000">ll</span> <span style="color:#000">read</span>()
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">ll</span> <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">f</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">char</span> <span style="color:#000">ch</span> <span style="color:#000">=</span> <span style="color:#000">gc</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (; <span style="color:#000">!</span><span style="color:#000">isdigit</span>(<span style="color:#000">ch</span>); <span style="color:#000">ch</span> <span style="color:#000">=</span> <span style="color:#000">gc</span>())
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">ch</span> <span style="color:#000">==</span> <span style="color:#2300ce">&#39;-&#39;</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">f</span> <span style="color:#000">=</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (; <span style="color:#000">isdigit</span>(<span style="color:#000">ch</span>); <span style="color:#000">ch</span> <span style="color:#000">=</span> <span style="color:#000">gc</span>())
</span></span><span style="display:flex;"><span>            <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">x</span> <span style="color:#000">*</span> <span style="color:#1c01ce">10</span> <span style="color:#000">+</span> <span style="color:#000">ch</span> <span style="color:#000">-</span> <span style="color:#2300ce">&#39;0&#39;</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#000">x</span> <span style="color:#000">*</span> <span style="color:#000">f</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">template</span> <span style="color:#000">&lt;</span><span style="color:#a90d91">typename</span> <span style="color:#000">T</span><span style="color:#000">&gt;</span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">read</span>(<span style="color:#000">T</span> <span style="color:#000">&amp;</span><span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">f</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">char</span> <span style="color:#000">ch</span> <span style="color:#000">=</span> <span style="color:#000">gc</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (; <span style="color:#000">!</span><span style="color:#000">isdigit</span>(<span style="color:#000">ch</span>); <span style="color:#000">ch</span> <span style="color:#000">=</span> <span style="color:#000">gc</span>())
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">ch</span> <span style="color:#000">==</span> <span style="color:#2300ce">&#39;-&#39;</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">f</span> <span style="color:#000">=</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (; <span style="color:#000">isdigit</span>(<span style="color:#000">ch</span>); <span style="color:#000">ch</span> <span style="color:#000">=</span> <span style="color:#000">gc</span>())
</span></span><span style="display:flex;"><span>            <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">x</span> <span style="color:#000">*</span> <span style="color:#1c01ce">10</span> <span style="color:#000">+</span> <span style="color:#000">ch</span> <span style="color:#000">-</span> <span style="color:#2300ce">&#39;0&#39;</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">x</span> <span style="color:#000">*=</span> <span style="color:#000">f</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span><span style="color:#633820">#undef isdigit
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">bool</span> <span style="color:#000">ischar</span>(<span style="color:#a90d91">char</span> <span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#000">x</span> <span style="color:#000">&gt;=</span> <span style="color:#2300ce">&#39;A&#39;</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">x</span> <span style="color:#000">&lt;=</span> <span style="color:#2300ce">&#39;z&#39;</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">char</span> <span style="color:#000">readchar</span>()
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">char</span> <span style="color:#000">ch</span> <span style="color:#000">=</span> <span style="color:#000">gc</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">while</span> (<span style="color:#000">!</span><span style="color:#000">ischar</span>(<span style="color:#000">ch</span>))
</span></span><span style="display:flex;"><span>            <span style="color:#000">ch</span> <span style="color:#000">=</span> <span style="color:#000">gc</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#000">ch</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">push</span>(<span style="color:#a90d91">char</span> <span style="color:#000">ch</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">op</span> <span style="color:#000">-</span> <span style="color:#000">outbuf</span> <span style="color:#000">==</span> <span style="color:#000">mxsiz</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">fwrite</span>(<span style="color:#000">outbuf</span>, <span style="color:#1c01ce">1</span>, <span style="color:#000">mxsiz</span>, <span style="color:#000">stdout</span>), <span style="color:#000">op</span> <span style="color:#000">=</span> <span style="color:#000">outbuf</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">*</span><span style="color:#000">op</span><span style="color:#000">++</span> <span style="color:#000">=</span> <span style="color:#000">ch</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">template</span> <span style="color:#000">&lt;</span><span style="color:#a90d91">typename</span> <span style="color:#000">T</span><span style="color:#000">&gt;</span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">work_wt</span>(<span style="color:#000">T</span> <span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">x</span> <span style="color:#000">&gt;</span> <span style="color:#1c01ce">9</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">work_wt</span>(<span style="color:#000">x</span> <span style="color:#000">/</span> <span style="color:#1c01ce">10</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">push</span>(<span style="color:#000">x</span> <span style="color:#000">%</span> <span style="color:#1c01ce">10</span> <span style="color:#000">+</span> <span style="color:#2300ce">&#39;0&#39;</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">template</span> <span style="color:#000">&lt;</span><span style="color:#a90d91">typename</span> <span style="color:#000">T</span><span style="color:#000">&gt;</span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">write</span>(<span style="color:#000">T</span> <span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">x</span> <span style="color:#000">&lt;</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">-</span><span style="color:#000">x</span>, <span style="color:#000">push</span>(<span style="color:#2300ce">&#39;-&#39;</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">work_wt</span>(<span style="color:#000">x</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">writestr</span>(<span style="color:#a90d91">const</span> <span style="color:#a90d91">char</span> <span style="color:#000">*</span><span style="color:#000">s</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">n</span> <span style="color:#000">=</span> <span style="color:#000">strlen</span>(<span style="color:#000">s</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">push</span>(<span style="color:#000">s</span>[<span style="color:#000">i</span>]);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">endln</span>() { <span style="color:#000">push</span>(<span style="color:#000">&#39;\\</span><span style="color:#000">n</span><span style="color:#000">&#39;</span>); }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">space</span>() { <span style="color:#000">push</span>(<span style="color:#2300ce">&#39; &#39;</span>); }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">template</span> <span style="color:#000">&lt;</span><span style="color:#a90d91">typename</span> <span style="color:#000">T</span><span style="color:#000">&gt;</span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">writeln</span>(<span style="color:#000">T</span> <span style="color:#000">x</span>) { <span style="color:#000">write</span>(<span style="color:#000">x</span>), <span style="color:#000">endln</span>(); }
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#a90d91">namespace</span> <span style="color:#000">IO</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#000">ll</span> <span style="color:#000">inf</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1e18</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000">ll</span> <span style="color:#000">n</span>, <span style="color:#000">m</span>, <span style="color:#000">p</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000">ll</span> <span style="color:#000">gcd</span>(<span style="color:#000">ll</span> <span style="color:#000">a</span>, <span style="color:#000">ll</span> <span style="color:#000">b</span>) { <span style="color:#a90d91">return</span> <span style="color:#000">b</span> <span style="color:#000">==</span> <span style="color:#1c01ce">0</span> <span style="color:#000">?</span> <span style="color:#000">a</span> : <span style="color:#000">gcd</span>(<span style="color:#000">b</span>, <span style="color:#000">a</span> <span style="color:#000">%</span> <span style="color:#000">b</span>); }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000">ll</span> <span style="color:#000">qpow</span>(<span style="color:#000">ll</span> <span style="color:#000">a</span>, <span style="color:#000">ll</span> <span style="color:#000">x</span>, <span style="color:#000">ll</span> <span style="color:#000">p</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">ll</span> <span style="color:#000">res</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (; <span style="color:#000">x</span>; <span style="color:#000">x</span> <span style="color:#000">&gt;&gt;=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">a</span> <span style="color:#000">=</span> <span style="color:#000">a</span> <span style="color:#000">*</span> <span style="color:#000">a</span> <span style="color:#000">%</span> <span style="color:#000">p</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">x</span> <span style="color:#000">&amp;</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">res</span> <span style="color:#000">=</span> <span style="color:#000">res</span> <span style="color:#000">*</span> <span style="color:#000">a</span> <span style="color:#000">%</span> <span style="color:#000">p</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#000">res</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">bool</span> <span style="color:#000">MR</span>(<span style="color:#000">ll</span> <span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">x</span> <span style="color:#000">&lt;</span> <span style="color:#1c01ce">3</span> <span style="color:#000">||</span> <span style="color:#000">x</span> <span style="color:#000">%</span> <span style="color:#1c01ce">2</span> <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#000">x</span> <span style="color:#000">==</span> <span style="color:#1c01ce">2</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">ll</span> <span style="color:#000">a</span> <span style="color:#000">=</span> <span style="color:#000">x</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">b</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> (<span style="color:#000">a</span> <span style="color:#000">%</span> <span style="color:#1c01ce">2</span> <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">a</span> <span style="color:#000">/=</span> <span style="color:#1c01ce">2</span>, <span style="color:#000">b</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#000">ll</span> <span style="color:#000">times</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>, <span style="color:#000">j</span>; <span style="color:#000">times</span> <span style="color:#000">&lt;</span> <span style="color:#1c01ce">10</span>; <span style="color:#000">times</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">ll</span> <span style="color:#000">c</span> <span style="color:#000">=</span> <span style="color:#000">rand</span>() <span style="color:#000">%</span> (<span style="color:#000">x</span> <span style="color:#000">-</span> <span style="color:#1c01ce">2</span>) <span style="color:#000">+</span> <span style="color:#1c01ce">2</span>, <span style="color:#000">v</span> <span style="color:#000">=</span> <span style="color:#000">qpow</span>(<span style="color:#000">c</span>, <span style="color:#000">a</span>, <span style="color:#000">x</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">v</span> <span style="color:#000">==</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">continue</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;</span> <span style="color:#000">b</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">v</span> <span style="color:#000">==</span> <span style="color:#000">x</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">break</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">v</span> <span style="color:#000">=</span> <span style="color:#000">v</span> <span style="color:#000">*</span> <span style="color:#000">v</span> <span style="color:#000">%</span> <span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">j</span> <span style="color:#000">&gt;=</span> <span style="color:#000">b</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">return</span> <span style="color:#a90d91">false</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#a90d91">true</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000">ll</span> <span style="color:#000">myabs</span>(<span style="color:#000">ll</span> <span style="color:#000">x</span>) { <span style="color:#a90d91">return</span> <span style="color:#000">x</span> <span style="color:#000">&lt;</span> <span style="color:#1c01ce">0</span> <span style="color:#000">?</span> <span style="color:#000">-</span><span style="color:#000">x</span> : <span style="color:#000">x</span>; }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000">ll</span> <span style="color:#000">PR</span>(<span style="color:#000">ll</span> <span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">ll</span> <span style="color:#000">c</span> <span style="color:#000">=</span> <span style="color:#000">rand</span>() <span style="color:#000">%</span> (<span style="color:#000">x</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>) <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">val</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">s</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>, <span style="color:#000">t</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#000">ll</span> <span style="color:#000">lim</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;; <span style="color:#000">lim</span> <span style="color:#000">&lt;&lt;=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">s</span> <span style="color:#000">=</span> <span style="color:#000">t</span>, <span style="color:#000">val</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#000">ll</span> <span style="color:#000">step</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">step</span> <span style="color:#000">&lt;=</span> <span style="color:#000">lim</span>; <span style="color:#000">step</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">t</span> <span style="color:#000">=</span> (<span style="color:#000">t</span> <span style="color:#000">*</span> <span style="color:#000">t</span> <span style="color:#000">+</span> <span style="color:#000">c</span>) <span style="color:#000">%</span> <span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">val</span> <span style="color:#000">=</span> <span style="color:#000">val</span> <span style="color:#000">*</span> <span style="color:#000">myabs</span>(<span style="color:#000">t</span> <span style="color:#000">-</span> <span style="color:#000">s</span>) <span style="color:#000">%</span> <span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">step</span> <span style="color:#000">%</span> <span style="color:#1c01ce">127</span> <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>            {
</span></span><span style="display:flex;"><span>                <span style="color:#000">ll</span> <span style="color:#000">d</span> <span style="color:#000">=</span> <span style="color:#000">gcd</span>(<span style="color:#000">val</span>, <span style="color:#000">x</span>);
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">if</span> (<span style="color:#000">d</span> <span style="color:#000">&gt;</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>                    <span style="color:#a90d91">return</span> <span style="color:#000">d</span>;
</span></span><span style="display:flex;"><span>            }
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#000">ll</span> <span style="color:#000">d</span> <span style="color:#000">=</span> <span style="color:#000">gcd</span>(<span style="color:#000">val</span>, <span style="color:#000">x</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">d</span> <span style="color:#000">&gt;</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">return</span> <span style="color:#000">d</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">out_ans</span>(<span style="color:#a90d91">const</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">vector</span><span style="color:#000">&lt;</span><span style="color:#000">ll</span><span style="color:#000">&gt;</span> <span style="color:#000">&amp;</span><span style="color:#000">ans</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">ans</span>.<span style="color:#000">size</span>() <span style="color:#000">&lt;</span> <span style="color:#000">n</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">writeln</span>(<span style="color:#000">-</span><span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">write</span>(<span style="color:#000">ans</span>[<span style="color:#000">i</span>]), <span style="color:#000">space</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#000">endln</span>();
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">namespace</span> <span style="color:#000">BF</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxm</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1e7</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">bool</span> <span style="color:#000">vis</span>[<span style="color:#000">maxm</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">void</span> <span style="color:#000">solve</span>()
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">ll</span> <span style="color:#000">now</span> <span style="color:#000">=</span> <span style="color:#000">p</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">vis</span>[<span style="color:#1c01ce">1</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">while</span> (<span style="color:#000">!</span><span style="color:#000">vis</span>[<span style="color:#000">now</span>])
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">vis</span>[<span style="color:#000">now</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">now</span> <span style="color:#000">=</span> <span style="color:#000">now</span> <span style="color:#000">*</span> <span style="color:#000">p</span> <span style="color:#000">%</span> <span style="color:#000">m</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">m</span> <span style="color:#000">%</span> <span style="color:#000">i</span> <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>            {
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">*</span> <span style="color:#000">j</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                    <span style="color:#000">vis</span>[<span style="color:#000">i</span> <span style="color:#000">*</span> <span style="color:#000">j</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">break</span>;
</span></span><span style="display:flex;"><span>            }
</span></span><span style="display:flex;"><span>        <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">vector</span><span style="color:#000">&lt;</span><span style="color:#000">ll</span><span style="color:#000">&gt;</span> <span style="color:#000">ans</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">!</span><span style="color:#000">vis</span>[<span style="color:#000">i</span>])
</span></span><span style="display:flex;"><span>                <span style="color:#000">ans</span>.<span style="color:#000">push_back</span>(<span style="color:#000">i</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">out_ans</span>(<span style="color:#000">ans</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">struct</span> <span style="color:#3f6e75">primes</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">ll</span> <span style="color:#000">val</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">times</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">bool</span> <span style="color:#a90d91">operator</span><span style="color:#000">&lt;</span>(<span style="color:#a90d91">const</span> <span style="color:#000">primes</span> <span style="color:#000">&amp;</span><span style="color:#000">b</span>) <span style="color:#a90d91">const</span> { <span style="color:#a90d91">return</span> <span style="color:#000">val</span> <span style="color:#000">&lt;</span> <span style="color:#000">b</span>.<span style="color:#000">val</span>; }
</span></span><span style="display:flex;"><span>};
</span></span><span style="display:flex;"><span><span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">vector</span><span style="color:#000">&lt;</span><span style="color:#000">primes</span><span style="color:#000">&gt;</span> <span style="color:#000">all</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">PF</span>(<span style="color:#000">ll</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">times</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">x</span> <span style="color:#000">==</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">MR</span>(<span style="color:#000">x</span>))
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">all</span>.<span style="color:#000">push_back</span>({<span style="color:#000">x</span>, <span style="color:#000">times</span>});
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">ll</span> <span style="color:#000">g</span> <span style="color:#000">=</span> <span style="color:#000">x</span>, <span style="color:#000">t</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> (<span style="color:#000">g</span> <span style="color:#000">&gt;=</span> <span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">g</span> <span style="color:#000">=</span> <span style="color:#000">PR</span>(<span style="color:#000">g</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> (<span style="color:#000">x</span> <span style="color:#000">%</span> <span style="color:#000">g</span> <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">x</span> <span style="color:#000">/=</span> <span style="color:#000">g</span>, <span style="color:#000">t</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">PF</span>(<span style="color:#000">g</span>, <span style="color:#000">times</span> <span style="color:#000">*</span> <span style="color:#000">t</span>), <span style="color:#000">PF</span>(<span style="color:#000">x</span>, <span style="color:#000">times</span>);
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">find_order</span>(<span style="color:#a90d91">int</span> <span style="color:#000">pos</span>, <span style="color:#000">ll</span> <span style="color:#000">val</span>, <span style="color:#000">ll</span> <span style="color:#000">&amp;</span><span style="color:#000">ans</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">pos</span> <span style="color:#000">==</span> (<span style="color:#a90d91">int</span>)<span style="color:#000">all</span>.<span style="color:#000">size</span>())
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">qpow</span>(<span style="color:#000">p</span>, <span style="color:#000">val</span>, <span style="color:#000">m</span>) <span style="color:#000">==</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">min</span>(<span style="color:#000">ans</span>, <span style="color:#000">val</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">all</span>[<span style="color:#000">pos</span>].<span style="color:#000">times</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">find_order</span>(<span style="color:#000">pos</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">val</span>, <span style="color:#000">ans</span>), <span style="color:#000">val</span> <span style="color:#000">=</span> <span style="color:#000">val</span> <span style="color:#000">*</span> <span style="color:#000">all</span>[<span style="color:#000">pos</span>].<span style="color:#000">val</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">map</span><span style="color:#000">&lt;</span><span style="color:#000">ll</span>, <span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">mp</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">n</span> <span style="color:#000">=</span> <span style="color:#000">read</span>(), <span style="color:#000">m</span> <span style="color:#000">=</span> <span style="color:#000">read</span>(), <span style="color:#000">p</span> <span style="color:#000">=</span> <span style="color:#000">read</span>();
</span></span><span style="display:flex;"><span>    <span style="color:#000">srand</span>(<span style="color:#000">time</span>(<span style="color:#1c01ce">0</span>));
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">m</span> <span style="color:#000">&lt;=</span> <span style="color:#1c01ce">1e7</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">BF</span><span style="color:#000">::</span><span style="color:#000">solve</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">vector</span><span style="color:#000">&lt;</span><span style="color:#000">ll</span><span style="color:#000">&gt;</span> <span style="color:#000">ans</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">PF</span>(<span style="color:#000">m</span>, <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">ll</span> <span style="color:#000">q</span> <span style="color:#000">=</span> <span style="color:#000">all</span>[<span style="color:#1c01ce">0</span>].<span style="color:#000">val</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">p</span> <span style="color:#000">%</span> <span style="color:#000">q</span> <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#000">ll</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">ans</span>.<span style="color:#000">size</span>() <span style="color:#000">&lt;</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">i</span> <span style="color:#000">%</span> <span style="color:#000">q</span> <span style="color:#000">!=</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">ans</span>.<span style="color:#000">push_back</span>(<span style="color:#000">i</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">out_ans</span>(<span style="color:#000">ans</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">all</span>.<span style="color:#000">clear</span>();
</span></span><span style="display:flex;"><span>    <span style="color:#000">ll</span> <span style="color:#000">phi</span> <span style="color:#000">=</span> <span style="color:#000">m</span> <span style="color:#000">-</span> <span style="color:#000">m</span> <span style="color:#000">/</span> <span style="color:#000">q</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">PF</span>(<span style="color:#000">phi</span>, <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">auto</span> <span style="color:#000">k</span> : <span style="color:#000">all</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">mp</span>[<span style="color:#000">k</span>.<span style="color:#000">val</span>] <span style="color:#000">+=</span> <span style="color:#000">k</span>.<span style="color:#000">times</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">all</span>.<span style="color:#000">clear</span>();
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">auto</span> <span style="color:#000">k</span> : <span style="color:#000">mp</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">all</span>.<span style="color:#000">push_back</span>({<span style="color:#000">k</span>.<span style="color:#000">first</span>, <span style="color:#000">k</span>.<span style="color:#000">second</span>});
</span></span><span style="display:flex;"><span>    <span style="color:#000">ll</span> <span style="color:#000">order</span> <span style="color:#000">=</span> <span style="color:#000">inf</span>, <span style="color:#000">g</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">find_order</span>(<span style="color:#1c01ce">0</span>, <span style="color:#1c01ce">1</span>, <span style="color:#000">order</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">phi</span> <span style="color:#000">-</span> <span style="color:#000">order</span> <span style="color:#000">&lt;</span> <span style="color:#000">n</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">writeln</span>(<span style="color:#000">-</span><span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">q</span> <span style="color:#000">==</span> <span style="color:#1c01ce">2</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">p</span> <span style="color:#000">%</span> <span style="color:#1c01ce">4</span> <span style="color:#000">==</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#000">ll</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">3</span>; <span style="color:#000">ans</span>.<span style="color:#000">size</span>() <span style="color:#000">&lt;</span> <span style="color:#000">n</span>; <span style="color:#000">i</span> <span style="color:#000">+=</span> <span style="color:#1c01ce">4</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">ans</span>.<span style="color:#000">push_back</span>(<span style="color:#000">i</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">p</span> <span style="color:#000">=</span> <span style="color:#000">p</span> <span style="color:#000">*</span> <span style="color:#000">p</span> <span style="color:#000">%</span> <span style="color:#000">m</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">g</span> <span style="color:#000">=</span> <span style="color:#1c01ce">5</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#000">ll</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">now</span> <span style="color:#000">=</span> <span style="color:#000">g</span>; <span style="color:#000">ans</span>.<span style="color:#000">size</span>() <span style="color:#000">&lt;</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>, <span style="color:#000">now</span> <span style="color:#000">=</span> <span style="color:#000">now</span> <span style="color:#000">*</span> <span style="color:#000">g</span> <span style="color:#000">%</span> <span style="color:#000">m</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">if</span> (<span style="color:#000">i</span> <span style="color:#000">%</span> (<span style="color:#000">phi</span> <span style="color:#000">/</span> <span style="color:#000">order</span>) <span style="color:#000">!=</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>                    <span style="color:#000">ans</span>.<span style="color:#000">push_back</span>(<span style="color:#000">now</span>);
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#000">ll</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2</span>;; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">bool</span> <span style="color:#000">flag</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;</span> (<span style="color:#a90d91">int</span>)<span style="color:#000">all</span>.<span style="color:#000">size</span>() <span style="color:#000">&amp;&amp;</span> <span style="color:#000">flag</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">flag</span> <span style="color:#000">&amp;=</span> <span style="color:#000">qpow</span>(<span style="color:#000">i</span>, <span style="color:#000">phi</span> <span style="color:#000">/</span> <span style="color:#000">all</span>[<span style="color:#000">j</span>].<span style="color:#000">val</span>, <span style="color:#000">m</span>) <span style="color:#000">!=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">flag</span>)
</span></span><span style="display:flex;"><span>            {
</span></span><span style="display:flex;"><span>                <span style="color:#000">g</span> <span style="color:#000">=</span> <span style="color:#000">i</span>;
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">break</span>;
</span></span><span style="display:flex;"><span>            }
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#000">ll</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">now</span> <span style="color:#000">=</span> <span style="color:#000">g</span>; <span style="color:#000">ans</span>.<span style="color:#000">size</span>() <span style="color:#000">&lt;</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>, <span style="color:#000">now</span> <span style="color:#000">=</span> <span style="color:#000">now</span> <span style="color:#000">*</span> <span style="color:#000">g</span> <span style="color:#000">%</span> <span style="color:#000">m</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">i</span> <span style="color:#000">%</span> (<span style="color:#000">phi</span> <span style="color:#000">/</span> <span style="color:#000">order</span>) <span style="color:#000">!=</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">ans</span>.<span style="color:#000">push_back</span>(<span style="color:#000">now</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">out_ans</span>(<span style="color:#000">ans</span>);
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div>]]></content:encoded>
    </item>
    
    <item>
      <title>Codeforces Round 495 (Div. 2)</title>
      <link>https://luoyisu.github.io/posts/cf-contest1004/</link>
      <pubDate>Tue, 14 Dec 2021 13:38:13 +0000</pubDate>
      
      <guid>https://luoyisu.github.io/posts/cf-contest1004/</guid>
      <description>&lt;p&gt;还行吧，但我实在太菜了，水题都不会做&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>还行吧，但我实在太菜了，水题都不会做</p>
<h2 id="ahttpscodeforcescomcontest1004problema"><a href="https://codeforces.com/contest/1004/problem/A">A</a></h2>
<h3 id="description">Description</h3>
<p>数轴上 $n$ 个点，求离最近的点的距离恰好为 $d$ 的点的数目。</p>
<h3 id="solution">Solution</h3>
<p>扫一遍，我直接用 <code>set</code> 去重（）</p>
<h3 id="code">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;set&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">110</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">a</span>[<span style="color:#000">maxn</span>], <span style="color:#000">n</span>, <span style="color:#000">d</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">d</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">set</span><span style="color:#000">&lt;</span><span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span><span style="color:#000">&gt;</span> <span style="color:#000">S</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">a</span>[<span style="color:#1c01ce">0</span>] <span style="color:#000">=</span> <span style="color:#000">-</span><span style="color:#1c01ce">5e9</span>, <span style="color:#000">a</span>[<span style="color:#000">n</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">5e9</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">nxt</span> <span style="color:#000">=</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>] <span style="color:#000">+</span> <span style="color:#000">d</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">a</span>[<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">-</span> <span style="color:#000">nxt</span> <span style="color:#000">&gt;=</span> <span style="color:#000">d</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">S</span>.<span style="color:#000">insert</span>(<span style="color:#000">nxt</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">nxt</span> <span style="color:#000">=</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>] <span style="color:#000">-</span> <span style="color:#000">d</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">nxt</span> <span style="color:#000">-</span> <span style="color:#000">a</span>[<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">&gt;=</span> <span style="color:#000">d</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">S</span>.<span style="color:#000">insert</span>(<span style="color:#000">nxt</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">S</span>.<span style="color:#000">size</span>() <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="bhttpscodeforcescomcontest1004problemb"><a href="https://codeforces.com/contest/1004/problem/B">B</a></h2>
<h3 id="description-1">Description</h3>
<p>一个长度为 $n$ 的 $01$ 串，给出 $m$ 个区间，每个区间权值是区间里 $1$ 的数目乘 $0$​​ 的数目。输出总权值最大的串。</p>
<h3 id="solution-1">Solution</h3>
<p>和同近积大，直接 $0$ 和 $1$ 交替输出就行。</p>
<h3 id="code-1">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#000">n</span>, <span style="color:#000">m</span> <span style="color:#000">=</span> <span style="color:#a90d91">map</span>(<span style="color:#a90d91">int</span>, <span style="color:#a90d91">input</span>()<span style="color:#000">.</span><span style="color:#000">split</span>())
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">for</span> <span style="color:#000">i</span> <span style="color:#000">in</span> <span style="color:#a90d91">range</span>(<span style="color:#000">n</span>):
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> <span style="color:#000">i</span> <span style="color:#000">%</span> <span style="color:#1c01ce">2</span> <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>:
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">print</span>(<span style="color:#1c01ce">0</span>, <span style="color:#000">end</span><span style="color:#000">=</span><span style="color:#c41a16">&#39;&#39;</span>)
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">else</span>:
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">print</span>(<span style="color:#1c01ce">1</span>, <span style="color:#000">end</span><span style="color:#000">=</span><span style="color:#c41a16">&#39;&#39;</span>)
</span></span></code></pre></div><h2 id="chttpscodeforcescomcontest1004problemc"><a href="https://codeforces.com/contest/1004/problem/C">C</a></h2>
<h3 id="description-2">Description</h3>
<p>给你 $n$ 个数，从每一个数起向后找一个数，这两个数组成一个数对，求一共有多少个数对。（去掉重复的）</p>
<h3 id="solution-2">Solution</h3>
<p>一个数最优答案肯定在最左面，我们开个桶然后倒着更新答案即可。</p>
<h3 id="code-2">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;set&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1e5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">a</span>[<span style="color:#000">maxn</span>], <span style="color:#000">n</span>, <span style="color:#000">b</span>[<span style="color:#000">maxn</span>], <span style="color:#000">ans</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">sum</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span> <span style="color:#000">&gt;=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">ans</span>[<span style="color:#000">a</span>[<span style="color:#000">i</span>]] <span style="color:#000">=</span> <span style="color:#000">sum</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">sum</span> <span style="color:#000">-=</span> <span style="color:#000">b</span>[<span style="color:#000">a</span>[<span style="color:#000">i</span>]];
</span></span><span style="display:flex;"><span>        <span style="color:#000">b</span>[<span style="color:#000">a</span>[<span style="color:#000">i</span>]] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">sum</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">res</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#1c01ce">1e5</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">res</span> <span style="color:#000">+=</span> <span style="color:#000">ans</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">res</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;    
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="dhttpscodeforcescomcontest1004problemd"><a href="https://codeforces.com/contest/1004/problem/D">D</a></h2>
<h3 id="description-3">Description</h3>
<p>定义一种矩阵是菱形矩阵，其大小是 $n\times m$；满足以下条件：有且只有一个格子的值是 $0$，其他格子的值是到值为 $0$ 的格子的曼哈顿距离。</p>
<p>给出 $t$​ 个数，问这些数能不能构造出一个菱形矩阵。如果可以，输出其 $n,m$​，以及值为 $0$​​​ 的格子的坐标。</p>
<p>$t\leq10^6$。</p>
<h3 id="solution-3">Solution</h3>
<p>首先发现矩阵是可以旋转的，这肯定不影响。</p>
<p>如果矩阵无限大，那每个数的数量是 $4\times n$。</p>
<p>手玩一下样例可以发现第一个不符合上面要求的数（即出到矩阵外了）一定是值为 $0$​ 的数的横坐标或纵坐标。</p>
<p>这样我们就确定了 $x$。</p>
<p>证明不写了，懒，挺显然的。</p>
<p>我们可以枚举 $n$​，同时也就确定了 $m$​。想一想怎么确定 $y$​——找找奇怪的性质。</p>
<p>发现最大的数一定在一个角上，那随便算一下就知道 $y=n+m-mx$​，$mx$ 是给出的最大的数。</p>
<p>发现我们现在时间复杂度还很充裕，且已经知道了 $x,y,n,m$，只需要 check 一下，那怎么 check 呢？当然是暴力了！（）（）（）</p>
<p>时间复杂度 $O(t)$ 乘上 $t$ 的因数个数，这玩意显然能过。（因为很难跑满）</p>
<h3 id="code-3">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;set&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cmath&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1e6</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">cnt</span>[<span style="color:#000">maxn</span>], <span style="color:#000">n</span>, <span style="color:#000">t</span>, <span style="color:#000">m</span>, <span style="color:#000">x</span>, <span style="color:#000">y</span>, <span style="color:#000">mx</span>, <span style="color:#000">tot</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">bool</span> <span style="color:#000">check</span>(<span style="color:#a90d91">int</span> <span style="color:#000">n</span>, <span style="color:#a90d91">int</span> <span style="color:#000">m</span>, <span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">mx</span> <span style="color:#000">+</span> <span style="color:#1c01ce">5</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">tot</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">tot</span>[<span style="color:#000">abs</span>(<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#000">x</span>) <span style="color:#000">+</span> <span style="color:#000">abs</span>(<span style="color:#000">j</span> <span style="color:#000">-</span> <span style="color:#000">y</span>)]<span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">mx</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">cnt</span>[<span style="color:#000">i</span>] <span style="color:#000">!=</span> <span style="color:#000">tot</span>[<span style="color:#000">i</span>])
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">return</span> <span style="color:#a90d91">false</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#a90d91">true</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">ios</span><span style="color:#000">::</span><span style="color:#000">sync_with_stdio</span>(<span style="color:#a90d91">false</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">t</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>, <span style="color:#000">p</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">t</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">p</span>, <span style="color:#000">cnt</span>[<span style="color:#000">p</span>]<span style="color:#000">++</span>, <span style="color:#000">mx</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">max</span>(<span style="color:#000">mx</span>, <span style="color:#000">p</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">cnt</span>[<span style="color:#1c01ce">0</span>] <span style="color:#000">!=</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">t</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">cnt</span>[<span style="color:#000">i</span>] <span style="color:#000">!=</span> <span style="color:#000">i</span> <span style="color:#000">*</span> <span style="color:#1c01ce">4</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">i</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">break</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#000">n</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">n</span> <span style="color:#000">&lt;=</span> <span style="color:#000">t</span>; <span style="color:#000">n</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">t</span> <span style="color:#000">%</span> <span style="color:#000">n</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">continue</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">m</span> <span style="color:#000">=</span> <span style="color:#000">t</span> <span style="color:#000">/</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">y</span> <span style="color:#000">=</span> <span style="color:#000">m</span> <span style="color:#000">+</span> <span style="color:#000">n</span> <span style="color:#000">-</span> <span style="color:#000">x</span> <span style="color:#000">-</span> <span style="color:#000">mx</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">y</span> <span style="color:#000">&gt;</span> <span style="color:#1c01ce">0</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">check</span>(<span style="color:#000">n</span>, <span style="color:#000">m</span>, <span style="color:#000">x</span>, <span style="color:#000">y</span>))
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">n</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">m</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">x</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">y</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">return</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="ehttpscodeforcescomcontest1004probleme"><a href="https://codeforces.com/contest/1004/problem/E">E</a></h2>
<h3 id="description-4">Description</h3>
<p>给出一个 $n$ 个结点的带权树和 $k$，找出一条点数不大于 $k$​​ 的路径，使得路径外的点到路径的距离的最大值最小。求这个最小的最大值。$n\leq10^5$。</p>
<h3 id="solution-4">Solution</h3>
<p>和树网的核一样。甚至更简单</p>
<p>树上路径、最小、最大，去想一想直径。</p>
<p>能证明这条路径一定在任意一条直径上。</p>
<p>于是对于一条路径分两种情况。到路径距离最大的点可能是直径的两个段点之一，也可能在路径上某个点的子树内。</p>
<p>对前者直接双指针即可，后者搜一遍就行。</p>
<p>时间复杂度 $O(n)$​。</p>
<h3 id="code-4">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1e5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">struct</span> <span style="color:#3f6e75">edge</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">y</span>, <span style="color:#000">w</span>;
</span></span><span style="display:flex;"><span>};
</span></span><span style="display:flex;"><span><span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">vector</span><span style="color:#000">&lt;</span><span style="color:#000">edge</span><span style="color:#000">&gt;</span> <span style="color:#000">e</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">add</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>, <span style="color:#a90d91">int</span> <span style="color:#000">w</span>) { <span style="color:#000">e</span>[<span style="color:#000">x</span>].<span style="color:#000">push_back</span>({<span style="color:#000">y</span>, <span style="color:#000">w</span>}), <span style="color:#000">e</span>[<span style="color:#000">y</span>].<span style="color:#000">push_back</span>({<span style="color:#000">x</span>, <span style="color:#000">w</span>}); }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">n</span>, <span style="color:#000">k</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">dis</span>[<span style="color:#000">maxn</span>], <span style="color:#000">father</span>[<span style="color:#000">maxn</span>], <span style="color:#000">ind</span>[<span style="color:#000">maxn</span>], <span style="color:#000">dep</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">dfs</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">fa</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">father</span>[<span style="color:#000">x</span>] <span style="color:#000">=</span> <span style="color:#000">fa</span>, <span style="color:#000">dep</span>[<span style="color:#000">x</span>] <span style="color:#000">=</span> <span style="color:#000">dep</span>[<span style="color:#000">fa</span>] <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">auto</span> <span style="color:#000">k</span> : <span style="color:#000">e</span>[<span style="color:#000">x</span>])
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">k</span>.<span style="color:#000">y</span> <span style="color:#000">==</span> <span style="color:#000">fa</span> <span style="color:#000">||</span> <span style="color:#000">ind</span>[<span style="color:#000">k</span>.<span style="color:#000">y</span>])
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">continue</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">v</span> <span style="color:#000">=</span> <span style="color:#000">k</span>.<span style="color:#000">y</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">dis</span>[<span style="color:#000">v</span>] <span style="color:#000">=</span> <span style="color:#000">dis</span>[<span style="color:#000">x</span>] <span style="color:#000">+</span> <span style="color:#000">k</span>.<span style="color:#000">w</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">dfs</span>(<span style="color:#000">v</span>, <span style="color:#000">x</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">find_root</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">res</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">dis</span>[<span style="color:#000">i</span>] <span style="color:#000">&gt;</span> <span style="color:#000">dis</span>[<span style="color:#000">res</span>])
</span></span><span style="display:flex;"><span>            <span style="color:#000">res</span> <span style="color:#000">=</span> <span style="color:#000">i</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#000">res</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">ios</span><span style="color:#000">::</span><span style="color:#000">sync_with_stdio</span>(<span style="color:#a90d91">false</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">k</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">x</span>, <span style="color:#000">w</span>, <span style="color:#000">y</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">x</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">y</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">w</span>, <span style="color:#000">add</span>(<span style="color:#000">x</span>, <span style="color:#000">y</span>, <span style="color:#000">w</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">dfs</span>(<span style="color:#1c01ce">1</span>, <span style="color:#1c01ce">0</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">root</span> <span style="color:#000">=</span> <span style="color:#000">find_root</span>();
</span></span><span style="display:flex;"><span>    <span style="color:#000">dis</span>[<span style="color:#000">root</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;  
</span></span><span style="display:flex;"><span>    <span style="color:#000">dfs</span>(<span style="color:#000">root</span>, <span style="color:#1c01ce">0</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">root</span> <span style="color:#000">=</span> <span style="color:#000">find_root</span>();
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">30</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">n</span> <span style="color:#000">==</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">puts</span>(<span style="color:#c41a16">&#34;0&#34;</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#000">root</span>, <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#000">root</span>; <span style="color:#000">i</span>; <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#000">father</span>[<span style="color:#000">i</span>])
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">while</span> (<span style="color:#000">father</span>[<span style="color:#000">j</span>] <span style="color:#000">&amp;&amp;</span> <span style="color:#000">dep</span>[<span style="color:#000">i</span>] <span style="color:#000">-</span> <span style="color:#000">dep</span>[<span style="color:#000">j</span>] <span style="color:#000">&lt;</span> <span style="color:#000">k</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#000">father</span>[<span style="color:#000">j</span>];
</span></span><span style="display:flex;"><span>        <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">min</span>(<span style="color:#000">ans</span>, <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">max</span>(<span style="color:#000">dis</span>[<span style="color:#000">j</span>], <span style="color:#000">dis</span>[<span style="color:#000">root</span>] <span style="color:#000">-</span> <span style="color:#000">dis</span>[<span style="color:#000">i</span>]));
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">p</span> <span style="color:#000">=</span> <span style="color:#000">root</span>; <span style="color:#000">p</span>; <span style="color:#000">p</span> <span style="color:#000">=</span> <span style="color:#000">father</span>[<span style="color:#000">p</span>])
</span></span><span style="display:flex;"><span>        <span style="color:#000">ind</span>[<span style="color:#000">p</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">dis</span>[<span style="color:#000">p</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">p</span> <span style="color:#000">=</span> <span style="color:#000">root</span>; <span style="color:#000">p</span>; <span style="color:#000">p</span> <span style="color:#000">=</span> <span style="color:#000">father</span>[<span style="color:#000">p</span>])
</span></span><span style="display:flex;"><span>        <span style="color:#000">dfs</span>(<span style="color:#000">p</span>, <span style="color:#000">father</span>[<span style="color:#000">p</span>]);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">max</span>(<span style="color:#000">ans</span>, <span style="color:#000">dis</span>[<span style="color:#000">i</span>]);
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">ans</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="fhttpscodeforcescomcontest1004problemf"><a href="https://codeforces.com/contest/1004/problem/F">F</a></h2>
<h3 id="description-5">Description</h3>
<p>有一个长度为 $n$​ 的序列，有两种操作。</p>
<ul>
<li>
<p>操作一：将 $a_i$ 修改为 $y$；</p>
</li>
<li>
<p>操作二：给出 $l,r$，求 $[l,r]$ 内有几个子区间内所有数按位或起来的结果大于等于 $X$（$X$ 在题目一开始给出，为定值）。</p>
</li>
</ul>
<p>$n,m\leq10^5$。</p>
<h3 id="solution-5">Solution</h3>
<p>难，我看了题解。</p>
<p>先考虑如果只有一次询问怎么办。</p>
<p>能（能吗？）想到一个分治算法：把 $[l,r]$ 的询问拆成 $[l,mid],[mid+1,r]$，求出解，然后合并这两个区间。</p>
<p>具体怎么得出大区间的解呢？我们联想区间最长连续子段和的做法，求出每个区间的前缀或和后缀或。</p>
<p>这样我们可以用双指针得到两个区间合并后的解。</p>
<p>单点修改，区间查询，显然我们需要线段树来维护这个东西。</p>
<p>那怎么把上面这个做法推广到线段树上呢？好像直接做不太行，我们显然需要看一看或运算的性质。</p>
<p>一个数或另一个数之后最少只变了 $1$​ 位，且不会变回去，也就是说每个区间前缀/后缀或应该是分成至多 $\log a_i$​ 段的，我们用 <code>vector</code> 维护这个值，就能做到 $O(\log a_i)$​ 合并了。</p>
<p>那我们用线段树维护，把得到的这 $\log n$​ 个区间依次合并起来就行。</p>
<p>这时候发现时间复杂度是 $O(m\log n\log a_i)$。</p>
<p>后来我双指针写挂了，一怒之下把双指针换成了暴力合并，复杂度是 $O(m\log n\log^2a_i)$​，也能轻松通过。​</p>
<p>注意位运算的优先级。</p>
<h3 id="code-5">Code</h3>
<p>建议把所有函数规划好再写，然后想一些简单的方法来简化代码。</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cerr</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">namespace</span> <span style="color:#000">IO</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">mxsiz</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">20</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">char</span> <span style="color:#000">inbuf</span>[<span style="color:#000">mxsiz</span>], <span style="color:#000">*</span><span style="color:#000">p1</span>, <span style="color:#000">*</span><span style="color:#000">p2</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">char</span> <span style="color:#000">outbuf</span>[<span style="color:#000">mxsiz</span>], <span style="color:#000">*</span><span style="color:#000">op</span> <span style="color:#000">=</span> <span style="color:#000">outbuf</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">struct</span> <span style="color:#3f6e75">endio</span>
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">endio</span>(){};
</span></span><span style="display:flex;"><span>        <span style="color:#000">~</span><span style="color:#000">endio</span>() { <span style="color:#000">fwrite</span>(<span style="color:#000">outbuf</span>, <span style="color:#1c01ce">1</span>, <span style="color:#000">op</span> <span style="color:#000">-</span> <span style="color:#000">outbuf</span>, <span style="color:#000">stdout</span>); }
</span></span><span style="display:flex;"><span>    } <span style="color:#000">useless_var</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">char</span> <span style="color:#000">gc</span>() { <span style="color:#a90d91">return</span> <span style="color:#000">p1</span> <span style="color:#000">==</span> <span style="color:#000">p2</span> <span style="color:#000">&amp;&amp;</span> (<span style="color:#000">p2</span> <span style="color:#000">=</span> (<span style="color:#000">p1</span> <span style="color:#000">=</span> <span style="color:#000">inbuf</span>) <span style="color:#000">+</span> <span style="color:#000">fread</span>(<span style="color:#000">inbuf</span>, <span style="color:#1c01ce">1</span>, <span style="color:#000">mxsiz</span>, <span style="color:#000">stdin</span>), <span style="color:#000">p1</span> <span style="color:#000">==</span> <span style="color:#000">p2</span>) <span style="color:#000">?</span> <span style="color:#000">EOF</span> : <span style="color:#000">*</span><span style="color:#000">p1</span><span style="color:#000">++</span>; }
</span></span><span style="display:flex;"><span><span style="color:#633820">#define isdigit(x) (x &gt;= &#39;0&#39; &amp;&amp; x &lt;= &#39;9&#39;) </span><span style="color:#177500">// 防止忘记打 &lt;cctype&gt; 头文件
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">int</span> <span style="color:#000">read</span>()
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>, <span style="color:#000">f</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">char</span> <span style="color:#000">ch</span> <span style="color:#000">=</span> <span style="color:#000">gc</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (; <span style="color:#000">!</span><span style="color:#000">isdigit</span>(<span style="color:#000">ch</span>); <span style="color:#000">ch</span> <span style="color:#000">=</span> <span style="color:#000">gc</span>())
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">ch</span> <span style="color:#000">==</span> <span style="color:#2300ce">&#39;-&#39;</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">f</span> <span style="color:#000">=</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (; <span style="color:#000">isdigit</span>(<span style="color:#000">ch</span>); <span style="color:#000">ch</span> <span style="color:#000">=</span> <span style="color:#000">gc</span>())
</span></span><span style="display:flex;"><span>            <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">x</span> <span style="color:#000">*</span> <span style="color:#1c01ce">10</span> <span style="color:#000">+</span> <span style="color:#000">ch</span> <span style="color:#000">-</span> <span style="color:#2300ce">&#39;0&#39;</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#000">x</span> <span style="color:#000">*</span> <span style="color:#000">f</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">template</span> <span style="color:#000">&lt;</span><span style="color:#a90d91">typename</span> <span style="color:#000">T</span><span style="color:#000">&gt;</span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">read</span>(<span style="color:#000">T</span> <span style="color:#000">&amp;</span><span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">f</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">char</span> <span style="color:#000">ch</span> <span style="color:#000">=</span> <span style="color:#000">gc</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (; <span style="color:#000">!</span><span style="color:#000">isdigit</span>(<span style="color:#000">ch</span>); <span style="color:#000">ch</span> <span style="color:#000">=</span> <span style="color:#000">gc</span>())
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">ch</span> <span style="color:#000">==</span> <span style="color:#2300ce">&#39;-&#39;</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">f</span> <span style="color:#000">=</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (; <span style="color:#000">isdigit</span>(<span style="color:#000">ch</span>); <span style="color:#000">ch</span> <span style="color:#000">=</span> <span style="color:#000">gc</span>())
</span></span><span style="display:flex;"><span>            <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">x</span> <span style="color:#000">*</span> <span style="color:#1c01ce">10</span> <span style="color:#000">+</span> <span style="color:#000">ch</span> <span style="color:#000">-</span> <span style="color:#2300ce">&#39;0&#39;</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">x</span> <span style="color:#000">*=</span> <span style="color:#000">f</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span><span style="color:#633820">#undef isdigit
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">bool</span> <span style="color:#000">ischar</span>(<span style="color:#a90d91">char</span> <span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#000">x</span> <span style="color:#000">&gt;=</span> <span style="color:#2300ce">&#39;A&#39;</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">x</span> <span style="color:#000">&lt;=</span> <span style="color:#2300ce">&#39;z&#39;</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">char</span> <span style="color:#000">readchar</span>()
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">char</span> <span style="color:#000">ch</span> <span style="color:#000">=</span> <span style="color:#000">gc</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">while</span> (<span style="color:#000">!</span><span style="color:#000">ischar</span>(<span style="color:#000">ch</span>))
</span></span><span style="display:flex;"><span>            <span style="color:#000">ch</span> <span style="color:#000">=</span> <span style="color:#000">gc</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#000">ch</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">push</span>(<span style="color:#a90d91">char</span> <span style="color:#000">ch</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">op</span> <span style="color:#000">-</span> <span style="color:#000">outbuf</span> <span style="color:#000">==</span> <span style="color:#000">mxsiz</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">fwrite</span>(<span style="color:#000">outbuf</span>, <span style="color:#1c01ce">1</span>, <span style="color:#000">mxsiz</span>, <span style="color:#000">stdout</span>), <span style="color:#000">op</span> <span style="color:#000">=</span> <span style="color:#000">outbuf</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">*</span><span style="color:#000">op</span><span style="color:#000">++</span> <span style="color:#000">=</span> <span style="color:#000">ch</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">template</span> <span style="color:#000">&lt;</span><span style="color:#a90d91">typename</span> <span style="color:#000">T</span><span style="color:#000">&gt;</span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">work_wt</span>(<span style="color:#000">T</span> <span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">x</span> <span style="color:#000">&gt;</span> <span style="color:#1c01ce">9</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">work_wt</span>(<span style="color:#000">x</span> <span style="color:#000">/</span> <span style="color:#1c01ce">10</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">push</span>(<span style="color:#000">x</span> <span style="color:#000">%</span> <span style="color:#1c01ce">10</span> <span style="color:#000">+</span> <span style="color:#2300ce">&#39;0&#39;</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">template</span> <span style="color:#000">&lt;</span><span style="color:#a90d91">typename</span> <span style="color:#000">T</span><span style="color:#000">&gt;</span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">write</span>(<span style="color:#000">T</span> <span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">x</span> <span style="color:#000">&lt;</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">-</span><span style="color:#000">x</span>, <span style="color:#000">push</span>(<span style="color:#2300ce">&#39;-&#39;</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">work_wt</span>(<span style="color:#000">x</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">writestr</span>(<span style="color:#a90d91">char</span> <span style="color:#000">*</span><span style="color:#000">s</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">n</span> <span style="color:#000">=</span> <span style="color:#000">strlen</span>(<span style="color:#000">s</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">push</span>(<span style="color:#000">s</span>[<span style="color:#000">i</span>]);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">endln</span>() { <span style="color:#000">push</span>(<span style="color:#000">&#39;\\</span><span style="color:#000">n</span><span style="color:#000">&#39;</span>); }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">space</span>() { <span style="color:#000">push</span>(<span style="color:#2300ce">&#39; &#39;</span>); }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">template</span> <span style="color:#000">&lt;</span><span style="color:#a90d91">typename</span> <span style="color:#000">T</span><span style="color:#000">&gt;</span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">writeln</span>(<span style="color:#000">T</span> <span style="color:#000">x</span>) { <span style="color:#000">write</span>(<span style="color:#000">x</span>), <span style="color:#000">endln</span>(); }
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#a90d91">namespace</span> <span style="color:#000">IO</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1e5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">typedef</span> <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">ll</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">n</span>, <span style="color:#000">X</span>, <span style="color:#000">m</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">a</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">struct</span> <span style="color:#3f6e75">seg</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">val</span>, <span style="color:#000">len</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">void</span> <span style="color:#000">p</span>() { <span style="color:#000">write</span>(<span style="color:#000">val</span>), <span style="color:#000">space</span>(), <span style="color:#000">write</span>(<span style="color:#000">len</span>), <span style="color:#000">space</span>(), <span style="color:#000">endln</span>(); }
</span></span><span style="display:flex;"><span>};
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">struct</span> <span style="color:#3f6e75">node</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">vector</span><span style="color:#000">&lt;</span><span style="color:#000">seg</span><span style="color:#000">&gt;</span> <span style="color:#000">l</span>, <span style="color:#000">r</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">ll</span> <span style="color:#000">ans</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">void</span> <span style="color:#000">p</span>()
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">writestr</span>(<span style="color:#c41a16">&#34;l :</span><span style="color:#c41a16">\\</span><span style="color:#c41a16">n&#34;</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">auto</span> <span style="color:#000">k</span> : <span style="color:#000">l</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">k</span>.<span style="color:#000">p</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#000">writestr</span>(<span style="color:#c41a16">&#34;r :</span><span style="color:#c41a16">\\</span><span style="color:#c41a16">n&#34;</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">auto</span> <span style="color:#000">k</span> : <span style="color:#000">r</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">k</span>.<span style="color:#000">p</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#000">writeln</span>(<span style="color:#000">ans</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>} <span style="color:#000">t</span>[<span style="color:#000">maxn</span> <span style="color:#000">*</span> <span style="color:#1c01ce">4</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">int</span> <span style="color:#000">ls</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>) { <span style="color:#a90d91">return</span> <span style="color:#000">x</span> <span style="color:#000">*</span> <span style="color:#1c01ce">2</span>; }
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">int</span> <span style="color:#000">rs</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>) { <span style="color:#a90d91">return</span> <span style="color:#000">x</span> <span style="color:#000">*</span> <span style="color:#1c01ce">2</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>; }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000">node</span> <span style="color:#000">merge</span>(<span style="color:#a90d91">const</span> <span style="color:#000">node</span> <span style="color:#000">&amp;</span><span style="color:#000">ls</span>, <span style="color:#a90d91">const</span> <span style="color:#000">node</span> <span style="color:#000">&amp;</span><span style="color:#000">rs</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">node</span> <span style="color:#000">k</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">k</span>.<span style="color:#000">l</span> <span style="color:#000">=</span> <span style="color:#000">ls</span>.<span style="color:#000">l</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">auto</span> <span style="color:#000">p</span> : <span style="color:#000">rs</span>.<span style="color:#000">l</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> ((<span style="color:#000">k</span>.<span style="color:#000">l</span>.<span style="color:#000">back</span>().<span style="color:#000">val</span> <span style="color:#000">|</span> <span style="color:#000">p</span>.<span style="color:#000">val</span>) <span style="color:#000">==</span> <span style="color:#000">k</span>.<span style="color:#000">l</span>.<span style="color:#000">back</span>().<span style="color:#000">val</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">k</span>.<span style="color:#000">l</span>.<span style="color:#000">back</span>().<span style="color:#000">len</span> <span style="color:#000">+=</span> <span style="color:#000">p</span>.<span style="color:#000">len</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>            <span style="color:#000">k</span>.<span style="color:#000">l</span>.<span style="color:#000">push_back</span>({<span style="color:#000">k</span>.<span style="color:#000">l</span>.<span style="color:#000">back</span>().<span style="color:#000">val</span> <span style="color:#000">|</span> <span style="color:#000">p</span>.<span style="color:#000">val</span>, <span style="color:#000">p</span>.<span style="color:#000">len</span>});
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">k</span>.<span style="color:#000">r</span> <span style="color:#000">=</span> <span style="color:#000">rs</span>.<span style="color:#000">r</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">auto</span> <span style="color:#000">p</span> : <span style="color:#000">ls</span>.<span style="color:#000">r</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> ((<span style="color:#000">k</span>.<span style="color:#000">r</span>.<span style="color:#000">back</span>().<span style="color:#000">val</span> <span style="color:#000">|</span> <span style="color:#000">p</span>.<span style="color:#000">val</span>) <span style="color:#000">==</span> <span style="color:#000">k</span>.<span style="color:#000">r</span>.<span style="color:#000">back</span>().<span style="color:#000">val</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">k</span>.<span style="color:#000">r</span>.<span style="color:#000">back</span>().<span style="color:#000">len</span> <span style="color:#000">+=</span> <span style="color:#000">p</span>.<span style="color:#000">len</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>            <span style="color:#000">k</span>.<span style="color:#000">r</span>.<span style="color:#000">push_back</span>({<span style="color:#000">k</span>.<span style="color:#000">r</span>.<span style="color:#000">back</span>().<span style="color:#000">val</span> <span style="color:#000">|</span> <span style="color:#000">p</span>.<span style="color:#000">val</span>, <span style="color:#000">p</span>.<span style="color:#000">len</span>});
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">k</span>.<span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#000">ls</span>.<span style="color:#000">ans</span> <span style="color:#000">+</span> <span style="color:#000">rs</span>.<span style="color:#000">ans</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#177500">// 原先的双指针
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>    <span style="color:#177500">/*
</span></span></span><span style="display:flex;"><span><span style="color:#177500">    for (int i = 0, j = (int)rs.l.size() - 1; i &lt; (int)ls.r.size(); i++)
</span></span></span><span style="display:flex;"><span><span style="color:#177500">    {
</span></span></span><span style="display:flex;"><span><span style="color:#177500">        while (j &amp;&amp; ls.r[i].val | rs.l[j].val &gt;= X)
</span></span></span><span style="display:flex;"><span><span style="color:#177500">            j--;
</span></span></span><span style="display:flex;"><span><span style="color:#177500">        if (j &gt;= 0)
</span></span></span><span style="display:flex;"><span><span style="color:#177500">            k.ans += rs.l[j].sum * ls.r[i].len;
</span></span></span><span style="display:flex;"><span><span style="color:#177500">    } */</span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">auto</span> <span style="color:#000">i</span> : <span style="color:#000">ls</span>.<span style="color:#000">r</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">auto</span> <span style="color:#000">j</span> : <span style="color:#000">rs</span>.<span style="color:#000">l</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> ((<span style="color:#000">i</span>.<span style="color:#000">val</span> <span style="color:#000">|</span> <span style="color:#000">j</span>.<span style="color:#000">val</span>) <span style="color:#000">&gt;=</span> <span style="color:#000">X</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">k</span>.<span style="color:#000">ans</span> <span style="color:#000">+=</span> (<span style="color:#000">ll</span>)<span style="color:#000">i</span>.<span style="color:#000">len</span> <span style="color:#000">*</span> <span style="color:#000">j</span>.<span style="color:#000">len</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#000">k</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">modify</span>(<span style="color:#a90d91">int</span> <span style="color:#000">l</span>, <span style="color:#a90d91">int</span> <span style="color:#000">r</span>, <span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">v</span>, <span style="color:#a90d91">int</span> <span style="color:#000">k</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">l</span> <span style="color:#000">==</span> <span style="color:#000">r</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">t</span>[<span style="color:#000">k</span>].<span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#000">v</span> <span style="color:#000">&gt;=</span> <span style="color:#000">X</span>, <span style="color:#000">t</span>[<span style="color:#000">k</span>].<span style="color:#000">l</span>.<span style="color:#000">clear</span>(), <span style="color:#000">t</span>[<span style="color:#000">k</span>].<span style="color:#000">r</span>.<span style="color:#000">clear</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#000">t</span>[<span style="color:#000">k</span>].<span style="color:#000">l</span>.<span style="color:#000">push_back</span>({<span style="color:#000">v</span>, <span style="color:#1c01ce">1</span>}), <span style="color:#000">t</span>[<span style="color:#000">k</span>].<span style="color:#000">r</span>.<span style="color:#000">push_back</span>({<span style="color:#000">v</span>, <span style="color:#1c01ce">1</span>});
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">mid</span> <span style="color:#000">=</span> (<span style="color:#000">l</span> <span style="color:#000">+</span> <span style="color:#000">r</span>) <span style="color:#000">/</span> <span style="color:#1c01ce">2</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">x</span> <span style="color:#000">&lt;=</span> <span style="color:#000">mid</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">modify</span>(<span style="color:#000">l</span>, <span style="color:#000">mid</span>, <span style="color:#000">x</span>, <span style="color:#000">v</span>, <span style="color:#000">ls</span>(<span style="color:#000">k</span>));
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>        <span style="color:#000">modify</span>(<span style="color:#000">mid</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">r</span>, <span style="color:#000">x</span>, <span style="color:#000">v</span>, <span style="color:#000">rs</span>(<span style="color:#000">k</span>));
</span></span><span style="display:flex;"><span>    <span style="color:#000">t</span>[<span style="color:#000">k</span>] <span style="color:#000">=</span> <span style="color:#000">merge</span>(<span style="color:#000">t</span>[<span style="color:#000">ls</span>(<span style="color:#000">k</span>)], <span style="color:#000">t</span>[<span style="color:#000">rs</span>(<span style="color:#000">k</span>)]);
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000">node</span> <span style="color:#000">query</span>(<span style="color:#a90d91">int</span> <span style="color:#000">l</span>, <span style="color:#a90d91">int</span> <span style="color:#000">r</span>, <span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>, <span style="color:#a90d91">int</span> <span style="color:#000">k</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">l</span> <span style="color:#000">==</span> <span style="color:#000">x</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">r</span> <span style="color:#000">==</span> <span style="color:#000">y</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#000">t</span>[<span style="color:#000">k</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">mid</span> <span style="color:#000">=</span> (<span style="color:#000">l</span> <span style="color:#000">+</span> <span style="color:#000">r</span>) <span style="color:#000">/</span> <span style="color:#1c01ce">2</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">y</span> <span style="color:#000">&lt;=</span> <span style="color:#000">mid</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#000">query</span>(<span style="color:#000">l</span>, <span style="color:#000">mid</span>, <span style="color:#000">x</span>, <span style="color:#000">y</span>, <span style="color:#000">ls</span>(<span style="color:#000">k</span>));
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">x</span> <span style="color:#000">&gt;</span> <span style="color:#000">mid</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#000">query</span>(<span style="color:#000">mid</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">r</span>, <span style="color:#000">x</span>, <span style="color:#000">y</span>, <span style="color:#000">rs</span>(<span style="color:#000">k</span>));
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#000">merge</span>(<span style="color:#000">query</span>(<span style="color:#000">l</span>, <span style="color:#000">mid</span>, <span style="color:#000">x</span>, <span style="color:#000">mid</span>, <span style="color:#000">ls</span>(<span style="color:#000">k</span>)), <span style="color:#000">query</span>(<span style="color:#000">mid</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">r</span>, <span style="color:#000">mid</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">y</span>, <span style="color:#000">rs</span>(<span style="color:#000">k</span>)));
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">build</span>(<span style="color:#a90d91">int</span> <span style="color:#000">l</span>, <span style="color:#a90d91">int</span> <span style="color:#000">r</span>, <span style="color:#a90d91">int</span> <span style="color:#000">k</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">l</span> <span style="color:#000">==</span> <span style="color:#000">r</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">t</span>[<span style="color:#000">k</span>].<span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#000">a</span>[<span style="color:#000">l</span>] <span style="color:#000">&gt;=</span> <span style="color:#000">X</span>, <span style="color:#000">t</span>[<span style="color:#000">k</span>].<span style="color:#000">l</span>.<span style="color:#000">clear</span>(), <span style="color:#000">t</span>[<span style="color:#000">k</span>].<span style="color:#000">r</span>.<span style="color:#000">clear</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#000">t</span>[<span style="color:#000">k</span>].<span style="color:#000">l</span>.<span style="color:#000">push_back</span>({<span style="color:#000">a</span>[<span style="color:#000">l</span>], <span style="color:#1c01ce">1</span>}), <span style="color:#000">t</span>[<span style="color:#000">k</span>].<span style="color:#000">r</span>.<span style="color:#000">push_back</span>({<span style="color:#000">a</span>[<span style="color:#000">l</span>], <span style="color:#1c01ce">1</span>});
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">mid</span> <span style="color:#000">=</span> (<span style="color:#000">l</span> <span style="color:#000">+</span> <span style="color:#000">r</span>) <span style="color:#000">/</span> <span style="color:#1c01ce">2</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">build</span>(<span style="color:#000">l</span>, <span style="color:#000">mid</span>, <span style="color:#000">ls</span>(<span style="color:#000">k</span>));
</span></span><span style="display:flex;"><span>    <span style="color:#000">build</span>(<span style="color:#000">mid</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">r</span>, <span style="color:#000">rs</span>(<span style="color:#000">k</span>));
</span></span><span style="display:flex;"><span>    <span style="color:#000">t</span>[<span style="color:#000">k</span>] <span style="color:#000">=</span> <span style="color:#000">merge</span>(<span style="color:#000">t</span>[<span style="color:#000">ls</span>(<span style="color:#000">k</span>)], <span style="color:#000">t</span>[<span style="color:#000">rs</span>(<span style="color:#000">k</span>)]);
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">n</span> <span style="color:#000">=</span> <span style="color:#000">read</span>(), <span style="color:#000">m</span> <span style="color:#000">=</span> <span style="color:#000">read</span>(), <span style="color:#000">X</span> <span style="color:#000">=</span> <span style="color:#000">read</span>();
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">a</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">read</span>();
</span></span><span style="display:flex;"><span>    <span style="color:#000">build</span>(<span style="color:#1c01ce">1</span>, <span style="color:#000">n</span>, <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> (<span style="color:#000">m</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">opt</span> <span style="color:#000">=</span> <span style="color:#000">read</span>(), <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">read</span>(), <span style="color:#000">y</span> <span style="color:#000">=</span> <span style="color:#000">read</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">opt</span> <span style="color:#000">==</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">modify</span>(<span style="color:#1c01ce">1</span>, <span style="color:#000">n</span>, <span style="color:#000">x</span>, <span style="color:#000">y</span>, <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>            <span style="color:#000">writeln</span>(<span style="color:#000">query</span>(<span style="color:#1c01ce">1</span>, <span style="color:#000">n</span>, <span style="color:#000">x</span>, <span style="color:#000">y</span>, <span style="color:#1c01ce">1</span>).<span style="color:#000">ans</span>);
</span></span><span style="display:flex;"><span>    }    
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div>]]></content:encoded>
    </item>
    
    <item>
      <title>Codeforces Round 524 (Div. 2)</title>
      <link>https://luoyisu.github.io/posts/cf-contest1080/</link>
      <pubDate>Mon, 13 Dec 2021 14:16:04 +0000</pubDate>
      
      <guid>https://luoyisu.github.io/posts/cf-contest1080/</guid>
      <description>&lt;p&gt;似乎仍然不是很难。&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>似乎仍然不是很难。</p>
<h2 id="ahttpscodeforcescontest1080problema"><a href="https://codeforc.es/contest/1080/problem/A">A</a></h2>
<h3 id="description">Description</h3>
<p>有 $n$ 个人，每个人需要 $2$ 张红纸，$5$ 张绿纸，$8$ 张蓝纸。一次可以买 $k$ 张同一种颜色的纸。问最少需要买几次。</p>
<h3 id="solution">Solution</h3>
<p>算一下每种颜色需要几张纸然后除一下向上取整。</p>
<h3 id="code">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cmath&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>() {
</span></span><span style="display:flex;"><span>  <span style="color:#a90d91">int</span> <span style="color:#000">n</span>, <span style="color:#000">k</span>;
</span></span><span style="display:flex;"><span>  <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">k</span>;
</span></span><span style="display:flex;"><span>  <span style="color:#a90d91">int</span> <span style="color:#000">a</span> <span style="color:#000">=</span> <span style="color:#000">n</span> <span style="color:#000">*</span> <span style="color:#1c01ce">2</span>, <span style="color:#000">b</span> <span style="color:#000">=</span> <span style="color:#000">n</span> <span style="color:#000">*</span> <span style="color:#1c01ce">5</span>, <span style="color:#000">c</span> <span style="color:#000">=</span> <span style="color:#000">n</span> <span style="color:#000">*</span> <span style="color:#1c01ce">8</span>;
</span></span><span style="display:flex;"><span>  <span style="color:#000">a</span> <span style="color:#000">=</span> <span style="color:#000">ceil</span>(<span style="color:#1c01ce">1.0</span> <span style="color:#000">*</span> <span style="color:#000">a</span> <span style="color:#000">/</span> <span style="color:#000">k</span>), <span style="color:#000">b</span> <span style="color:#000">=</span> <span style="color:#000">ceil</span>(<span style="color:#1c01ce">1.0</span> <span style="color:#000">*</span> <span style="color:#000">b</span> <span style="color:#000">/</span> <span style="color:#000">k</span>), <span style="color:#000">c</span> <span style="color:#000">=</span> <span style="color:#000">ceil</span>(<span style="color:#1c01ce">1.0</span> <span style="color:#000">*</span> <span style="color:#000">c</span> <span style="color:#000">/</span> <span style="color:#000">k</span>);
</span></span><span style="display:flex;"><span>  <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">a</span> <span style="color:#000">+</span> <span style="color:#000">b</span> <span style="color:#000">+</span> <span style="color:#000">c</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="bhttpscodeforcescontest1080problemb"><a href="https://codeforc.es/contest/1080/problem/B">B</a></h2>
<h3 id="description-1">Description</h3>
<p>有一个序列 $\{a_i\}$，通项公式 $a_i=i\times(-1)^i$，$q$ 个询问，求区间和。</p>
<h3 id="solution-1">Solution</h3>
<p>找规律即可，规律不写了。</p>
<h3 id="code-1">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cmath&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>() {
</span></span><span style="display:flex;"><span>  <span style="color:#a90d91">int</span> <span style="color:#000">q</span>;
</span></span><span style="display:flex;"><span>  <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">q</span>;
</span></span><span style="display:flex;"><span>  <span style="color:#a90d91">while</span> (<span style="color:#000">q</span><span style="color:#000">--</span>) {
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#000">y</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">x</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">y</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">len</span> <span style="color:#000">=</span> <span style="color:#000">y</span> <span style="color:#000">-</span> <span style="color:#000">x</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">x</span> <span style="color:#000">==</span> <span style="color:#000">y</span>)
</span></span><span style="display:flex;"><span>      <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> (<span style="color:#000">x</span> <span style="color:#000">&amp;</span> <span style="color:#1c01ce">1</span> <span style="color:#000">?</span> <span style="color:#000">-</span><span style="color:#000">x</span> : <span style="color:#000">x</span>) <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">else</span> {
</span></span><span style="display:flex;"><span>      <span style="color:#a90d91">int</span> <span style="color:#000">p</span> <span style="color:#000">=</span> <span style="color:#000">len</span> <span style="color:#000">/</span> <span style="color:#1c01ce">2</span> <span style="color:#000">*</span> (<span style="color:#000">x</span> <span style="color:#000">&amp;</span> <span style="color:#1c01ce">1</span> <span style="color:#000">?</span> <span style="color:#1c01ce">1</span> <span style="color:#000">:</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>      <span style="color:#a90d91">if</span> (<span style="color:#000">len</span> <span style="color:#000">&amp;</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">p</span> <span style="color:#000">+=</span> <span style="color:#000">y</span> <span style="color:#000">&amp;</span> <span style="color:#1c01ce">1</span> <span style="color:#000">?</span> <span style="color:#000">-</span><span style="color:#000">y</span> : <span style="color:#000">y</span>;
</span></span><span style="display:flex;"><span>      <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">p</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;  
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>  }
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="chttpscodeforcescontest1080problemc"><a href="https://codeforc.es/contest/1080/problem/C">C</a></h2>
<h3 id="description-2">Description</h3>
<p>有一个 $n\times m$ 的国际象棋棋盘（每个格子颜色白或黑），先将一个子矩形染成白色，再将一个子矩形染成黑色，问最后有几个白格子和几个黑格子。$n,m\leq10^9$。</p>
<h3 id="solution-2">Solution</h3>
<p>只算黑色格子即可，乱算一算，最后再把重叠部分算进去。</p>
<h3 id="code-2">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cmath&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>() {
</span></span><span style="display:flex;"><span>  <span style="color:#a90d91">int</span> <span style="color:#000">T</span>;
</span></span><span style="display:flex;"><span>  <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">T</span>;
</span></span><span style="display:flex;"><span>  <span style="color:#a90d91">while</span> (<span style="color:#000">T</span><span style="color:#000">--</span>) {
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">n</span>, <span style="color:#000">m</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">m</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">x1</span>, <span style="color:#000">x2</span>, <span style="color:#000">y1</span>, <span style="color:#000">y2</span>, <span style="color:#000">x3</span>, <span style="color:#000">y3</span>, <span style="color:#000">x4</span>, <span style="color:#000">y4</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">x1</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">y1</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">x2</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">y2</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">x3</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">y3</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">x4</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">y4</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">black</span> <span style="color:#000">=</span> <span style="color:#000">n</span> <span style="color:#000">*</span> <span style="color:#000">m</span> <span style="color:#000">/</span> <span style="color:#1c01ce">2</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">dx1</span> <span style="color:#000">=</span> <span style="color:#000">x2</span> <span style="color:#000">-</span> <span style="color:#000">x1</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">dy1</span> <span style="color:#000">=</span> <span style="color:#000">y2</span> <span style="color:#000">-</span> <span style="color:#000">y1</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">black</span> <span style="color:#000">-=</span> <span style="color:#000">dx1</span> <span style="color:#000">*</span> <span style="color:#000">dy1</span> <span style="color:#000">/</span> <span style="color:#1c01ce">2</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">dx1</span> <span style="color:#000">*</span> <span style="color:#000">dy1</span> <span style="color:#000">%</span> <span style="color:#1c01ce">2</span>)
</span></span><span style="display:flex;"><span>      <span style="color:#a90d91">if</span> ((<span style="color:#000">x1</span> <span style="color:#000">+</span> <span style="color:#000">y1</span>) <span style="color:#000">&amp;</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">black</span><span style="color:#000">--</span>;    
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">dx2</span> <span style="color:#000">=</span> <span style="color:#000">x4</span> <span style="color:#000">-</span> <span style="color:#000">x3</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">dy2</span> <span style="color:#000">=</span> <span style="color:#000">y4</span> <span style="color:#000">-</span> <span style="color:#000">y3</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">black</span> <span style="color:#000">+=</span> <span style="color:#000">dx2</span> <span style="color:#000">*</span> <span style="color:#000">dy2</span> <span style="color:#000">/</span> <span style="color:#1c01ce">2</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">dx2</span> <span style="color:#000">*</span> <span style="color:#000">dy2</span> <span style="color:#000">%</span> <span style="color:#1c01ce">2</span>)
</span></span><span style="display:flex;"><span>      <span style="color:#a90d91">if</span> ((<span style="color:#000">x3</span> <span style="color:#000">+</span> <span style="color:#000">y3</span>) <span style="color:#000">%</span> <span style="color:#1c01ce">2</span> <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">black</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">x5</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">max</span>(<span style="color:#000">x3</span>, <span style="color:#000">x1</span>), <span style="color:#000">x6</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">min</span>(<span style="color:#000">x2</span>, <span style="color:#000">x4</span>), <span style="color:#000">y5</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">max</span>(<span style="color:#000">y1</span>, <span style="color:#000">y3</span>), <span style="color:#000">y6</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">min</span>(<span style="color:#000">y2</span>, <span style="color:#000">y4</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">x5</span> <span style="color:#000">&lt;=</span> <span style="color:#000">x6</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">y5</span> <span style="color:#000">&lt;=</span> <span style="color:#000">y6</span>) {
</span></span><span style="display:flex;"><span>      <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">dx0</span> <span style="color:#000">=</span> <span style="color:#000">x6</span> <span style="color:#000">-</span> <span style="color:#000">x5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">dy0</span> <span style="color:#000">=</span> <span style="color:#000">y6</span> <span style="color:#000">-</span> <span style="color:#000">y5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>      <span style="color:#000">black</span> <span style="color:#000">+=</span> <span style="color:#000">dx0</span> <span style="color:#000">*</span> <span style="color:#000">dy0</span> <span style="color:#000">/</span> <span style="color:#1c01ce">2</span>;
</span></span><span style="display:flex;"><span>      <span style="color:#a90d91">if</span> (<span style="color:#000">dx0</span> <span style="color:#000">*</span> <span style="color:#000">dy0</span> <span style="color:#000">%</span> <span style="color:#1c01ce">2</span>) {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> ((<span style="color:#000">x5</span> <span style="color:#000">+</span> <span style="color:#000">y5</span>) <span style="color:#000">%</span> <span style="color:#1c01ce">2</span>) {
</span></span><span style="display:flex;"><span>          <span style="color:#000">black</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>      }
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">white</span> <span style="color:#000">=</span> <span style="color:#000">n</span> <span style="color:#000">*</span> <span style="color:#000">m</span> <span style="color:#000">-</span> <span style="color:#000">black</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">white</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">black</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>  }
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="dhttpscodeforcescontest1080problemd"><a href="https://codeforc.es/contest/1080/problem/D">D</a></h2>
<h3 id="description-3">Description</h3>
<p>有一个 $2^n\times2^n$ 的正方形，进行 $k$ 次切割操作，每次把一个正方形切成 $4$ 个等大的小正方形。</p>
<p>需要找到一条在切割后正方形边长全部相同且四连通的从左下角到右上角的路径，判断能不能找到，如果能找到，输出这条路径上正方形边长以 $2$​ 为底的对数。</p>
<p>$n\leq10^9,k\leq10^{18}$。</p>
<h3 id="solution-3">Solution</h3>
<p>能算出来把一个 $2^n\times 2^n$ 的正方形切成最小的切割次数 $a_n$ 满足递推式 $a_n=4\times a_{n-1}+1$​。</p>
<p>显然我们只需要打通一条路就行，其他的随便切。</p>
<p>那么当 $n&gt;31$，肯定无解。</p>
<p>我们可以枚举这条路径上正方形边长，设边长为 $2^i$，那么我们只需要找到可以的最小切割次数和最大切割次数，如果 $k$ 在这两个数的闭区间里，那么一定有解。</p>
<p>最小切割次数怎么算呢？我们只切最边上的路径，第一次切 $1$ 次，第二次切 $3$ 次，第三次切 $7$ 次……，所以最小切割次数 $mi_i=\sum_{j=1}^{n-i}mi_j$。</p>
<p>最大切割次数怎么算呢？我们先切成最小的方块，然后减去多切的。最多切割次数 $f_i=a_n-a_i\times(2^{n-i+1}-1)$。</p>
<p>就这样。</p>
<h3 id="code-3">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cmath&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">typedef</span> <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">ll</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000">ll</span> <span style="color:#000">a</span>[<span style="color:#1c01ce">40</span>], <span style="color:#000">mi</span>[<span style="color:#1c01ce">40</span>], <span style="color:#000">mx</span>[<span style="color:#1c01ce">40</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">solve</span>(<span style="color:#a90d91">int</span> <span style="color:#000">n</span>, <span style="color:#000">ll</span> <span style="color:#000">k</span>) {
</span></span><span style="display:flex;"><span>  <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>) {
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">a</span>[<span style="color:#000">n</span>] <span style="color:#000">-</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>] <span style="color:#000">*</span> ((<span style="color:#1c01ce">1ll</span> <span style="color:#000">&lt;&lt;</span> (<span style="color:#000">n</span> <span style="color:#000">-</span> <span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>)) <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>) <span style="color:#000">&gt;=</span> <span style="color:#000">k</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">mi</span>[<span style="color:#000">n</span> <span style="color:#000">-</span> <span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">&lt;=</span> <span style="color:#000">k</span>)
</span></span><span style="display:flex;"><span>      <span style="color:#a90d91">return</span> <span style="color:#000">i</span>;
</span></span><span style="display:flex;"><span>  }
</span></span><span style="display:flex;"><span>  <span style="color:#a90d91">return</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>() {
</span></span><span style="display:flex;"><span>  <span style="color:#a90d91">int</span> <span style="color:#000">T</span>;
</span></span><span style="display:flex;"><span>  <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">T</span>;
</span></span><span style="display:flex;"><span>  <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#1c01ce">31</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    <span style="color:#000">a</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">4</span> <span style="color:#000">*</span> <span style="color:#000">a</span>[<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>  <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#1c01ce">31</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    <span style="color:#000">mi</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> (<span style="color:#1c01ce">1ll</span> <span style="color:#000">&lt;&lt;</span> (<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>)) <span style="color:#000">-</span> <span style="color:#1c01ce">1</span> <span style="color:#000">+</span> <span style="color:#000">mi</span>[<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>];
</span></span><span style="display:flex;"><span>  <span style="color:#a90d91">while</span> (<span style="color:#000">T</span><span style="color:#000">--</span>) {
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">n</span>, <span style="color:#000">k</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">k</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">n</span> <span style="color:#000">&gt;</span> <span style="color:#1c01ce">31</span>) {
</span></span><span style="display:flex;"><span>      <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34;YES&#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">n</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>      <span style="color:#a90d91">continue</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">k</span> <span style="color:#000">&gt;</span> <span style="color:#000">a</span>[<span style="color:#000">n</span>]) {
</span></span><span style="display:flex;"><span>      <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34;NO&#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>      <span style="color:#a90d91">continue</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#000">solve</span>(<span style="color:#000">n</span>, <span style="color:#000">k</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">ans</span> <span style="color:#000">==</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>      <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34;NO&#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>      <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34;YES&#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">ans</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>  }
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="ehttpscodeforcescontest1080probleme"><a href="https://codeforc.es/contest/1080/problem/E">E</a></h2>
<h3 id="description-4">Description</h3>
<p>$n\times m$ 的字符矩阵，求满足一下条件子矩形个数：将每一行重新排列后满足每一行和每一列都是回文串。$n\leq250$。</p>
<h3 id="solution-4">Solution</h3>
<p>每一行的要求可以很好判断，因为可以随便重排，满足至多只有一个字符出现两次即可。然后把每一行当成一个字符做 manacher，就行了。复杂度 $O(nm^2|\sum|)$​​，能过。如果比较每一行用 hash 来判断，那就可以优化到 $O(nm^2)$​​。</p>
<p>shr 神说可以用组合数暴力算，我不懂，他 tql。</p>
<h3 id="code-4">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cmath&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">510</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">char</span> <span style="color:#000">s</span>[<span style="color:#000">maxn</span>][<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">n</span>, <span style="color:#000">m</span>, <span style="color:#000">cnt</span>[<span style="color:#000">maxn</span>][<span style="color:#1c01ce">30</span>], <span style="color:#000">odd</span>[<span style="color:#000">maxn</span>], <span style="color:#000">d</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">bool</span> <span style="color:#000">cmp</span>(<span style="color:#a90d91">int</span> <span style="color:#000">a</span>, <span style="color:#a90d91">int</span> <span style="color:#000">b</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">odd</span>[<span style="color:#000">a</span>] <span style="color:#000">&gt;</span> <span style="color:#1c01ce">1</span> <span style="color:#000">||</span> <span style="color:#000">odd</span>[<span style="color:#000">b</span>] <span style="color:#000">&gt;</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#a90d91">false</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#1c01ce">26</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">cnt</span>[<span style="color:#000">a</span>][<span style="color:#000">i</span>] <span style="color:#000">!=</span> <span style="color:#000">cnt</span>[<span style="color:#000">b</span>][<span style="color:#000">i</span>])
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">return</span> <span style="color:#a90d91">false</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#a90d91">true</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">scanf</span>(<span style="color:#c41a16">&#34;%d%d&#34;</span>, <span style="color:#000">&amp;</span><span style="color:#000">n</span>, <span style="color:#000">&amp;</span><span style="color:#000">m</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">scanf</span>(<span style="color:#c41a16">&#34;%s&#34;</span>, <span style="color:#000">s</span>[<span style="color:#000">i</span>] <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">l</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">l</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">l</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">memset</span>(<span style="color:#000">cnt</span>, <span style="color:#1c01ce">0</span>, <span style="color:#a90d91">sizeof</span>(<span style="color:#000">cnt</span>)), <span style="color:#000">memset</span>(<span style="color:#000">odd</span>, <span style="color:#1c01ce">0</span>, <span style="color:#a90d91">sizeof</span>(<span style="color:#000">odd</span>));
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">r</span> <span style="color:#000">=</span> <span style="color:#000">l</span>; <span style="color:#000">r</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">r</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            {
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">char</span> <span style="color:#000">ch</span> <span style="color:#000">=</span> <span style="color:#000">s</span>[<span style="color:#000">i</span>][<span style="color:#000">r</span>] <span style="color:#000">-</span> <span style="color:#2300ce">&#39;a&#39;</span>;
</span></span><span style="display:flex;"><span>                <span style="color:#000">cnt</span>[<span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>][<span style="color:#000">ch</span>]<span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">if</span> (<span style="color:#000">cnt</span>[<span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>][<span style="color:#000">ch</span>] <span style="color:#000">&amp;</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>                    <span style="color:#000">odd</span>[<span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>]<span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>                    <span style="color:#000">odd</span>[<span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>]<span style="color:#000">--</span>;
</span></span><span style="display:flex;"><span>            }
</span></span><span style="display:flex;"><span>            <span style="color:#000">memset</span>(<span style="color:#000">d</span>, <span style="color:#1c01ce">0</span>, <span style="color:#a90d91">sizeof</span>(<span style="color:#000">d</span>));
</span></span><span style="display:flex;"><span>            <span style="color:#000">cnt</span>[<span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">n</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>][<span style="color:#1c01ce">0</span>] <span style="color:#000">=</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">l</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>, <span style="color:#000">r</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            {
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">if</span> (<span style="color:#000">odd</span>[<span style="color:#000">i</span>] <span style="color:#000">&gt;</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>                    <span style="color:#a90d91">continue</span>;
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">if</span> (<span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">r</span>)
</span></span><span style="display:flex;"><span>                    <span style="color:#000">d</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">min</span>(<span style="color:#000">r</span> <span style="color:#000">-</span> <span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">d</span>[<span style="color:#000">l</span> <span style="color:#000">+</span> <span style="color:#000">r</span> <span style="color:#000">-</span> <span style="color:#000">i</span>]);
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">while</span> (<span style="color:#000">cmp</span>(<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#000">d</span>[<span style="color:#000">i</span>], <span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#000">d</span>[<span style="color:#000">i</span>]))
</span></span><span style="display:flex;"><span>                    <span style="color:#000">d</span>[<span style="color:#000">i</span>]<span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">if</span> (<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#000">d</span>[<span style="color:#000">i</span>] <span style="color:#000">&gt;=</span> <span style="color:#000">r</span>)
</span></span><span style="display:flex;"><span>                    <span style="color:#000">r</span> <span style="color:#000">=</span> <span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#000">d</span>[<span style="color:#000">i</span>] <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">l</span> <span style="color:#000">=</span> <span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#000">d</span>[<span style="color:#000">i</span>] <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>                <span style="color:#000">ans</span> <span style="color:#000">+=</span> <span style="color:#000">d</span>[<span style="color:#000">i</span>] <span style="color:#000">/</span> <span style="color:#1c01ce">2</span>;
</span></span><span style="display:flex;"><span>            }
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">ans</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="fhttpscodeforcescontest1080problemf"><a href="https://codeforc.es/contest/1080/problem/F">F</a></h2>
<h3 id="description-5">Description</h3>
<p>有 $n$ 个集合，$k$ 条线段，每条线段由 $l,r,p$ 描述，分别表示其左端点，右端点，所在集合。</p>
<p>$m$ 个询问，每次给出 $a,b,x,y$，问编号在 $[a,b]$ 之间所有的集合是否都存在一条满足 $x\leq l\leq r\leq y$ 的线段。</p>
<p>$n,m\leq10^5$，$k\leq3\times10^5$，强制在线。</p>
<h3 id="solution-5">Solution</h3>
<p>看到强制在线，像是能用线段树维护的信息，我们想到主席树（）（）（）</p>
<p>以上扯淡，分析一下，如果直接存线段的信息会发现集合信息很难维护。</p>
<p>我们考虑存集合并转化一下要求的东西。</p>
<p>如果一个集合满足要求，那么它左端点大于等于 $l$ 的线段中右端点最小值必定小于等于 $y$。</p>
<p>如果多个集合呢？就是这些集合上面这个东西的最大值小于等于 $y$。</p>
<p>那么我们线段树里维护的东西就确定了：叶子中是这个集合中 $r$ 的最小值，非叶子结点是它所管辖区间中上述值的最大值。</p>
<p>那么怎么满足线段树中只有左端点大于等于 $l$ 的线段呢？我们用一棵主席树，把线段按照 $l$ 从大到小插入进去就行了。</p>
<h3 id="code-5">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cerr</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1e5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxk</span> <span style="color:#000">=</span> <span style="color:#1c01ce">3e5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">root</span>[<span style="color:#000">maxk</span>], <span style="color:#000">n</span>, <span style="color:#000">m</span>, <span style="color:#000">k</span>, <span style="color:#000">inf</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">30</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">struct</span> <span style="color:#3f6e75">Tree</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">static</span> <span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#000">::</span><span style="color:#000">maxn</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">6</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">ls</span>[<span style="color:#000">maxn</span>], <span style="color:#000">rs</span>[<span style="color:#000">maxn</span>], <span style="color:#000">tot</span>, <span style="color:#000">mx</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#000">Tree</span>()
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">maxn</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">mx</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">inf</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">clone</span>(<span style="color:#a90d91">int</span> <span style="color:#000">k</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">tot</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">mx</span>[<span style="color:#000">tot</span>] <span style="color:#000">=</span> <span style="color:#000">mx</span>[<span style="color:#000">k</span>], <span style="color:#000">ls</span>[<span style="color:#000">tot</span>] <span style="color:#000">=</span> <span style="color:#000">ls</span>[<span style="color:#000">k</span>], <span style="color:#000">rs</span>[<span style="color:#000">tot</span>] <span style="color:#000">=</span> <span style="color:#000">rs</span>[<span style="color:#000">k</span>];
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#000">tot</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">push_up</span>(<span style="color:#a90d91">int</span> <span style="color:#000">k</span>) { <span style="color:#000">mx</span>[<span style="color:#000">k</span>] <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">max</span>(<span style="color:#000">mx</span>[<span style="color:#000">ls</span>[<span style="color:#000">k</span>]], <span style="color:#000">mx</span>[<span style="color:#000">rs</span>[<span style="color:#000">k</span>]]); }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">build</span>(<span style="color:#a90d91">int</span> <span style="color:#000">l</span>, <span style="color:#a90d91">int</span> <span style="color:#000">r</span>, <span style="color:#a90d91">int</span> <span style="color:#000">k</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">!</span><span style="color:#000">k</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">k</span> <span style="color:#000">=</span> <span style="color:#000">++</span><span style="color:#000">tot</span>, <span style="color:#000">mx</span>[<span style="color:#000">tot</span>] <span style="color:#000">=</span> <span style="color:#000">inf</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">l</span> <span style="color:#000">==</span> <span style="color:#000">r</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">mx</span>[<span style="color:#000">k</span>] <span style="color:#000">=</span> <span style="color:#000">inf</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">return</span> <span style="color:#000">k</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">mid</span> <span style="color:#000">=</span> (<span style="color:#000">l</span> <span style="color:#000">+</span> <span style="color:#000">r</span>) <span style="color:#000">/</span> <span style="color:#1c01ce">2</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">ls</span>[<span style="color:#000">k</span>] <span style="color:#000">=</span> <span style="color:#000">build</span>(<span style="color:#000">l</span>, <span style="color:#000">mid</span>, <span style="color:#000">ls</span>[<span style="color:#000">k</span>]), <span style="color:#000">rs</span>[<span style="color:#000">k</span>] <span style="color:#000">=</span> <span style="color:#000">build</span>(<span style="color:#000">mid</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">r</span>, <span style="color:#000">rs</span>[<span style="color:#000">k</span>]);
</span></span><span style="display:flex;"><span>        <span style="color:#000">push_up</span>(<span style="color:#000">k</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#000">k</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">modify</span>(<span style="color:#a90d91">int</span> <span style="color:#000">l</span>, <span style="color:#a90d91">int</span> <span style="color:#000">r</span>, <span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>, <span style="color:#a90d91">int</span> <span style="color:#000">k</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">k</span> <span style="color:#000">=</span> <span style="color:#000">clone</span>(<span style="color:#000">k</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">l</span> <span style="color:#000">==</span> <span style="color:#000">r</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">mx</span>[<span style="color:#000">k</span>] <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">min</span>(<span style="color:#000">mx</span>[<span style="color:#000">k</span>], <span style="color:#000">y</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">return</span> <span style="color:#000">k</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">mid</span> <span style="color:#000">=</span> (<span style="color:#000">l</span> <span style="color:#000">+</span> <span style="color:#000">r</span>) <span style="color:#000">/</span> <span style="color:#1c01ce">2</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">x</span> <span style="color:#000">&lt;=</span> <span style="color:#000">mid</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">ls</span>[<span style="color:#000">k</span>] <span style="color:#000">=</span> <span style="color:#000">modify</span>(<span style="color:#000">l</span>, <span style="color:#000">mid</span>, <span style="color:#000">x</span>, <span style="color:#000">y</span>, <span style="color:#000">ls</span>[<span style="color:#000">k</span>]);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>            <span style="color:#000">rs</span>[<span style="color:#000">k</span>] <span style="color:#000">=</span> <span style="color:#000">modify</span>(<span style="color:#000">mid</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">r</span>, <span style="color:#000">x</span>, <span style="color:#000">y</span>, <span style="color:#000">rs</span>[<span style="color:#000">k</span>]);
</span></span><span style="display:flex;"><span>        <span style="color:#000">push_up</span>(<span style="color:#000">k</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#000">k</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">query</span>(<span style="color:#a90d91">int</span> <span style="color:#000">l</span>, <span style="color:#a90d91">int</span> <span style="color:#000">r</span>, <span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>, <span style="color:#a90d91">int</span> <span style="color:#000">k</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">x</span> <span style="color:#000">&lt;=</span> <span style="color:#000">l</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">y</span> <span style="color:#000">&gt;=</span> <span style="color:#000">r</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">return</span> <span style="color:#000">mx</span>[<span style="color:#000">k</span>];
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">res</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>, <span style="color:#000">mid</span> <span style="color:#000">=</span> (<span style="color:#000">l</span> <span style="color:#000">+</span> <span style="color:#000">r</span>) <span style="color:#000">/</span> <span style="color:#1c01ce">2</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">x</span> <span style="color:#000">&lt;=</span> <span style="color:#000">mid</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">res</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">max</span>(<span style="color:#000">res</span>, <span style="color:#000">query</span>(<span style="color:#000">l</span>, <span style="color:#000">mid</span>, <span style="color:#000">x</span>, <span style="color:#000">y</span>, <span style="color:#000">ls</span>[<span style="color:#000">k</span>]));
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">y</span> <span style="color:#000">&gt;</span> <span style="color:#000">mid</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">res</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">max</span>(<span style="color:#000">res</span>, <span style="color:#000">query</span>(<span style="color:#000">mid</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">r</span>, <span style="color:#000">x</span>, <span style="color:#000">y</span>, <span style="color:#000">rs</span>[<span style="color:#000">k</span>]));
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#000">res</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>} <span style="color:#000">t</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">struct</span> <span style="color:#3f6e75">Segment</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">l</span>, <span style="color:#000">r</span>, <span style="color:#000">p</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">bool</span> <span style="color:#a90d91">operator</span><span style="color:#000">&lt;</span>(<span style="color:#a90d91">const</span> <span style="color:#000">Segment</span> <span style="color:#000">&amp;</span><span style="color:#000">b</span>) <span style="color:#a90d91">const</span> { <span style="color:#a90d91">return</span> <span style="color:#000">l</span> <span style="color:#000">&gt;</span> <span style="color:#000">b</span>.<span style="color:#000">l</span>; }
</span></span><span style="display:flex;"><span>} <span style="color:#000">a</span>[<span style="color:#000">maxk</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">tot</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">scanf</span>(<span style="color:#c41a16">&#34;%d%d%d&#34;</span>, <span style="color:#000">&amp;</span><span style="color:#000">n</span>, <span style="color:#000">&amp;</span><span style="color:#000">m</span>, <span style="color:#000">&amp;</span><span style="color:#000">k</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">k</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">scanf</span>(<span style="color:#c41a16">&#34;%d%d%d&#34;</span>, <span style="color:#000">&amp;</span><span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">l</span>, <span style="color:#000">&amp;</span><span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">r</span>, <span style="color:#000">&amp;</span><span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">p</span>);  
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">sort</span>(<span style="color:#000">a</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">a</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">+</span> <span style="color:#000">k</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">root</span>[<span style="color:#1c01ce">0</span>] <span style="color:#000">=</span> <span style="color:#000">t</span>.<span style="color:#000">build</span>(<span style="color:#1c01ce">1</span>, <span style="color:#000">n</span>, <span style="color:#000">root</span>[<span style="color:#1c01ce">0</span>]);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">k</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">root</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">t</span>.<span style="color:#000">modify</span>(<span style="color:#1c01ce">1</span>, <span style="color:#000">n</span>, <span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">p</span>, <span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">r</span>, <span style="color:#000">root</span>[<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>]);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> (<span style="color:#000">m</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">p</span>, <span style="color:#000">q</span>, <span style="color:#000">x</span>, <span style="color:#000">y</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">scanf</span>(<span style="color:#c41a16">&#34;%d%d%d%d&#34;</span>, <span style="color:#000">&amp;</span><span style="color:#000">p</span>, <span style="color:#000">&amp;</span><span style="color:#000">q</span>, <span style="color:#000">&amp;</span><span style="color:#000">x</span>, <span style="color:#000">&amp;</span><span style="color:#000">y</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">pos</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">upper_bound</span>(<span style="color:#000">a</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">a</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">+</span> <span style="color:#000">k</span>, (<span style="color:#000">Segment</span>){<span style="color:#000">x</span>, <span style="color:#1c01ce">0</span>, <span style="color:#1c01ce">0</span>}) <span style="color:#000">-</span> <span style="color:#000">a</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#000">t</span>.<span style="color:#000">query</span>(<span style="color:#1c01ce">1</span>, <span style="color:#000">n</span>, <span style="color:#000">p</span>, <span style="color:#000">q</span>, <span style="color:#000">root</span>[<span style="color:#000">pos</span>]);
</span></span><span style="display:flex;"><span>        <span style="color:#000">puts</span>(<span style="color:#000">ans</span> <span style="color:#000">&lt;=</span> <span style="color:#000">y</span> <span style="color:#000">?</span> <span style="color:#c41a16">&#34;yes&#34;</span> <span style="color:#000">:</span> <span style="color:#c41a16">&#34;no&#34;</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">fflush</span>(<span style="color:#000">stdout</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div>]]></content:encoded>
    </item>
    
    <item>
      <title>Codeforces Round 705 (Div. 2)</title>
      <link>https://luoyisu.github.io/posts/cf-contest1493/</link>
      <pubDate>Sat, 11 Dec 2021 15:29:05 +0000</pubDate>
      
      <guid>https://luoyisu.github.io/posts/cf-contest1493/</guid>
      <description>&lt;p&gt;似乎不是很难，但似乎又很难。&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>似乎不是很难，但似乎又很难。</p>
<h2 id="ahttpscodeforcescontest1493problema"><a href="https://codeforc.es/contest/1493/problem/A">A</a></h2>
<h3 id="description">Description</h3>
<p>有两个数 $n,k$，在 $1\sim n$ 中选择最多的数使得不存在两个和为 $k$ 的数。</p>
<h3 id="solution">Solution</h3>
<p>显然比 $k$ 大的数全都要选，显然 $k$ 不能选，显然比 $k$ 小的数只能选一半。</p>
<h3 id="code">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">T</span>, <span style="color:#000">n</span>, <span style="color:#000">k</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">T</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> (<span style="color:#000">T</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">k</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#000">n</span> <span style="color:#000">-</span> <span style="color:#000">k</span> <span style="color:#000">+</span> <span style="color:#000">k</span> <span style="color:#000">/</span> <span style="color:#1c01ce">2</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">ans</span> <span style="color:#000">&lt;=</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">0</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">continue</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">n</span> <span style="color:#000">-</span> <span style="color:#000">k</span> <span style="color:#000">+</span> <span style="color:#000">k</span> <span style="color:#000">/</span> <span style="color:#1c01ce">2</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span> <span style="color:#000">&gt;</span> <span style="color:#000">k</span>; <span style="color:#000">i</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">i</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#000">k</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&gt;=</span> (<span style="color:#000">k</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>) <span style="color:#000">/</span> <span style="color:#1c01ce">2</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">i</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="bhttpscodeforcescontest1493problemb"><a href="https://codeforc.es/contest/1493/problem/B">B</a></h2>
<h3 id="description-1">Description</h3>
<p>有一个每天有 $h$ 个小时，每个小时有 $m$ 分钟的星球，给出一个时间，求下一个能在镜子中照出合法时间的时间。</p>
<h3 id="solution-1">Solution</h3>
<p>只有 $0,1,2,5,8$ 组成的时间是合法的，预处理一下然后模拟。</p>
<h3 id="code-1">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">10010</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">number</span>[] <span style="color:#000">=</span> {<span style="color:#1c01ce">0</span>, <span style="color:#1c01ce">1</span>, <span style="color:#1c01ce">2</span>, <span style="color:#1c01ce">5</span>, <span style="color:#1c01ce">8</span>};
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">bool</span> <span style="color:#000">ok</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">n</span>, <span style="color:#000">m</span>, <span style="color:#000">x</span>[<span style="color:#1c01ce">10</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">int</span> <span style="color:#000">hash</span>(<span style="color:#a90d91">int</span> <span style="color:#000">a</span>, <span style="color:#a90d91">int</span> <span style="color:#000">b</span>, <span style="color:#a90d91">int</span> <span style="color:#000">c</span>, <span style="color:#a90d91">int</span> <span style="color:#000">d</span>) { <span style="color:#a90d91">return</span> <span style="color:#000">a</span> <span style="color:#000">*</span> <span style="color:#1c01ce">1000</span> <span style="color:#000">+</span> <span style="color:#000">b</span> <span style="color:#000">*</span> <span style="color:#1c01ce">100</span> <span style="color:#000">+</span> <span style="color:#000">c</span> <span style="color:#000">*</span> <span style="color:#1c01ce">10</span> <span style="color:#000">+</span> <span style="color:#000">d</span>; }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">init</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">a</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">a</span> <span style="color:#000">&lt;</span> <span style="color:#1c01ce">5</span>; <span style="color:#000">a</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">b</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">b</span> <span style="color:#000">&lt;</span> <span style="color:#1c01ce">5</span>; <span style="color:#000">b</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">c</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">c</span> <span style="color:#000">&lt;</span> <span style="color:#1c01ce">5</span>; <span style="color:#000">c</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">d</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">d</span> <span style="color:#000">&lt;</span> <span style="color:#1c01ce">5</span>; <span style="color:#000">d</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                    <span style="color:#000">ok</span>[<span style="color:#000">hash</span>(<span style="color:#000">number</span>[<span style="color:#000">a</span>], <span style="color:#000">number</span>[<span style="color:#000">b</span>], <span style="color:#000">number</span>[<span style="color:#000">c</span>], <span style="color:#000">number</span>[<span style="color:#000">d</span>])] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">x</span>[<span style="color:#1c01ce">0</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>, <span style="color:#000">x</span>[<span style="color:#1c01ce">1</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">x</span>[<span style="color:#1c01ce">2</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">5</span>, <span style="color:#000">x</span>[<span style="color:#1c01ce">5</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">2</span>, <span style="color:#000">x</span>[<span style="color:#1c01ce">8</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">8</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">int</span> <span style="color:#000">hash2</span>(<span style="color:#a90d91">int</span> <span style="color:#000">a</span>, <span style="color:#a90d91">int</span> <span style="color:#000">b</span>) { <span style="color:#a90d91">return</span> <span style="color:#000">a</span> <span style="color:#000">*</span> <span style="color:#1c01ce">100</span> <span style="color:#000">+</span> <span style="color:#000">b</span>; }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">bool</span> <span style="color:#000">check</span>(<span style="color:#a90d91">int</span> <span style="color:#000">a</span>, <span style="color:#a90d91">int</span> <span style="color:#000">b</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">!</span><span style="color:#000">ok</span>[<span style="color:#000">hash2</span>(<span style="color:#000">a</span>, <span style="color:#000">b</span>)])
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#a90d91">false</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">p</span> <span style="color:#000">=</span> <span style="color:#000">x</span>[<span style="color:#000">a</span> <span style="color:#000">%</span> <span style="color:#1c01ce">10</span>] <span style="color:#000">*</span> <span style="color:#1c01ce">10</span> <span style="color:#000">+</span> <span style="color:#000">x</span>[<span style="color:#000">a</span> <span style="color:#000">/</span> <span style="color:#1c01ce">10</span>], <span style="color:#000">q</span> <span style="color:#000">=</span> <span style="color:#000">x</span>[<span style="color:#000">b</span> <span style="color:#000">%</span> <span style="color:#1c01ce">10</span>] <span style="color:#000">*</span> <span style="color:#1c01ce">10</span> <span style="color:#000">+</span> <span style="color:#000">x</span>[<span style="color:#000">b</span> <span style="color:#000">/</span> <span style="color:#1c01ce">10</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#000">p</span> <span style="color:#000">&lt;</span> <span style="color:#000">m</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">q</span> <span style="color:#000">&lt;</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">work</span>(<span style="color:#a90d91">int</span> <span style="color:#000">a</span>, <span style="color:#a90d91">int</span> <span style="color:#000">b</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> (<span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">check</span>(<span style="color:#000">a</span>, <span style="color:#000">b</span>))
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">printf</span>(<span style="color:#c41a16">&#34;%02d:%02d</span><span style="color:#c41a16">\\</span><span style="color:#c41a16">n&#34;</span>, <span style="color:#000">a</span>, <span style="color:#000">b</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">return</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#000">b</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">b</span> <span style="color:#000">==</span> <span style="color:#000">m</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">b</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>, <span style="color:#000">a</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">a</span> <span style="color:#000">==</span> <span style="color:#000">n</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">a</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">T</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">T</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">init</span>();
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">char</span> <span style="color:#000">ch</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> (<span style="color:#000">T</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">m</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">a</span>, <span style="color:#000">b</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">a</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">ch</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">b</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">work</span>(<span style="color:#000">a</span>, <span style="color:#000">b</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="chttpscodeforcescontest1493problemc"><a href="https://codeforc.es/contest/1493/problem/C">C</a></h2>
<h3 id="description-2">Description</h3>
<p>有一个长度为 $n$ 只含小写字母的字符串和一个数 $k$。求一个字符串，满足这个字符串字典序比原字符串大且每个字符出现的次数都能被 $k$​​ 整除，要求满足以上要求的字典序最小的字符串。$n\leq1000$。</p>
<h3 id="solution-2">Solution</h3>
<p>发现和原字符串前缀相同的位数越多字典序就可能越小，于是从大到小枚举从哪一位开始不一样，然后枚举这一位填什么字符，看剩下的位置能不能满足要求。</p>
<p>具体判断能不能满足要求需要看把所有字符都填到恰好被 $k$ 整除需要几个，然后看这些的和是否不大于剩下的位数。</p>
<p>填的时候先把能随便填的都填上 <code>a</code>，剩下的地方从 <code>a</code> 到 <code>z</code> 依次填就行。</p>
<p>建议想好再写。</p>
<h3 id="code-2">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1e5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">char</span> <span style="color:#000">s</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">T</span>, <span style="color:#000">n</span>, <span style="color:#000">k</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">b</span>[<span style="color:#1c01ce">30</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">output</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">s</span>[<span style="color:#000">x</span>] <span style="color:#000">=</span> <span style="color:#000">y</span> <span style="color:#000">+</span> <span style="color:#2300ce">&#39;a&#39;</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">x</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">s</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">res</span> <span style="color:#000">=</span> <span style="color:#000">n</span> <span style="color:#000">-</span> <span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#1c01ce">26</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">res</span> <span style="color:#000">-=</span> (<span style="color:#000">k</span> <span style="color:#000">-</span> <span style="color:#000">b</span>[<span style="color:#000">i</span>] <span style="color:#000">%</span> <span style="color:#000">k</span>) <span style="color:#000">%</span> <span style="color:#000">k</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">res</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#2300ce">&#39;a&#39;</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#1c01ce">26</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">b</span>[<span style="color:#000">i</span>] <span style="color:#000">%=</span> <span style="color:#000">k</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;</span> (<span style="color:#000">k</span> <span style="color:#000">-</span> <span style="color:#000">b</span>[<span style="color:#000">i</span>] <span style="color:#000">%</span> <span style="color:#000">k</span>) <span style="color:#000">%</span> <span style="color:#000">k</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#a90d91">char</span>(<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#2300ce">&#39;a&#39;</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">solve</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">sum</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span> <span style="color:#000">&gt;=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">b</span>[<span style="color:#000">s</span>[<span style="color:#000">i</span>] <span style="color:#000">-</span> <span style="color:#2300ce">&#39;a&#39;</span>]<span style="color:#000">--</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#000">s</span>[<span style="color:#000">i</span>] <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">-</span> <span style="color:#2300ce">&#39;a&#39;</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;</span> <span style="color:#1c01ce">26</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">b</span>[<span style="color:#000">j</span>]<span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">sum</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">p</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">p</span> <span style="color:#000">&lt;</span> <span style="color:#1c01ce">26</span>; <span style="color:#000">p</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">sum</span> <span style="color:#000">+=</span> (<span style="color:#000">k</span> <span style="color:#000">-</span> <span style="color:#000">b</span>[<span style="color:#000">p</span>] <span style="color:#000">%</span> <span style="color:#000">k</span>) <span style="color:#000">%</span> <span style="color:#000">k</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">sum</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span> <span style="color:#000">-</span> <span style="color:#000">i</span>)
</span></span><span style="display:flex;"><span>            {
</span></span><span style="display:flex;"><span>                <span style="color:#000">output</span>(<span style="color:#000">i</span>, <span style="color:#000">j</span>);
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">return</span>;
</span></span><span style="display:flex;"><span>            }
</span></span><span style="display:flex;"><span>            <span style="color:#000">b</span>[<span style="color:#000">j</span>]<span style="color:#000">--</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">ios</span><span style="color:#000">::</span><span style="color:#000">sync_with_stdio</span>(<span style="color:#a90d91">false</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">T</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> (<span style="color:#000">T</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">memset</span>(<span style="color:#000">b</span>, <span style="color:#1c01ce">0</span>, <span style="color:#a90d91">sizeof</span>(<span style="color:#000">b</span>));
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">k</span> <span style="color:#000">&gt;&gt;</span> (<span style="color:#000">s</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">b</span>[<span style="color:#000">s</span>[<span style="color:#000">i</span>] <span style="color:#000">-</span> <span style="color:#2300ce">&#39;a&#39;</span>]<span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">ok</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#1c01ce">26</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">b</span>[<span style="color:#000">i</span>] <span style="color:#000">%</span> <span style="color:#000">k</span>)
</span></span><span style="display:flex;"><span>            {
</span></span><span style="display:flex;"><span>                <span style="color:#000">ok</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">break</span>;
</span></span><span style="display:flex;"><span>            }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">ok</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> (<span style="color:#000">s</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>) <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">continue</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span> <span style="color:#a90d91">if</span> (<span style="color:#000">n</span> <span style="color:#000">%</span> <span style="color:#000">k</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">continue</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#000">solve</span>();
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="dhttpscodeforcescontest1493problemd"><a href="https://codeforc.es/contest/1493/problem/D">D</a></h2>
<h3 id="description-3">Description</h3>
<p>有一个 $n$ 个数的正整数序列，$q$ 次操作，每次把一个数乘上 $x$，问每次操作后整个序列的 gcd 对 $10^9+7$ 取模的结果。</p>
<h3 id="solution-3">Solution</h3>
<p>我们只需要求出所有质因子最低次数的幂即可。</p>
<p>对每个质因子维护一个 <code>multiset</code>，乘的时候把这个数增加的质因子加进去就行。</p>
<p>然后把答案乘一个 $p^x$ 即可，其中 $x$​​ 是增加的幂次。</p>
<p>乱维护即可。。。</p>
<p>注意质因数分解需要做到 $O(\log n)$，为此需要预处理每个数最小质因子。</p>
<h3 id="code-3">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;set&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;map&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cerr</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2e5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>, <span style="color:#000">mod</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1e9</span> <span style="color:#000">+</span> <span style="color:#1c01ce">7</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxp</span> <span style="color:#000">=</span> <span style="color:#1c01ce">18000</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">typedef</span> <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">ll</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">namespace</span> <span style="color:#000">IO</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">mxsiz</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">20</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">char</span> <span style="color:#000">inbuf</span>[<span style="color:#000">mxsiz</span>], <span style="color:#000">*</span><span style="color:#000">p1</span>, <span style="color:#000">*</span><span style="color:#000">p2</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">char</span> <span style="color:#000">outbuf</span>[<span style="color:#000">mxsiz</span>], <span style="color:#000">*</span><span style="color:#000">op</span> <span style="color:#000">=</span> <span style="color:#000">outbuf</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">struct</span> <span style="color:#3f6e75">endio</span>
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">endio</span>(){};
</span></span><span style="display:flex;"><span>        <span style="color:#000">~</span><span style="color:#000">endio</span>() { <span style="color:#000">fwrite</span>(<span style="color:#000">outbuf</span>, <span style="color:#1c01ce">1</span>, <span style="color:#000">op</span> <span style="color:#000">-</span> <span style="color:#000">outbuf</span>, <span style="color:#000">stdout</span>); }
</span></span><span style="display:flex;"><span>    } <span style="color:#000">useless_var</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">char</span> <span style="color:#000">gc</span>() { <span style="color:#a90d91">return</span> <span style="color:#000">p1</span> <span style="color:#000">==</span> <span style="color:#000">p2</span> <span style="color:#000">&amp;&amp;</span> (<span style="color:#000">p2</span> <span style="color:#000">=</span> (<span style="color:#000">p1</span> <span style="color:#000">=</span> <span style="color:#000">inbuf</span>) <span style="color:#000">+</span> <span style="color:#000">fread</span>(<span style="color:#000">inbuf</span>, <span style="color:#1c01ce">1</span>, <span style="color:#000">mxsiz</span>, <span style="color:#000">stdin</span>), <span style="color:#000">p1</span> <span style="color:#000">==</span> <span style="color:#000">p2</span>) <span style="color:#000">?</span> <span style="color:#000">EOF</span> : <span style="color:#000">*</span><span style="color:#000">p1</span><span style="color:#000">++</span>; }
</span></span><span style="display:flex;"><span><span style="color:#633820">#define isdigit(x) (x &gt;= &#39;0&#39; &amp;&amp; x &lt;= &#39;9&#39;)
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">int</span> <span style="color:#000">read</span>()
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>, <span style="color:#000">f</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">char</span> <span style="color:#000">ch</span> <span style="color:#000">=</span> <span style="color:#000">gc</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (; <span style="color:#000">!</span><span style="color:#000">isdigit</span>(<span style="color:#000">ch</span>); <span style="color:#000">ch</span> <span style="color:#000">=</span> <span style="color:#000">gc</span>())
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">ch</span> <span style="color:#000">==</span> <span style="color:#2300ce">&#39;-&#39;</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">f</span> <span style="color:#000">=</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (; <span style="color:#000">isdigit</span>(<span style="color:#000">ch</span>); <span style="color:#000">ch</span> <span style="color:#000">=</span> <span style="color:#000">gc</span>())
</span></span><span style="display:flex;"><span>            <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">x</span> <span style="color:#000">*</span> <span style="color:#1c01ce">10</span> <span style="color:#000">+</span> <span style="color:#000">ch</span> <span style="color:#000">-</span> <span style="color:#2300ce">&#39;0&#39;</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#000">x</span> <span style="color:#000">*</span> <span style="color:#000">f</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">template</span> <span style="color:#000">&lt;</span><span style="color:#a90d91">typename</span> <span style="color:#000">T</span><span style="color:#000">&gt;</span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">read</span>(<span style="color:#000">T</span> <span style="color:#000">&amp;</span><span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">f</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">char</span> <span style="color:#000">ch</span> <span style="color:#000">=</span> <span style="color:#000">gc</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (; <span style="color:#000">!</span><span style="color:#000">isdigit</span>(<span style="color:#000">ch</span>); <span style="color:#000">ch</span> <span style="color:#000">=</span> <span style="color:#000">gc</span>())
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">ch</span> <span style="color:#000">==</span> <span style="color:#2300ce">&#39;-&#39;</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">f</span> <span style="color:#000">=</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (; <span style="color:#000">isdigit</span>(<span style="color:#000">ch</span>); <span style="color:#000">ch</span> <span style="color:#000">=</span> <span style="color:#000">gc</span>())
</span></span><span style="display:flex;"><span>            <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">x</span> <span style="color:#000">*</span> <span style="color:#1c01ce">10</span> <span style="color:#000">+</span> <span style="color:#000">ch</span> <span style="color:#000">-</span> <span style="color:#2300ce">&#39;0&#39;</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">x</span> <span style="color:#000">*=</span> <span style="color:#000">f</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span><span style="color:#633820">#undef isdigit
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">bool</span> <span style="color:#000">ischar</span>(<span style="color:#a90d91">char</span> <span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#000">x</span> <span style="color:#000">&gt;=</span> <span style="color:#2300ce">&#39;A&#39;</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">x</span> <span style="color:#000">&lt;=</span> <span style="color:#2300ce">&#39;z&#39;</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">char</span> <span style="color:#000">readchar</span>()
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">char</span> <span style="color:#000">ch</span> <span style="color:#000">=</span> <span style="color:#000">gc</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">while</span> (<span style="color:#000">!</span><span style="color:#000">ischar</span>(<span style="color:#000">ch</span>))
</span></span><span style="display:flex;"><span>            <span style="color:#000">ch</span> <span style="color:#000">=</span> <span style="color:#000">gc</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#000">ch</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">push</span>(<span style="color:#a90d91">char</span> <span style="color:#000">ch</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">op</span> <span style="color:#000">-</span> <span style="color:#000">outbuf</span> <span style="color:#000">==</span> <span style="color:#000">mxsiz</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">fwrite</span>(<span style="color:#000">outbuf</span>, <span style="color:#1c01ce">1</span>, <span style="color:#000">mxsiz</span>, <span style="color:#000">stdout</span>), <span style="color:#000">op</span> <span style="color:#000">=</span> <span style="color:#000">outbuf</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">*</span><span style="color:#000">op</span><span style="color:#000">++</span> <span style="color:#000">=</span> <span style="color:#000">ch</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">template</span> <span style="color:#000">&lt;</span><span style="color:#a90d91">typename</span> <span style="color:#000">T</span><span style="color:#000">&gt;</span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">work_wt</span>(<span style="color:#000">T</span> <span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">x</span> <span style="color:#000">&gt;</span> <span style="color:#1c01ce">9</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">work_wt</span>(<span style="color:#000">x</span> <span style="color:#000">/</span> <span style="color:#1c01ce">10</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">push</span>(<span style="color:#000">x</span> <span style="color:#000">%</span> <span style="color:#1c01ce">10</span> <span style="color:#000">+</span> <span style="color:#2300ce">&#39;0&#39;</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">template</span> <span style="color:#000">&lt;</span><span style="color:#a90d91">typename</span> <span style="color:#000">T</span><span style="color:#000">&gt;</span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">write</span>(<span style="color:#000">T</span> <span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">x</span> <span style="color:#000">&lt;</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">-</span><span style="color:#000">x</span>, <span style="color:#000">push</span>(<span style="color:#2300ce">&#39;-&#39;</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">work_wt</span>(<span style="color:#000">x</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">writestr</span>(<span style="color:#a90d91">char</span> <span style="color:#000">*</span><span style="color:#000">s</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">n</span> <span style="color:#000">=</span> <span style="color:#000">strlen</span>(<span style="color:#000">s</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">push</span>(<span style="color:#000">s</span>[<span style="color:#000">i</span>]);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">endln</span>() { <span style="color:#000">push</span>(<span style="color:#000">&#39;\\</span><span style="color:#000">n</span><span style="color:#000">&#39;</span>); }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">space</span>() { <span style="color:#000">push</span>(<span style="color:#2300ce">&#39; &#39;</span>); }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">template</span> <span style="color:#000">&lt;</span><span style="color:#a90d91">typename</span> <span style="color:#000">T</span><span style="color:#000">&gt;</span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">writeln</span>(<span style="color:#000">T</span> <span style="color:#000">x</span>) { <span style="color:#000">write</span>(<span style="color:#000">x</span>), <span style="color:#000">endln</span>(); }
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#a90d91">namespace</span> <span style="color:#000">IO</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">vis</span>[<span style="color:#000">maxn</span>], <span style="color:#000">p</span>[<span style="color:#000">maxp</span>], <span style="color:#000">tot</span>, <span style="color:#000">n</span>, <span style="color:#000">mi</span>[<span style="color:#000">maxn</span>], <span style="color:#000">q</span>;
</span></span><span style="display:flex;"><span><span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">multiset</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">S</span>[<span style="color:#000">maxp</span>];
</span></span><span style="display:flex;"><span><span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">map</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span>, <span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">mp</span>[<span style="color:#000">maxn</span>], <span style="color:#000">P</span>;
</span></span><span style="display:flex;"><span><span style="color:#000">ll</span> <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">init</span>(<span style="color:#a90d91">int</span> <span style="color:#000">n</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">mi</span>[<span style="color:#1c01ce">1</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">2</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">!</span><span style="color:#000">vis</span>[<span style="color:#000">i</span>])
</span></span><span style="display:flex;"><span>            <span style="color:#000">p</span>[<span style="color:#000">++</span><span style="color:#000">tot</span>] <span style="color:#000">=</span> <span style="color:#000">i</span>, <span style="color:#000">P</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">tot</span>, <span style="color:#000">mi</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">i</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;=</span> <span style="color:#000">tot</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">p</span>[<span style="color:#000">j</span>] <span style="color:#000">*</span> <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">vis</span>[<span style="color:#000">i</span> <span style="color:#000">*</span> <span style="color:#000">p</span>[<span style="color:#000">j</span>]] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">mi</span>[<span style="color:#000">i</span> <span style="color:#000">*</span> <span style="color:#000">p</span>[<span style="color:#000">j</span>]] <span style="color:#000">=</span> <span style="color:#000">p</span>[<span style="color:#000">j</span>];
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">i</span> <span style="color:#000">%</span> <span style="color:#000">p</span>[<span style="color:#000">j</span>] <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">break</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000">ll</span> <span style="color:#000">qpow</span>(<span style="color:#000">ll</span> <span style="color:#000">a</span>, <span style="color:#a90d91">int</span> <span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">ll</span> <span style="color:#000">res</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (; <span style="color:#000">x</span>; <span style="color:#000">x</span> <span style="color:#000">&gt;&gt;=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">a</span> <span style="color:#000">=</span> <span style="color:#000">a</span> <span style="color:#000">*</span> <span style="color:#000">a</span> <span style="color:#000">%</span> <span style="color:#000">mod</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">x</span> <span style="color:#000">&amp;</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">res</span> <span style="color:#000">=</span> <span style="color:#000">res</span> <span style="color:#000">*</span> <span style="color:#000">a</span> <span style="color:#000">%</span> <span style="color:#000">mod</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#000">res</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">modify</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">pos</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">x</span> <span style="color:#000">==</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> (<span style="color:#000">x</span> <span style="color:#000">&gt;</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">i</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#000">P</span>[<span style="color:#000">mi</span>[<span style="color:#000">x</span>]];
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">cnt</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">while</span> (<span style="color:#000">x</span> <span style="color:#000">%</span> <span style="color:#000">p</span>[<span style="color:#000">i</span>] <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">x</span> <span style="color:#000">/=</span> <span style="color:#000">p</span>[<span style="color:#000">i</span>], <span style="color:#000">cnt</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">cnt</span> <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">continue</span>;        
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">auto</span> <span style="color:#000">lst</span> <span style="color:#000">=</span> <span style="color:#000">*</span><span style="color:#000">S</span>[<span style="color:#000">i</span>].<span style="color:#000">begin</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">flag</span> <span style="color:#000">=</span> <span style="color:#000">S</span>[<span style="color:#000">i</span>].<span style="color:#000">size</span>() <span style="color:#000">==</span> <span style="color:#000">n</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">mp</span>[<span style="color:#000">pos</span>][<span style="color:#000">i</span>] <span style="color:#000">!=</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">S</span>[<span style="color:#000">i</span>].<span style="color:#000">erase</span>(<span style="color:#000">S</span>[<span style="color:#000">i</span>].<span style="color:#000">find</span>(<span style="color:#000">mp</span>[<span style="color:#000">pos</span>][<span style="color:#000">i</span>])), <span style="color:#000">S</span>[<span style="color:#000">i</span>].<span style="color:#000">insert</span>(<span style="color:#000">cnt</span> <span style="color:#000">+</span> <span style="color:#000">mp</span>[<span style="color:#000">pos</span>][<span style="color:#000">i</span>]);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>            <span style="color:#000">S</span>[<span style="color:#000">i</span>].<span style="color:#000">insert</span>(<span style="color:#000">cnt</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">mp</span>[<span style="color:#000">pos</span>][<span style="color:#000">i</span>] <span style="color:#000">+=</span> <span style="color:#000">cnt</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">S</span>[<span style="color:#000">i</span>].<span style="color:#000">size</span>() <span style="color:#000">&lt;</span> <span style="color:#000">n</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">continue</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>            <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#000">ans</span> <span style="color:#000">*</span> <span style="color:#000">qpow</span>(<span style="color:#000">p</span>[<span style="color:#000">i</span>], <span style="color:#000">flag</span> <span style="color:#000">?</span> <span style="color:#000">*</span><span style="color:#000">S</span>[<span style="color:#000">i</span>].<span style="color:#000">begin</span>() <span style="color:#000">:</span> <span style="color:#000">*</span><span style="color:#000">S</span>[<span style="color:#000">i</span>].<span style="color:#000">begin</span>() <span style="color:#000">-</span> <span style="color:#000">lst</span>) <span style="color:#000">%</span> <span style="color:#000">mod</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">signed</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">init</span>(<span style="color:#1c01ce">2e5</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">n</span> <span style="color:#000">=</span> <span style="color:#000">read</span>(), <span style="color:#000">q</span> <span style="color:#000">=</span> <span style="color:#000">read</span>();
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">read</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#000">modify</span>(<span style="color:#000">x</span>, <span style="color:#000">i</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> (<span style="color:#000">q</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#000">i</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#000">read</span>(), <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">read</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#000">modify</span>(<span style="color:#000">x</span>, <span style="color:#000">i</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">writeln</span>(<span style="color:#000">ans</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="ehttpscodeforcescontest1493probleme"><a href="https://codeforc.es/contest/1493/problem/E">E</a></h2>
<h3 id="description-4">Description</h3>
<p>给定两个位数为 $n$ 的二进制数 $a,b$。$g(x,y)$ 为 $[x,y]$ 所有数异或起来的结果，$f(l,r)$ 为所有满足 $l\leq x\leq y\leq r$ 中 $g(x,y)$ 的最大值，求 $f(a,b)$。$n\leq10^6$​。</p>
<h3 id="solution-4">Solution</h3>
<p>不会？打表！</p>
<p>发现当 $a,b$​ 位数不同时，答案是 $2^n-1$​。</p>
<p>否则当 $a=b$ 或 $b=a+1$ 或 $b$ 是奇数时，答案是 $b$。</p>
<p>否则答案是 $b+1$。</p>
<p>证明？不会！</p>
<h3 id="code-4">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;string&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cerr</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">string</span> <span style="color:#000">a</span>, <span style="color:#000">b</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">string</span> <span style="color:#000">add</span>(<span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">string</span> <span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">n</span> <span style="color:#000">=</span> <span style="color:#000">x</span>.<span style="color:#000">size</span>();
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">string</span> <span style="color:#000">res</span> <span style="color:#000">=</span> <span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">pos</span> <span style="color:#000">=</span> <span style="color:#000">n</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (; <span style="color:#000">pos</span> <span style="color:#000">&gt;=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">pos</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">res</span>[<span style="color:#000">pos</span>] <span style="color:#000">==</span> <span style="color:#2300ce">&#39;1&#39;</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">res</span>[<span style="color:#000">pos</span>] <span style="color:#000">=</span> <span style="color:#2300ce">&#39;0&#39;</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">break</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">res</span>[<span style="color:#000">pos</span>] <span style="color:#000">=</span> <span style="color:#2300ce">&#39;1&#39;</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#000">res</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">a</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">b</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">a</span>[<span style="color:#1c01ce">0</span>] <span style="color:#000">!=</span> <span style="color:#000">b</span>[<span style="color:#1c01ce">0</span>])
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">a</span> <span style="color:#000">==</span> <span style="color:#000">b</span> <span style="color:#000">||</span> <span style="color:#000">add</span>(<span style="color:#000">a</span>) <span style="color:#000">==</span> <span style="color:#000">b</span> <span style="color:#000">||</span> <span style="color:#000">b</span>.<span style="color:#000">back</span>() <span style="color:#000">==</span> <span style="color:#2300ce">&#39;1&#39;</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">b</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">add</span>(<span style="color:#000">b</span>) <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="fhttpscodeforcescontest1493problemf"><a href="https://codeforc.es/contest/1493/problem/F">F</a></h2>
<h3 id="description-5">Description</h3>
<p><strong>这是一道交互题</strong>。</p>
<p>有一个 $n\times m$ 的矩阵，里面是正整数。（$n,m$ 给出）。</p>
<p>你可以询问两个长为 $w$，宽为 $h$ 的矩形是否完全相等。要求这两个矩形不能重叠也不能越界。</p>
<p>你需要求出所有 $(x,y)$ 的数目，满足整个矩形能用 $(1,1)-(x,y)$ 的子矩阵完全平铺出来。</p>
<p>询问次数最多 $3\times\log(n+m)$。</p>
<h3 id="solution-5">Solution</h3>
<p>很显然可以对行和列分别求解，然后把答案乘起来。</p>
<p>实际上，我们只需要求出最小循环节——枚举 $n$​ 的质因子，然后试一下它的最小质因子行不行，如果可以就除以这个最小质因子然后接着算直到 $n=1$。算完最小循环节之后就能知道最多能分成几段，那么这个段数的所有因数都是合法的。</p>
<p>也就是说我们需要在 $3$ 次询问以内判断一个串是否能被分成完全相同的若干个串。</p>
<p>我们把每个完全相同的串看成一个字符，问题就转化为询问一个字符串所有字符是否都相等。</p>
<p>设这个字符串长度为 $L$，当 $L=2$，直接问就行。</p>
<p>否则串长度一定为奇数（因为是质数）我们询问 $([1,\left\lfloor\dfrac{L}{2}\right\rfloor],[\left\lceil\dfrac{L}{2}\right\rceil,L-1])$，再询问 $([1,\left\lfloor\dfrac{L}{2}\right\rfloor],[\left\lceil\dfrac{L}{2}\right\rceil+1,L])$，如果两个都完全相等，那么这个串里的字符都相等（自己想想就懂了）。</p>
<p>于是就结束了。</p>
<h3 id="code-5">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;set&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1010</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">n</span>, <span style="color:#000">m</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">p</span>[<span style="color:#000">maxn</span> <span style="color:#000">*</span> <span style="color:#1c01ce">2</span>], <span style="color:#000">vis</span>[<span style="color:#000">maxn</span> <span style="color:#000">*</span> <span style="color:#1c01ce">2</span>], <span style="color:#000">tot</span>, <span style="color:#000">mi</span>[<span style="color:#000">maxn</span> <span style="color:#000">*</span> <span style="color:#1c01ce">2</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">ansn</span>, <span style="color:#000">ansm</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">init</span>(<span style="color:#a90d91">int</span> <span style="color:#000">n</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2000</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">mi</span>[<span style="color:#1c01ce">1</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">2</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">!</span><span style="color:#000">vis</span>[<span style="color:#000">i</span>])
</span></span><span style="display:flex;"><span>            <span style="color:#000">p</span>[<span style="color:#000">++</span><span style="color:#000">tot</span>] <span style="color:#000">=</span> <span style="color:#000">i</span>, <span style="color:#000">mi</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">i</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;=</span> <span style="color:#000">tot</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">p</span>[<span style="color:#000">j</span>] <span style="color:#000">*</span> <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">vis</span>[<span style="color:#000">i</span> <span style="color:#000">*</span> <span style="color:#000">p</span>[<span style="color:#000">j</span>]] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">mi</span>[<span style="color:#000">i</span> <span style="color:#000">*</span> <span style="color:#000">p</span>[<span style="color:#000">j</span>]] <span style="color:#000">=</span> <span style="color:#000">p</span>[<span style="color:#000">j</span>];
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">i</span> <span style="color:#000">%</span> <span style="color:#000">p</span>[<span style="color:#000">j</span>] <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">break</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">ios</span><span style="color:#000">::</span><span style="color:#000">sync_with_stdio</span>(<span style="color:#a90d91">false</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">::</span><span style="color:#000">n</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">m</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">bool</span> <span style="color:#000">ask</span>(<span style="color:#a90d91">int</span> <span style="color:#000">l</span>, <span style="color:#a90d91">int</span> <span style="color:#000">r</span>, <span style="color:#a90d91">int</span> <span style="color:#000">len</span>, <span style="color:#a90d91">bool</span> <span style="color:#000">d</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">d</span> <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34;? &#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">n</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">len</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">l</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">r</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34;? &#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">len</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">m</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">l</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">r</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">res</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">res</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#000">res</span> <span style="color:#000">==</span> <span style="color:#1c01ce">1</span> <span style="color:#000">?</span> <span style="color:#a90d91">true</span> <span style="color:#000">:</span> <span style="color:#a90d91">false</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">bool</span> <span style="color:#000">queryn</span>(<span style="color:#a90d91">int</span> <span style="color:#000">L</span>, <span style="color:#a90d91">int</span> <span style="color:#000">len</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">L</span> <span style="color:#000">==</span> <span style="color:#1c01ce">2</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#000">ask</span>(<span style="color:#1c01ce">1</span>, <span style="color:#000">len</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">len</span>, <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">mid</span> <span style="color:#000">=</span> <span style="color:#000">L</span> <span style="color:#000">/</span> <span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">len</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#000">ask</span>(<span style="color:#1c01ce">1</span>, <span style="color:#000">mid</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">mid</span>, <span style="color:#1c01ce">1</span>) <span style="color:#000">&amp;&amp;</span> <span style="color:#000">ask</span>(<span style="color:#1c01ce">1</span>, <span style="color:#000">mid</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">+</span> <span style="color:#000">len</span>, <span style="color:#000">mid</span>, <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">bool</span> <span style="color:#000">querym</span>(<span style="color:#a90d91">int</span> <span style="color:#000">L</span>, <span style="color:#a90d91">int</span> <span style="color:#000">len</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">L</span> <span style="color:#000">==</span> <span style="color:#1c01ce">2</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#000">ask</span>(<span style="color:#1c01ce">1</span>, <span style="color:#000">len</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">len</span>, <span style="color:#1c01ce">0</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">mid</span> <span style="color:#000">=</span> <span style="color:#000">L</span> <span style="color:#000">/</span> <span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">len</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#000">ask</span>(<span style="color:#1c01ce">1</span>, <span style="color:#000">mid</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">mid</span>, <span style="color:#1c01ce">0</span>) <span style="color:#000">&amp;&amp;</span> <span style="color:#000">ask</span>(<span style="color:#1c01ce">1</span>, <span style="color:#000">mid</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">+</span> <span style="color:#000">len</span>, <span style="color:#000">mid</span>, <span style="color:#1c01ce">0</span>);
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">work1</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">res</span> <span style="color:#000">=</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span> <span style="color:#000">&gt;</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">/=</span> <span style="color:#000">mi</span>[<span style="color:#000">i</span>])
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">queryn</span>(<span style="color:#000">mi</span>[<span style="color:#000">i</span>], <span style="color:#000">res</span> <span style="color:#000">/</span> <span style="color:#000">mi</span>[<span style="color:#000">i</span>]))
</span></span><span style="display:flex;"><span>            <span style="color:#000">res</span> <span style="color:#000">/=</span> <span style="color:#000">mi</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">times</span> <span style="color:#000">=</span> <span style="color:#000">n</span> <span style="color:#000">/</span> <span style="color:#000">res</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">times</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">times</span> <span style="color:#000">%</span> <span style="color:#000">i</span> <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">ans</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#000">ans</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">work2</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">res</span> <span style="color:#000">=</span> <span style="color:#000">m</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#000">m</span>; <span style="color:#000">i</span> <span style="color:#000">&gt;</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">/=</span> <span style="color:#000">mi</span>[<span style="color:#000">i</span>])
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">querym</span>(<span style="color:#000">mi</span>[<span style="color:#000">i</span>], <span style="color:#000">res</span> <span style="color:#000">/</span> <span style="color:#000">mi</span>[<span style="color:#000">i</span>]))
</span></span><span style="display:flex;"><span>            <span style="color:#000">res</span> <span style="color:#000">/=</span> <span style="color:#000">mi</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">times</span> <span style="color:#000">=</span> <span style="color:#000">m</span> <span style="color:#000">/</span> <span style="color:#000">res</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">times</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">times</span> <span style="color:#000">%</span> <span style="color:#000">i</span> <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">ans</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#000">ans</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">init</span>();
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#000">work1</span>() <span style="color:#000">*</span> <span style="color:#000">work2</span>();
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34;! &#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">ans</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div>]]></content:encoded>
    </item>
    
    <item>
      <title>Codeforces Round 344 (Div. 2)</title>
      <link>https://luoyisu.github.io/posts/cf-contest631/</link>
      <pubDate>Fri, 10 Dec 2021 15:01:44 +0000</pubDate>
      
      <guid>https://luoyisu.github.io/posts/cf-contest631/</guid>
      <description>&lt;p&gt;还算良心的比赛。&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>还算良心的比赛。</p>
<h2 id="ahttpscodeforcescontest631problema"><a href="https://codeforc.es/contest/631/problem/A">A</a></h2>
<h3 id="description">Description</h3>
<p>有两个序列 $a,b$​，定义 $f(x,l,r)$​ 为  $x$​ 序列中 $[l,r]$​ 的数或起来的结果，求所有 $l,r$​ 中，$f(a,l,r)+f(b,l,r)$​ 的最大值。</p>
<h3 id="solution">Solution</h3>
<p>发现或起来之后数不会变小，那直接全或起来就行。</p>
<h3 id="code">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#000">n</span> <span style="color:#000">=</span> <span style="color:#a90d91">int</span>(<span style="color:#a90d91">input</span>())
</span></span><span style="display:flex;"><span><span style="color:#000">a</span> <span style="color:#000">=</span> <span style="color:#a90d91">map</span>(<span style="color:#a90d91">int</span>, <span style="color:#a90d91">input</span>()<span style="color:#000">.</span><span style="color:#000">split</span>())
</span></span><span style="display:flex;"><span><span style="color:#000">b</span> <span style="color:#000">=</span> <span style="color:#a90d91">map</span>(<span style="color:#a90d91">int</span>, <span style="color:#a90d91">input</span>()<span style="color:#000">.</span><span style="color:#000">split</span>())
</span></span><span style="display:flex;"><span> 
</span></span><span style="display:flex;"><span><span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">y</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>
</span></span><span style="display:flex;"><span> 
</span></span><span style="display:flex;"><span><span style="color:#a90d91">for</span> <span style="color:#000">i</span> <span style="color:#000">in</span> <span style="color:#000">a</span>:
</span></span><span style="display:flex;"><span>    <span style="color:#000">x</span> <span style="color:#000">|=</span> <span style="color:#000">i</span>
</span></span><span style="display:flex;"><span> 
</span></span><span style="display:flex;"><span><span style="color:#a90d91">for</span> <span style="color:#000">i</span> <span style="color:#000">in</span> <span style="color:#000">b</span>:
</span></span><span style="display:flex;"><span>    <span style="color:#000">y</span> <span style="color:#000">|=</span> <span style="color:#000">i</span>
</span></span><span style="display:flex;"><span> 
</span></span><span style="display:flex;"><span><span style="color:#a90d91">print</span>(<span style="color:#000">x</span> <span style="color:#000">+</span> <span style="color:#000">y</span>)
</span></span></code></pre></div><h2 id="bhttpscodeforcescontest631problemb"><a href="https://codeforc.es/contest/631/problem/B">B</a></h2>
<h3 id="description-1">Description</h3>
<p>有一个 $n\times m$​ 的矩阵，$k$​ 次操作，每次可以把一行或一列涂成一个颜色，求最后的矩阵。$n\times m,k\leq10^5,n\leq5000,m\leq5000$​。</p>
<h3 id="solution-1">Solution</h3>
<p>对于每个行和列直接维护最后一次修改是什么颜色和这次修改的时间即可，最后直接找时间更晚的颜色输出。</p>
<h3 id="code-1">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span> 
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">5010</span>;
</span></span><span style="display:flex;"><span> 
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">col</span>[<span style="color:#000">maxn</span>], <span style="color:#000">row</span>[<span style="color:#000">maxn</span>], <span style="color:#000">tc</span>[<span style="color:#000">maxn</span>], <span style="color:#000">tr</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span> 
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">ios</span><span style="color:#000">::</span><span style="color:#000">sync_with_stdio</span>(<span style="color:#a90d91">false</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">n</span>, <span style="color:#000">m</span>, <span style="color:#000">k</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">m</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">k</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">k</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">opt</span>, <span style="color:#000">x</span>, <span style="color:#000">c</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">opt</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">x</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">c</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">opt</span> <span style="color:#000">==</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">row</span>[<span style="color:#000">x</span>] <span style="color:#000">=</span> <span style="color:#000">c</span>, <span style="color:#000">tr</span>[<span style="color:#000">x</span>] <span style="color:#000">=</span> <span style="color:#000">i</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>            <span style="color:#000">col</span>[<span style="color:#000">x</span>] <span style="color:#000">=</span> <span style="color:#000">c</span>, <span style="color:#000">tc</span>[<span style="color:#000">x</span>] <span style="color:#000">=</span> <span style="color:#000">i</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>, <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> (<span style="color:#000">tr</span>[<span style="color:#000">i</span>] <span style="color:#000">&gt;</span> <span style="color:#000">tc</span>[<span style="color:#000">j</span>] <span style="color:#000">?</span> <span style="color:#000">row</span>[<span style="color:#000">i</span>] <span style="color:#000">:</span> <span style="color:#000">col</span>[<span style="color:#000">j</span>]) <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span>;
</span></span><span style="display:flex;"><span>    
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="chttpscodeforcescontest631problemc"><a href="https://codeforc.es/contest/631/problem/C">C</a></h2>
<h3 id="description-2">Description</h3>
<p>有一个长度为 $n$ 序列 $\{a_i\}$，有 $m$​ 个人依次进行一次操作，每次操作会把序列的一个前缀升序或降序排序，求最后得到的序列。$n\leq2\times10^5$</p>
<h3 id="solution-2">Solution</h3>
<p>注意到如果上一次操作的区间比这一次小，那么上一次操作没有意义，因此我们只需要找到单调递减的一组操作：用单调栈维护。</p>
<p>维护一个从后到前的答案栈。</p>
<p>然后把原序列排个序，升序排序就是把剩下的不会被下一次操作影响的数从大到小压进栈里，降序排序就是从小到大。</p>
<h3 id="code-2">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;stack&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2e5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">top</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">a</span>[<span style="color:#000">maxn</span>], <span style="color:#000">n</span>, <span style="color:#000">m</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">struct</span> <span style="color:#3f6e75">opt</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">i</span>, <span style="color:#000">t</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">opt</span>()
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#000">t</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">opt</span>(<span style="color:#a90d91">int</span> <span style="color:#000">i_</span>, <span style="color:#a90d91">int</span> <span style="color:#000">t_</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#000">i_</span>, <span style="color:#000">t</span> <span style="color:#000">=</span> <span style="color:#000">t_</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>} <span style="color:#000">p</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">stack</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">stk</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">ios</span><span style="color:#000">::</span><span style="color:#000">sync_with_stdio</span>(<span style="color:#a90d91">false</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">m</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#000">pos</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">x</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">pos</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">while</span> (<span style="color:#000">top</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">pos</span> <span style="color:#000">&gt;=</span> <span style="color:#000">p</span>[<span style="color:#000">top</span>].<span style="color:#000">i</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">top</span><span style="color:#000">--</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">p</span>[<span style="color:#000">++</span><span style="color:#000">top</span>] <span style="color:#000">=</span> (<span style="color:#000">opt</span>){<span style="color:#000">pos</span>, <span style="color:#000">x</span>};
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">r</span> <span style="color:#000">=</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> (<span style="color:#000">r</span> <span style="color:#000">&gt;</span> <span style="color:#000">p</span>[<span style="color:#1c01ce">1</span>].<span style="color:#000">i</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">stk</span>.<span style="color:#000">push</span>(<span style="color:#000">a</span>[<span style="color:#000">r</span><span style="color:#000">--</span>]);
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">sort</span>(<span style="color:#000">a</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">a</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">+</span> <span style="color:#000">p</span>[<span style="color:#1c01ce">1</span>].<span style="color:#000">i</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">lpos</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">rpos</span> <span style="color:#000">=</span> <span style="color:#000">p</span>[<span style="color:#1c01ce">1</span>].<span style="color:#000">i</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">res</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">top</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">d</span> <span style="color:#000">=</span> <span style="color:#000">p</span>[<span style="color:#000">i</span>].<span style="color:#000">i</span> <span style="color:#000">-</span> (<span style="color:#000">i</span> <span style="color:#000">==</span> <span style="color:#000">top</span> <span style="color:#000">?</span> <span style="color:#1c01ce">0</span> <span style="color:#000">:</span> <span style="color:#000">p</span>[<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>].<span style="color:#000">i</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">p</span>[<span style="color:#000">i</span>].<span style="color:#000">t</span> <span style="color:#000">==</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;</span> <span style="color:#000">d</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">stk</span>.<span style="color:#000">push</span>(<span style="color:#000">a</span>[<span style="color:#000">rpos</span><span style="color:#000">--</span>]);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;</span> <span style="color:#000">d</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">stk</span>.<span style="color:#000">push</span>(<span style="color:#000">a</span>[<span style="color:#000">lpos</span><span style="color:#000">++</span>]);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> (<span style="color:#000">!</span><span style="color:#000">stk</span>.<span style="color:#000">empty</span>())
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">stk</span>.<span style="color:#000">top</span>() <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span>, <span style="color:#000">stk</span>.<span style="color:#000">pop</span>();
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="dhttpscodeforcescontest631problemd"><a href="https://codeforc.es/contest/631/problem/D">D</a></h2>
<h3 id="description-3">Description</h3>
<p>定义一个字符串压缩后得到的字符串是把连续相同的字符用数字+字符的形式表示。</p>
<p>给出两个压缩后的字符串 A、B（长度分别为 $n$，$m$），求 B 在 A 中出现了几次。</p>
<p>$n,m\leq2\times10^5$​。</p>
<h3 id="solution-3">Solution</h3>
<p>这显然是个 KMP，我们把 B 去除掉第一位和最后一位和 A 匹配，然后看一下第一位和最后一位是否也能匹配即可，特判一下 $m&lt;3$ 的情况。</p>
<h3 id="code-3">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2e5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">struct</span> <span style="color:#3f6e75">node</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">char</span> <span style="color:#000">ch</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">len</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">bool</span> <span style="color:#a90d91">operator</span><span style="color:#000">==</span>(<span style="color:#a90d91">const</span> <span style="color:#000">node</span> <span style="color:#000">&amp;</span><span style="color:#000">b</span>) <span style="color:#a90d91">const</span> { <span style="color:#a90d91">return</span> <span style="color:#000">ch</span> <span style="color:#000">==</span> <span style="color:#000">b</span>.<span style="color:#000">ch</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">len</span> <span style="color:#000">==</span> <span style="color:#000">b</span>.<span style="color:#000">len</span>; }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">bool</span> <span style="color:#a90d91">operator</span><span style="color:#000">!=</span>(<span style="color:#a90d91">const</span> <span style="color:#000">node</span> <span style="color:#000">&amp;</span><span style="color:#000">b</span>) <span style="color:#a90d91">const</span> { <span style="color:#a90d91">return</span> <span style="color:#000">!</span>(<span style="color:#000">*</span><span style="color:#a90d91">this</span> <span style="color:#000">==</span> <span style="color:#000">b</span>); }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">void</span> <span style="color:#000">print</span>() { <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">ch</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">len</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>; }
</span></span><span style="display:flex;"><span>} <span style="color:#000">a</span>[<span style="color:#000">maxn</span>], <span style="color:#000">b</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">char</span> <span style="color:#000">s</span>[<span style="color:#1c01ce">20</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">n</span>, <span style="color:#000">m</span>, <span style="color:#000">tota</span>, <span style="color:#000">totb</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">ans</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">solve1</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">ch</span> <span style="color:#000">==</span> <span style="color:#000">b</span>[<span style="color:#1c01ce">1</span>].<span style="color:#000">ch</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">len</span> <span style="color:#000">&gt;=</span> <span style="color:#000">b</span>[<span style="color:#1c01ce">1</span>].<span style="color:#000">len</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">ans</span> <span style="color:#000">+=</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">len</span> <span style="color:#000">-</span> <span style="color:#000">b</span>[<span style="color:#1c01ce">1</span>].<span style="color:#000">len</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">solve2</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">ch</span> <span style="color:#000">==</span> <span style="color:#000">b</span>[<span style="color:#1c01ce">1</span>].<span style="color:#000">ch</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">a</span>[<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>].<span style="color:#000">ch</span> <span style="color:#000">==</span> <span style="color:#000">b</span>[<span style="color:#1c01ce">2</span>].<span style="color:#000">ch</span> 
</span></span><span style="display:flex;"><span>            <span style="color:#000">&amp;&amp;</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">len</span> <span style="color:#000">&gt;=</span> <span style="color:#000">b</span>[<span style="color:#1c01ce">1</span>].<span style="color:#000">len</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">a</span>[<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>].<span style="color:#000">len</span> <span style="color:#000">&gt;=</span> <span style="color:#000">b</span>[<span style="color:#1c01ce">2</span>].<span style="color:#000">len</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">ans</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">nxt</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#000">node</span> <span style="color:#000">tmpb</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">tmpm</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">get_nxt</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">m</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">tmpb</span>[<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">=</span> <span style="color:#000">b</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#000">tmpm</span> <span style="color:#000">=</span> <span style="color:#000">m</span> <span style="color:#000">-</span> <span style="color:#1c01ce">2</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2</span>, <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">tmpm</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">while</span> (<span style="color:#000">j</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">tmpb</span>[<span style="color:#000">i</span>] <span style="color:#000">!=</span> <span style="color:#000">tmpb</span>[<span style="color:#000">j</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>])
</span></span><span style="display:flex;"><span>            <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#000">nxt</span>[<span style="color:#000">j</span>];
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">tmpb</span>[<span style="color:#000">i</span>] <span style="color:#000">==</span> <span style="color:#000">tmpb</span>[<span style="color:#000">j</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>])
</span></span><span style="display:flex;"><span>            <span style="color:#000">j</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">nxt</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">j</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">solve</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">get_nxt</span>();
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2</span>, <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">while</span> (<span style="color:#000">j</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>] <span style="color:#000">!=</span> <span style="color:#000">tmpb</span>[<span style="color:#000">j</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>])
</span></span><span style="display:flex;"><span>            <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#000">nxt</span>[<span style="color:#000">j</span>];
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">a</span>[<span style="color:#000">i</span>] <span style="color:#000">==</span> <span style="color:#000">tmpb</span>[<span style="color:#000">j</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>])
</span></span><span style="display:flex;"><span>            <span style="color:#000">j</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">j</span> <span style="color:#000">==</span> <span style="color:#000">tmpm</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">int</span> <span style="color:#000">pos</span> <span style="color:#000">=</span> <span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#000">tmpm</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">a</span>[<span style="color:#000">pos</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>].<span style="color:#000">ch</span> <span style="color:#000">==</span> <span style="color:#000">b</span>[<span style="color:#1c01ce">1</span>].<span style="color:#000">ch</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">a</span>[<span style="color:#000">pos</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>].<span style="color:#000">len</span> <span style="color:#000">&gt;=</span> <span style="color:#000">b</span>[<span style="color:#1c01ce">1</span>].<span style="color:#000">len</span> 
</span></span><span style="display:flex;"><span>                <span style="color:#000">&amp;&amp;</span> <span style="color:#000">a</span>[<span style="color:#000">pos</span> <span style="color:#000">+</span> <span style="color:#000">m</span> <span style="color:#000">-</span> <span style="color:#1c01ce">2</span>].<span style="color:#000">ch</span> <span style="color:#000">==</span> <span style="color:#000">b</span>[<span style="color:#000">m</span>].<span style="color:#000">ch</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">a</span>[<span style="color:#000">pos</span> <span style="color:#000">+</span> <span style="color:#000">m</span> <span style="color:#000">-</span> <span style="color:#1c01ce">2</span>].<span style="color:#000">len</span> <span style="color:#000">&gt;=</span> <span style="color:#000">b</span>[<span style="color:#000">m</span>].<span style="color:#000">len</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">ans</span><span style="color:#000">++</span>;        
</span></span><span style="display:flex;"><span>            <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#000">nxt</span>[<span style="color:#000">j</span>];
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">ios</span><span style="color:#000">::</span><span style="color:#000">sync_with_stdio</span>(<span style="color:#a90d91">false</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">m</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">a</span>[<span style="color:#1c01ce">0</span>].<span style="color:#000">ch</span> <span style="color:#000">=</span> <span style="color:#000">b</span>[<span style="color:#1c01ce">0</span>].<span style="color:#000">ch</span> <span style="color:#000">=</span> <span style="color:#2300ce">&#39;#&#39;</span>, <span style="color:#000">a</span>[<span style="color:#1c01ce">0</span>].<span style="color:#000">len</span> <span style="color:#000">=</span> <span style="color:#000">b</span>[<span style="color:#1c01ce">0</span>].<span style="color:#000">len</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">s</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">len</span> <span style="color:#000">=</span> <span style="color:#000">strlen</span>(<span style="color:#000">s</span>), <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">len</span> <span style="color:#000">-</span> <span style="color:#1c01ce">2</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">x</span> <span style="color:#000">*</span> <span style="color:#1c01ce">10</span> <span style="color:#000">+</span> <span style="color:#000">s</span>[<span style="color:#000">i</span>] <span style="color:#000">-</span> <span style="color:#2300ce">&#39;0&#39;</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">s</span>[<span style="color:#000">len</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">==</span> <span style="color:#000">a</span>[<span style="color:#000">tota</span>].<span style="color:#000">ch</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">a</span>[<span style="color:#000">tota</span>].<span style="color:#000">len</span> <span style="color:#000">+=</span> <span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>            <span style="color:#000">a</span>[<span style="color:#000">++</span><span style="color:#000">tota</span>] <span style="color:#000">=</span> {<span style="color:#000">s</span>[<span style="color:#000">len</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>], <span style="color:#000">x</span>};
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">s</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">len</span> <span style="color:#000">=</span> <span style="color:#000">strlen</span>(<span style="color:#000">s</span>), <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">len</span> <span style="color:#000">-</span> <span style="color:#1c01ce">2</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">x</span> <span style="color:#000">*</span> <span style="color:#1c01ce">10</span> <span style="color:#000">+</span> <span style="color:#000">s</span>[<span style="color:#000">i</span>] <span style="color:#000">-</span> <span style="color:#2300ce">&#39;0&#39;</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">s</span>[<span style="color:#000">len</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">==</span> <span style="color:#000">b</span>[<span style="color:#000">totb</span>].<span style="color:#000">ch</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">b</span>[<span style="color:#000">totb</span>].<span style="color:#000">len</span> <span style="color:#000">+=</span> <span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>            <span style="color:#000">b</span>[<span style="color:#000">++</span><span style="color:#000">totb</span>] <span style="color:#000">=</span> {<span style="color:#000">s</span>[<span style="color:#000">len</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>], <span style="color:#000">x</span>};
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">n</span> <span style="color:#000">=</span> <span style="color:#000">tota</span>, <span style="color:#000">m</span> <span style="color:#000">=</span> <span style="color:#000">totb</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">m</span> <span style="color:#000">==</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">solve1</span>();
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">else</span> <span style="color:#a90d91">if</span> (<span style="color:#000">m</span> <span style="color:#000">==</span> <span style="color:#1c01ce">2</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">solve2</span>();
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>        <span style="color:#000">solve</span>();
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">ans</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="ehttpscodeforcescontest631probleme"><a href="https://codeforc.es/contest/631/problem/E">E</a></h2>
<h3 id="description-4">Description</h3>
<p>给出一个长度为 $n$​ 的序列 $\{a_i\}$​，定义它的权值是 $\sum\limits_{i=1}^ni\times a_i$​，你可以将序列中一个数移动一次，求能得到的最大的权值。$n\leq2\times10^5$。​</p>
<h3 id="solution-4">Solution</h3>
<p>我们只需要最大化操作后增加的权值即可。</p>
<p>设 $f_i$​ 表示把第 $i$​ 个数移动后能得到的最大权值增加量，$sum_i$​ 为序列的前缀和。</p>
<p>$f_i=\max\limits_0^n\{(j-i)\times a_i+sum_i-sum_j\}$，直接枚举 $j$​，是 $O(n^2)$。</p>
<p>发现这是个斜率优化的形式。</p>
<p>$sum_j=j\times a_i+(sum_i-i\times a_i-f_i)$。</p>
<p>那么 $y=sum_j,x=j,k=a_i,b=sum_i-i\times a_i-f_i$​。</p>
<p>我们要最小化截距，维护一个下凸包即可。</p>
<p>这个题一开始所有的 $j$​ 都是可以用的，于是我们的下凸包是固定的，用单调栈维护。</p>
<p>斜率没有单调性，我们直接在单调栈上二分即可。</p>
<h3 id="code-4">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2e5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">typedef</span> <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">ll</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">a</span>[<span style="color:#000">maxn</span>], <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span><span style="color:#000">ll</span> <span style="color:#000">sum</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">struct</span> <span style="color:#3f6e75">node</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">ll</span> <span style="color:#000">x</span>, <span style="color:#000">y</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">node</span>() { <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">y</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; }
</span></span><span style="display:flex;"><span>    <span style="color:#000">node</span>(<span style="color:#000">ll</span> <span style="color:#000">x_</span>, <span style="color:#000">ll</span> <span style="color:#000">y_</span>) { <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">x_</span>, <span style="color:#000">y</span> <span style="color:#000">=</span> <span style="color:#000">y_</span>; }
</span></span><span style="display:flex;"><span>} <span style="color:#000">p</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">top</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">double</span> <span style="color:#000">slope</span>(<span style="color:#a90d91">const</span> <span style="color:#000">node</span> <span style="color:#000">&amp;</span><span style="color:#000">x</span>, <span style="color:#a90d91">const</span> <span style="color:#000">node</span> <span style="color:#000">&amp;</span><span style="color:#000">y</span>) { <span style="color:#a90d91">return</span> (<span style="color:#a90d91">double</span>)(<span style="color:#a90d91">double</span>(<span style="color:#000">y</span>.<span style="color:#000">y</span> <span style="color:#000">-</span> <span style="color:#000">x</span>.<span style="color:#000">y</span>)) <span style="color:#000">/</span> (<span style="color:#a90d91">double</span>(<span style="color:#000">y</span>.<span style="color:#000">x</span> <span style="color:#000">-</span> <span style="color:#000">x</span>.<span style="color:#000">x</span>)); }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000">node</span> <span style="color:#000">solve</span>(<span style="color:#000">ll</span> <span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">l</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2</span>, <span style="color:#000">r</span> <span style="color:#000">=</span> <span style="color:#000">top</span>, <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> (<span style="color:#000">l</span> <span style="color:#000">&lt;=</span> <span style="color:#000">r</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">mid</span> <span style="color:#000">=</span> (<span style="color:#000">l</span> <span style="color:#000">+</span> <span style="color:#000">r</span>) <span style="color:#000">/</span> <span style="color:#1c01ce">2</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">slope</span>(<span style="color:#000">p</span>[<span style="color:#000">mid</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>], <span style="color:#000">p</span>[<span style="color:#000">mid</span>]) <span style="color:#000">&lt;=</span> <span style="color:#a90d91">double</span>(<span style="color:#000">x</span>))
</span></span><span style="display:flex;"><span>            <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#000">mid</span>, <span style="color:#000">l</span> <span style="color:#000">=</span> <span style="color:#000">mid</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>            <span style="color:#000">r</span> <span style="color:#000">=</span> <span style="color:#000">mid</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#000">p</span>[<span style="color:#000">ans</span>];
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">ios</span><span style="color:#000">::</span><span style="color:#000">sync_with_stdio</span>(<span style="color:#a90d91">false</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">ll</span> <span style="color:#000">res</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>], <span style="color:#000">sum</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">sum</span>[<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">+</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>], <span style="color:#000">res</span> <span style="color:#000">+=</span> <span style="color:#1c01ce">1ll</span> <span style="color:#000">*</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>] <span style="color:#000">*</span> <span style="color:#000">i</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">top</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">node</span> <span style="color:#000">now</span>(<span style="color:#000">i</span>, <span style="color:#000">sum</span>[<span style="color:#000">i</span>]);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">while</span> (<span style="color:#000">top</span> <span style="color:#000">&gt;</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">slope</span>(<span style="color:#000">p</span>[<span style="color:#000">top</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>], <span style="color:#000">p</span>[<span style="color:#000">top</span>]) <span style="color:#000">&gt;=</span> <span style="color:#000">slope</span>(<span style="color:#000">p</span>[<span style="color:#000">top</span>], <span style="color:#000">now</span>))
</span></span><span style="display:flex;"><span>            <span style="color:#000">top</span><span style="color:#000">--</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">p</span>[<span style="color:#000">++</span><span style="color:#000">top</span>] <span style="color:#000">=</span> <span style="color:#000">now</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">ll</span> <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">auto</span> <span style="color:#000">now</span> <span style="color:#000">=</span> <span style="color:#000">solve</span>(<span style="color:#000">a</span>[<span style="color:#000">i</span>]);
</span></span><span style="display:flex;"><span>        <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">max</span>(<span style="color:#000">ans</span>, <span style="color:#000">-</span><span style="color:#000">now</span>.<span style="color:#000">y</span> <span style="color:#000">+</span> <span style="color:#000">now</span>.<span style="color:#000">x</span> <span style="color:#000">*</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>] <span style="color:#000">-</span> <span style="color:#1c01ce">1ll</span> <span style="color:#000">*</span> <span style="color:#000">i</span> <span style="color:#000">*</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>] <span style="color:#000">+</span> <span style="color:#000">sum</span>[<span style="color:#000">i</span>]);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">res</span> <span style="color:#000">+</span> <span style="color:#000">ans</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div>]]></content:encoded>
    </item>
    
    <item>
      <title>Codeforces Round 519</title>
      <link>https://luoyisu.github.io/posts/cf-contest1043/</link>
      <pubDate>Thu, 09 Dec 2021 13:21:40 +0000</pubDate>
      
      <guid>https://luoyisu.github.io/posts/cf-contest1043/</guid>
      <description>&lt;p&gt;好像又是没有数据结构和数学题的一天。&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>好像又是没有数据结构和数学题的一天。</p>
<h2 id="ahttpscodeforcescontest1043problema"><a href="https://codeforc.es/contest/1043/problem/A">A</a></h2>
<h3 id="description">Description</h3>
<p>有 A、B 两个人要竞选，有 $n$ 个人，每个人有 $k$ 票，其中给 B 投 $a_i$​ 票，剩下的投 A。问要使 A 的票数大于 B，$k$  最小是多少。</p>
<h3 id="solution">Solution</h3>
<p>$$
nk-\sum a_i&gt;\sum a_i\Rightarrow k&gt;\frac{2\times\sum a_i}{n}
$$</p>
<h3 id="code">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">read</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">double</span> <span style="color:#000">eps</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1e-8</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">n</span>, <span style="color:#000">sum</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>, <span style="color:#000">mx</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">x</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">read</span>(), <span style="color:#000">sum</span> <span style="color:#000">+=</span> <span style="color:#000">x</span>, <span style="color:#000">mx</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">max</span>(<span style="color:#000">mx</span>, <span style="color:#000">x</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">sum</span> <span style="color:#000">/</span> <span style="color:#000">n</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">max</span>(<span style="color:#000">ans</span>, <span style="color:#000">mx</span>) <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="bhttpscodeforcescontest1043problemb"><a href="https://codeforc.es/contest/1043/problem/B">B</a></h2>
<h3 id="description-1">Description</h3>
<p>有一个长度为 $n$ 序列 $\{a_i\}$，求满足以下条件的序列 $\{x_i\}$ 的数目：$a_i=x_{(i-1)\ \bmod\ k}+a_{i-1}$。其中 $k$ 是序列 $\{x_i\}$ 的长度。</p>
<h3 id="solution-1">Solution</h3>
<p>发现如果没有取模的限制，要求的就是差分数组，有了这个限制也就是说要找到他的循环节，那么构建一下 KMP 中的 $next$ 数组跳一跳就行。</p>
<h3 id="code-1">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">read</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1010</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">nxt</span>[<span style="color:#000">maxn</span>], <span style="color:#000">a</span>[<span style="color:#000">maxn</span>], <span style="color:#000">b</span>[<span style="color:#000">maxn</span>], <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span><span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">vector</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">ans</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">get_nxt</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">while</span> (<span style="color:#000">j</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">b</span>[<span style="color:#000">i</span>] <span style="color:#000">!=</span> <span style="color:#000">b</span>[<span style="color:#000">j</span>])
</span></span><span style="display:flex;"><span>            <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#000">nxt</span>[<span style="color:#000">j</span>];
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">b</span>[<span style="color:#000">i</span>] <span style="color:#000">==</span> <span style="color:#000">b</span>[<span style="color:#000">j</span>])
</span></span><span style="display:flex;"><span>            <span style="color:#000">j</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">nxt</span>[<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">=</span> <span style="color:#000">j</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">solve</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">now</span> <span style="color:#000">=</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> (<span style="color:#000">now</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">ans</span>.<span style="color:#000">push_back</span>(<span style="color:#000">n</span> <span style="color:#000">-</span> <span style="color:#000">nxt</span>[<span style="color:#000">now</span>]);
</span></span><span style="display:flex;"><span>        <span style="color:#000">now</span> <span style="color:#000">=</span> <span style="color:#000">nxt</span>[<span style="color:#000">now</span>];
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">ans</span>.<span style="color:#000">size</span>() <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> : <span style="color:#000">ans</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">i</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;   
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">b</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">a</span>[<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">-</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#000">get_nxt</span>();
</span></span><span style="display:flex;"><span>    <span style="color:#000">solve</span>();
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="chttpscodeforcescontest1043problemc"><a href="https://codeforc.es/contest/1043/problem/C">C</a></h2>
<h3 id="description-2">Description</h3>
<p>有一个只有 <code>a</code> 和 <code>b</code> 的字符串，从前往后扫一遍，在每一位你可以选择将其前缀翻转，问如何操作得到字符串字典序最小。</p>
<h3 id="solution-2">Solution</h3>
<p>假如我们得到了当前这一位之前的操作方案，且这一位是 <code>a</code>，我们显然需要把这个 <code>a</code> 翻转到前面去。那么我们把前一位翻转一下，再把这一位翻转一下即可。</p>
<h3 id="code-2">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">read</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1010</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">char</span> <span style="color:#000">s</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">ans</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">s</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">n</span> <span style="color:#000">=</span> <span style="color:#000">strlen</span>(<span style="color:#000">s</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">s</span>[<span style="color:#000">i</span>] <span style="color:#000">==</span> <span style="color:#2300ce">&#39;a&#39;</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">ans</span>[<span style="color:#000">i</span>] <span style="color:#000">^=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">ans</span>[<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">^=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">ans</span>[<span style="color:#000">i</span>] <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>    
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="dhttpscodeforcescontest1043problemd"><a href="https://codeforc.es/contest/1043/problem/D">D</a></h2>
<h3 id="description-3">Description</h3>
<p>有 $m$ 个长度为 $n$ 的 $1\sim n$​ 的排列。你可以对一个排列删除任意长度的前缀或后缀（可以不删或只删前缀或只删后缀），但不能删空。最终使得到的排列全都相同，求删除的方案数。$m\leq10,n\leq10^5$​​。</p>
<h3 id="solution-3">Solution</h3>
<p>对于第一个排列中的一个子序列，发现它合法等价于其他所有排列中也存在这个子序列，那么我们只需要考虑第一个排列中的所有合法子序列长度即可。</p>
<p>对于一个长度为 $n$ 的合法子序列，他对答案的贡献是 $n+\dfrac{(n\times(n-1))}{2}=\dfrac{n\times(n+1)}{2}$​​，即任意选一个或任意选两个。</p>
<p>求所有子序列的长度可以用类似双指针的算法实现。</p>
<h3 id="code-3">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;map&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;utility&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cerr</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">namespace</span> <span style="color:#000">IO</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>	<span style="color:#177500">// 为了简短代码省略了
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>}
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#a90d91">namespace</span> <span style="color:#000">IO</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1e5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>, <span style="color:#000">maxm</span> <span style="color:#000">=</span> <span style="color:#1c01ce">15</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">b</span>[<span style="color:#000">maxm</span>][<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">a</span>[<span style="color:#000">maxm</span>][<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">n</span>, <span style="color:#000">m</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">len</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">bool</span> <span style="color:#000">check</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">a</span>[<span style="color:#000">i</span>][<span style="color:#000">b</span>[<span style="color:#000">i</span>][<span style="color:#000">x</span>] <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">!=</span> <span style="color:#000">y</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">return</span> <span style="color:#a90d91">false</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#a90d91">true</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">n</span> <span style="color:#000">=</span> <span style="color:#000">read</span>(), <span style="color:#000">m</span> <span style="color:#000">=</span> <span style="color:#000">read</span>();
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">a</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>] <span style="color:#000">=</span> <span style="color:#000">read</span>(), <span style="color:#000">b</span>[<span style="color:#000">i</span>][<span style="color:#000">a</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>]] <span style="color:#000">=</span> <span style="color:#000">j</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">l</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">r</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (; <span style="color:#000">l</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">l</span> <span style="color:#000">=</span> <span style="color:#000">r</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">len</span>[<span style="color:#000">l</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">r</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">while</span> (<span style="color:#000">r</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">check</span>(<span style="color:#000">a</span>[<span style="color:#1c01ce">1</span>][<span style="color:#000">r</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>], <span style="color:#000">a</span>[<span style="color:#1c01ce">1</span>][<span style="color:#000">r</span>]))
</span></span><span style="display:flex;"><span>            <span style="color:#000">r</span><span style="color:#000">++</span>, <span style="color:#000">len</span>[<span style="color:#000">l</span>]<span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">ans</span> <span style="color:#000">+=</span> <span style="color:#1c01ce">1ll</span> <span style="color:#000">*</span> <span style="color:#000">len</span>[<span style="color:#000">i</span>] <span style="color:#000">*</span> (<span style="color:#000">len</span>[<span style="color:#000">i</span>] <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>) <span style="color:#000">/</span> <span style="color:#1c01ce">2</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">ans</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="ehttpscodeforcescontest1043probleme"><a href="https://codeforc.es/contest/1043/problem/E">E</a></h2>
<h3 id="description-4">Description</h3>
<p>有 $n$​ 个人，给出 $m$​ 组互相不喜欢的人，每个人与他喜欢的人都要组队一次，组队之后要挑战两个任务 A、B，每个人对 A、B 有一个不擅长程度 $x_i,y_i$​​​​​，组队时每人挑战其中一个任务，一次组队的不擅长程度是做两个任务的人对应的不擅长程度之和，并希望最小化这次组队的不擅长程度。</p>
<p>需要求出每个人所有组队的不擅长程度之和。</p>
<p>$n\leq3\times10^5,m\leq3\times10^5$​。​</p>
<p>（建议参考原题面和样例三，我尽力讲明白了）</p>
<h3 id="solution-4">Solution</h3>
<p>对于每次组队 $(x,y)$，不擅长程度是 $\min(x_i+y_j,x_j+y_i)$，也就是说每次组队的和只有两种，且选哪种是很确定的，我们考虑一个贪心。</p>
<p>选 $x_i+y_j$​​ 当且仅当 $x_i+y_j&lt;x_j+y_i\Leftrightarrow x_i-y_i&lt;x_j-y_j$​​，那么我们按照 $x_i-y_i$​​​ 从小到大排序，对于一个人，他和前面的人组队一定取 $x_i+y_j$​​，和后面的人组队一定取 $x_j+y_i$。</p>
<p>对 $x_i,y_i$​ 搞一个前缀和就能很方便统计答案。有边的提前减掉就行。</p>
<h3 id="code-4">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;map&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;utility&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cerr</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">namespace</span> <span style="color:#000">IO</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>	<span style="color:#177500">// 省略了
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>}
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#a90d91">namespace</span> <span style="color:#000">IO</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">3e5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">typedef</span> <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">ll</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">vector</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">e</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">add</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>) { <span style="color:#000">e</span>[<span style="color:#000">x</span>].<span style="color:#000">push_back</span>(<span style="color:#000">y</span>), <span style="color:#000">e</span>[<span style="color:#000">y</span>].<span style="color:#000">push_back</span>(<span style="color:#000">x</span>); }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">struct</span> <span style="color:#3f6e75">node</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">i</span>, <span style="color:#000">j</span>, <span style="color:#000">pos</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">ll</span> <span style="color:#000">ans</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">bool</span> <span style="color:#a90d91">operator</span><span style="color:#000">&lt;</span>(<span style="color:#a90d91">const</span> <span style="color:#000">node</span> <span style="color:#000">&amp;</span><span style="color:#000">b</span>) <span style="color:#a90d91">const</span> { <span style="color:#a90d91">return</span> <span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#000">j</span> <span style="color:#000">&lt;</span> <span style="color:#000">b</span>.<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#000">b</span>.<span style="color:#000">j</span>; }
</span></span><span style="display:flex;"><span>} <span style="color:#000">a</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">bool</span> <span style="color:#000">cmppos</span>(<span style="color:#a90d91">const</span> <span style="color:#000">node</span> <span style="color:#000">&amp;</span><span style="color:#000">a</span>, <span style="color:#a90d91">const</span> <span style="color:#000">node</span> <span style="color:#000">&amp;</span><span style="color:#000">b</span>) { <span style="color:#a90d91">return</span> <span style="color:#000">a</span>.<span style="color:#000">pos</span> <span style="color:#000">&lt;</span> <span style="color:#000">b</span>.<span style="color:#000">pos</span>; }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">n</span>, <span style="color:#000">m</span>;
</span></span><span style="display:flex;"><span><span style="color:#000">ll</span> <span style="color:#000">down</span>[<span style="color:#000">maxn</span>], <span style="color:#000">up</span>[<span style="color:#000">maxn</span>], <span style="color:#000">ans</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">n</span> <span style="color:#000">=</span> <span style="color:#000">read</span>(), <span style="color:#000">m</span> <span style="color:#000">=</span> <span style="color:#000">read</span>();
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#000">read</span>(), <span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#000">read</span>(), <span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">pos</span> <span style="color:#000">=</span> <span style="color:#000">i</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">m</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">add</span>(<span style="color:#000">read</span>(), <span style="color:#000">read</span>());
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> : <span style="color:#000">e</span>[<span style="color:#000">i</span>])
</span></span><span style="display:flex;"><span>            <span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">ans</span> <span style="color:#000">-=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">min</span>(<span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#000">a</span>[<span style="color:#000">j</span>].<span style="color:#000">j</span>, <span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">j</span> <span style="color:#000">+</span> <span style="color:#000">a</span>[<span style="color:#000">j</span>].<span style="color:#000">i</span>);    
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">sort</span>(<span style="color:#000">a</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">a</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">+</span> <span style="color:#000">n</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">down</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">down</span>[<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">+</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">i</span>, <span style="color:#000">up</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">up</span>[<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">+</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">j</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">ans</span> <span style="color:#000">+=</span> <span style="color:#1c01ce">1ll</span> <span style="color:#000">*</span> (<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>) <span style="color:#000">*</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">j</span> <span style="color:#000">+</span> <span style="color:#000">down</span>[<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>];
</span></span><span style="display:flex;"><span>        <span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">ans</span> <span style="color:#000">+=</span> <span style="color:#1c01ce">1ll</span> <span style="color:#000">*</span> (<span style="color:#000">n</span> <span style="color:#000">-</span> <span style="color:#000">i</span>) <span style="color:#000">*</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#000">up</span>[<span style="color:#000">n</span>] <span style="color:#000">-</span> <span style="color:#000">up</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">sort</span>(<span style="color:#000">a</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">a</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">+</span> <span style="color:#000">n</span>, <span style="color:#000">cmppos</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">ans</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="fhttpscodeforcescontest1043problemf"><a href="https://codeforc.es/contest/1043/problem/F">F</a></h2>
<h3 id="description-5">Description</h3>
<p>有 $n$ 个数的集合 $\{a_i\}$，求它的最小子集的大小，使其中数的最大公约数是 $1$。$n\leq3\times10^5,a_i\leq3\times10^5$。</p>
<h3 id="solution-5">Solution</h3>
<p>能发现答案最大是 $7$，一个数最多只有 $6$ 个公约数。那么我们可以从小到大枚举答案。</p>
<p>然后就不会了，看了题解：</p>
<p>存在性问题可以转化为求方案数。</p>
<p>$f(i,j)$ 表示选了 $i$ 个数，当前 gcd 是 $j$​ 的方案数。</p>
<p>$f(i,j)=C_{cnt_j}^i-\sum f(i,k)$​，其中 $cnt_j$ 表示是 $j$ 倍数的数的个数，$k$ 是 $j$ 的倍数。</p>
<p>解释一下：所有倍数减去不是最大公约数的。</p>
<h3 id="code-5">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;map&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;utility&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cerr</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">typedef</span> <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">ll</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">3e5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">N</span> <span style="color:#000">=</span> <span style="color:#1c01ce">3e5</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000">ll</span> <span style="color:#000">fac</span>[<span style="color:#000">maxn</span>], <span style="color:#000">ifac</span>[<span style="color:#000">maxn</span>], <span style="color:#000">f</span>[<span style="color:#1c01ce">10</span>][<span style="color:#000">maxn</span>], <span style="color:#000">cnt</span>[<span style="color:#000">maxn</span>], <span style="color:#000">mod</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1e9</span> <span style="color:#000">+</span> <span style="color:#1c01ce">7</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000">ll</span> <span style="color:#000">qpow</span>(<span style="color:#000">ll</span> <span style="color:#000">a</span>, <span style="color:#000">ll</span> <span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">ll</span> <span style="color:#000">res</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (; <span style="color:#000">x</span>; <span style="color:#000">x</span> <span style="color:#000">&gt;&gt;=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">a</span> <span style="color:#000">=</span> <span style="color:#000">a</span> <span style="color:#000">*</span> <span style="color:#000">a</span> <span style="color:#000">%</span> <span style="color:#000">mod</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">x</span> <span style="color:#000">&amp;</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">res</span> <span style="color:#000">=</span> <span style="color:#000">res</span> <span style="color:#000">*</span> <span style="color:#000">a</span> <span style="color:#000">%</span> <span style="color:#000">mod</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#000">res</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">init</span>(<span style="color:#a90d91">int</span> <span style="color:#000">n</span> <span style="color:#000">=</span> <span style="color:#1c01ce">3e5</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">fac</span>[<span style="color:#1c01ce">0</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">fac</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">fac</span>[<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">*</span> <span style="color:#000">i</span> <span style="color:#000">%</span> <span style="color:#000">mod</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">ifac</span>[<span style="color:#000">n</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">=</span> <span style="color:#000">qpow</span>(<span style="color:#000">fac</span>[<span style="color:#000">n</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>], <span style="color:#000">mod</span> <span style="color:#000">-</span> <span style="color:#1c01ce">2</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span> <span style="color:#000">&gt;=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">ifac</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">ifac</span>[<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">*</span> (<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>) <span style="color:#000">%</span> <span style="color:#000">mod</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#000">ll</span> <span style="color:#000">C</span>(<span style="color:#a90d91">int</span> <span style="color:#000">n</span>, <span style="color:#a90d91">int</span> <span style="color:#000">m</span>) { <span style="color:#a90d91">return</span> <span style="color:#000">m</span> <span style="color:#000">&lt;</span> <span style="color:#1c01ce">0</span> <span style="color:#000">||</span> <span style="color:#000">n</span> <span style="color:#000">&lt;</span> <span style="color:#1c01ce">0</span> <span style="color:#000">||</span> <span style="color:#000">n</span> <span style="color:#000">&lt;</span> <span style="color:#000">m</span> <span style="color:#000">?</span> <span style="color:#1c01ce">0</span> <span style="color:#000">:</span> <span style="color:#000">fac</span>[<span style="color:#000">n</span>] <span style="color:#000">*</span> <span style="color:#000">ifac</span>[<span style="color:#000">m</span>] <span style="color:#000">%</span> <span style="color:#000">mod</span> <span style="color:#000">*</span> <span style="color:#000">ifac</span>[<span style="color:#000">n</span> <span style="color:#000">-</span> <span style="color:#000">m</span>] <span style="color:#000">%</span> <span style="color:#000">mod</span>; }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">upd</span>(<span style="color:#000">ll</span> <span style="color:#000">&amp;</span><span style="color:#000">x</span>, <span style="color:#000">ll</span> <span style="color:#000">y</span>) { <span style="color:#000">x</span> <span style="color:#000">-=</span> <span style="color:#000">y</span>, <span style="color:#000">x</span> <span style="color:#000">+=</span> <span style="color:#000">mod</span>, <span style="color:#000">x</span> <span style="color:#000">%=</span> <span style="color:#000">mod</span>; }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">n</span> <span style="color:#000">=</span> <span style="color:#000">read</span>();
</span></span><span style="display:flex;"><span>    <span style="color:#000">init</span>();
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">cnt</span>[<span style="color:#000">read</span>()]<span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">N</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#000">i</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;=</span> <span style="color:#000">N</span>; <span style="color:#000">j</span> <span style="color:#000">+=</span> <span style="color:#000">i</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">cnt</span>[<span style="color:#000">i</span>] <span style="color:#000">+=</span> <span style="color:#000">cnt</span>[<span style="color:#000">j</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#1c01ce">10</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#000">N</span>; <span style="color:#000">j</span> <span style="color:#000">&gt;=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">j</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">f</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>] <span style="color:#000">=</span> <span style="color:#000">C</span>(<span style="color:#000">cnt</span>[<span style="color:#000">j</span>], <span style="color:#000">i</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">k</span> <span style="color:#000">=</span> <span style="color:#000">j</span> <span style="color:#000">+</span> <span style="color:#000">j</span>; <span style="color:#000">k</span> <span style="color:#000">&lt;=</span> <span style="color:#000">N</span>; <span style="color:#000">k</span> <span style="color:#000">+=</span> <span style="color:#000">j</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">upd</span>(<span style="color:#000">f</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>], <span style="color:#000">f</span>[<span style="color:#000">i</span>][<span style="color:#000">k</span>]);
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">f</span>[<span style="color:#000">i</span>][<span style="color:#1c01ce">1</span>] <span style="color:#000">&gt;</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">writeln</span>(<span style="color:#000">i</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">return</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">writeln</span>(<span style="color:#000">-</span><span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="ghttpscodeforcescontest1043"><a href="https://codeforc.es/contest/1043">G</a></h2>
<p>不会，好像要后缀数组。</p>]]></content:encoded>
    </item>
    
    <item>
      <title>Codeforces Round 380 (Div. 2)</title>
      <link>https://luoyisu.github.io/posts/cf-contest738/</link>
      <pubDate>Wed, 08 Dec 2021 11:49:18 +0000</pubDate>
      
      <guid>https://luoyisu.github.io/posts/cf-contest738/</guid>
      <description>&lt;p&gt;好像不是非常难。&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>好像不是非常难。</p>
<h2 id="ahttpscodeforcescontest738problema"><a href="https://codeforc.es/contest/738/problem/A">A</a></h2>
<h3 id="description">Description</h3>
<p>给一个字符串，将所有形如 <code>ogo</code> + <code>gogogogo...</code> 的串变为 <code>***</code>，输出字符串。</p>
<h3 id="solution">Solution</h3>
<p>模拟。</p>
<h3 id="code">Code</h3>
<p>尝试用 python 水过去（）</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#000">n</span> <span style="color:#000">=</span> <span style="color:#a90d91">int</span>(<span style="color:#a90d91">input</span>())
</span></span><span style="display:flex;"><span><span style="color:#000">s</span> <span style="color:#000">=</span> <span style="color:#a90d91">input</span>()
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000">l</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">while</span> <span style="color:#000">l</span> <span style="color:#000">&lt;</span> <span style="color:#000">n</span>:
</span></span><span style="display:flex;"><span>    <span style="color:#000">pos</span> <span style="color:#000">=</span> <span style="color:#000">s</span><span style="color:#000">.</span><span style="color:#000">find</span>(<span style="color:#c41a16">&#39;ogo&#39;</span>, <span style="color:#000">l</span>)
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> <span style="color:#000">pos</span> <span style="color:#000">==</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span>:
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">break</span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">print</span>(<span style="color:#000">s</span>[<span style="color:#000">l</span>:<span style="color:#000">pos</span>], <span style="color:#000">end</span> <span style="color:#000">=</span> <span style="color:#c41a16">&#39;&#39;</span>)
</span></span><span style="display:flex;"><span>    <span style="color:#000">l</span> <span style="color:#000">=</span> <span style="color:#000">pos</span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> <span style="color:#000">l</span> <span style="color:#000">&lt;</span> <span style="color:#000">n</span> <span style="color:#000">-</span> <span style="color:#1c01ce">2</span> <span style="color:#000">and</span> <span style="color:#000">s</span>[<span style="color:#000">l</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>:<span style="color:#000">l</span> <span style="color:#000">+</span> <span style="color:#1c01ce">3</span>] <span style="color:#000">==</span> <span style="color:#c41a16">&#39;go&#39;</span>:
</span></span><span style="display:flex;"><span>        <span style="color:#000">l</span> <span style="color:#000">+=</span> <span style="color:#1c01ce">2</span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">print</span>(<span style="color:#c41a16">&#39;***&#39;</span>, <span style="color:#000">end</span> <span style="color:#000">=</span> <span style="color:#c41a16">&#39;&#39;</span>)
</span></span><span style="display:flex;"><span>    <span style="color:#000">l</span> <span style="color:#000">+=</span> <span style="color:#1c01ce">1</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">print</span>(<span style="color:#000">s</span>[<span style="color:#000">l</span>:])
</span></span></code></pre></div><h2 id="bhttpscodeforcescontest738problemb"><a href="https://codeforc.es/contest/738/problem/B">B</a></h2>
<h3 id="description-1">Description</h3>
<p>有一个 $n\times m$​ 的舞台，给出每个点有没有人，在空的地方可以放灯，往上下左右其中一个方向打光。一个灯光合法当且仅当这个方向有人，位置相同方向不同的灯光算不同的灯光，求合法灯光总数。</p>
<h3 id="solution-1">Solution</h3>
<p>对每个方向做一个前缀和，然后算一下就行。</p>
<h3 id="code-1">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1e3</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">up</span>[<span style="color:#000">maxn</span>][<span style="color:#000">maxn</span>], <span style="color:#000">down</span>[<span style="color:#000">maxn</span>][<span style="color:#000">maxn</span>], <span style="color:#000">left</span>[<span style="color:#000">maxn</span>][<span style="color:#000">maxn</span>], <span style="color:#000">right</span>[<span style="color:#000">maxn</span>][<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">a</span>[<span style="color:#000">maxn</span>][<span style="color:#000">maxn</span>], <span style="color:#000">n</span>, <span style="color:#000">m</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">m</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">left</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>] <span style="color:#000">=</span> <span style="color:#000">left</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">+</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>];
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#000">m</span>; <span style="color:#000">j</span> <span style="color:#000">&gt;=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">j</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">right</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>] <span style="color:#000">=</span> <span style="color:#000">right</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">+</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>];
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">up</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>] <span style="color:#000">=</span> <span style="color:#000">up</span>[<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>][<span style="color:#000">j</span>] <span style="color:#000">+</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>];
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span> <span style="color:#000">&gt;=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">down</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>] <span style="color:#000">=</span> <span style="color:#000">down</span>[<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>][<span style="color:#000">j</span>] <span style="color:#000">+</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>];
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">!</span><span style="color:#000">a</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>])
</span></span><span style="display:flex;"><span>            {
</span></span><span style="display:flex;"><span>                <span style="color:#000">ans</span> <span style="color:#000">+=</span> <span style="color:#000">up</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>] <span style="color:#000">?</span> <span style="color:#1c01ce">1</span> <span style="color:#000">:</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>                <span style="color:#000">ans</span> <span style="color:#000">+=</span> <span style="color:#000">left</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>] <span style="color:#000">?</span> <span style="color:#1c01ce">1</span> <span style="color:#000">:</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>                <span style="color:#000">ans</span> <span style="color:#000">+=</span> <span style="color:#000">down</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>] <span style="color:#000">?</span> <span style="color:#1c01ce">1</span> <span style="color:#000">:</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>                <span style="color:#000">ans</span> <span style="color:#000">+=</span> <span style="color:#000">right</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>] <span style="color:#000">?</span> <span style="color:#1c01ce">1</span> <span style="color:#000">:</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>            }
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">ans</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="chttpscodeforcescontest738problemc"><a href="https://codeforc.es/contest/738/problem/C">C</a></h2>
<h3 id="description-2">Description</h3>
<p>你在 $0$ 处，需要在 $t$ 时间之前沿直线开车到达距离为 $s$ 的电影院，路上有 $k$ 个加油站，经过一个加油站时会免费加满油，有 $n$ 辆车，每辆车有价钱和油箱容量，初始时油箱会满油，一升油可以在 2min 中走 1km，也可以在 0.5min 中走 0.5km。问最少需要花多少钱。</p>
<h3 id="solution-2">Solution</h3>
<p>不难发现油箱容量是有单调性的，二分出最小的能满足题意的油箱容量（check 只需要模拟即可）。</p>
<p>然后找一个油箱不小于它的价钱最小的车即可。注意若 $s&gt;t$，肯定无解。</p>
<h3 id="code-2">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2e5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">struct</span> <span style="color:#3f6e75">car</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">c</span>, <span style="color:#000">v</span>;
</span></span><span style="display:flex;"><span>} <span style="color:#000">cars</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">n</span>, <span style="color:#000">k</span>, <span style="color:#000">s</span>, <span style="color:#000">t</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">a</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">bool</span> <span style="color:#000">check</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">now</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>, <span style="color:#000">time</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">k</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">dis</span> <span style="color:#000">=</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>] <span style="color:#000">-</span> <span style="color:#000">now</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">dis</span> <span style="color:#000">*</span> <span style="color:#1c01ce">2</span> <span style="color:#000">&lt;=</span> <span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">time</span> <span style="color:#000">+=</span> <span style="color:#000">dis</span>, <span style="color:#000">now</span> <span style="color:#000">=</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span> <span style="color:#a90d91">if</span> (<span style="color:#000">x</span> <span style="color:#000">&gt;=</span> <span style="color:#000">dis</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">time</span> <span style="color:#000">+=</span> <span style="color:#000">dis</span> <span style="color:#000">*</span> <span style="color:#1c01ce">2</span> <span style="color:#000">-</span> (<span style="color:#000">x</span> <span style="color:#000">-</span> <span style="color:#000">dis</span>), <span style="color:#000">now</span> <span style="color:#000">=</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">return</span> <span style="color:#a90d91">false</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#000">time</span> <span style="color:#000">&lt;=</span> <span style="color:#000">t</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">ios</span><span style="color:#000">::</span><span style="color:#000">sync_with_stdio</span>(<span style="color:#a90d91">false</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">k</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">s</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">t</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">cars</span>[<span style="color:#000">i</span>].<span style="color:#000">c</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">cars</span>[<span style="color:#000">i</span>].<span style="color:#000">v</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">k</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#000">a</span>[<span style="color:#000">++</span><span style="color:#000">k</span>] <span style="color:#000">=</span> <span style="color:#000">s</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">s</span> <span style="color:#000">&gt;</span> <span style="color:#000">t</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">puts</span>(<span style="color:#c41a16">&#34;-1&#34;</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">sort</span>(<span style="color:#000">a</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">a</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">+</span> <span style="color:#000">k</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">l</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">r</span> <span style="color:#000">=</span> <span style="color:#000">s</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#000">r</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> (<span style="color:#000">l</span> <span style="color:#000">&lt;=</span> <span style="color:#000">r</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">mid</span> <span style="color:#000">=</span> (<span style="color:#000">l</span> <span style="color:#000">+</span> <span style="color:#000">r</span>) <span style="color:#000">/</span> <span style="color:#1c01ce">2</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">check</span>(<span style="color:#000">mid</span>))
</span></span><span style="display:flex;"><span>            <span style="color:#000">r</span> <span style="color:#000">=</span> <span style="color:#000">mid</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#000">mid</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>            <span style="color:#000">l</span> <span style="color:#000">=</span> <span style="color:#000">mid</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">mi</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">30</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">cars</span>[<span style="color:#000">i</span>].<span style="color:#000">v</span> <span style="color:#000">&gt;=</span> <span style="color:#000">ans</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">mi</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">min</span>(<span style="color:#000">mi</span>, <span style="color:#000">cars</span>[<span style="color:#000">i</span>].<span style="color:#000">c</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">mi</span> <span style="color:#000">==</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">30</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">puts</span>(<span style="color:#c41a16">&#34;-1&#34;</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">mi</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="dhttpscodeforcescontest738problemd"><a href="https://codeforc.es/contest/738/problem/D">D</a></h2>
<h3 id="description-3">Description</h3>
<p>有 $a$ 艘船，每艘船长度为 $b$，总共有 $n$​ 个位置，其中给出 $k$ 个已经进行过射击且没有船的位置，问最少打几次一定能打到船并输出方案。（建议看原题面加强理解）</p>
<h3 id="solution-3">Solution</h3>
<p>一个地方可能有船当且仅当有连续 $b$ 个 $0$，对于这种地方，我们打最后面就行。</p>
<p>然后处理出可能有船的所有地方，根据雀巢原理（？），设所有可能有船的地方有 $x$ 个，我们只需要打其中 $x-a+1$ 个地方即可。</p>
<h3 id="code-3">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2e5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">char</span> <span style="color:#000">s</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">n</span>, <span style="color:#000">a</span>, <span style="color:#000">b</span>, <span style="color:#000">k</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">a</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">b</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">k</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">s</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">vector</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">ans</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">now</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">s</span>[<span style="color:#000">i</span>] <span style="color:#000">==</span> <span style="color:#2300ce">&#39;1&#39;</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">now</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">now</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">now</span> <span style="color:#000">==</span> <span style="color:#000">b</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">now</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>, <span style="color:#000">ans</span>.<span style="color:#000">push_back</span>(<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">ans</span>.<span style="color:#000">size</span>() <span style="color:#000">-</span> <span style="color:#000">a</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">ans</span>.<span style="color:#000">size</span>() <span style="color:#000">-</span> <span style="color:#000">a</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">ans</span>[<span style="color:#000">i</span>] <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="ehttpscodeforcescontest738probleme"><a href="https://codeforc.es/contest/738/problem/E">E</a></h2>
<h3 id="description-4">Description</h3>
<p>有一颗 $n$ 个点的树，给出每个点的祖先数，并指定一个点是根。问最少有几个点的祖先数是错的。</p>
<h3 id="solution-4">Solution</h3>
<p>考虑一个点的祖先数一定是他父亲的祖先数加上一，那么所有点的祖先数排序之后一定是一个连续的非严格单调递增的序列。</p>
<p>我们从小到大枚举祖先数，当没有任何一个点的祖先数是当前这个点时，我们把一个祖先数最大的点改过来就行，直到所有点都处理完。注意处理一下根。</p>
<h3 id="code-4">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2e5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">a</span>[<span style="color:#000">maxn</span>], <span style="color:#000">b</span>[<span style="color:#000">maxn</span>], <span style="color:#000">n</span>, <span style="color:#000">s</span>, <span style="color:#000">ans</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">s</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">i</span> <span style="color:#000">==</span> <span style="color:#000">s</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">ans</span> <span style="color:#000">+=</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>] <span style="color:#000">&gt;</span> <span style="color:#1c01ce">0</span>;        
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>            <span style="color:#000">b</span>[<span style="color:#000">a</span>[<span style="color:#000">i</span>]]<span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">cnt</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">cnt</span> <span style="color:#000">&lt;</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">!</span><span style="color:#000">b</span>[<span style="color:#000">i</span>])
</span></span><span style="display:flex;"><span>            <span style="color:#000">cnt</span><span style="color:#000">++</span>, <span style="color:#000">ans</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>            <span style="color:#000">cnt</span> <span style="color:#000">+=</span> <span style="color:#000">b</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">ans</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="fhttpscodeforcescontest738problemf"><a href="https://codeforc.es/contest/738/problem/F">F</a></h2>
<h3 id="description-5">Description</h3>
<p>有 $n$​ 个数。A、B 两个人轮流取数，A 从左取，B 从右取。A 先取。假如上一个人取了 $k$ 个数，那么这个人只能取 $k$ 或 $k+1$​ 个数。初始时 $k=1$。当取不了或取完时，游戏结束。A 想最大化他取的数的和 $a$，B 想最小化他去的数 $b$​。求这两个数差的最大值。$n\leq4000$​​，空间 512MB。</p>
<h3 id="solution-5">Solution</h3>
<p>我以前对博弈论有个误解，以为只要是玩游戏就是博弈论，今天才知道博弈论是研究谁必胜的，这种最优化问题和 $SG$ 函数没关系。</p>
<p>最优化，考虑一个 DP，$f(l,r,k,0/1)$​ 表示当前左面该取 $l$，右面该取 $r$，当前的 $k$，轮到 A/B 取的答案。</p>
<p>状态数看起来是 $O(n^3)$​ 的，转移是 $O(1)$ 的。但实际上发现 $k$ 是 $O(\sqrt n)$ 级别的，又发现对于一个确定的 $l$，可能的 $r$ 总数是 $O(k)=O(\sqrt n)$ 级别的，也就是说合法的状态数总共只有 $O(n^2)$​ 个。转移挺简单的，但是需要注意一些细节。</p>
<p>那么我们可以使用记忆化搜索来找到答案。</p>
<p>注意直接开数组会 MLE，我们可以把所有可行的状态哈希一下用哈希表存储。（新学到的点）</p>
<h3 id="code-5">Code</h3>
<p>不知道为什么，用 <code>unordered_map</code>  会 TLE，手写就不会，看来还是慎用比较好。</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">4e4</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>, <span style="color:#000">maxm</span> <span style="color:#000">=</span> <span style="color:#1c01ce">5e7</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>, <span style="color:#000">mod</span> <span style="color:#000">=</span> <span style="color:#1c01ce">10000019</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">a</span>[<span style="color:#000">maxn</span>], <span style="color:#000">n</span>, <span style="color:#000">sum</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">int</span> <span style="color:#000">s</span>(<span style="color:#a90d91">int</span> <span style="color:#000">l</span>, <span style="color:#a90d91">int</span> <span style="color:#000">r</span>) { <span style="color:#a90d91">return</span> <span style="color:#000">l</span> <span style="color:#000">&gt;</span> <span style="color:#000">r</span> <span style="color:#000">?</span> <span style="color:#1c01ce">0</span> <span style="color:#000">:</span> <span style="color:#000">sum</span>[<span style="color:#000">r</span>] <span style="color:#000">-</span> <span style="color:#000">sum</span>[<span style="color:#000">l</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>]; }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">struct</span> <span style="color:#3f6e75">node</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">l</span>, <span style="color:#000">r</span>, <span style="color:#000">k</span>, <span style="color:#000">pos</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">node</span>() {}
</span></span><span style="display:flex;"><span>    <span style="color:#000">node</span>(<span style="color:#a90d91">int</span> <span style="color:#000">l_</span>, <span style="color:#a90d91">int</span> <span style="color:#000">r_</span>, <span style="color:#a90d91">int</span> <span style="color:#000">k_</span>, <span style="color:#a90d91">int</span> <span style="color:#000">pos_</span>) <span style="color:#000">:</span> <span style="color:#000">l</span>(<span style="color:#000">l_</span>), <span style="color:#000">r</span>(<span style="color:#000">r_</span>), <span style="color:#000">k</span>(<span style="color:#000">k_</span>), <span style="color:#000">pos</span>(<span style="color:#000">pos_</span>) {}
</span></span><span style="display:flex;"><span>};
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">hash</span>(<span style="color:#a90d91">const</span> <span style="color:#000">node</span> <span style="color:#000">&amp;</span><span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> (<span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span>)((<span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span>)<span style="color:#1c01ce">800000</span> <span style="color:#000">*</span> <span style="color:#000">x</span>.<span style="color:#000">l</span> <span style="color:#000">+</span> <span style="color:#1c01ce">200</span> <span style="color:#000">*</span> <span style="color:#000">x</span>.<span style="color:#000">r</span> <span style="color:#000">+</span> <span style="color:#000">x</span>.<span style="color:#000">k</span> <span style="color:#000">*</span> <span style="color:#1c01ce">2</span> <span style="color:#000">+</span> <span style="color:#000">x</span>.<span style="color:#000">pos</span>);
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span><span style="color:#a90d91">struct</span> <span style="color:#3f6e75">hash_map</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">struct</span> <span style="color:#3f6e75">data</span>
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">u</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">v</span>, <span style="color:#000">nex</span>;
</span></span><span style="display:flex;"><span>    };
</span></span><span style="display:flex;"><span>    <span style="color:#000">data</span> <span style="color:#000">e</span>[<span style="color:#000">mod</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">1</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">h</span>[<span style="color:#000">mod</span>], <span style="color:#000">cnt</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">hash</span>(<span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">u</span>) { <span style="color:#a90d91">return</span> <span style="color:#000">u</span> <span style="color:#000">%</span> <span style="color:#000">mod</span>; }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">&amp;</span><span style="color:#a90d91">operator</span>[](<span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">u</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">hu</span> <span style="color:#000">=</span> <span style="color:#000">hash</span>(<span style="color:#000">u</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#000">h</span>[<span style="color:#000">hu</span>]; <span style="color:#000">i</span>; <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#000">e</span>[<span style="color:#000">i</span>].<span style="color:#000">nex</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">e</span>[<span style="color:#000">i</span>].<span style="color:#000">u</span> <span style="color:#000">==</span> <span style="color:#000">u</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">return</span> <span style="color:#000">e</span>[<span style="color:#000">i</span>].<span style="color:#000">v</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#000">e</span>[<span style="color:#000">++</span><span style="color:#000">cnt</span>] <span style="color:#000">=</span> (<span style="color:#000">data</span>){<span style="color:#000">u</span>, <span style="color:#000">-</span><span style="color:#1c01ce">1</span>, <span style="color:#000">h</span>[<span style="color:#000">hu</span>]}, <span style="color:#000">h</span>[<span style="color:#000">hu</span>] <span style="color:#000">=</span> <span style="color:#000">cnt</span>, <span style="color:#000">e</span>[<span style="color:#000">cnt</span>].<span style="color:#000">v</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">hash_map</span>()
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">cnt</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">memset</span>(<span style="color:#000">h</span>, <span style="color:#1c01ce">0</span>, <span style="color:#a90d91">sizeof</span>(<span style="color:#000">h</span>));
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>} <span style="color:#000">mp</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">dp</span>(<span style="color:#a90d91">int</span> <span style="color:#000">l</span>, <span style="color:#a90d91">int</span> <span style="color:#000">r</span>, <span style="color:#a90d91">int</span> <span style="color:#000">k</span>, <span style="color:#a90d91">int</span> <span style="color:#000">pos</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">r</span> <span style="color:#000">-</span> <span style="color:#000">l</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;</span> <span style="color:#000">k</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">else</span> <span style="color:#a90d91">if</span> (<span style="color:#000">r</span> <span style="color:#000">-</span> <span style="color:#000">l</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">==</span> <span style="color:#000">k</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#000">s</span>(<span style="color:#000">l</span>, <span style="color:#000">r</span>) <span style="color:#000">*</span> (<span style="color:#000">pos</span> <span style="color:#000">==</span> <span style="color:#1c01ce">1</span> <span style="color:#000">?</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span> <span style="color:#000">:</span> <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">nowst</span> <span style="color:#000">=</span> <span style="color:#000">hash</span>(<span style="color:#000">node</span>(<span style="color:#000">l</span>, <span style="color:#000">r</span>, <span style="color:#000">k</span>, <span style="color:#000">pos</span>));
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">mp</span>[<span style="color:#000">nowst</span>] <span style="color:#000">!=</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#000">mp</span>[<span style="color:#000">nowst</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">pos</span> <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">tmp</span> <span style="color:#000">=</span> <span style="color:#000">dp</span>(<span style="color:#000">l</span> <span style="color:#000">+</span> <span style="color:#000">k</span>, <span style="color:#000">r</span>, <span style="color:#000">k</span>, <span style="color:#000">pos</span> <span style="color:#000">^</span> <span style="color:#1c01ce">1</span>) <span style="color:#000">+</span> <span style="color:#000">s</span>(<span style="color:#000">l</span>, <span style="color:#000">l</span> <span style="color:#000">+</span> <span style="color:#000">k</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">l</span> <span style="color:#000">+</span> <span style="color:#000">k</span> <span style="color:#000">&lt;=</span> <span style="color:#000">r</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">tmp</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">max</span>(<span style="color:#000">tmp</span>, <span style="color:#000">dp</span>(<span style="color:#000">l</span> <span style="color:#000">+</span> <span style="color:#000">k</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">r</span>, <span style="color:#000">k</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">pos</span> <span style="color:#000">^</span> <span style="color:#1c01ce">1</span>) <span style="color:#000">+</span> <span style="color:#000">s</span>(<span style="color:#000">l</span>, <span style="color:#000">l</span> <span style="color:#000">+</span> <span style="color:#000">k</span>));
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#000">mp</span>[<span style="color:#000">nowst</span>] <span style="color:#000">=</span> <span style="color:#000">tmp</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">tmp</span> <span style="color:#000">=</span> <span style="color:#000">dp</span>(<span style="color:#000">l</span>, <span style="color:#000">r</span> <span style="color:#000">-</span> <span style="color:#000">k</span>, <span style="color:#000">k</span>, <span style="color:#000">pos</span> <span style="color:#000">^</span> <span style="color:#1c01ce">1</span>) <span style="color:#000">-</span> <span style="color:#000">s</span>(<span style="color:#000">r</span> <span style="color:#000">-</span> <span style="color:#000">k</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">r</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">r</span> <span style="color:#000">-</span> <span style="color:#000">k</span> <span style="color:#000">&gt;=</span> <span style="color:#000">l</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">tmp</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">min</span>(<span style="color:#000">tmp</span>, <span style="color:#000">dp</span>(<span style="color:#000">l</span>, <span style="color:#000">r</span> <span style="color:#000">-</span> <span style="color:#000">k</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">k</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">pos</span> <span style="color:#000">^</span> <span style="color:#1c01ce">1</span>) <span style="color:#000">-</span> <span style="color:#000">s</span>(<span style="color:#000">r</span> <span style="color:#000">-</span> <span style="color:#000">k</span>, <span style="color:#000">r</span>));
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#000">mp</span>[<span style="color:#000">nowst</span>] <span style="color:#000">=</span> <span style="color:#000">tmp</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">ios</span><span style="color:#000">::</span><span style="color:#000">sync_with_stdio</span>(<span style="color:#a90d91">false</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>], <span style="color:#000">sum</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">sum</span>[<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">+</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">dp</span>(<span style="color:#1c01ce">1</span>, <span style="color:#000">n</span>, <span style="color:#1c01ce">1</span>, <span style="color:#1c01ce">0</span>) <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div>]]></content:encoded>
    </item>
    
    <item>
      <title>Codeforces Round 709 (div2)</title>
      <link>https://luoyisu.github.io/posts/cf-contest1484/</link>
      <pubDate>Tue, 07 Dec 2021 15:32:19 +0000</pubDate>
      
      <guid>https://luoyisu.github.io/posts/cf-contest1484/</guid>
      <description>&lt;p&gt;时间比较近的比赛果然难度大一些。。。&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>时间比较近的比赛果然难度大一些。。。</p>
<h2 id="ahttpscodeforcescontest1484problema"><a href="https://codeforc.es/contest/1484/problem/A">A</a></h2>
<h3 id="description">Description</h3>
<p>有一个 $(n+1)\times(m+1)$​ 的点图，问最少断掉几条边能使​剩下的点全联通且没有环。（建议看原题面）</p>
<h3 id="solution">Solution</h3>
<p>答案是 $n\times m$，一个构造性证明：蛇形就行。</p>
<h2 id="bhttpscodeforcescontest1484problemb"><a href="https://codeforc.es/contest/1484/problem/B">B</a></h2>
<h3 id="description-1">Description</h3>
<p>给出一个序列 $\{a_i\}$ ，求最大的 $m$ 和任意的 $c$，满足 $a_i=(a_{i-1}+c)\bmod m$​。（需要判断无解和 $m\rightarrow\infty$）​</p>
<h3 id="solution-1">Solution</h3>
<p>可以发现相邻的两个数差一定是 $c-m$ 或 $c$​，那么扫一遍就能知道 $c$ 和 $m$，然后再扫一遍看看合不合法就行。</p>
<h2 id="chttpscodeforcescontest1484problemc"><a href="https://codeforc.es/contest/1484/problem/C">C</a></h2>
<h3 id="description-2">Description</h3>
<p>有 $n$ 个人， $m$ 天，你每天需要从给定的一些人中选一个，且每个人最多只能选 $\lceil \dfrac m2\rceil$ 次，判断有没有解并给出一个方案。</p>
<h3 id="solution-2">Solution</h3>
<p>从前往后一天一天选。当一天只能选一个人，这个人必须就选了，先预处理这些天。剩下的天我们直接选当前已经选过的次数最少的人。</p>
<p>证明感性一下，想要卡掉这个做法需要每天两个人一直出现，但是这样也只能让选一个人的次数达到 $\dfrac m2$，所以卡不掉。</p>
<h3 id="code">Code</h3>
<p>没必要看，实在是丑。。。</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2e5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">vector</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">a</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">used</span>[<span style="color:#000">maxn</span> <span style="color:#000">/</span> <span style="color:#1c01ce">2</span>], <span style="color:#000">times</span>[<span style="color:#000">maxn</span> <span style="color:#000">/</span> <span style="color:#1c01ce">2</span>], <span style="color:#000">ans</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">T</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">T</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">times</span>[<span style="color:#1c01ce">0</span>] <span style="color:#000">=</span> <span style="color:#000">used</span>[<span style="color:#1c01ce">0</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">30</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> (<span style="color:#000">T</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">n</span>, <span style="color:#000">m</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">m</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">clear</span>(), <span style="color:#000">ans</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">used</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">times</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;        
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">flag</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">int</span> <span style="color:#000">t</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">t</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">while</span> (<span style="color:#000">t</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">x</span>, <span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">push_back</span>(<span style="color:#000">x</span>), <span style="color:#000">times</span>[<span style="color:#000">x</span>]<span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">size</span>() <span style="color:#000">==</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">used</span>[<span style="color:#000">a</span>[<span style="color:#000">i</span>][<span style="color:#1c01ce">0</span>]]<span style="color:#000">++</span>, <span style="color:#000">times</span>[<span style="color:#000">a</span>[<span style="color:#000">i</span>][<span style="color:#1c01ce">0</span>]]<span style="color:#000">--</span>, <span style="color:#000">ans</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>][<span style="color:#1c01ce">0</span>], <span style="color:#000">flag</span> <span style="color:#000">&amp;=</span> <span style="color:#000">used</span>[<span style="color:#000">a</span>[<span style="color:#000">i</span>][<span style="color:#1c01ce">0</span>]] <span style="color:#000">&gt;</span> (<span style="color:#000">m</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>) <span style="color:#000">/</span> <span style="color:#1c01ce">2</span> <span style="color:#000">?</span> <span style="color:#1c01ce">0</span> <span style="color:#000">:</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">size</span>() <span style="color:#000">==</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">continue</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">int</span> <span style="color:#000">mx</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">p</span> : <span style="color:#000">a</span>[<span style="color:#000">i</span>])
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">if</span> (<span style="color:#000">used</span>[<span style="color:#000">p</span>] <span style="color:#000">&lt;</span> <span style="color:#000">used</span>[<span style="color:#000">mx</span>])
</span></span><span style="display:flex;"><span>                    <span style="color:#000">mx</span> <span style="color:#000">=</span> <span style="color:#000">p</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">used</span>[<span style="color:#000">mx</span>]<span style="color:#000">++</span>, <span style="color:#000">ans</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">mx</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">used</span>[<span style="color:#000">mx</span>] <span style="color:#000">&gt;</span> (<span style="color:#000">m</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>) <span style="color:#000">/</span> <span style="color:#1c01ce">2</span>)
</span></span><span style="display:flex;"><span>            {
</span></span><span style="display:flex;"><span>                <span style="color:#000">flag</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">break</span>;
</span></span><span style="display:flex;"><span>            }
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">!</span><span style="color:#000">flag</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">puts</span>(<span style="color:#c41a16">&#34;NO&#34;</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">continue</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#000">puts</span>(<span style="color:#c41a16">&#34;YES&#34;</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">ans</span>[<span style="color:#000">i</span>] <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="dhttpscodeforcescontest1484problemd"><a href="https://codeforc.es/contest/1484/problem/D">D</a></h2>
<h3 id="description-3">Description</h3>
<p>给出 $n$​ 首歌，和他们的类型值，从头循环播放，如果当前的歌和前一首歌的类型值互质，把当前这首歌删掉，切到下一首歌去，求删除的歌的序列。</p>
<h3 id="solution-3">Solution</h3>
<p>用一个链表模拟即可，第一次扫一遍把要删除的组加进一个队列里，然后取出队首，执行删除，再判断一下需不需要接着删就行。</p>
<h3 id="code-1">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;queue&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;utility&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">int</span> <span style="color:#000">gcd</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>) { <span style="color:#a90d91">return</span> <span style="color:#000">y</span> <span style="color:#000">==</span> <span style="color:#1c01ce">0</span> <span style="color:#000">?</span> <span style="color:#000">x</span> : <span style="color:#000">gcd</span>(<span style="color:#000">y</span>, <span style="color:#000">x</span> <span style="color:#000">%</span> <span style="color:#000">y</span>); }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1e5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">typedef</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">pair</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span>, <span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">pii</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">nxt</span>[<span style="color:#000">maxn</span>], <span style="color:#000">a</span>[<span style="color:#000">maxn</span>], <span style="color:#000">used</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">vector</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">ans</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">T</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">T</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> (<span style="color:#000">T</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>], <span style="color:#000">nxt</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">nxt</span>[<span style="color:#000">n</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">queue</span><span style="color:#000">&lt;</span><span style="color:#000">pii</span><span style="color:#000">&gt;</span> <span style="color:#000">q</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">gcd</span>(<span style="color:#000">a</span>[<span style="color:#000">i</span>], <span style="color:#000">a</span>[<span style="color:#000">nxt</span>[<span style="color:#000">i</span>]]) <span style="color:#000">==</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">q</span>.<span style="color:#000">push</span>(<span style="color:#000">pii</span>(<span style="color:#000">i</span>, <span style="color:#000">nxt</span>[<span style="color:#000">i</span>])), <span style="color:#000">i</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">while</span> (<span style="color:#000">!</span><span style="color:#000">q</span>.<span style="color:#000">empty</span>())
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">auto</span> <span style="color:#000">now</span> <span style="color:#000">=</span> <span style="color:#000">q</span>.<span style="color:#000">front</span>();
</span></span><span style="display:flex;"><span>            <span style="color:#000">q</span>.<span style="color:#000">pop</span>();
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">int</span> <span style="color:#000">pos</span> <span style="color:#000">=</span> <span style="color:#000">now</span>.<span style="color:#000">first</span>, <span style="color:#000">npos</span> <span style="color:#000">=</span> <span style="color:#000">now</span>.<span style="color:#000">second</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">used</span>[<span style="color:#000">pos</span>] <span style="color:#000">||</span> <span style="color:#000">used</span>[<span style="color:#000">npos</span>])
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">continue</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">used</span>[<span style="color:#000">npos</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">ans</span>.<span style="color:#000">push_back</span>(<span style="color:#000">npos</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#000">nxt</span>[<span style="color:#000">pos</span>] <span style="color:#000">=</span> <span style="color:#000">nxt</span>[<span style="color:#000">npos</span>];
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">gcd</span>(<span style="color:#000">a</span>[<span style="color:#000">pos</span>], <span style="color:#000">a</span>[<span style="color:#000">nxt</span>[<span style="color:#000">pos</span>]]) <span style="color:#000">==</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">q</span>.<span style="color:#000">push</span>(<span style="color:#000">pii</span>(<span style="color:#000">pos</span>, <span style="color:#000">nxt</span>[<span style="color:#000">pos</span>]));
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">ans</span>.<span style="color:#000">size</span>() <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> : <span style="color:#000">ans</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">i</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">ans</span>.<span style="color:#000">clear</span>(), <span style="color:#000">memset</span>(<span style="color:#000">used</span>, <span style="color:#1c01ce">0</span>, <span style="color:#a90d91">sizeof</span>(<span style="color:#000">used</span>));
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="ehttpscodeforcescontest1484probleme"><a href="https://codeforc.es/contest/1484/problem/E">E</a></h2>
<h3 id="description-4">Description</h3>
<p>给出 $n$​​ 个楼房的高度和美丽值，把所有楼房划分成连续的若干组，最大化 每组高度最小的楼房的美丽值 的和。$n\leq3\times10^5$​。</p>
<h3 id="solution-4">Solution</h3>
<p>显然有个 DP，$f_i=\max\{f_j+val(j+1,n)\}$​，其中 $val(l,r)$​ 表示 $[l,r]$​​ 内最矮楼房的美丽值。然后发现一个楼房到下一个比它更矮的楼房这段区间内， $val$ 都是固定的，可以维护一个单调栈。</p>
<h3 id="算法一">算法一</h3>
<p>对于每个楼房，进栈时把他能影响到的 $f$ 的值全部加它的美丽值，出栈的时候减掉。使用线段树维护， $f_i$ 就是当前所有已经加进线段树的点的最大值。然后把 $f_i$ 加进去。细节有点多。。。。。</p>
<h3 id="code1">Code1</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;queue&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">3e5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">typedef</span> <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">ll</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#000">ll</span> <span style="color:#000">inf</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1ll</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">60</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">struct</span> <span style="color:#3f6e75">node</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">ll</span> <span style="color:#000">lzy</span>, <span style="color:#000">mx</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">node</span>() {}
</span></span><span style="display:flex;"><span>} <span style="color:#000">t</span>[<span style="color:#000">maxn</span> <span style="color:#000">*</span> <span style="color:#1c01ce">4</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">int</span> <span style="color:#000">ls</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>) { <span style="color:#a90d91">return</span> <span style="color:#000">x</span> <span style="color:#000">*</span> <span style="color:#1c01ce">2</span>; }
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">int</span> <span style="color:#000">rs</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>) { <span style="color:#a90d91">return</span> <span style="color:#000">x</span> <span style="color:#000">*</span> <span style="color:#1c01ce">2</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>; }
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">push_up</span>(<span style="color:#a90d91">int</span> <span style="color:#000">k</span>) { <span style="color:#000">t</span>[<span style="color:#000">k</span>].<span style="color:#000">mx</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">max</span>(<span style="color:#000">t</span>[<span style="color:#000">ls</span>(<span style="color:#000">k</span>)].<span style="color:#000">mx</span>, <span style="color:#000">t</span>[<span style="color:#000">rs</span>(<span style="color:#000">k</span>)].<span style="color:#000">mx</span>); }
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">push_down</span>(<span style="color:#a90d91">int</span> <span style="color:#000">k</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">!</span><span style="color:#000">t</span>[<span style="color:#000">k</span>].<span style="color:#000">lzy</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">t</span>[<span style="color:#000">ls</span>(<span style="color:#000">k</span>)].<span style="color:#000">lzy</span> <span style="color:#000">+=</span> <span style="color:#000">t</span>[<span style="color:#000">k</span>].<span style="color:#000">lzy</span>, <span style="color:#000">t</span>[<span style="color:#000">rs</span>(<span style="color:#000">k</span>)].<span style="color:#000">lzy</span> <span style="color:#000">+=</span> <span style="color:#000">t</span>[<span style="color:#000">k</span>].<span style="color:#000">lzy</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">t</span>[<span style="color:#000">ls</span>(<span style="color:#000">k</span>)].<span style="color:#000">mx</span> <span style="color:#000">+=</span> <span style="color:#000">t</span>[<span style="color:#000">k</span>].<span style="color:#000">lzy</span>, <span style="color:#000">t</span>[<span style="color:#000">rs</span>(<span style="color:#000">k</span>)].<span style="color:#000">mx</span> <span style="color:#000">+=</span> <span style="color:#000">t</span>[<span style="color:#000">k</span>].<span style="color:#000">lzy</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">t</span>[<span style="color:#000">k</span>].<span style="color:#000">lzy</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">modify_add</span>(<span style="color:#a90d91">int</span> <span style="color:#000">l</span>, <span style="color:#a90d91">int</span> <span style="color:#000">r</span>, <span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>, <span style="color:#000">ll</span> <span style="color:#000">v</span>, <span style="color:#a90d91">int</span> <span style="color:#000">k</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">l</span> <span style="color:#000">&gt;=</span> <span style="color:#000">x</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">r</span> <span style="color:#000">&lt;=</span> <span style="color:#000">y</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">t</span>[<span style="color:#000">k</span>].<span style="color:#000">lzy</span> <span style="color:#000">+=</span> <span style="color:#000">v</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">t</span>[<span style="color:#000">k</span>].<span style="color:#000">mx</span> <span style="color:#000">+=</span> <span style="color:#000">v</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">mid</span> <span style="color:#000">=</span> (<span style="color:#000">l</span> <span style="color:#000">+</span> <span style="color:#000">r</span>) <span style="color:#000">/</span> <span style="color:#1c01ce">2</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">push_down</span>(<span style="color:#000">k</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">x</span> <span style="color:#000">&lt;=</span> <span style="color:#000">mid</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">modify_add</span>(<span style="color:#000">l</span>, <span style="color:#000">mid</span>, <span style="color:#000">x</span>, <span style="color:#000">y</span>, <span style="color:#000">v</span>, <span style="color:#000">ls</span>(<span style="color:#000">k</span>));
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">y</span> <span style="color:#000">&gt;</span> <span style="color:#000">mid</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">modify_add</span>(<span style="color:#000">mid</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">r</span>, <span style="color:#000">x</span>, <span style="color:#000">y</span>, <span style="color:#000">v</span>, <span style="color:#000">rs</span>(<span style="color:#000">k</span>));
</span></span><span style="display:flex;"><span>    <span style="color:#000">push_up</span>(<span style="color:#000">k</span>);
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">modify</span>(<span style="color:#a90d91">int</span> <span style="color:#000">l</span>, <span style="color:#a90d91">int</span> <span style="color:#000">r</span>, <span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#000">ll</span> <span style="color:#000">v</span>, <span style="color:#a90d91">int</span> <span style="color:#000">k</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">l</span> <span style="color:#000">==</span> <span style="color:#000">r</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#177500">//t[k].lzy = 0;
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>        <span style="color:#000">t</span>[<span style="color:#000">k</span>].<span style="color:#000">mx</span> <span style="color:#000">=</span> <span style="color:#000">v</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#177500">//cout &lt;&lt; l &lt;&lt; &#34; &#34; &lt;&lt; v &lt;&lt; endl;
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>        <span style="color:#a90d91">return</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">mid</span> <span style="color:#000">=</span> (<span style="color:#000">l</span> <span style="color:#000">+</span> <span style="color:#000">r</span>) <span style="color:#000">/</span> <span style="color:#1c01ce">2</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#177500">//push_down(k);
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>    <span style="color:#a90d91">if</span> (<span style="color:#000">x</span> <span style="color:#000">&lt;=</span> <span style="color:#000">mid</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">modify</span>(<span style="color:#000">l</span>, <span style="color:#000">mid</span>, <span style="color:#000">x</span>, <span style="color:#000">v</span>, <span style="color:#000">ls</span>(<span style="color:#000">k</span>));
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>        <span style="color:#000">modify</span>(<span style="color:#000">mid</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">r</span>, <span style="color:#000">x</span>, <span style="color:#000">v</span>, <span style="color:#000">rs</span>(<span style="color:#000">k</span>));
</span></span><span style="display:flex;"><span>    <span style="color:#000">push_up</span>(<span style="color:#000">k</span>);
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000">ll</span> <span style="color:#000">query</span>(<span style="color:#a90d91">int</span> <span style="color:#000">l</span>, <span style="color:#a90d91">int</span> <span style="color:#000">r</span>, <span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>, <span style="color:#a90d91">int</span> <span style="color:#000">k</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">x</span> <span style="color:#000">&lt;=</span> <span style="color:#000">l</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">r</span> <span style="color:#000">&lt;=</span> <span style="color:#000">y</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#000">t</span>[<span style="color:#000">k</span>].<span style="color:#000">mx</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">mid</span> <span style="color:#000">=</span> (<span style="color:#000">l</span> <span style="color:#000">+</span> <span style="color:#000">r</span>) <span style="color:#000">/</span> <span style="color:#1c01ce">2</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">ll</span> <span style="color:#000">res</span> <span style="color:#000">=</span> <span style="color:#000">-</span><span style="color:#000">inf</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">x</span> <span style="color:#000">&lt;=</span> <span style="color:#000">mid</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">res</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">max</span>(<span style="color:#000">res</span>, <span style="color:#000">query</span>(<span style="color:#000">l</span>, <span style="color:#000">mid</span>, <span style="color:#000">x</span>, <span style="color:#000">y</span>, <span style="color:#000">ls</span>(<span style="color:#000">k</span>)));
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">y</span> <span style="color:#000">&gt;</span> <span style="color:#000">mid</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">res</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">max</span>(<span style="color:#000">res</span>, <span style="color:#000">query</span>(<span style="color:#000">mid</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">r</span>, <span style="color:#000">x</span>, <span style="color:#000">y</span>, <span style="color:#000">rs</span>(<span style="color:#000">k</span>)));
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#000">res</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">struct</span> <span style="color:#3f6e75">Q</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">i</span>, <span style="color:#000">val</span>, <span style="color:#000">b</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">Q</span>() { <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#000">b</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>, <span style="color:#000">val</span> <span style="color:#000">=</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span>; }
</span></span><span style="display:flex;"><span>    <span style="color:#000">Q</span>(<span style="color:#a90d91">int</span> <span style="color:#000">i_</span>, <span style="color:#a90d91">int</span> <span style="color:#000">val_</span>, <span style="color:#a90d91">int</span> <span style="color:#000">b_</span>) <span style="color:#000">:</span> <span style="color:#000">i</span>(<span style="color:#000">i_</span>), <span style="color:#000">val</span>(<span style="color:#000">val_</span>), <span style="color:#000">b</span>(<span style="color:#000">b_</span>) {}
</span></span><span style="display:flex;"><span>} <span style="color:#000">q</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">n</span>, <span style="color:#000">h</span>[<span style="color:#000">maxn</span>], <span style="color:#000">b</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#000">ll</span> <span style="color:#000">f</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">h</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">b</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">r</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">h</span>[<span style="color:#1c01ce">0</span>] <span style="color:#000">=</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">while</span> (<span style="color:#000">r</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">q</span>[<span style="color:#000">r</span>].<span style="color:#000">val</span> <span style="color:#000">&gt;=</span> <span style="color:#000">h</span>[<span style="color:#000">i</span>])
</span></span><span style="display:flex;"><span>        {            
</span></span><span style="display:flex;"><span>            <span style="color:#000">modify_add</span>(<span style="color:#1c01ce">0</span>, <span style="color:#000">n</span>, <span style="color:#000">q</span>[<span style="color:#000">r</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>].<span style="color:#000">i</span>, <span style="color:#000">q</span>[<span style="color:#000">r</span>].<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">-</span><span style="color:#000">q</span>[<span style="color:#000">r</span>].<span style="color:#000">b</span>, <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#000">r</span><span style="color:#000">--</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#000">q</span>[<span style="color:#000">++</span><span style="color:#000">r</span>] <span style="color:#000">=</span> <span style="color:#000">Q</span>(<span style="color:#000">i</span>, <span style="color:#000">h</span>[<span style="color:#000">i</span>], <span style="color:#000">b</span>[<span style="color:#000">i</span>]);
</span></span><span style="display:flex;"><span>        <span style="color:#000">modify_add</span>(<span style="color:#1c01ce">0</span>, <span style="color:#000">n</span>, <span style="color:#000">q</span>[<span style="color:#000">r</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>].<span style="color:#000">i</span>, <span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">b</span>[<span style="color:#000">i</span>], <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">f</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">query</span>(<span style="color:#1c01ce">0</span>, <span style="color:#000">n</span>, <span style="color:#1c01ce">0</span>, <span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>, <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">modify</span>(<span style="color:#1c01ce">0</span>, <span style="color:#000">n</span>, <span style="color:#000">i</span>, <span style="color:#000">f</span>[<span style="color:#000">i</span>], <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#177500">//for (int i = 1; i &lt;= n; i++)
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>    <span style="color:#177500">//    cout &lt;&lt; f[i] &lt;&lt; endl;
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">f</span>[<span style="color:#000">n</span>] <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h3 id="算法二">算法二</h3>
<p>同样是单调栈，直接上代码吧。。。维护之前的答案折腾一下，很难描述。看题解得来的做法。</p>
<h3 id="code2">Code2</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">3e5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">typedef</span> <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">ll</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">h</span>[<span style="color:#000">maxn</span>], <span style="color:#000">b</span>[<span style="color:#000">maxn</span>], <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span><span style="color:#000">ll</span> <span style="color:#000">f</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">struct</span> <span style="color:#3f6e75">Q</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">i</span>, <span style="color:#000">h</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">ll</span> <span style="color:#000">val</span>, <span style="color:#000">ans</span>;
</span></span><span style="display:flex;"><span>} <span style="color:#000">q</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">h</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">b</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">r</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">q</span>[<span style="color:#1c01ce">0</span>].<span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#000">-</span><span style="color:#1c01ce">1ll</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">60</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">ll</span> <span style="color:#000">t</span> <span style="color:#000">=</span> <span style="color:#000">f</span>[<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>];
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">while</span> (<span style="color:#000">r</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">q</span>[<span style="color:#000">r</span>].<span style="color:#000">h</span> <span style="color:#000">&gt;</span> <span style="color:#000">h</span>[<span style="color:#000">i</span>])
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">t</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">max</span>(<span style="color:#000">t</span>, <span style="color:#000">q</span>[<span style="color:#000">r</span>].<span style="color:#000">val</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#000">r</span><span style="color:#000">--</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#000">q</span>[<span style="color:#000">++</span><span style="color:#000">r</span>] <span style="color:#000">=</span> {<span style="color:#000">i</span>, <span style="color:#000">h</span>[<span style="color:#000">i</span>], <span style="color:#000">t</span>, <span style="color:#1c01ce">0ll</span>};
</span></span><span style="display:flex;"><span>        <span style="color:#000">f</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">q</span>[<span style="color:#000">r</span>].<span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">max</span>(<span style="color:#000">q</span>[<span style="color:#000">r</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>].<span style="color:#000">ans</span>, <span style="color:#000">t</span> <span style="color:#000">+</span> <span style="color:#000">b</span>[<span style="color:#000">i</span>]);
</span></span><span style="display:flex;"><span>        <span style="color:#177500">// 前一部分是之前的答案，有更小的楼房，直接放在一组里，后面是新开一组的答案
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">f</span>[<span style="color:#000">n</span>] <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="fhttpscodeforcescontest1484problemf"><a href="https://codeforc.es/contest/1484/problem/F">F</a></h2>
<h3 id="description-5">Description</h3>
<p>有一个 $n$​ 个点的带权无向图（$n\leq600$​），给出若干个三元组 $(u,v,l)$​​，问有多少条边满足：</p>
<ol>
<li>
<p>在任意一个三元组中 $u$​ 到 $v$​ 的路径上；</p>
</li>
<li>
<p>这个路径的长度不大于 $l$。</p>
</li>
</ol>
<h3 id="solution-5">Solution</h3>
<p>发现一条边 $(x,y)$​​ 满足要求当且仅当存在一个三元组 $(u,v,l)$​​ 满足 $dis(u,x)+w(x,y)+dis(y,w)\leq l(u,v)$​​​。</p>
<p>首先枚举 $O(n^4)$ 肯定是对的，但是会 TLE，想个办法优化枚举。。。</p>
<p>换个形式：$dis(u,x)+w(x,y)\leq l(u,v)-dis(y,v)$​。</p>
<p>我们枚举 $u,y$，这样左面只和 $x$ 有关，右面只和 $v$ 有关，考虑接着枚举 $x$，我们发现，因为存在 $v$ 即可，所以一个 $x$ 满足要求等价于 $dis(u,x)+w(x,y)\leq(l(u,v)-dis(y,v))_{max}$。右面可以枚举 $u,v,y$ 在 $O(n^3)$ 时间内预处理出来，答案可以枚举 $u,v,x$ 求出来，那么我们在 $O(n^3)$​ 的时间内解决了这个问题。</p>
<h3 id="code-2">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">610</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">typedef</span> <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">ll</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000">ll</span> <span style="color:#000">dis</span>[<span style="color:#000">maxn</span>][<span style="color:#000">maxn</span>], <span style="color:#000">mx</span>[<span style="color:#000">maxn</span>][<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#000">ll</span> <span style="color:#000">p</span>[<span style="color:#000">maxn</span>][<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">ok</span>[<span style="color:#000">maxn</span>][<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">struct</span> <span style="color:#3f6e75">edge</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">y</span>, <span style="color:#000">w</span>;
</span></span><span style="display:flex;"><span>};
</span></span><span style="display:flex;"><span><span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">vector</span><span style="color:#000">&lt;</span><span style="color:#000">edge</span><span style="color:#000">&gt;</span> <span style="color:#000">e</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">add</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>, <span style="color:#a90d91">int</span> <span style="color:#000">w</span>) { <span style="color:#000">e</span>[<span style="color:#000">x</span>].<span style="color:#000">push_back</span>({<span style="color:#000">y</span>, <span style="color:#000">w</span>}), <span style="color:#000">e</span>[<span style="color:#000">y</span>].<span style="color:#000">push_back</span>({<span style="color:#000">x</span>, <span style="color:#000">w</span>}); }
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">n</span>, <span style="color:#000">m</span>, <span style="color:#000">q</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">memset</span>(<span style="color:#000">dis</span>, <span style="color:#1c01ce">1</span>, <span style="color:#a90d91">sizeof</span>(<span style="color:#000">dis</span>));
</span></span><span style="display:flex;"><span>    <span style="color:#000">memset</span>(<span style="color:#000">p</span>, <span style="color:#1c01ce">128</span>, <span style="color:#a90d91">sizeof</span>(<span style="color:#000">p</span>)), <span style="color:#000">memset</span>(<span style="color:#000">mx</span>, <span style="color:#1c01ce">128</span>, <span style="color:#a90d91">sizeof</span>(<span style="color:#000">mx</span>));
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">m</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">p</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>] <span style="color:#000">/=</span> <span style="color:#1c01ce">2</span>, <span style="color:#000">mx</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>] <span style="color:#000">/=</span> <span style="color:#1c01ce">2</span>, <span style="color:#000">dis</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>] <span style="color:#000">/=</span> <span style="color:#1c01ce">2</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">x</span>, <span style="color:#000">y</span>, <span style="color:#000">w</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">x</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">y</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">w</span>, <span style="color:#000">dis</span>[<span style="color:#000">x</span>][<span style="color:#000">y</span>] <span style="color:#000">=</span> <span style="color:#000">dis</span>[<span style="color:#000">y</span>][<span style="color:#000">x</span>] <span style="color:#000">=</span> <span style="color:#000">w</span>, <span style="color:#000">add</span>(<span style="color:#000">x</span>, <span style="color:#000">y</span>, <span style="color:#000">w</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">q</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">x</span>, <span style="color:#000">y</span>, <span style="color:#000">l</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">q</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">x</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">y</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">l</span>, <span style="color:#000">p</span>[<span style="color:#000">x</span>][<span style="color:#000">y</span>] <span style="color:#000">=</span> <span style="color:#000">p</span>[<span style="color:#000">y</span>][<span style="color:#000">x</span>] <span style="color:#000">=</span> <span style="color:#000">l</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">k</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">k</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">k</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">dis</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>] <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">min</span>(<span style="color:#000">dis</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>], <span style="color:#000">dis</span>[<span style="color:#000">i</span>][<span style="color:#000">k</span>] <span style="color:#000">+</span> <span style="color:#000">dis</span>[<span style="color:#000">k</span>][<span style="color:#000">j</span>]);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)    
</span></span><span style="display:flex;"><span>        <span style="color:#000">dis</span>[<span style="color:#000">i</span>][<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>, <span style="color:#000">add</span>(<span style="color:#000">i</span>, <span style="color:#000">i</span>, <span style="color:#1c01ce">0</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">u</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">u</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">u</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">y</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">y</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">y</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">v</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">v</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">v</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#177500">//if (p[u][v])
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>                    <span style="color:#000">mx</span>[<span style="color:#000">u</span>][<span style="color:#000">y</span>] <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">max</span>(<span style="color:#000">mx</span>[<span style="color:#000">u</span>][<span style="color:#000">y</span>], (<span style="color:#000">ll</span>)<span style="color:#000">p</span>[<span style="color:#000">u</span>][<span style="color:#000">v</span>] <span style="color:#000">-</span> <span style="color:#000">dis</span>[<span style="color:#000">y</span>][<span style="color:#000">v</span>]);
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">u</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">u</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">u</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">y</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">y</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">y</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">auto</span> <span style="color:#000">k</span> : <span style="color:#000">e</span>[<span style="color:#000">y</span>])
</span></span><span style="display:flex;"><span>            {
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">int</span> <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">k</span>.<span style="color:#000">y</span>, <span style="color:#000">w</span> <span style="color:#000">=</span> <span style="color:#000">k</span>.<span style="color:#000">w</span>;
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">if</span> (<span style="color:#000">w</span> <span style="color:#000">+</span> <span style="color:#000">dis</span>[<span style="color:#000">x</span>][<span style="color:#000">u</span>] <span style="color:#000">&lt;=</span> <span style="color:#000">mx</span>[<span style="color:#000">u</span>][<span style="color:#000">y</span>])
</span></span><span style="display:flex;"><span>                    <span style="color:#000">ok</span>[<span style="color:#000">x</span>][<span style="color:#000">y</span>] <span style="color:#000">=</span> <span style="color:#000">ok</span>[<span style="color:#000">y</span>][<span style="color:#000">x</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>            }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">ok</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>])
</span></span><span style="display:flex;"><span>                <span style="color:#000">ans</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">ans</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div>]]></content:encoded>
    </item>
    
    <item>
      <title>Codeforces Round 120 (Div. 2) 题解</title>
      <link>https://luoyisu.github.io/posts/cf-contest120/</link>
      <pubDate>Mon, 06 Dec 2021 12:54:17 +0000</pubDate>
      
      <guid>https://luoyisu.github.io/posts/cf-contest120/</guid>
      <description>&lt;p&gt;因为是久远的比赛，没有什么特别难的题。&lt;/p&gt;
&lt;p&gt;没有 DP 好评（）&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>因为是久远的比赛，没有什么特别难的题。</p>
<p>没有 DP 好评（）</p>
<h2 id="ahttpscodeforcescontest190problema"><a href="https://codeforc.es/contest/190/problem/A">A</a></h2>
<h3 id="description">Description</h3>
<p>有 $n$ 个大人 $m$ 个小孩，一枚车票一元钱，一个大人可以带很多小孩，一个大人能免费带一个小孩上车，每个小孩都必须有一个大人带。问最少/最多需要花多少钱。</p>
<h3 id="solution">Solution</h3>
<p>又水又毒瘤，不写了，看代码。</p>
<h3 id="code">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span> 
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">a</span>, <span style="color:#000">b</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">a</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">b</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">a</span> <span style="color:#000">==</span> <span style="color:#1c01ce">0</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">b</span> <span style="color:#000">!=</span> <span style="color:#1c01ce">0</span>) <span style="color:#177500">// 有小孩没大人
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>        <span style="color:#000">puts</span>(<span style="color:#c41a16">&#34;Impossible&#34;</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">else</span> <span style="color:#a90d91">if</span> (<span style="color:#000">b</span> <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>) <span style="color:#177500">// 有大人没小孩
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">a</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">a</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">max</span>(<span style="color:#000">a</span>, <span style="color:#000">b</span>) <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">a</span> <span style="color:#000">+</span> <span style="color:#000">b</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>; 
</span></span><span style="display:flex;"><span>    <span style="color:#177500">// 最少就是尽量一个大人带一个小孩，最大就是一个大人带所有小孩
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>}
</span></span></code></pre></div><h2 id="bhttpscodeforcescontest190problemb"><a href="https://codeforc.es/contest/190/problem/B">B</a></h2>
<h3 id="description-1">Description</h3>
<p>平面上有两个圆，输出一个能连接这两个圆的圆的最小半径。</p>
<h3 id="solution-1">Solution</h3>
<p>分两个圆相离、内含、相交（相切）算一下就行，具体看代码。</p>
<h3 id="code-1">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cmath&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">double</span> <span style="color:#000">pow2</span>(<span style="color:#a90d91">double</span> <span style="color:#000">x</span>) { <span style="color:#a90d91">return</span> <span style="color:#000">x</span> <span style="color:#000">*</span> <span style="color:#000">x</span>; }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">updmi</span>(<span style="color:#a90d91">double</span> <span style="color:#000">&amp;</span><span style="color:#000">a</span>, <span style="color:#a90d91">double</span> <span style="color:#000">b</span>) { <span style="color:#000">a</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">min</span>(<span style="color:#000">a</span>, <span style="color:#000">fabs</span>(<span style="color:#000">b</span>) <span style="color:#000">/</span> <span style="color:#1c01ce">2.0</span>); }
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">out</span>(<span style="color:#a90d91">double</span> <span style="color:#000">x</span>) { <span style="color:#000">printf</span>(<span style="color:#c41a16">&#34;%.15lf</span><span style="color:#c41a16">\\</span><span style="color:#c41a16">n&#34;</span>, <span style="color:#000">x</span>); }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">double</span> <span style="color:#000">x1</span>, <span style="color:#000">y1</span>, <span style="color:#000">r1</span>, <span style="color:#000">x2</span>, <span style="color:#000">y2</span>, <span style="color:#000">r2</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">x1</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">y1</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">r1</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">x2</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">y2</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">r2</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">double</span> <span style="color:#000">dis</span> <span style="color:#000">=</span> <span style="color:#000">sqrt</span>(<span style="color:#000">pow2</span>(<span style="color:#000">x1</span> <span style="color:#000">-</span> <span style="color:#000">x2</span>) <span style="color:#000">+</span> <span style="color:#000">pow2</span>(<span style="color:#000">y1</span> <span style="color:#000">-</span> <span style="color:#000">y2</span>));
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">r1</span> <span style="color:#000">&lt;</span> <span style="color:#000">r2</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">swap</span>(<span style="color:#000">r1</span>, <span style="color:#000">r2</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">dis</span> <span style="color:#000">&gt;</span> <span style="color:#000">r1</span> <span style="color:#000">+</span> <span style="color:#000">r2</span>) <span style="color:#177500">// 相离，即样例的那两个图
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>        <span style="color:#000">out</span>((<span style="color:#000">dis</span> <span style="color:#000">-</span> <span style="color:#000">r1</span> <span style="color:#000">-</span> <span style="color:#000">r2</span>) <span style="color:#000">/</span> <span style="color:#1c01ce">2.0</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">else</span> <span style="color:#a90d91">if</span> (<span style="color:#000">r2</span> <span style="color:#000">+</span> <span style="color:#000">dis</span> <span style="color:#000">&lt;</span> <span style="color:#000">r1</span>) <span style="color:#177500">// 内含，圆的直径是大半径减小半径减两个圆圆心的距离
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>        <span style="color:#000">out</span>((<span style="color:#000">r1</span> <span style="color:#000">-</span> <span style="color:#000">r2</span> <span style="color:#000">-</span> <span style="color:#000">dis</span>) <span style="color:#000">/</span> <span style="color:#1c01ce">2.0</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">else</span> <span style="color:#177500">// 相交或相离，显然答案是 0
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>        <span style="color:#000">out</span>(<span style="color:#1c01ce">0.0</span>);
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="chttpscodeforcescontest190problemc"><a href="https://codeforc.es/contest/190/problem/C">C</a></h2>
<h3 id="description-2">Description</h3>
<p>给出若干个 <code>pair</code> 和 <code>int</code>，你需要把它输出成合法的 c++ 语法，如 <code>pair pair int int int</code> 输出 <code>pair&lt;pair&lt;int,int&gt;,int&gt;</code>，如果无解输出 <code>Error occurred</code>。</p>
<h3 id="solution-2">Solution</h3>
<p>类似一个表达式转化，对于一个 <code>pair</code> 递归两次就行，注意直接用 <code>string</code> 会 TLE，最好先判断一下有没有解。（我这个做法贼蠢，看个乐就行）</p>
<h3 id="code-2">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;stack&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;string&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1e6</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">a</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">char</span> <span style="color:#000">s</span>[<span style="color:#1c01ce">10</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">n</span>, <span style="color:#000">m</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">work</span>(<span style="color:#a90d91">int</span> <span style="color:#000">&amp;</span><span style="color:#000">i</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">a</span>[<span style="color:#000">i</span>] <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34;int&#34;</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">a</span>[<span style="color:#000">i</span>] <span style="color:#000">==</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34;pair&lt;&#34;</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">work</span>(<span style="color:#000">++</span><span style="color:#000">i</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34;,&#34;</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">work</span>(<span style="color:#000">++</span><span style="color:#000">i</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34;&gt;&#34;</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">bool</span> <span style="color:#000">check</span>(<span style="color:#a90d91">int</span> <span style="color:#000">&amp;</span><span style="color:#000">i</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">i</span> <span style="color:#000">==</span> <span style="color:#000">n</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>] <span style="color:#000">==</span> <span style="color:#1c01ce">0</span> <span style="color:#000">?</span> <span style="color:#1c01ce">1</span> <span style="color:#000">:</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">i</span> <span style="color:#000">==</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>] <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">a</span>[<span style="color:#000">i</span>] <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">bool</span> <span style="color:#000">tmp</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">a</span>[<span style="color:#000">i</span>] <span style="color:#000">==</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">tmp</span> <span style="color:#000">=</span> <span style="color:#000">check</span>(<span style="color:#000">++</span><span style="color:#000">i</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">tmp</span> <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">return</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">tmp</span> <span style="color:#000">=</span> <span style="color:#000">check</span>(<span style="color:#000">++</span><span style="color:#000">i</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">tmp</span> <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">return</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">m</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> (<span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">s</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">a</span>[<span style="color:#000">++</span><span style="color:#000">n</span>] <span style="color:#000">=</span> <span style="color:#000">s</span>[<span style="color:#1c01ce">0</span>] <span style="color:#000">==</span> <span style="color:#2300ce">&#39;p&#39;</span> <span style="color:#000">?</span> <span style="color:#1c01ce">1</span> <span style="color:#000">:</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">n</span> <span style="color:#000">!=</span> <span style="color:#000">m</span> <span style="color:#000">+</span> <span style="color:#000">m</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">puts</span>(<span style="color:#c41a16">&#34;Error occurred&#34;</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">bool</span> <span style="color:#000">ok</span> <span style="color:#000">=</span> <span style="color:#000">check</span>(<span style="color:#000">i</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">!</span><span style="color:#000">ok</span> <span style="color:#000">||</span> <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">n</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">puts</span>(<span style="color:#c41a16">&#34;Error occurred&#34;</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">work</span>(<span style="color:#000">i</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="dhttpscodeforcescontest190problemd"><a href="https://codeforc.es/contest/190/problem/D">D</a></h2>
<h3 id="description-3">Description</h3>
<p>给定一个长度为 $n$ 的序列 $a_i$ 和 $k$，求满足出现次数最多的数的出现次数小于 $k$​ 的连续子序列的数目。</p>
<h3 id="solution-3">Solution</h3>
<p>由于是连续的子序列，而且发现选的数越多越可能满足，考虑双指针。</p>
<p>对于每个 $l$，我们找到最小的能满足这个条件的 $r$​，然后后面的就随便选了，把它对答案的贡献加进去，就完事了。</p>
<p>至于怎么找 $r$ 呢，我们用一个 <code>map</code> 存每个数的出现次数就行了。</p>
<h3 id="code-3">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;map&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">4e5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">typedef</span> <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">ll</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">n</span>, <span style="color:#000">a</span>[<span style="color:#000">maxn</span>], <span style="color:#000">k</span>;
</span></span><span style="display:flex;"><span><span style="color:#000">ll</span> <span style="color:#000">ans</span>;
</span></span><span style="display:flex;"><span><span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">map</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span>, <span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">mp</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">ios</span><span style="color:#000">::</span><span style="color:#000">sync_with_stdio</span>(<span style="color:#a90d91">false</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">k</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">l</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">r</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2</span>;        
</span></span><span style="display:flex;"><span>    <span style="color:#000">mp</span>[<span style="color:#000">a</span>[<span style="color:#1c01ce">1</span>]]<span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (; <span style="color:#000">l</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">l</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">while</span> (<span style="color:#000">r</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">mp</span>[<span style="color:#000">a</span>[<span style="color:#000">r</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>]] <span style="color:#000">&lt;</span> <span style="color:#000">k</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">mp</span>[<span style="color:#000">a</span>[<span style="color:#000">r</span>]]<span style="color:#000">++</span>, <span style="color:#000">r</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">mp</span>[<span style="color:#000">a</span>[<span style="color:#000">r</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>]] <span style="color:#000">&gt;=</span> <span style="color:#000">k</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">ans</span> <span style="color:#000">+=</span> <span style="color:#000">n</span> <span style="color:#000">-</span> <span style="color:#000">r</span> <span style="color:#000">+</span> <span style="color:#1c01ce">2</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">mp</span>[<span style="color:#000">a</span>[<span style="color:#000">l</span>]]<span style="color:#000">--</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">ans</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="ehttpscodeforcescontest190probleme"><a href="https://codeforc.es/contest/190/problem/E">E</a></h2>
<h3 id="description-4">Description</h3>
<p>给定一个点数为 $n$ 的完全图，从中删除 $m$ 条边，求得到的图的联通块。$n\leq5\times10^5,m\leq10^6$。</p>
<h3 id="solution-4">Solution</h3>
<p>发现一个事情：相对于一个很大的完全图，删除的边数实在少得可怜。量化一下发现最多只能让约 $\dfrac{m}{n}$​​​ 个点成为一个独立的联通块。</p>
<p>这实在是小的可怜。也就是说大部分点实际上是连通的。</p>
<p>考虑到当能删完的时候，$n\approx1500$，那么我们直接找一个在删除的边中出现次数最小的点，把与它相连的点全都取出来当成一个联通块。</p>
<p>剩下的点爆搜一下连通块就行。我的实现非常暴力而且恶心，使用了 <code>map</code> 复杂度大概是 $O(n+(\dfrac{m}{n})^2\log\dfrac{m}{n})$​​。最大的点跑得很慢。</p>
<p>事实上我不知道我这个复杂度到底对不对，反正是卡常卡过去了&hellip;</p>
<p>看到有用并查集的做法能做到 $O(n+m)$​，值得一学。。。</p>
<h3 id="code-4">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;map&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">5e5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">namespace</span> <span style="color:#000">IO</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">mxsiz</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">20</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">char</span> <span style="color:#000">inbuf</span>[<span style="color:#000">mxsiz</span>], <span style="color:#000">*</span><span style="color:#000">p1</span>, <span style="color:#000">*</span><span style="color:#000">p2</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">char</span> <span style="color:#000">outbuf</span>[<span style="color:#000">mxsiz</span>], <span style="color:#000">*</span><span style="color:#000">op</span> <span style="color:#000">=</span> <span style="color:#000">outbuf</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">struct</span> <span style="color:#3f6e75">endio</span>
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">endio</span>(){};
</span></span><span style="display:flex;"><span>        <span style="color:#000">~</span><span style="color:#000">endio</span>() { <span style="color:#000">fwrite</span>(<span style="color:#000">outbuf</span>, <span style="color:#1c01ce">1</span>, <span style="color:#000">op</span> <span style="color:#000">-</span> <span style="color:#000">outbuf</span>, <span style="color:#000">stdout</span>); }
</span></span><span style="display:flex;"><span>    } <span style="color:#000">useless_var</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">char</span> <span style="color:#000">gc</span>() { <span style="color:#a90d91">return</span> <span style="color:#000">p1</span> <span style="color:#000">==</span> <span style="color:#000">p2</span> <span style="color:#000">&amp;&amp;</span> (<span style="color:#000">p2</span> <span style="color:#000">=</span> (<span style="color:#000">p1</span> <span style="color:#000">=</span> <span style="color:#000">inbuf</span>) <span style="color:#000">+</span> <span style="color:#000">fread</span>(<span style="color:#000">inbuf</span>, <span style="color:#1c01ce">1</span>, <span style="color:#000">mxsiz</span>, <span style="color:#000">stdin</span>), <span style="color:#000">p1</span> <span style="color:#000">==</span> <span style="color:#000">p2</span>) <span style="color:#000">?</span> <span style="color:#000">EOF</span> : <span style="color:#000">*</span><span style="color:#000">p1</span><span style="color:#000">++</span>; }
</span></span><span style="display:flex;"><span><span style="color:#633820">#define isdigit(x) (x &gt;= &#39;0&#39; &amp;&amp; x &lt;= &#39;9&#39;) </span><span style="color:#177500">// 防止忘记打 &lt;cctype&gt; 头文件
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">int</span> <span style="color:#000">read</span>()
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>, <span style="color:#000">f</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">char</span> <span style="color:#000">ch</span> <span style="color:#000">=</span> <span style="color:#000">gc</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (; <span style="color:#000">!</span><span style="color:#000">isdigit</span>(<span style="color:#000">ch</span>); <span style="color:#000">ch</span> <span style="color:#000">=</span> <span style="color:#000">gc</span>())
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">ch</span> <span style="color:#000">==</span> <span style="color:#2300ce">&#39;-&#39;</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">f</span> <span style="color:#000">=</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (; <span style="color:#000">isdigit</span>(<span style="color:#000">ch</span>); <span style="color:#000">ch</span> <span style="color:#000">=</span> <span style="color:#000">gc</span>())
</span></span><span style="display:flex;"><span>            <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">x</span> <span style="color:#000">*</span> <span style="color:#1c01ce">10</span> <span style="color:#000">+</span> <span style="color:#000">ch</span> <span style="color:#000">-</span> <span style="color:#2300ce">&#39;0&#39;</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#000">x</span> <span style="color:#000">*</span> <span style="color:#000">f</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">template</span> <span style="color:#000">&lt;</span><span style="color:#a90d91">typename</span> <span style="color:#000">T</span><span style="color:#000">&gt;</span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">read</span>(<span style="color:#000">T</span> <span style="color:#000">&amp;</span><span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">f</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">char</span> <span style="color:#000">ch</span> <span style="color:#000">=</span> <span style="color:#000">gc</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (; <span style="color:#000">!</span><span style="color:#000">isdigit</span>(<span style="color:#000">ch</span>); <span style="color:#000">ch</span> <span style="color:#000">=</span> <span style="color:#000">gc</span>())
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">ch</span> <span style="color:#000">==</span> <span style="color:#2300ce">&#39;-&#39;</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">f</span> <span style="color:#000">=</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (; <span style="color:#000">isdigit</span>(<span style="color:#000">ch</span>); <span style="color:#000">ch</span> <span style="color:#000">=</span> <span style="color:#000">gc</span>())
</span></span><span style="display:flex;"><span>            <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">x</span> <span style="color:#000">*</span> <span style="color:#1c01ce">10</span> <span style="color:#000">+</span> <span style="color:#000">ch</span> <span style="color:#000">-</span> <span style="color:#2300ce">&#39;0&#39;</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">x</span> <span style="color:#000">*=</span> <span style="color:#000">f</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span><span style="color:#633820">#undef isdigit
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">bool</span> <span style="color:#000">ischar</span>(<span style="color:#a90d91">char</span> <span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#000">x</span> <span style="color:#000">&gt;=</span> <span style="color:#2300ce">&#39;A&#39;</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">x</span> <span style="color:#000">&lt;=</span> <span style="color:#2300ce">&#39;z&#39;</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">char</span> <span style="color:#000">readchar</span>()
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">char</span> <span style="color:#000">ch</span> <span style="color:#000">=</span> <span style="color:#000">gc</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">while</span> (<span style="color:#000">!</span><span style="color:#000">ischar</span>(<span style="color:#000">ch</span>))
</span></span><span style="display:flex;"><span>            <span style="color:#000">ch</span> <span style="color:#000">=</span> <span style="color:#000">gc</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#000">ch</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">push</span>(<span style="color:#a90d91">char</span> <span style="color:#000">ch</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">op</span> <span style="color:#000">-</span> <span style="color:#000">outbuf</span> <span style="color:#000">==</span> <span style="color:#000">mxsiz</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">fwrite</span>(<span style="color:#000">outbuf</span>, <span style="color:#1c01ce">1</span>, <span style="color:#000">mxsiz</span>, <span style="color:#000">stdout</span>), <span style="color:#000">op</span> <span style="color:#000">=</span> <span style="color:#000">outbuf</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">*</span><span style="color:#000">op</span><span style="color:#000">++</span> <span style="color:#000">=</span> <span style="color:#000">ch</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">template</span> <span style="color:#000">&lt;</span><span style="color:#a90d91">typename</span> <span style="color:#000">T</span><span style="color:#000">&gt;</span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">work_wt</span>(<span style="color:#000">T</span> <span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">x</span> <span style="color:#000">&gt;</span> <span style="color:#1c01ce">9</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">work_wt</span>(<span style="color:#000">x</span> <span style="color:#000">/</span> <span style="color:#1c01ce">10</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">push</span>(<span style="color:#000">x</span> <span style="color:#000">%</span> <span style="color:#1c01ce">10</span> <span style="color:#000">+</span> <span style="color:#2300ce">&#39;0&#39;</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">template</span> <span style="color:#000">&lt;</span><span style="color:#a90d91">typename</span> <span style="color:#000">T</span><span style="color:#000">&gt;</span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">write</span>(<span style="color:#000">T</span> <span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">x</span> <span style="color:#000">&lt;</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">-</span><span style="color:#000">x</span>, <span style="color:#000">push</span>(<span style="color:#2300ce">&#39;-&#39;</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">work_wt</span>(<span style="color:#000">x</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">writestr</span>(<span style="color:#a90d91">char</span> <span style="color:#000">*</span><span style="color:#000">s</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">n</span> <span style="color:#000">=</span> <span style="color:#000">strlen</span>(<span style="color:#000">s</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">push</span>(<span style="color:#000">s</span>[<span style="color:#000">i</span>]);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">endln</span>() { <span style="color:#000">push</span>(<span style="color:#000">&#39;\\</span><span style="color:#000">n</span><span style="color:#000">&#39;</span>); }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">space</span>() { <span style="color:#000">push</span>(<span style="color:#2300ce">&#39; &#39;</span>); }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">template</span> <span style="color:#000">&lt;</span><span style="color:#a90d91">typename</span> <span style="color:#000">T</span><span style="color:#000">&gt;</span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">writeln</span>(<span style="color:#000">T</span> <span style="color:#000">x</span>) { <span style="color:#000">write</span>(<span style="color:#000">x</span>), <span style="color:#000">endln</span>(); }
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#a90d91">namespace</span> <span style="color:#000">IO</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">times</span>[<span style="color:#000">maxn</span>], <span style="color:#000">n</span>, <span style="color:#000">mm</span>, <span style="color:#000">tot</span>, <span style="color:#000">used</span>[<span style="color:#000">maxn</span>], <span style="color:#000">arcscc</span>[<span style="color:#000">maxn</span>], <span style="color:#000">m</span>;
</span></span><span style="display:flex;"><span><span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">vector</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">scc</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">vector</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">e</span>[<span style="color:#000">maxn</span>], <span style="color:#000">e2</span>[<span style="color:#000">maxn</span> <span style="color:#000">/</span> <span style="color:#1c01ce">10</span>];
</span></span><span style="display:flex;"><span><span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">map</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span>, <span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">mp</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">vector</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">not_used</span>;
</span></span><span style="display:flex;"><span><span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">vector</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">now</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">p</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">add</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>) { <span style="color:#000">e</span>[<span style="color:#000">x</span>].<span style="color:#000">push_back</span>(<span style="color:#000">y</span>), <span style="color:#000">e</span>[<span style="color:#000">y</span>].<span style="color:#000">push_back</span>(<span style="color:#000">x</span>); }
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">add2</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>) { <span style="color:#000">e2</span>[<span style="color:#000">x</span>].<span style="color:#000">push_back</span>(<span style="color:#000">y</span>), <span style="color:#000">e2</span>[<span style="color:#000">y</span>].<span style="color:#000">push_back</span>(<span style="color:#000">x</span>); }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">dfs</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">q</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">arcscc</span>[<span style="color:#000">not_used</span>[<span style="color:#000">x</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>]] <span style="color:#000">=</span> <span style="color:#000">q</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">x</span> <span style="color:#000">!=</span> <span style="color:#000">m</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">not_used</span>[<span style="color:#000">x</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">!=</span> <span style="color:#000">n</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">scc</span>[<span style="color:#000">q</span>].<span style="color:#000">push_back</span>(<span style="color:#000">not_used</span>[<span style="color:#000">x</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>]);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">v</span> : <span style="color:#000">e2</span>[<span style="color:#000">x</span>])
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">!</span><span style="color:#000">arcscc</span>[<span style="color:#000">not_used</span>[<span style="color:#000">v</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>]])
</span></span><span style="display:flex;"><span>            <span style="color:#000">dfs</span>(<span style="color:#000">v</span>, <span style="color:#000">q</span>);
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">n</span> <span style="color:#000">=</span> <span style="color:#000">read</span>(), <span style="color:#000">mm</span> <span style="color:#000">=</span> <span style="color:#000">read</span>(); <span style="color:#177500">// 这里的 mm 是原题的 m，我因为变量名冲突改了一下
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#000">y</span>, <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">mm</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">read</span>(), <span style="color:#000">y</span> <span style="color:#000">=</span> <span style="color:#000">read</span>(), <span style="color:#000">times</span>[<span style="color:#000">x</span>]<span style="color:#000">++</span>, <span style="color:#000">times</span>[<span style="color:#000">y</span>]<span style="color:#000">++</span>, <span style="color:#000">add</span>(<span style="color:#000">x</span>, <span style="color:#000">y</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">mi</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1e9</span>, <span style="color:#000">pos</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">times</span>[<span style="color:#000">i</span>] <span style="color:#000">&lt;</span> <span style="color:#000">mi</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">mi</span> <span style="color:#000">=</span> <span style="color:#000">times</span>[<span style="color:#000">i</span>], <span style="color:#000">pos</span> <span style="color:#000">=</span> <span style="color:#000">i</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">scc</span>[<span style="color:#000">++</span><span style="color:#000">tot</span>].<span style="color:#000">push_back</span>(<span style="color:#000">pos</span>), <span style="color:#000">used</span>[<span style="color:#000">pos</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">arcscc</span>[<span style="color:#000">pos</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">v</span> : <span style="color:#000">e</span>[<span style="color:#000">pos</span>])
</span></span><span style="display:flex;"><span>        <span style="color:#000">used</span>[<span style="color:#000">v</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">!</span><span style="color:#000">used</span>[<span style="color:#000">i</span>] <span style="color:#000">&amp;&amp;</span> <span style="color:#000">i</span> <span style="color:#000">!=</span> <span style="color:#000">pos</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">scc</span>[<span style="color:#000">tot</span>].<span style="color:#000">push_back</span>(<span style="color:#000">i</span>), <span style="color:#000">arcscc</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span> <span style="color:#a90d91">if</span> (<span style="color:#000">used</span>[<span style="color:#000">i</span>])
</span></span><span style="display:flex;"><span>            <span style="color:#000">not_used</span>.<span style="color:#000">push_back</span>(<span style="color:#000">i</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#177500">// 以上是找到出现次数最小的点并将与他相连的点删掉
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> : <span style="color:#000">not_used</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">cnt</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">v</span> : <span style="color:#000">e</span>[<span style="color:#000">i</span>])
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">arcscc</span>[<span style="color:#000">v</span>] <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">mp</span>[<span style="color:#000">i</span>][<span style="color:#000">v</span>] <span style="color:#000">=</span> <span style="color:#000">mp</span>[<span style="color:#000">v</span>][<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>                <span style="color:#000">cnt</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">cnt</span> <span style="color:#000">==</span> <span style="color:#000">scc</span>[<span style="color:#1c01ce">1</span>].<span style="color:#000">size</span>())
</span></span><span style="display:flex;"><span>            <span style="color:#000">mp</span>[<span style="color:#000">i</span>][<span style="color:#000">n</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">=</span> <span style="color:#000">mp</span>[<span style="color:#000">n</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>][<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">m</span> <span style="color:#000">=</span> <span style="color:#000">not_used</span>.<span style="color:#000">size</span>(); <span style="color:#177500">// 删掉之后原图剩余点数
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>    <span style="color:#000">not_used</span>.<span style="color:#000">push_back</span>(<span style="color:#000">n</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>); <span style="color:#177500">// 除了剩余的点，刚刚删除的点也作为一个联通块加进去
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">not_used</span>.<span style="color:#000">size</span>(); <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">now</span>.<span style="color:#000">push_back</span>(<span style="color:#000">i</span>), <span style="color:#000">p</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">not_used</span>[<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">m</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">!</span><span style="color:#000">mp</span>[<span style="color:#000">p</span>[<span style="color:#000">i</span>]][<span style="color:#000">p</span>[<span style="color:#000">j</span>]])
</span></span><span style="display:flex;"><span>                <span style="color:#000">add2</span>(<span style="color:#000">i</span>, <span style="color:#000">j</span>); <span style="color:#177500">// 重新建图
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>    <span style="color:#000">dfs</span>(<span style="color:#000">m</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">!</span><span style="color:#000">arcscc</span>[<span style="color:#000">not_used</span>[<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>]])
</span></span><span style="display:flex;"><span>            <span style="color:#000">dfs</span>(<span style="color:#000">i</span>, <span style="color:#000">++</span><span style="color:#000">tot</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">writeln</span>(<span style="color:#000">tot</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">tot</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">write</span>(<span style="color:#000">scc</span>[<span style="color:#000">i</span>].<span style="color:#000">size</span>()), <span style="color:#000">space</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> : <span style="color:#000">scc</span>[<span style="color:#000">i</span>])
</span></span><span style="display:flex;"><span>            <span style="color:#000">write</span>(<span style="color:#000">j</span>), <span style="color:#000">space</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#000">endln</span>();
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div>]]></content:encoded>
    </item>
    
    <item>
      <title>YbtOJ 简要题解合集</title>
      <link>https://luoyisu.github.io/posts/ybtoj-simple-solutions/</link>
      <pubDate>Wed, 24 Nov 2021 08:22:14 +0000</pubDate>
      
      <guid>https://luoyisu.github.io/posts/ybtoj-simple-solutions/</guid>
      <description>&lt;p&gt;懒得写那么多题解，于是就有了这个文章。&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>懒得写那么多题解，于是就有了这个文章。</p>
<h2 id="难度评级">难度评级</h2>
<p>D：很简单，也没怎么调。很可能不会出现在这个文章里。</p>
<p>C：会做，但是出了一些不是特别傻的 bug。</p>
<p>B：勉强会做 / 写代码是遇到了问题。</p>
<p>A：不会，看了题解很容易就弄懂了。</p>
<p>S：完全不会，反复看题解和代码才懂。</p>
<p>可能用加减号来更细化一些，+表示难，-表示简单。</p>
<h2 id="chapter-1-递推">Chapter 1 递推</h2>
<h3 id="e-练习1-划分数列">E 练习1 划分数列</h3>
<p>给定一个长度为 $n$ 的数列，要求划分最少的段数，使得每一段要么单调不降，要么单调不升。</p>
<p>难度：D+</p>
<p>有点贪心的感觉，可以发现如果能接上肯定比不接好，和每一段越长越好。</p>
<p>预处理 $up_i,down_i$​ 表示以 $i$​ 为结尾的最长不降/不升段的开始位置，然后答案 $f_i=\min(f_{up_i-1},f_{down_i-1})+1$​。</p>
<h3 id="g-练习2-无限序列">G 练习2 无限序列</h3>
<p>我们按以下方式产生序列：</p>
<ol>
<li>开始时序列是： <code>1</code> ；</li>
<li>每一次变化把序列中的 <code>1</code> 变成 <code>10</code> ，<code>0</code> 变成 <code>1</code>。</li>
</ol>
<p>经过无限次变化，我们得到序列 <code>1011010110110101101...</code>。</p>
<p>总共有 $Q$ 个询问（ $Q\leq5000$） ，要回答在区间 $[a,b]$​ 间有多少个<code>1</code>（$1\leq a\leq b\leq2^{63}$​）。</p>
<p>难度：D+</p>
<p>手玩发现第 $i$ 次变化后得到的序列是 $i-1$ 次变化后的序列 + $i-2$ 次变化后的序列，于是这就是个斐波那契。</p>
<p>对于每个询问，转换成前缀和，然后不停二分即可。要注意二分时要找到第一个不大于它的，所以用 <code>std::lower_bound()</code> 时要注意。</p>
<p>{% spoiler Code %}</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cctype&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">100</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>, <span style="color:#000">n</span> <span style="color:#000">=</span> <span style="color:#1c01ce">100</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">typedef</span> <span style="color:#a90d91">unsigned</span> <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">ll</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#000">ll</span> <span style="color:#000">read</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">ll</span> <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">char</span> <span style="color:#000">ch</span> <span style="color:#000">=</span> <span style="color:#000">getchar</span>();
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> (<span style="color:#000">!</span><span style="color:#000">isdigit</span>(<span style="color:#000">ch</span>))
</span></span><span style="display:flex;"><span>        <span style="color:#000">ch</span> <span style="color:#000">=</span> <span style="color:#000">getchar</span>();
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> (<span style="color:#000">isdigit</span>(<span style="color:#000">ch</span>))
</span></span><span style="display:flex;"><span>        <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">x</span> <span style="color:#000">*</span> <span style="color:#1c01ce">10</span> <span style="color:#000">+</span> <span style="color:#000">ch</span> <span style="color:#000">-</span> <span style="color:#2300ce">&#39;0&#39;</span>, <span style="color:#000">ch</span> <span style="color:#000">=</span> <span style="color:#000">getchar</span>();
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">write</span>(<span style="color:#000">ll</span> <span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">x</span> <span style="color:#000">&gt;</span> <span style="color:#1c01ce">9</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">write</span>(<span style="color:#000">x</span> <span style="color:#000">/</span> <span style="color:#1c01ce">10</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">putchar</span>(<span style="color:#000">x</span> <span style="color:#000">%</span> <span style="color:#1c01ce">10</span> <span style="color:#000">+</span> <span style="color:#2300ce">&#39;0&#39;</span>);
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000">ll</span> <span style="color:#000">f</span>[<span style="color:#000">maxn</span>], <span style="color:#000">ans</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000">ll</span> <span style="color:#000">solve</span>(<span style="color:#000">ll</span> <span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">x</span> <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">ll</span> <span style="color:#000">res</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> (<span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">pos</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">lower_bound</span>(<span style="color:#000">f</span>, <span style="color:#000">f</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">+</span> <span style="color:#000">n</span>, <span style="color:#000">x</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>) <span style="color:#000">-</span> <span style="color:#000">f</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">pos</span><span style="color:#000">--</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">pos</span> <span style="color:#000">&lt;</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">return</span> <span style="color:#000">res</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">res</span> <span style="color:#000">+=</span> <span style="color:#000">ans</span>[<span style="color:#000">pos</span>];
</span></span><span style="display:flex;"><span>        <span style="color:#000">x</span> <span style="color:#000">-=</span> <span style="color:#000">f</span>[<span style="color:#000">pos</span>];
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#000">res</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">f</span>[<span style="color:#1c01ce">0</span>] <span style="color:#000">=</span> <span style="color:#000">ans</span>[<span style="color:#1c01ce">0</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">f</span>[<span style="color:#1c01ce">1</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">2</span>, <span style="color:#000">ans</span>[<span style="color:#1c01ce">1</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">f</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">f</span>[<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">+</span> <span style="color:#000">f</span>[<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">2</span>], <span style="color:#000">ans</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">f</span>[<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">q</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">scanf</span>(<span style="color:#c41a16">&#34;%d&#34;</span>, <span style="color:#000">&amp;</span><span style="color:#000">q</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> (<span style="color:#000">q</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">ll</span> <span style="color:#000">x</span>, <span style="color:#000">y</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">read</span>(), <span style="color:#000">y</span> <span style="color:#000">=</span> <span style="color:#000">read</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#000">write</span>(<span style="color:#000">solve</span>(<span style="color:#000">y</span>) <span style="color:#000">-</span> <span style="color:#000">solve</span>(<span style="color:#000">x</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>));
</span></span><span style="display:flex;"><span>        <span style="color:#000">puts</span>(<span style="color:#c41a16">&#34;&#34;</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><p>{% endspoiler %}</p>
<h2 id="chapter-2-二分">Chapter 2 二分</h2>
<h3 id="f-练习3-攻击法坛">F 练习3 攻击法坛</h3>
<p><a href="https://www.ybtoj.com.cn/contest/131/problem/6">题面</a></p>
<p>难度：C</p>
<p>二分 $L$，然后用 DP 来 check，$f(i,j)=\max(nxt1_{f(i-1,j)+1},nxt2_{f(i,j-1)+1})$。其中 $f(i,j)$ 表示用 $i$ 个第一种法杖和 $j$​ 个第二种法杖能覆盖的最远的法坛，$nxt1_i,nxt2_i$​ 分别表示在第 $i$ 个祭坛处用第一种/第二种法杖能覆盖的最远的法坛。特别地，$nxt1_{n+1}=nxt2_{n+1}=n$。注意使用次数限制需要和 $n$​ 取一个最小值。</p>
<h2 id="chapter-19-倍增">Chapter 19 倍增</h2>
<h3 id="h-练习3-图上查询">H 练习3 图上查询</h3>
<p>一个 $n$ 个点 $n$ 条边的 <strong>有向图</strong>，对每个点求出从它出发经过 $k$ 条边，这些边的权值和以及这些边的权值最小值。</p>
<p>难度：D+</p>
<p>一开始没看到有向图，就纳闷了，这玩意基环树？？？然后越想越不对劲，感觉是有向图这个题就不对了啊。</p>
<p>看了题解发现是有向图。。。。。。。然后这个有向图每个点的出度都是 $1$，那么倍增一下就行。</p>
<p>然后写着写着又忘记这个有向图有环了，可以无限走下去，于是挂了好几遍。。。</p>
<p>确实要注意一下。</p>
<h2 id="chapter-22-数位dp">Chapter 22 数位DP</h2>
<h3 id="c-例题3-数字计数-zjoi2010">C 例题3 数字计数 [ZJOI2010]</h3>
<p>给定两个正整数 $l$ 和 $r$，求在 $[l,r]$ 中的所有整数中，每个数码各出现了多少次。</p>
<p>难度：B+</p>
<p>第一道自己做的数位DP&hellip;</p>
<p>虽说是数位DP，但我似乎并不是正统数位DP，更像是一种推式子的递推。</p>
<p>做每道推式子的计数都很费劲啊。。。实际上这题并不难。</p>
<p>设 $f(i,1/0)$​ 表示从低到高第 $i$​​ 位，是/否紧贴上界，当前数码出现总次数。$cnt(i,1/0)$​ 表示由低到高 $i$​​ 位，是/否紧贴上界，总共有几个数。$p_i$ 表示从低到高第 $i$ 位数。</p>
<p>对于数码 $1\sim9$ 显然有 $cnt(i,0)=cnt(i+1,0)\times10+p_i$，$cnt(i,1)=cnt(i+1,1)$，$f(i,1)=f(i+1,1)+[p_i=x]$​。其中 $x$ 为当前要算的数码。</p>
<p>考虑 $f(i,0)$​，先给出来式子：$f(i,0)=f(i+1,0)\times10+cnt(i+1,0)+f(i+1,1)\times p_i+[p_i&gt;x]$。</p>
<p>解释一下：上一位所有含当前数码的数在这一位可以随便填一个数，所以乘一个 $10$；之前所有数后面都可以填一个当前数码，所以要加上 $cnt(i+1,0)$；之前紧贴上界的数可以填一个小于 $p_i$ 的数，如果当前数码比 $p_i$ 小，那么在刚刚填的时候还会填进去一个当前数码，要算进去。</p>
<p>{% spoiler Code %}</p>
<p>在该开 <code>long long</code> 的地方记得开。</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">20</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">typedef</span> <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">ll</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000">ll</span> <span style="color:#000">f</span>[<span style="color:#000">maxn</span>][<span style="color:#1c01ce">2</span>], <span style="color:#000">cnt</span>[<span style="color:#000">maxn</span>][<span style="color:#1c01ce">2</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">p</span>[<span style="color:#000">maxn</span>], <span style="color:#000">len</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000">ll</span> <span style="color:#000">dp</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">cnt</span>[<span style="color:#000">len</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>][<span style="color:#1c01ce">1</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#000">len</span>; <span style="color:#000">i</span> <span style="color:#000">&gt;=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">cnt</span>[<span style="color:#000">i</span>][<span style="color:#1c01ce">0</span>] <span style="color:#000">=</span> <span style="color:#000">cnt</span>[<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>][<span style="color:#1c01ce">0</span>] <span style="color:#000">*</span> <span style="color:#1c01ce">10</span> <span style="color:#000">+</span> <span style="color:#000">p</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>        <span style="color:#000">cnt</span>[<span style="color:#000">i</span>][<span style="color:#1c01ce">1</span>] <span style="color:#000">=</span> <span style="color:#000">cnt</span>[<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>][<span style="color:#1c01ce">1</span>];
</span></span><span style="display:flex;"><span>        <span style="color:#000">f</span>[<span style="color:#000">i</span>][<span style="color:#1c01ce">1</span>] <span style="color:#000">=</span> <span style="color:#000">f</span>[<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>][<span style="color:#1c01ce">1</span>] <span style="color:#000">+</span> (<span style="color:#000">p</span>[<span style="color:#000">i</span>] <span style="color:#000">==</span> <span style="color:#000">x</span> <span style="color:#000">?</span> <span style="color:#1c01ce">1</span> <span style="color:#000">:</span> <span style="color:#1c01ce">0</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">f</span>[<span style="color:#000">i</span>][<span style="color:#1c01ce">0</span>] <span style="color:#000">=</span> <span style="color:#000">f</span>[<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>][<span style="color:#1c01ce">0</span>] <span style="color:#000">*</span> <span style="color:#1c01ce">10</span> <span style="color:#000">+</span> <span style="color:#000">cnt</span>[<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>][<span style="color:#1c01ce">0</span>] <span style="color:#000">+</span> <span style="color:#000">f</span>[<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>][<span style="color:#1c01ce">1</span>] <span style="color:#000">*</span> <span style="color:#000">p</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">p</span>[<span style="color:#000">i</span>] <span style="color:#000">&gt;</span> <span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">f</span>[<span style="color:#000">i</span>][<span style="color:#1c01ce">0</span>]<span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">ll</span> <span style="color:#000">tmp</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">x</span> <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">len</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">tmp</span> <span style="color:#000">=</span> <span style="color:#000">tmp</span> <span style="color:#000">*</span> <span style="color:#1c01ce">10</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#000">f</span>[<span style="color:#1c01ce">1</span>][<span style="color:#1c01ce">0</span>] <span style="color:#000">+</span> <span style="color:#000">f</span>[<span style="color:#1c01ce">1</span>][<span style="color:#1c01ce">1</span>] <span style="color:#000">-</span> <span style="color:#000">tmp</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000">ll</span> <span style="color:#000">solve</span>(<span style="color:#000">ll</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">i</span>) <span style="color:#177500">// 此处没开 long long，导致 WA 了一遍。。。
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">len</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> (<span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">p</span>[<span style="color:#000">++</span><span style="color:#000">len</span>] <span style="color:#000">=</span> <span style="color:#000">x</span> <span style="color:#000">%</span> <span style="color:#1c01ce">10</span>, <span style="color:#000">x</span> <span style="color:#000">/=</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">memset</span>(<span style="color:#000">cnt</span>, <span style="color:#1c01ce">0</span>, <span style="color:#a90d91">sizeof</span>(<span style="color:#000">cnt</span>)), <span style="color:#000">memset</span>(<span style="color:#000">f</span>, <span style="color:#1c01ce">0</span>, <span style="color:#a90d91">sizeof</span>(<span style="color:#000">f</span>));
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#000">dp</span>(<span style="color:#000">i</span>);
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">ll</span> <span style="color:#000">a</span>, <span style="color:#000">b</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">a</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">b</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#1c01ce">9</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">solve</span>(<span style="color:#000">b</span>, <span style="color:#000">i</span>) <span style="color:#000">-</span> <span style="color:#000">solve</span>(<span style="color:#000">a</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">i</span>) <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><p>{% endspoiler %}</p>]]></content:encoded>
    </item>
    
  </channel>
</rss>
