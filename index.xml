<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>_slb 的博客</title>
    <link>https://luoyisu.github.io/</link>
    <description>Recent content on _slb 的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sun, 30 Oct 2022 23:16:58 +0000</lastBuildDate><atom:link href="https://luoyisu.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>初级字符串算法合集</title>
      <link>https://luoyisu.github.io/posts/string-algorithm-primary/</link>
      <pubDate>Sun, 30 Oct 2022 23:16:58 +0000</pubDate>
      
      <guid>https://luoyisu.github.io/posts/string-algorithm-primary/</guid>
      <description>&lt;p&gt;初级字符串算法合集，预计内容包括：哈希、trie、kmp、manacher、z函数。&lt;/p&gt;
&lt;p&gt;缓慢填坑。&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>初级字符串算法合集，预计内容包括：哈希、trie、kmp、manacher、z函数。</p>
<p>缓慢填坑。</p>
<h2 id="哈希">哈希</h2>
<h3 id="哈希的分析">哈希的分析</h3>
<p>哈希实际上就是指把一个什么东西映射到一个比较小的值域上，设哈希函数为 $f(x)$，如果 $x=y$ 那么一定有 $f(x)=f(y)$，反之不一定成立。</p>
<p>字符串哈希一般使用多项式哈希，选定一个底数 $b$ 和一个模数 $p$，$f(s)=\sum_{i=1}^{len}s_i\times b^{len-i}\pmod p$</p>
<p>底数一般选择大于值域的任意数，可以认为 $f(s),f(t)$ 冲突的概率大概为 $\dfrac{len-1}{p}$。</p>
<p>计算总哈希冲突概率是很简单的，如果发现冲突概率不低，可以对两个质数分别取模，相当于值域扩大到两者之积，大大减少冲突概率。</p>
<p>因为取模常数较大，如果条件允许，也可以使用自然溢出，不取模。</p>
<h3 id="子串哈希">子串哈希</h3>
<p>类似前缀和的思想，不难得到：$f(l&hellip;r)=f(r)-f(l-1)\times b^{r-l+1}$，可以做到 $O(1)$ 回答子串哈希。</p>
<h3 id="代码">代码</h3>
<p>使用自然溢出。</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    <span style="color:#000">hash</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">hash</span>[<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">*</span> <span style="color:#000">base</span> <span style="color:#000">+</span> <span style="color:#000">s</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span><span style="color:#000">ull</span> <span style="color:#000">gethash</span>(<span style="color:#a90d91">int</span> <span style="color:#000">l</span>, <span style="color:#a90d91">int</span> <span style="color:#000">r</span>) { <span style="color:#a90d91">return</span> <span style="color:#000">hash</span>[<span style="color:#000">r</span>] <span style="color:#000">-</span> <span style="color:#000">hash</span>[<span style="color:#000">l</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">*</span> <span style="color:#000">mi</span>[<span style="color:#000">r</span> <span style="color:#000">-</span> <span style="color:#000">l</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>]; }
</span></span></code></pre></div><h3 id="应用">应用</h3>
<p>很多和字符串相关的东西都依赖于判断相等，经常可以二分+哈希在单个 $\log$ 的时间内解决。</p>
<h2 id="trie">trie</h2>
<p>基本知识不说了，很简单。</p>
<p>异或问题经常可以用到 01trie。</p>
<p>各种 trie 都是支持合并的，类似线段树合并。</p>
<p>01trie可以维护不少有关异或的信息。</p>
<p>从低位到高位插入到trie中，通过维护一个点到其父亲这条边上被经过了几次可以轻松得到子树异或和，删除也可以这么做，还可以做到全局+/-1，以+1为例，只需要交换两个儿子，然后向0的那个儿子接着递归做即可。</p>
<h2 id="kmp前缀函数">kmp（前缀函数）</h2>
<h2 id="manacher">manacher</h2>
<h2 id="z函数">z函数</h2>]]></content:encoded>
    </item>
    
    <item>
      <title>CSP-S2022</title>
      <link>https://luoyisu.github.io/posts/csp-s2022/</link>
      <pubDate>Mon, 19 Sep 2022 06:51:20 +0000</pubDate>
      
      <guid>https://luoyisu.github.io/posts/csp-s2022/</guid>
      <description>&lt;p&gt;希望比去年强。&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>希望比去年强。</p>
<h2 id="初赛">初赛</h2>
<p>之前啥都没看，中午还在写数学作业，直接就开考了。</p>
<p>然后发现自己啥都不会了，随便蒙了蒙就润了。</p>
<p>考完发现自己前面选择题似乎错了几个，后面那个负数取模不会啊，感觉三个选择题都错了。</p>
<p>那个基数排序的判断题我理解错题意了好像也错了。</p>
<p>太摆了，不过辽宁有分就行，润了。</p>
<p>出分了，88，比我想的高不少，很离谱啊。。。</p>
<h2 id="第二轮">第二轮</h2>
<p>被迫去沈阳考试，很烦，不过去了也就去了。</p>
<p>前几天在酒店也没干啥，打了场模拟挂了好多好多分。</p>
<p>然后就考了，也没啥可说的，被第一题降智了几分钟，第二题倒是看了一眼就会了。</p>
<p>第三题一直在想图论，充要条件没想明白，没想到哈希。</p>
<p>第四题一眼dp，又一眼可以用矩阵刻画的dp，再看一下是树，那就动态dp啊，然后发现是静态的，但是我完全想不起来倍增这个东西，也写不出来树剖了。</p>
<p>写了第三题的 $40$ 分，打算等写完第四题的 $52$ 分暴力回来写第三题的 $20$ 分，然后再去写第三题的 $k=2$。</p>
<p>然后因为水平太低第四题的 $n^2$ 一直调不过去，最后终于调过去了也没时间写别的了，$100+100+40+44=288$ 遗憾离场，没啥水平。</p>
<p>后来测了一下前两题的民间数据，没挂，那还不错。</p>
<p>再测了一下，好像在哪里我都是 $308$，第四题我的做法是 $qd$ 的，可以过数据随机，小图灵说我是全省第三，infoj说是第二，似乎是有个随机得分的人和我差不多高，疑似是小王？（</p>]]></content:encoded>
    </item>
    
    <item>
      <title>基于状压的 O(n)-O(1) rmq</title>
      <link>https://luoyisu.github.io/posts/linear-rmq/</link>
      <pubDate>Sun, 28 Aug 2022 19:03:24 +0000</pubDate>
      
      <guid>https://luoyisu.github.io/posts/linear-rmq/</guid>
      <description>&lt;p&gt;一个很简单的“禁术”。&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>一个很简单的“禁术”。</p>
<h2 id="rmq">RMQ</h2>
<p>设序列长度为 $n$。</p>
<p>对序列分块，每块长度 $\log_2n$，块数 $n/\log_2n$，记录每块最大值，用 st 表预处理出块件最大值，这一步复杂度为 $O(n)$。</p>
<p>预处理出每一块前后缀最大值，这样当询问的两个端点不在同一个块内，就可以 $O(1)$ 回答了。</p>
<p>现在要处理询问端点在一个块内的情况。</p>
<p>对于一个块的所有前缀，维护一个递减的单调栈，并记录哪些元素在单调栈里（用一个整数状压存储）。</p>
<p>这样 $[l,r]$ 的最大值位置就是前缀 $r$ 的单调栈中第一个在原数组中下标大于等于 $l$ 的位置，即第 $l$ 位后第一个 $1$。</p>
<h2 id="code">Code</h2>
<p>使用了常数略大的写法，为了卡常可以在预处理的时候把多个循环合并为一个。</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cmath&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#a90d91">namespace</span> <span style="color:#000">std</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">bool</span> <span style="color:#000">MEM1</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">namespace</span> <span style="color:#000">solve</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2e7</span> <span style="color:#000">+</span> <span style="color:#1c01ce">3</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">len</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">f</span>[<span style="color:#1c01ce">25</span>][<span style="color:#000">maxn</span> <span style="color:#000">/</span> <span style="color:#1c01ce">24</span> <span style="color:#000">+</span> <span style="color:#1c01ce">7</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">pre</span>[<span style="color:#000">maxn</span>], <span style="color:#000">suf</span>[<span style="color:#000">maxn</span>], <span style="color:#000">id</span>[<span style="color:#000">maxn</span>], <span style="color:#000">idn</span>, <span style="color:#000">s</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">pos</span>[<span style="color:#000">maxn</span>], <span style="color:#000">lg</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">n</span>, <span style="color:#000">a</span>[<span style="color:#000">maxn</span>], <span style="color:#000">q</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">void</span> <span style="color:#000">init</span>()
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">len</span> <span style="color:#000">=</span> <span style="color:#000">__lg</span>(<span style="color:#000">n</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">lg</span>[<span style="color:#1c01ce">0</span>] <span style="color:#000">=</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">id</span>[<span style="color:#1c01ce">0</span>] <span style="color:#000">=</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">static</span> <span style="color:#a90d91">int</span> <span style="color:#000">stk</span>[<span style="color:#1c01ce">30</span>], <span style="color:#000">top</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">lg</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">lg</span>[<span style="color:#000">i</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">id</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> (<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>) <span style="color:#000">/</span> <span style="color:#000">len</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">id</span>[<span style="color:#000">i</span>] <span style="color:#000">==</span> <span style="color:#000">id</span>[<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>])
</span></span><span style="display:flex;"><span>                <span style="color:#000">pos</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">pos</span>[<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>                <span style="color:#000">pos</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">f</span>[<span style="color:#1c01ce">0</span>][<span style="color:#000">id</span>[<span style="color:#000">i</span>]] <span style="color:#000">=</span> <span style="color:#000">max</span>(<span style="color:#000">f</span>[<span style="color:#1c01ce">0</span>][<span style="color:#000">id</span>[<span style="color:#000">i</span>]], <span style="color:#000">a</span>[<span style="color:#000">i</span>]);
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#000">idn</span> <span style="color:#000">=</span> <span style="color:#000">id</span>[<span style="color:#000">n</span>];
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">lg</span>[<span style="color:#000">idn</span>]; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">j</span> <span style="color:#000">+</span> (<span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">i</span>) <span style="color:#000">-</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;=</span> <span style="color:#000">idn</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">f</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>] <span style="color:#000">=</span> <span style="color:#000">max</span>(<span style="color:#000">f</span>[<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>][<span style="color:#000">j</span>], <span style="color:#000">f</span>[<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>][<span style="color:#000">j</span> <span style="color:#000">+</span> (<span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> (<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>))]);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">id</span>[<span style="color:#000">i</span>] <span style="color:#000">!=</span> <span style="color:#000">id</span>[<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>])
</span></span><span style="display:flex;"><span>                <span style="color:#000">pre</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>                <span style="color:#000">pre</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">max</span>(<span style="color:#000">pre</span>[<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>], <span style="color:#000">a</span>[<span style="color:#000">i</span>]);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span> <span style="color:#000">&gt;=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">id</span>[<span style="color:#000">i</span>] <span style="color:#000">!=</span> <span style="color:#000">id</span>[<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>])
</span></span><span style="display:flex;"><span>                <span style="color:#000">suf</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>                <span style="color:#000">suf</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">max</span>(<span style="color:#000">suf</span>[<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>], <span style="color:#000">a</span>[<span style="color:#000">i</span>]);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">id</span>[<span style="color:#000">i</span>] <span style="color:#000">!=</span> <span style="color:#000">id</span>[<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>])
</span></span><span style="display:flex;"><span>                <span style="color:#000">top</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>                <span style="color:#000">s</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">s</span>[<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>];
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">while</span> (<span style="color:#000">top</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">a</span>[<span style="color:#000">stk</span>[<span style="color:#000">top</span>]] <span style="color:#000">&lt;=</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>])
</span></span><span style="display:flex;"><span>                <span style="color:#000">s</span>[<span style="color:#000">i</span>] <span style="color:#000">^=</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">pos</span>[<span style="color:#000">stk</span>[<span style="color:#000">top</span><span style="color:#000">--</span>]];
</span></span><span style="display:flex;"><span>            <span style="color:#000">s</span>[<span style="color:#000">i</span>] <span style="color:#000">|=</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">pos</span>[<span style="color:#000">stk</span>[<span style="color:#000">++</span><span style="color:#000">top</span>] <span style="color:#000">=</span> <span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">int</span> <span style="color:#000">query</span>(<span style="color:#a90d91">int</span> <span style="color:#000">l</span>, <span style="color:#a90d91">int</span> <span style="color:#000">r</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">idl</span> <span style="color:#000">=</span> <span style="color:#000">id</span>[<span style="color:#000">l</span>], <span style="color:#000">idr</span> <span style="color:#000">=</span> <span style="color:#000">id</span>[<span style="color:#000">r</span>];
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">idl</span> <span style="color:#000">!=</span> <span style="color:#000">idr</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">int</span> <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#000">max</span>(<span style="color:#000">suf</span>[<span style="color:#000">l</span>], <span style="color:#000">pre</span>[<span style="color:#000">r</span>]);
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">idr</span> <span style="color:#000">-</span> <span style="color:#000">idl</span> <span style="color:#000">&gt;</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>            {
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">int</span> <span style="color:#000">d</span> <span style="color:#000">=</span> <span style="color:#000">lg</span>[<span style="color:#000">idr</span> <span style="color:#000">-</span> <span style="color:#000">idl</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>];
</span></span><span style="display:flex;"><span>                <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#000">max</span>(<span style="color:#000">ans</span>, <span style="color:#000">max</span>(<span style="color:#000">f</span>[<span style="color:#000">d</span>][<span style="color:#000">idl</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>], <span style="color:#000">f</span>[<span style="color:#000">d</span>][<span style="color:#000">idr</span> <span style="color:#000">-</span> (<span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">d</span>)]));
</span></span><span style="display:flex;"><span>            }
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">return</span> <span style="color:#000">ans</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">return</span> <span style="color:#000">a</span>[<span style="color:#000">l</span> <span style="color:#000">+</span> <span style="color:#000">__builtin_ctz</span>(<span style="color:#000">s</span>[<span style="color:#000">r</span>] <span style="color:#000">&gt;&gt;</span> <span style="color:#000">pos</span>[<span style="color:#000">l</span>])];
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">void</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">q</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>        <span style="color:#000">init</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">while</span> (<span style="color:#000">q</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">int</span> <span style="color:#000">l</span>, <span style="color:#000">r</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">l</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">r</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">query</span>(<span style="color:#000">l</span>, <span style="color:#000">r</span>) <span style="color:#000">&lt;&lt;</span> <span style="color:#000">&#39;\\</span><span style="color:#000">n</span><span style="color:#000">&#39;</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">bool</span> <span style="color:#000">MEM2</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">ios</span><span style="color:#000">::</span><span style="color:#000">sync_with_stdio</span>(<span style="color:#a90d91">false</span>), <span style="color:#000">cin</span>.<span style="color:#000">tie</span>(<span style="color:#1c01ce">0</span>), <span style="color:#000">cout</span>.<span style="color:#000">tie</span>(<span style="color:#1c01ce">0</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">solve</span><span style="color:#000">::</span><span style="color:#000">main</span>();
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div>]]></content:encoded>
    </item>
    
    <item>
      <title>NOI2022 游记</title>
      <link>https://luoyisu.github.io/posts/noi2022/</link>
      <pubDate>Fri, 26 Aug 2022 20:36:54 +0000</pubDate>
      
      <guid>https://luoyisu.github.io/posts/noi2022/</guid>
      <description>&lt;p&gt;D类选手，因为一些原因打铁了。&lt;/p&gt;
&lt;p&gt;只写一些和比赛关系比较大的事情，乱七八糟的就不写了。&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>D类选手，因为一些原因打铁了。</p>
<p>只写一些和比赛关系比较大的事情，乱七八糟的就不写了。</p>
<h2 id="赛前">赛前</h2>
<p>对自己的定位是有点水平的D类选手，挂一些分也能到ag线（后来证明定位还算准？）。</p>
<p>模拟赛经常当一题战士，不过不怎么挂分来着，感觉优势很大。</p>
<h2 id="before-day1">before day1</h2>
<p>打牌、tetr、没干啥有意义的事情。</p>
<h2 id="day1--最黑暗的一天">day1 —— 最黑暗的一天</h2>
<h3 id="上午">上午</h3>
<p>感觉状态还不错。</p>
<p>然后看到题，发现 T3 是个交互、而且题面巨长、T2 是个计数、T1 看起来就是传统的送分 ds。</p>
<p>还是看看 T1，过了一会编了个线段树合并做法，发现可能拿不到 100，但是稍微特判一些性质 80 是很稳的，直接开始写了。</p>
<p>写起来有点自闭，先写了个不带删除的版本，测了测发现似乎真的过不去 100，打算优化一下，但是离谱的事情发生了：我用一份暴力代码把我的线段树合并覆盖掉了，只能重新写代码。。。然后飞快又写了一份，离大谱的是我又犯了同样的错误覆盖了代码。只能又写了一份。。</p>
<p>然后试图把删除加上去，重打代码的时候想到了一个非常好写的启发式合并 deque 的做法，感觉非常牛逼，就给写上去了。</p>
<p>我用了 vector 和 deque，我知道这俩玩意占用空间巨大（尤其是 deque），于是我留了近 400MB 给他们用。</p>
<p>因为浪费了太多时间，没时间优化也没时间对拍了，我决定扔掉 T1 去看后面的题。</p>
<p>然后发现 T2 如果会判合法就能获得 40 分，但是我想了很久很久还是不会，很尴尬啊。。。</p>
<p>然后去看了 T3，认真读完题之后发现这个题真的不怎么可做，链看上去是一个比较容易拿到的 10 分，我编了一个线段树做法，然后发现限制很严格，线段树寄了。</p>
<p>然后回去想 T2，想了想还是不会啊，搜索也不怎么想写了。。。</p>
<p>最后 10 分钟忽然想到 T3 的链可以直接分块做，但是没有 rush 出来，只能遗憾离场，分数大概是 $[80,100]+0+0$，应该也没有非常差。</p>
<p>交流了一圈，发现大家都不会后两题，T2 只有范神拿到了 40，那好像还可以。</p>
<h3 id="下午--心肺骤停">下午 —— 心肺骤停</h3>
<p>快乐查分，然后发现我 T1 爆零了，全部 wrong answer，很离谱啊！！！</p>
<p>测了一下数据，是对的，打算申诉来着，然后发现这似乎是个共性问题。</p>
<p>然后发现是 MLE 了，被显示成 wrong answer，然后发现是 std::deque 即使是空的也会申请大概 0.6k 内存，然后我就寄了，这下真爆零了。。。。。</p>
<p>心肺骤停啊，沉默不语，非常自闭，本来至少 80 的。。。这下不是真要打铁了？？？？？</p>
<p>只能等 day2 了，没办法，好好考吧。</p>
<h2 id="the-day-after-day1-before-day2">the day after day1, before day2</h2>
<p>摸鱼，调整心情。</p>
<h2 id="day2--以为翻了但还是寄了">day2 —— 以为翻了，但还是寄了</h2>
<h3 id="上午-1">上午</h3>
<p>直接看 T1，树哈希？这我会啊，模拟赛前几天刚考。</p>
<p>然后编了个做法，没细想，过了样例，感觉复杂度挺对的就快速跑路了，今天打算激进一点，让期望得分尽可能高。</p>
<p>看了眼 T3，感觉非常不可做。</p>
<p>看 T2，想了想，对着性质 A 编了一会做法。一开始想的是把每个点的限制放到最左面，然后枚举分界点前面填 0、后面填 1，发现过不去样例。思考了一下把两个结论都换掉了，变成从后往前贪心填让逆序对增加最小的数，然后过了样例，我也没仔细想，拼了个搜索上去，接着优化了一下复杂度，现在 T2 能得到 48 分。</p>
<p>去看 T3，想了一下没啥思路，限制很奇怪，写了个搜索，能得到 17~23 分。想了一下 $k=3$ 的部分，感觉只填 2 就可以，但感觉不是非常对，而且只有 6 分，就没写，跑路了。</p>
<p>回去想 T2，B 性质是没有限制，想了一下是不是也可以从后到前贪心填，但想了一下感觉有点像对的，又有点不对，也没什么时间验证了。</p>
<p>然后就一直自闭到结束，期望 $100+48+17=165$，ag 应该是寄了，但 cu 还是很有希望的。</p>
<h3 id="下午--心肺骤停2">下午 —— 心肺骤停*2</h3>
<p>发现 T1 挂成 76，T3 爆零。</p>
<p>T1 挂我不是非常意外，毕竟猜的结论我没证明，应该枚举全排列匹配的。</p>
<p>T3 就不是很懂了，看了一下，错的点都输出了 0，看来是搜挂了。。。</p>
<p>这下变成 124 了，不知道是 fe 还是 cu。。。</p>
<p>交流了一下，发现我 T2 猜的结论是对的。。。就是把限制放在最左面然后从后向前贪心填。。。那我不是自大闭。。</p>
<h2 id="day">day？</h2>
<p>打铁了，乐。</p>
<h2 id="总结">总结</h2>
<p>遇到结论不会证明可以敲代码验证，但我总是缺少这么做的时间，得提高思考速度和手速。</p>
<p>然后不懂的东西还是少用，<strong>学什么东西深入一点，还来得及</strong>。</p>
<p>大赛对我似乎确实是有降智的debuff，但还是看开点，感觉这场 noi 已经发挥不错了，虽然挂的分比得的分多，但总的来说还可以，被 deque 阴了一手没办法。</p>
<p>下个赛季再战吧，<strong>别进不去省队然后耻辱退役</strong>。</p>]]></content:encoded>
    </item>
    
    <item>
      <title>LNOI2022-solution</title>
      <link>https://luoyisu.github.io/posts/lnoi2022-solution/</link>
      <pubDate>Thu, 26 May 2022 09:46:01 +0000</pubDate>
      
      <guid>https://luoyisu.github.io/posts/lnoi2022-solution/</guid>
      <description>&lt;p&gt;填完了。&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>填完了。</p>
<h2 id="t1-food">T1 food</h2>
<h3 id="description">Description</h3>
<p>有 $n$ 个食物，每个食物有 $a_i,b_i$ 两个参数。你的初始质量为 $1$，可以以任意顺序吃这些食物，吃掉一个食物之后，你的质量可以加 $b_i$，或者乘上 $a_i$，最大化质量。</p>
<h3 id="solution">Solution</h3>
<p>首先肯定是先加后乘；</p>
<p>然后 $a=1$ 肯定加。</p>
<p>然后剩下的食物里，加只会进行一次，因为如果加多次，调整为只加最大的，剩下的乘是不劣的。</p>
<p>假设加上 $a=1$ 的质量为 $now$，那么把一个数从乘变成加会让全都乘的答案 $ans$ 变为 $ans\times\dfrac{b+now}{a\times now}$，扫一遍找到右边比例的最大值就好了。</p>
<h3 id="code">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#a90d91">namespace</span> <span style="color:#000">std</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">namespace</span> <span style="color:#000">solve</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1e6</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">mod</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1e9</span> <span style="color:#000">+</span> <span style="color:#1c01ce">7</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">typedef</span> <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">ll</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#000">ll</span> <span style="color:#000">now</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">struct</span> <span style="color:#3f6e75">node</span>
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">a</span>, <span style="color:#000">b</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">inline</span> <span style="color:#a90d91">double</span> <span style="color:#000">f</span>() { <span style="color:#a90d91">return</span> (<span style="color:#000">b</span> <span style="color:#000">+</span> <span style="color:#000">now</span>) <span style="color:#000">/</span> (<span style="color:#a90d91">long</span> <span style="color:#a90d91">double</span>)<span style="color:#1c01ce">1.</span> <span style="color:#000">/</span> ((<span style="color:#a90d91">long</span> <span style="color:#a90d91">double</span>)<span style="color:#000">a</span> <span style="color:#000">*</span> <span style="color:#000">now</span>); }
</span></span><span style="display:flex;"><span>    } <span style="color:#000">a</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">vis</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">void</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">a</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">b</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">a</span> <span style="color:#000">==</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">now</span> <span style="color:#000">+=</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">b</span>, <span style="color:#000">vis</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">double</span> <span style="color:#000">d</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">pos</span> <span style="color:#000">=</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">vis</span>[<span style="color:#000">i</span>])
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">continue</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">f</span>() <span style="color:#000">&gt;=</span> <span style="color:#000">d</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">pos</span> <span style="color:#000">=</span> <span style="color:#000">i</span>, <span style="color:#000">d</span> <span style="color:#000">=</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">f</span>();
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">pos</span> <span style="color:#000">==</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">now</span> <span style="color:#000">%=</span> <span style="color:#000">mod</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">if</span> (<span style="color:#000">!</span><span style="color:#000">vis</span>[<span style="color:#000">i</span>])
</span></span><span style="display:flex;"><span>                    <span style="color:#000">now</span> <span style="color:#000">*=</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">a</span>, <span style="color:#000">now</span> <span style="color:#000">%=</span> <span style="color:#000">mod</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">now</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">now</span> <span style="color:#000">+=</span> <span style="color:#000">a</span>[<span style="color:#000">pos</span>].<span style="color:#000">b</span>, <span style="color:#000">now</span> <span style="color:#000">%=</span> <span style="color:#000">mod</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">if</span> (<span style="color:#000">!</span><span style="color:#000">vis</span>[<span style="color:#000">i</span>] <span style="color:#000">&amp;&amp;</span> <span style="color:#000">i</span> <span style="color:#000">!=</span> <span style="color:#000">pos</span>)
</span></span><span style="display:flex;"><span>                    <span style="color:#000">now</span> <span style="color:#000">*=</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">a</span>, <span style="color:#000">now</span> <span style="color:#000">%=</span> <span style="color:#000">mod</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">now</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">ios</span><span style="color:#000">::</span><span style="color:#000">sync_with_stdio</span>(<span style="color:#a90d91">false</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">solve</span><span style="color:#000">::</span><span style="color:#000">main</span>();
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="t2-problem">T2 problem</h2>
<h3 id="description-1">Description</h3>
<p>给定长度为 $3 n$、值域为 $[0, 3]$ 的整数序列 $S = s_1 s_2 \cdots s_{3 n}$。你需要首先将 $S$ 中的每个 $0$ 替换为 $[1, 3]$ 中的任意一个整数，得到序列 $T = t_1 t_2 \cdots t_{3 n}$，然后给出 $n$ 个长度为 $3$ 的整数序列 ${\{ a_{i, 1}, a_{i, 2}, a_{i, 3} \}}_{1 \le i \le n}$，使得</p>
<ul>
<li>$\forall 1 \le i \le n$，$1 \le a_{i, 1} &lt; a_{i, 2} &lt; a_{i, 3} \le 3 n$；</li>
<li>$\forall (i_1, j_1) \ne (i_2, j_2)$，$a_{i_1, j_1} \ne a_{i_2, j_2}$；</li>
<li>$\forall 1 \le i \le n$，$\{ t_{a_{i, 1}}, t_{a_{i, 2}}, t_{a_{i, 3}} \}$ 是 $\{ 1, 2, 3 \}$ 的一个排列且逆序对数为奇数。</li>
</ul>
<p>认为两个方案本质不同当且仅当序列 $T$ 不同或存在 $a_{i, j}$（$1 \le i \le n$，$1 \le j \le 3$）不同，求以上操作的本质不同的方案数，对 $({10}^9 + 7)$ 取模。</p>
<p>$n\leq19$。</p>
<h3 id="solution-1">Solution</h3>
<p>逆序对数是奇数，也就是说只有 $(1,3,2),(2,1,3),(3,2,1)$ 三种情况。</p>
<p>题目的要求相当于我们把 $3n$ 个数分到 $n$ 个三元组里，不难想到一个 dp：</p>
<p>$g(i,a,b,c,d,e,f)$ 表示当前 $T$ 填了前 $i$ 位，当前为 $(1),(2),(3)$ 的三元组分别有 $a,b,c$ 个；当前为 $(1,3),(2,1),(3,2)$ 的三元组分别有 $d,e,f$ 个的方案数。</p>
<p>这里我们不考虑 $n$ 个三元组的顺序，方案数为 $g(3n,0,0,0,0,0,0)$，再乘上 $n!$ 即可。</p>
<p>转移的时候就枚举这这一位填什么，分到哪个三元组里，乘一个系数转移就好了。</p>
<p>复杂度看似是 $O(n^7)$，但是我们只考虑能转移到最终状态的状态进行转移，比如说 $g(i,n,2,0,0,0,0)$ 这种状态显然就没有意义。多考虑一些类似的状态，状态数会减少很多，可以很快地通过本题。</p>
<p>如果你采用只存合法状态进行转移的方式，我估计会非常快（</p>
<h3 id="code-1">Code</h3>
<p>注意空间需要滚动数组。</p>
<p>这里放一份当前最优解的代码，是一位拒绝透露姓名的神仙在我代码的基础上进行了一波常数优化得到的（</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#a90d91">namespace</span> <span style="color:#000">std</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">constexpr</span> <span style="color:#a90d91">int</span> <span style="color:#000">mod</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1000000007</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">typedef</span> <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">ll</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">namespace</span> <span style="color:#000">solve</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">59</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxm</span> <span style="color:#000">=</span> <span style="color:#1c01ce">20</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#633820">#define upd(x, y) ((x) = (((x) + (y)) % (mod)))
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">g</span>[<span style="color:#1c01ce">2</span>][<span style="color:#000">maxm</span>][<span style="color:#000">maxm</span>][<span style="color:#000">maxm</span>][<span style="color:#000">maxm</span>][<span style="color:#000">maxm</span>][<span style="color:#000">maxm</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">char</span> <span style="color:#000">str</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">void</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span> <span style="color:#000">&gt;&gt;</span> (<span style="color:#000">str</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">g</span>[<span style="color:#1c01ce">0</span>][<span style="color:#1c01ce">0</span>][<span style="color:#1c01ce">0</span>][<span style="color:#1c01ce">0</span>][<span style="color:#1c01ce">0</span>][<span style="color:#1c01ce">0</span>][<span style="color:#1c01ce">0</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">cur</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span> <span style="color:#000">*</span> <span style="color:#1c01ce">3</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">auto</span><span style="color:#000">&amp;&amp;</span> <span style="color:#000">res</span>(<span style="color:#000">n</span> <span style="color:#000">*</span> <span style="color:#1c01ce">3</span> <span style="color:#000">-</span> <span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">a</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">a</span> <span style="color:#000">&lt;=</span> <span style="color:#000">res</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">a</span> <span style="color:#000">&lt;=</span> <span style="color:#000">i</span>; <span style="color:#000">a</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">b</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">a</span> <span style="color:#000">+</span> <span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">b</span> <span style="color:#000">&lt;=</span> <span style="color:#000">res</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">a</span> <span style="color:#000">+</span> <span style="color:#000">b</span> <span style="color:#000">&lt;=</span> <span style="color:#000">i</span>; <span style="color:#000">b</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">c</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">a</span> <span style="color:#000">+</span> <span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">b</span> <span style="color:#000">+</span> <span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">c</span> <span style="color:#000">&lt;=</span> <span style="color:#000">res</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">a</span> <span style="color:#000">+</span> <span style="color:#000">b</span> <span style="color:#000">+</span> <span style="color:#000">c</span> <span style="color:#000">&lt;=</span> <span style="color:#000">i</span>; <span style="color:#000">c</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">d</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">a</span> <span style="color:#000">+</span> <span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">b</span> <span style="color:#000">+</span> <span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">c</span> <span style="color:#000">+</span> <span style="color:#000">d</span> <span style="color:#000">&lt;=</span> <span style="color:#000">res</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">a</span> <span style="color:#000">+</span> <span style="color:#000">b</span> <span style="color:#000">+</span> <span style="color:#000">c</span> <span style="color:#000">+</span> <span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">d</span> <span style="color:#000">&lt;=</span> <span style="color:#000">i</span>; <span style="color:#000">d</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">e</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">a</span> <span style="color:#000">+</span> <span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">b</span> <span style="color:#000">+</span> <span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">c</span> <span style="color:#000">+</span> <span style="color:#000">d</span> <span style="color:#000">+</span> <span style="color:#000">e</span> <span style="color:#000">&lt;=</span> <span style="color:#000">res</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">a</span> <span style="color:#000">+</span> <span style="color:#000">b</span> <span style="color:#000">+</span> <span style="color:#000">c</span> <span style="color:#000">+</span> <span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">d</span> <span style="color:#000">+</span> <span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">e</span> <span style="color:#000">&lt;=</span> <span style="color:#000">i</span>; <span style="color:#000">e</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                                <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">f</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">a</span> <span style="color:#000">+</span> <span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">b</span> <span style="color:#000">+</span> <span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">c</span> <span style="color:#000">+</span> <span style="color:#000">d</span> <span style="color:#000">+</span> <span style="color:#000">e</span> <span style="color:#000">+</span> <span style="color:#000">f</span> <span style="color:#000">&lt;=</span> <span style="color:#000">res</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">a</span> <span style="color:#000">+</span> <span style="color:#000">b</span> <span style="color:#000">+</span> <span style="color:#000">c</span> <span style="color:#000">+</span> <span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">d</span> <span style="color:#000">+</span> <span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">e</span> <span style="color:#000">+</span> <span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">f</span> <span style="color:#000">&lt;=</span> <span style="color:#000">i</span>; <span style="color:#000">f</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                                    <span style="color:#a90d91">if</span> (<span style="color:#000">g</span>[<span style="color:#000">cur</span> <span style="color:#000">^</span> <span style="color:#1c01ce">1</span>][<span style="color:#000">a</span>][<span style="color:#000">b</span>][<span style="color:#000">c</span>][<span style="color:#000">d</span>][<span style="color:#000">e</span>][<span style="color:#000">f</span>])
</span></span><span style="display:flex;"><span>                                    {
</span></span><span style="display:flex;"><span>                                        <span style="color:#a90d91">int</span><span style="color:#000">&amp;&amp;</span> <span style="color:#000">tmp</span>(<span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">a</span> <span style="color:#000">+</span> <span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">b</span> <span style="color:#000">+</span> <span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">c</span> <span style="color:#000">+</span> <span style="color:#000">d</span> <span style="color:#000">+</span> <span style="color:#000">e</span> <span style="color:#000">+</span> <span style="color:#000">f</span>), <span style="color:#000">fxj</span>(<span style="color:#000">a</span> <span style="color:#000">+</span> <span style="color:#000">b</span> <span style="color:#000">+</span> <span style="color:#000">c</span> <span style="color:#000">+</span> <span style="color:#000">d</span> <span style="color:#000">+</span> <span style="color:#000">e</span> <span style="color:#000">+</span> <span style="color:#000">f</span>);
</span></span><span style="display:flex;"><span>                                        <span style="color:#a90d91">auto</span> <span style="color:#a90d91">const</span><span style="color:#000">&amp;</span> <span style="color:#000">now</span> <span style="color:#000">=</span> <span style="color:#000">str</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>                                        <span style="color:#000">ll</span> <span style="color:#a90d91">const</span><span style="color:#000">&amp;</span> <span style="color:#000">lst</span> <span style="color:#000">=</span> <span style="color:#000">g</span>[<span style="color:#000">cur</span> <span style="color:#000">^</span> <span style="color:#1c01ce">1</span>][<span style="color:#000">a</span>][<span style="color:#000">b</span>][<span style="color:#000">c</span>][<span style="color:#000">d</span>][<span style="color:#000">e</span>][<span style="color:#000">f</span>];
</span></span><span style="display:flex;"><span>                                        <span style="color:#a90d91">if</span> (<span style="color:#000">now</span> <span style="color:#000">==</span> <span style="color:#2300ce">&#39;1&#39;</span> <span style="color:#000">||</span> <span style="color:#000">now</span> <span style="color:#000">==</span> <span style="color:#2300ce">&#39;0&#39;</span>)
</span></span><span style="display:flex;"><span>                                        {
</span></span><span style="display:flex;"><span>                                            <span style="color:#a90d91">if</span> (<span style="color:#000">a</span> <span style="color:#000">&lt;</span> <span style="color:#000">n</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">tmp</span> <span style="color:#000">+</span> <span style="color:#1c01ce">2</span> <span style="color:#000">&lt;=</span> <span style="color:#000">res</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">fxj</span> <span style="color:#000">&lt;</span> <span style="color:#000">n</span>)
</span></span><span style="display:flex;"><span>                                                <span style="color:#000">upd</span>(<span style="color:#000">g</span>[<span style="color:#000">cur</span>][<span style="color:#000">a</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>][<span style="color:#000">b</span>][<span style="color:#000">c</span>][<span style="color:#000">d</span>][<span style="color:#000">e</span>][<span style="color:#000">f</span>], <span style="color:#000">lst</span>);
</span></span><span style="display:flex;"><span>                                            <span style="color:#a90d91">if</span> (<span style="color:#000">c</span> <span style="color:#000">&gt;</span> <span style="color:#1c01ce">0</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">f</span> <span style="color:#000">&lt;</span> <span style="color:#000">n</span>)
</span></span><span style="display:flex;"><span>                                                <span style="color:#000">upd</span>(<span style="color:#000">g</span>[<span style="color:#000">cur</span>][<span style="color:#000">a</span>][<span style="color:#000">b</span>][<span style="color:#000">c</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>][<span style="color:#000">d</span>][<span style="color:#000">e</span>][<span style="color:#000">f</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>], <span style="color:#000">lst</span> <span style="color:#000">*</span> <span style="color:#000">c</span>);
</span></span><span style="display:flex;"><span>                                            <span style="color:#a90d91">if</span> (<span style="color:#000">e</span> <span style="color:#000">&gt;</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>                                                <span style="color:#000">upd</span>(<span style="color:#000">g</span>[<span style="color:#000">cur</span>][<span style="color:#000">a</span>][<span style="color:#000">b</span>][<span style="color:#000">c</span>][<span style="color:#000">d</span>][<span style="color:#000">e</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>][<span style="color:#000">f</span>], <span style="color:#000">lst</span> <span style="color:#000">*</span> <span style="color:#000">e</span>);
</span></span><span style="display:flex;"><span>                                        }
</span></span><span style="display:flex;"><span>                                        <span style="color:#a90d91">if</span> (<span style="color:#000">now</span> <span style="color:#000">==</span> <span style="color:#2300ce">&#39;2&#39;</span> <span style="color:#000">||</span> <span style="color:#000">now</span> <span style="color:#000">==</span> <span style="color:#2300ce">&#39;0&#39;</span>)
</span></span><span style="display:flex;"><span>                                        {
</span></span><span style="display:flex;"><span>                                            <span style="color:#a90d91">if</span> (<span style="color:#000">c</span> <span style="color:#000">&lt;</span> <span style="color:#000">n</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">tmp</span> <span style="color:#000">+</span> <span style="color:#1c01ce">2</span> <span style="color:#000">&lt;=</span> <span style="color:#000">res</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">fxj</span> <span style="color:#000">&lt;</span> <span style="color:#000">n</span>)
</span></span><span style="display:flex;"><span>                                                <span style="color:#000">upd</span>(<span style="color:#000">g</span>[<span style="color:#000">cur</span>][<span style="color:#000">a</span>][<span style="color:#000">b</span>][<span style="color:#000">c</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>][<span style="color:#000">d</span>][<span style="color:#000">e</span>][<span style="color:#000">f</span>], <span style="color:#000">lst</span>);
</span></span><span style="display:flex;"><span>                                            <span style="color:#a90d91">if</span> (<span style="color:#000">b</span> <span style="color:#000">&gt;</span> <span style="color:#1c01ce">0</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">e</span> <span style="color:#000">&lt;</span> <span style="color:#000">n</span>)
</span></span><span style="display:flex;"><span>                                                <span style="color:#000">upd</span>(<span style="color:#000">g</span>[<span style="color:#000">cur</span>][<span style="color:#000">a</span>][<span style="color:#000">b</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>][<span style="color:#000">c</span>][<span style="color:#000">d</span>][<span style="color:#000">e</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>][<span style="color:#000">f</span>], <span style="color:#000">lst</span> <span style="color:#000">*</span> <span style="color:#000">b</span>);
</span></span><span style="display:flex;"><span>                                            <span style="color:#a90d91">if</span> (<span style="color:#000">d</span> <span style="color:#000">&gt;</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>                                                <span style="color:#000">upd</span>(<span style="color:#000">g</span>[<span style="color:#000">cur</span>][<span style="color:#000">a</span>][<span style="color:#000">b</span>][<span style="color:#000">c</span>][<span style="color:#000">d</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>][<span style="color:#000">e</span>][<span style="color:#000">f</span>], <span style="color:#000">lst</span> <span style="color:#000">*</span> <span style="color:#000">d</span>);
</span></span><span style="display:flex;"><span>                                        }
</span></span><span style="display:flex;"><span>                                        <span style="color:#a90d91">if</span> (<span style="color:#000">now</span> <span style="color:#000">==</span> <span style="color:#2300ce">&#39;3&#39;</span> <span style="color:#000">||</span> <span style="color:#000">now</span> <span style="color:#000">==</span> <span style="color:#2300ce">&#39;0&#39;</span>)
</span></span><span style="display:flex;"><span>                                        {
</span></span><span style="display:flex;"><span>                                            <span style="color:#a90d91">if</span> (<span style="color:#000">b</span> <span style="color:#000">&lt;</span> <span style="color:#000">n</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">tmp</span> <span style="color:#000">+</span> <span style="color:#1c01ce">2</span> <span style="color:#000">&lt;=</span> <span style="color:#000">res</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">fxj</span> <span style="color:#000">&lt;</span> <span style="color:#000">n</span>)
</span></span><span style="display:flex;"><span>                                                <span style="color:#000">upd</span>(<span style="color:#000">g</span>[<span style="color:#000">cur</span>][<span style="color:#000">a</span>][<span style="color:#000">b</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>][<span style="color:#000">c</span>][<span style="color:#000">d</span>][<span style="color:#000">e</span>][<span style="color:#000">f</span>], <span style="color:#000">lst</span>);
</span></span><span style="display:flex;"><span>                                            <span style="color:#a90d91">if</span> (<span style="color:#000">a</span> <span style="color:#000">&gt;</span> <span style="color:#1c01ce">0</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">d</span> <span style="color:#000">&lt;</span> <span style="color:#000">n</span>)
</span></span><span style="display:flex;"><span>                                                <span style="color:#000">upd</span>(<span style="color:#000">g</span>[<span style="color:#000">cur</span>][<span style="color:#000">a</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>][<span style="color:#000">b</span>][<span style="color:#000">c</span>][<span style="color:#000">d</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>][<span style="color:#000">e</span>][<span style="color:#000">f</span>], <span style="color:#000">lst</span> <span style="color:#000">*</span> <span style="color:#000">a</span>);
</span></span><span style="display:flex;"><span>                                            <span style="color:#a90d91">if</span> (<span style="color:#000">f</span> <span style="color:#000">&gt;</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>                                                <span style="color:#000">upd</span>(<span style="color:#000">g</span>[<span style="color:#000">cur</span>][<span style="color:#000">a</span>][<span style="color:#000">b</span>][<span style="color:#000">c</span>][<span style="color:#000">d</span>][<span style="color:#000">e</span>][<span style="color:#000">f</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>], <span style="color:#000">lst</span> <span style="color:#000">*</span> <span style="color:#000">f</span>);
</span></span><span style="display:flex;"><span>                                        }
</span></span><span style="display:flex;"><span>                                        <span style="color:#000">g</span>[<span style="color:#000">cur</span> <span style="color:#000">^</span> <span style="color:#1c01ce">1</span>][<span style="color:#000">a</span>][<span style="color:#000">b</span>][<span style="color:#000">c</span>][<span style="color:#000">d</span>][<span style="color:#000">e</span>][<span style="color:#000">f</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>                                    }
</span></span><span style="display:flex;"><span>            <span style="color:#000">cur</span> <span style="color:#000">^=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#000">ll</span> <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#000">g</span>[<span style="color:#000">cur</span> <span style="color:#000">^</span> <span style="color:#1c01ce">1</span>][<span style="color:#1c01ce">0</span>][<span style="color:#1c01ce">0</span>][<span style="color:#1c01ce">0</span>][<span style="color:#1c01ce">0</span>][<span style="color:#1c01ce">0</span>][<span style="color:#1c01ce">0</span>];
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#000">ll</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">++</span><span style="color:#000">i</span>) <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#000">ans</span> <span style="color:#000">*</span> <span style="color:#000">i</span> <span style="color:#000">%</span> <span style="color:#000">mod</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">ans</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">res</span> <span style="color:#000">=</span> <span style="color:#1c01ce">3</span> <span style="color:#000">*</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">a</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">a</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">a</span> <span style="color:#000">&lt;=</span> <span style="color:#000">res</span>; <span style="color:#000">a</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">b</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">a</span> <span style="color:#000">+</span> <span style="color:#000">b</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">a</span> <span style="color:#000">+</span> <span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">b</span> <span style="color:#000">&lt;=</span> <span style="color:#000">res</span>; <span style="color:#000">b</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">c</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">a</span> <span style="color:#000">+</span> <span style="color:#000">b</span> <span style="color:#000">+</span> <span style="color:#000">c</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">a</span> <span style="color:#000">+</span> <span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">b</span> <span style="color:#000">+</span> <span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">c</span> <span style="color:#000">&lt;=</span> <span style="color:#000">res</span>; <span style="color:#000">c</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">d</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">a</span> <span style="color:#000">+</span> <span style="color:#000">b</span> <span style="color:#000">+</span> <span style="color:#000">c</span> <span style="color:#000">+</span> <span style="color:#000">d</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">a</span> <span style="color:#000">+</span> <span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">b</span> <span style="color:#000">+</span> <span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">c</span> <span style="color:#000">+</span> <span style="color:#000">d</span> <span style="color:#000">&lt;=</span> <span style="color:#000">res</span>; <span style="color:#000">d</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">e</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">a</span> <span style="color:#000">+</span> <span style="color:#000">b</span> <span style="color:#000">+</span> <span style="color:#000">c</span> <span style="color:#000">+</span> <span style="color:#000">d</span> <span style="color:#000">+</span> <span style="color:#000">e</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">a</span> <span style="color:#000">+</span> <span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">b</span> <span style="color:#000">+</span> <span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">c</span> <span style="color:#000">+</span> <span style="color:#000">d</span> <span style="color:#000">+</span> <span style="color:#000">e</span> <span style="color:#000">&lt;=</span> <span style="color:#000">res</span>; <span style="color:#000">e</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">f</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">a</span> <span style="color:#000">+</span> <span style="color:#000">b</span> <span style="color:#000">+</span> <span style="color:#000">c</span> <span style="color:#000">+</span> <span style="color:#000">d</span> <span style="color:#000">+</span> <span style="color:#000">e</span> <span style="color:#000">+</span> <span style="color:#000">f</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">a</span> <span style="color:#000">+</span> <span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">b</span> <span style="color:#000">+</span> <span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">c</span> <span style="color:#000">+</span> <span style="color:#000">d</span> <span style="color:#000">+</span> <span style="color:#000">e</span> <span style="color:#000">+</span> <span style="color:#000">f</span> <span style="color:#000">&lt;=</span> <span style="color:#000">res</span>; <span style="color:#000">f</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                                <span style="color:#000">g</span>[<span style="color:#1c01ce">1</span>][<span style="color:#000">a</span>][<span style="color:#000">b</span>][<span style="color:#000">c</span>][<span style="color:#000">d</span>][<span style="color:#000">e</span>][<span style="color:#000">f</span>] <span style="color:#000">=</span> <span style="color:#000">g</span>[<span style="color:#1c01ce">0</span>][<span style="color:#000">a</span>][<span style="color:#000">b</span>][<span style="color:#000">c</span>][<span style="color:#000">d</span>][<span style="color:#000">e</span>][<span style="color:#000">f</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">ios</span><span style="color:#000">::</span><span style="color:#000">sync_with_stdio</span>(<span style="color:#1c01ce">0</span>), <span style="color:#000">cin</span>.<span style="color:#000">tie</span>(<span style="color:#1c01ce">0</span>), <span style="color:#000">cout</span>.<span style="color:#000">tie</span>(<span style="color:#1c01ce">0</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">T</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">T</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> (<span style="color:#000">T</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">solve</span><span style="color:#000">::</span><span style="color:#000">main</span>();
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="t3-box">T3 box</h2>
<h3 id="description-2">Description</h3>
<p>有 $n$ 个不同的盒子排成一排。在初始状态下，第 $i$ 个盒子放有 $a_i$ 个货物，总货物数量为 $S = \sum_{i = 1}^{n} a_i$。对于非负整数数组 $(b_1, b_2, \ldots, b_n)$ 满足 $\sum_{i = 1}^{n} b_i = S$，考察以下问题：</p>
<p>你想让第 $i$ 个盒子中拥有恰好 $b_i$ 个货物，为此你可以做如下操作若干次：对两个相邻的盒子，把其中一个盒子的恰好一个货物移动至另一个。对 $i, i + 1$（$1 \le i &lt; n$）号盒子做<strong>一次</strong>操作的代价为 $w_i$。你需要保证在操作中不存在盒子中的货物数量是负数。</p>
<p>在以上问题下，定义从初始状态达到第 $i$ 个盒子拥有恰好 $b_i$ 个货物的状态的最小代价为 $\operatorname{val}(b_1, b_2, \ldots, b_n)$，你需要求出对所有满足 $\sum_{i = 1}^{n} b_i = S$ 的非负整数数组 $(b_1, b_2, \ldots, b_n)$，$\operatorname{val}(b_1, b_2, \ldots, b_n)$ 的和。输出这个答案对 $998244353$ 取模后的结果。</p>
<h3 id="solution-2">Solution</h3>
<p>不会的数学题，越学越认识到自己垃圾的数学水平&hellip;</p>
<p>感觉是一篇详细的题解。</p>
<p>我们对每条边算出其对答案的贡献，设 $s_i=\sum_{j=1}^ia_j,S=s_n$，枚举 $j=\sum_{k=1}^ib_k$，那么方案数为前 $i$ 个盒子里放 $j$ 个货物的方案数乘上后 $n-i$ 个盒子里放 $S-j$ 个货物的方案数，这里盒子可以为空，用插板法搞一下就可以得出答案的式子：
$$
ans=\sum_{i=1}^n w_i\sum_{j=0}^S|j-s_i|\binom{i+j-1}{i-1}\binom{n-i+S-j-1}{n-i-1}
$$
我们主要关心第二个求和式子。</p>
<p>绝对值显然不好搞，给拆掉，然后把少加的部分补进去。
$$
\begin{aligned}
&amp;\sum_{j=0}^S|j-s_i|\binom{i+j-1}{i-1}\binom{n-i+S-j-1}{n-i-1}\\
=&amp;\sum_{j=0}^{S}(j-s_i)\binom{i+j-1}{i-1}\binom{n-i+S-j-1}{n-i-1}+2\sum_{j=0}^{s_i}(s_i-j)\binom{i+j-1}{i-1}\binom{n-i+S-j-1}{n-i-1}
\end{aligned}
$$
这里 $j=s_i$ 的项为了方便在两边都算进去了，反正是 $0$ 不影响。</p>
<p>前面和后面的形式是相同的，后一个显然更强一些（因为有循环上界的限制），我们先考虑后一个式子。把后一个求和式子拆开，我们关心的是：
$$
s_i\sum_{j=0}^{s_i}\binom{i+j-1}{i-1}\binom{n-i+S-j-1}{n-i-1}-\sum_{j=0}^{s_i}j\binom{i+j-1}{i-1}\binom{n-i+S-j-1}{n-i-1}
$$
想要把这两个式子统一起来，后一个求和式子的 $j$ 要想办法换成一个常数移到外面来，有
$$
j\binom{i+j-1}{i-1}=j\times\frac{(i+j-1)!}{(i-1)!j!}=i\times\frac{(i+j-1)!}{i!(j-1)!}=i\binom{i+j-1}{i}
$$
这样后面的式子就变成
$$
i\sum_{j=0}^{s_i}\binom{i+j-1}{i}\binom{n-i+S-j-1}{n-i-1}
$$
已经基本统一了，但是具体的加一/减一上还需要稍微凑一下，为了方便我们设
$$
f(n,s,i,k)=\sum_{j=0}^k\binom{i+j-1}{i-1}\binom{n-i+s-j-1}{n-i-1}
$$
观察一下，想让 $\dbinom{i+j-1}{i}$ 对上 $\dbinom{i+j-1}{i-1}$ 这一项，$i$ 需要对应 $i-1$，那组合数上面的 $j$ 就得对应 $j+1$，因此我们对刚刚后面的式子进行一个小调整，枚举原来的 $j-1$，这样就变为：
$$
i\sum_{j=0}^{s_i-1}\binom{i+j}{i}\binom{n-i+S-j}{n-i-1}
$$
这样就能一一凑上了，上式等于 $i\times f(n+1,s-1,i+1,k-1)$。</p>
<p>把 $f$ 带回最开始的式子，对于每个 $i$，我们要求出：
$$
i\times f(n+1,S-1,i+1,S-1)-s_i\times f(n,S,i,S)+2\times f(n,S,i,s_i)-2i\times f(n+1,S-1,i+1,s_i-1)
$$
注意到 $i$ 和 $s_i$ 都是不降的，那么问题就变为：已知 $f(n,s,i,k)$，要快速求出 $f(n,s,i+1,k),f(n,s,i,k+1)$。</p>
<p>$f(n,s,i,k+1)$ 直接根据 $f$ 的定义求就好了，难的是 $i$ 的增加。</p>
<p>我是推不动，这里回到组合意义就很神仙，考虑 $f$ 的组合意义，是总共有 $n$ 个盒子，$s$ 个货物要放到这些盒子里，前 $i$ 个盒子最多放 $k$ 个货物的方案数。怎么理解呢？就是枚举前 $i$ 个盒子放几个货物，同样插板法。</p>
<p>我们需要一个枚举盒子的组合意义，换个思路，等价于第 $k+1$ 个货物所在的盒子大于 $i$。枚举这个盒子 $j$，方案数为前 $j$ 个盒子放 $k$ 个货物的方案数乘上后 $n-j+1$ 个盒子放 $S-k-1$ 个货物的方案数，同样插板法，式子就是：
$$
f(n,s,i,k)=\sum_{j=i+1}^n\binom{j+k-1}{j-1}\binom{n-j+s-k-1}{n-j}
$$
这个就可以随着 $i$ 的变化 $O(1)$ 维护了。</p>
<p>把四个 $f$ 分别维护，就做完了，好耶！</p>
<h3 id="code-2">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#a90d91">namespace</span> <span style="color:#000">solve</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">3e6</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">mod</span> <span style="color:#000">=</span> <span style="color:#1c01ce">998244353</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">typedef</span> <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">ll</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#000">ll</span> <span style="color:#000">qpow</span>(<span style="color:#000">ll</span> <span style="color:#000">a</span>, <span style="color:#000">ll</span> <span style="color:#000">x</span>, <span style="color:#000">ll</span> <span style="color:#000">p</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">ll</span> <span style="color:#000">res</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (; <span style="color:#000">x</span>; <span style="color:#000">x</span> <span style="color:#000">&gt;&gt;=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">a</span> <span style="color:#000">=</span> <span style="color:#000">a</span> <span style="color:#000">*</span> <span style="color:#000">a</span> <span style="color:#000">%</span> <span style="color:#000">p</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">x</span> <span style="color:#000">&amp;</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">res</span> <span style="color:#000">=</span> <span style="color:#000">res</span> <span style="color:#000">*</span> <span style="color:#000">a</span> <span style="color:#000">%</span> <span style="color:#000">p</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#000">res</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#000">ll</span> <span style="color:#000">fac</span>[<span style="color:#000">maxn</span>], <span style="color:#000">ifac</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">void</span> <span style="color:#000">init</span>(<span style="color:#a90d91">int</span> <span style="color:#000">n</span> <span style="color:#000">=</span> <span style="color:#1c01ce">3e6</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">fac</span>[<span style="color:#1c01ce">0</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">fac</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">fac</span>[<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">*</span> <span style="color:#000">i</span> <span style="color:#000">%</span> <span style="color:#000">mod</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">ifac</span>[<span style="color:#000">n</span>] <span style="color:#000">=</span> <span style="color:#000">qpow</span>(<span style="color:#000">fac</span>[<span style="color:#000">n</span>], <span style="color:#000">mod</span> <span style="color:#000">-</span> <span style="color:#1c01ce">2</span>, <span style="color:#000">mod</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#000">n</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&gt;=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">ifac</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">ifac</span>[<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">*</span> (<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>) <span style="color:#000">%</span> <span style="color:#000">mod</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#000">ll</span> <span style="color:#000">C</span>(<span style="color:#a90d91">int</span> <span style="color:#000">n</span>, <span style="color:#a90d91">int</span> <span style="color:#000">m</span>) { <span style="color:#a90d91">return</span> <span style="color:#000">m</span> <span style="color:#000">&gt;</span> <span style="color:#000">n</span> <span style="color:#000">||</span> <span style="color:#000">m</span> <span style="color:#000">&lt;</span> <span style="color:#1c01ce">0</span> <span style="color:#000">||</span> <span style="color:#000">n</span> <span style="color:#000">&lt;</span> <span style="color:#1c01ce">0</span> <span style="color:#000">?</span> <span style="color:#1c01ce">0</span> <span style="color:#000">:</span> <span style="color:#000">fac</span>[<span style="color:#000">n</span>] <span style="color:#000">*</span> <span style="color:#000">ifac</span>[<span style="color:#000">m</span>] <span style="color:#000">%</span> <span style="color:#000">mod</span> <span style="color:#000">*</span> <span style="color:#000">ifac</span>[<span style="color:#000">n</span> <span style="color:#000">-</span> <span style="color:#000">m</span>] <span style="color:#000">%</span> <span style="color:#000">mod</span>; }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">sum</span>[<span style="color:#000">maxn</span>], <span style="color:#000">w</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">S</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#000">ll</span> <span style="color:#000">f</span>(<span style="color:#a90d91">int</span> <span style="color:#000">n</span>, <span style="color:#a90d91">int</span> <span style="color:#000">S</span>, <span style="color:#a90d91">int</span> <span style="color:#000">i</span>, <span style="color:#a90d91">int</span> <span style="color:#000">k</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">ll</span> <span style="color:#000">res</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;=</span> <span style="color:#000">k</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            (<span style="color:#000">res</span> <span style="color:#000">+=</span> <span style="color:#000">C</span>(<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#000">j</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>) <span style="color:#000">*</span> <span style="color:#000">C</span>(<span style="color:#000">n</span> <span style="color:#000">-</span> <span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#000">S</span> <span style="color:#000">-</span> <span style="color:#000">j</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">n</span> <span style="color:#000">-</span> <span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>) <span style="color:#000">%</span> <span style="color:#000">mod</span>) <span style="color:#000">%=</span> <span style="color:#000">mod</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#000">res</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">struct</span> <span style="color:#3f6e75">func</span>
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">n</span>, <span style="color:#000">s</span>, <span style="color:#000">i</span>, <span style="color:#000">k</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">ll</span> <span style="color:#000">res</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">void</span> <span style="color:#000">init</span>(<span style="color:#a90d91">int</span> <span style="color:#000">n_</span>, <span style="color:#a90d91">int</span> <span style="color:#000">s_</span>, <span style="color:#a90d91">int</span> <span style="color:#000">i_</span>, <span style="color:#a90d91">int</span> <span style="color:#000">k_</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">n</span> <span style="color:#000">=</span> <span style="color:#000">n_</span>, <span style="color:#000">s</span> <span style="color:#000">=</span> <span style="color:#000">s_</span>, <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#000">i_</span>, <span style="color:#000">k</span> <span style="color:#000">=</span> <span style="color:#000">k_</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">res</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;=</span> <span style="color:#000">k</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">res</span> <span style="color:#000">+=</span> <span style="color:#000">C</span>(<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#000">j</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>) <span style="color:#000">*</span> <span style="color:#000">C</span>(<span style="color:#000">n</span> <span style="color:#000">-</span> <span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#000">s</span> <span style="color:#000">-</span> <span style="color:#000">j</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">n</span> <span style="color:#000">-</span> <span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>) <span style="color:#000">%</span> <span style="color:#000">mod</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">res</span> <span style="color:#000">%=</span> <span style="color:#000">mod</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">void</span> <span style="color:#000">movek</span>(<span style="color:#a90d91">int</span> <span style="color:#000">nk</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">nk</span> <span style="color:#000">&lt;=</span> <span style="color:#000">k</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">return</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#000">k</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;=</span> <span style="color:#000">nk</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">res</span> <span style="color:#000">+=</span> <span style="color:#000">C</span>(<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#000">j</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>) <span style="color:#000">*</span> <span style="color:#000">C</span>(<span style="color:#000">n</span> <span style="color:#000">-</span> <span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#000">s</span> <span style="color:#000">-</span> <span style="color:#000">j</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">n</span> <span style="color:#000">-</span> <span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>) <span style="color:#000">%</span> <span style="color:#000">mod</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">res</span> <span style="color:#000">%=</span> <span style="color:#000">mod</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">k</span> <span style="color:#000">=</span> <span style="color:#000">nk</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">void</span> <span style="color:#000">movei</span>(<span style="color:#a90d91">int</span> <span style="color:#000">ni</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">ni</span> <span style="color:#000">&lt;=</span> <span style="color:#000">i</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">return</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;=</span> <span style="color:#000">ni</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">res</span> <span style="color:#000">-=</span> <span style="color:#000">C</span>(<span style="color:#000">j</span> <span style="color:#000">+</span> <span style="color:#000">k</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">j</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>) <span style="color:#000">*</span> <span style="color:#000">C</span>(<span style="color:#000">n</span> <span style="color:#000">-</span> <span style="color:#000">j</span> <span style="color:#000">+</span> <span style="color:#000">s</span> <span style="color:#000">-</span> <span style="color:#000">k</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">n</span> <span style="color:#000">-</span> <span style="color:#000">j</span>) <span style="color:#000">%</span> <span style="color:#000">mod</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">res</span> <span style="color:#000">%=</span> <span style="color:#000">mod</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#000">ni</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    } <span style="color:#000">f1</span>, <span style="color:#000">f2</span>, <span style="color:#000">f3</span>, <span style="color:#000">f4</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">void</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">n</span> <span style="color:#000">=</span> <span style="color:#000">read</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">sum</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">sum</span>[<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">+</span> <span style="color:#000">read</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">w</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">read</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#000">ll</span> <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">S</span> <span style="color:#000">=</span> <span style="color:#000">sum</span>[<span style="color:#000">n</span>];
</span></span><span style="display:flex;"><span>        <span style="color:#000">f1</span>.<span style="color:#000">init</span>(<span style="color:#000">n</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">S</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>, <span style="color:#1c01ce">1</span>, <span style="color:#000">S</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>), <span style="color:#000">f2</span>.<span style="color:#000">init</span>(<span style="color:#000">n</span>, <span style="color:#000">S</span>, <span style="color:#1c01ce">1</span>, <span style="color:#000">S</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">f3</span>.<span style="color:#000">init</span>(<span style="color:#000">n</span>, <span style="color:#000">S</span>, <span style="color:#1c01ce">1</span>, <span style="color:#1c01ce">0</span>), <span style="color:#000">f4</span>.<span style="color:#000">init</span>(<span style="color:#000">n</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">S</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>, <span style="color:#1c01ce">1</span>, <span style="color:#000">-</span><span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">ll</span> <span style="color:#000">res</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">f3</span>.<span style="color:#000">movek</span>(<span style="color:#000">sum</span>[<span style="color:#000">i</span>]), <span style="color:#000">f4</span>.<span style="color:#000">movek</span>(<span style="color:#000">sum</span>[<span style="color:#000">i</span>] <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#000">f1</span>.<span style="color:#000">movei</span>(<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>), <span style="color:#000">f2</span>.<span style="color:#000">movei</span>(<span style="color:#000">i</span>), <span style="color:#000">f3</span>.<span style="color:#000">movei</span>(<span style="color:#000">i</span>), <span style="color:#000">f4</span>.<span style="color:#000">movei</span>(<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>            <span style="color:#000">res</span> <span style="color:#000">+=</span> <span style="color:#000">i</span> <span style="color:#000">*</span> <span style="color:#000">f1</span>.<span style="color:#000">res</span> <span style="color:#000">%</span> <span style="color:#000">mod</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">res</span> <span style="color:#000">-=</span> <span style="color:#000">sum</span>[<span style="color:#000">i</span>] <span style="color:#000">*</span> <span style="color:#000">f2</span>.<span style="color:#000">res</span> <span style="color:#000">%</span> <span style="color:#000">mod</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">res</span> <span style="color:#000">+=</span> <span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">sum</span>[<span style="color:#000">i</span>] <span style="color:#000">*</span> <span style="color:#000">f3</span>.<span style="color:#000">res</span> <span style="color:#000">%</span> <span style="color:#000">mod</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">res</span> <span style="color:#000">-=</span> <span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">i</span> <span style="color:#000">*</span> <span style="color:#000">f4</span>.<span style="color:#000">res</span> <span style="color:#000">%</span> <span style="color:#000">mod</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">res</span> <span style="color:#000">%=</span> <span style="color:#000">mod</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">ans</span> <span style="color:#000">+=</span> <span style="color:#000">w</span>[<span style="color:#000">i</span>] <span style="color:#000">*</span> <span style="color:#000">res</span> <span style="color:#000">%</span> <span style="color:#000">mod</span>, <span style="color:#000">ans</span> <span style="color:#000">%=</span> <span style="color:#000">mod</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> (<span style="color:#000">ans</span> <span style="color:#000">+</span> <span style="color:#000">mod</span>) <span style="color:#000">%</span> <span style="color:#000">mod</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">T</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">T</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">solve</span><span style="color:#000">::</span><span style="color:#000">init</span>();
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> (<span style="color:#000">T</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">solve</span><span style="color:#000">::</span><span style="color:#000">main</span>();
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="t4-string">T4 string</h2>
<h3 id="description-3">Description</h3>
<p>给定一个英文小写字母构成的字符串 $S$，你需要找到一个尽可能长的字符串序列 $(T_0, T_1, \ldots, T_l)$，满足：</p>
<ul>
<li>$T_0$ 是 $S$ 的子串；</li>
<li>$\forall 1 \le i \le l$，$\lvert T_i \rvert - \lvert T_{i - 1} \rvert = 1$；</li>
<li>$\forall 1 \le i \le l$，存在 $S$ 的一个长度为 $\lvert T_i \rvert + 1$ 的子串 $S_i&rsquo;$，使得 $S_i&rsquo;$ 的长度为 $\lvert T_{i - 1} \rvert$ 的前缀为 $T_{i - 1}$，长度为 $\lvert T_i \rvert$ 的后缀为 $T_i$。</li>
</ul>
<p>输出这样的字符串序列的长度的最大值（即 $l$ 的最大值）。</p>
<h3 id="solution-3">Solution</h3>
<p>一个思路很清奇的题目，乍一看以为和19年省选的那个字符串问题差不多，其实完全没关系。</p>
<p>观察一下这个字符串序列，逆向去想一下，可以这么构造：$[i,j]\rightarrow[i-1,j-2]\rightarrow[i-2,j-4]&hellip;$ 一直这样下去直到长度为 $0$ 或者到头了。那么答案就有一个显然的下界 $\lfloor n/2\rfloor$。</p>
<p>然后上面这个构造的瓶颈在于走到头就没得走了，我们需要考虑什么时候可以往后跳回去。</p>
<p>然后就是比较重要的性质了：一个串可以往回跳的充要条件是出现了至少两次。</p>
<p>假设出现位置是 $[i_1,j_1],<a href="i_1%3Ci_2">i_2,j_2</a>$，那么我们从 $[i_2,j_2]$ 开始，按照上述的构造方法构造，当左端点到 $i_1$ 时，我们跳回到 $i_2$ 即可。</p>
<p>反过来的话就是如果只出现一次，那么这个串对应的 $S_i&rsquo;$ 是唯一的，别的跳不回来。</p>
<p>这样就很简单了，如果可以往回跳那么我们从 $[i_2,j_2]$ 开始一路跳就可以跳到长度为 $0$。</p>
<p>对于一个出现至少两次的串 $[l,r]$，若选择它作为跳的开始，答案为 $r-l+1+\lfloor(n-r)/2\rfloor$。</p>
<p>我们求出以每个下标为右端点的最长的出现至少两次的串，取个 max。</p>
<p>这个事情用 SAM 搞一搞就可以做，就对于每个节点记录最靠左的位置和 siz 就好了。</p>
<h3 id="code-3">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#a90d91">namespace</span> <span style="color:#000">std</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">namespace</span> <span style="color:#000">solve</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2e6</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">struct</span> <span style="color:#3f6e75">SAM</span>
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">mx</span>[<span style="color:#000">maxn</span>], <span style="color:#000">siz</span>[<span style="color:#000">maxn</span>], <span style="color:#000">ch</span>[<span style="color:#000">maxn</span>][<span style="color:#1c01ce">26</span>], <span style="color:#000">father</span>[<span style="color:#000">maxn</span>], <span style="color:#000">pos</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">lst</span>, <span style="color:#000">tot</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">ans</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">void</span> <span style="color:#000">insert</span>(<span style="color:#a90d91">int</span> <span style="color:#000">c</span>, <span style="color:#a90d91">int</span> <span style="color:#000">id</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">int</span> <span style="color:#000">p</span> <span style="color:#000">=</span> <span style="color:#000">++</span><span style="color:#000">tot</span>, <span style="color:#000">f</span> <span style="color:#000">=</span> <span style="color:#000">lst</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">siz</span>[<span style="color:#000">p</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">mx</span>[<span style="color:#000">p</span>] <span style="color:#000">=</span> <span style="color:#000">mx</span>[<span style="color:#000">f</span>] <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">lst</span> <span style="color:#000">=</span> <span style="color:#000">p</span>, <span style="color:#000">pos</span>[<span style="color:#000">p</span>] <span style="color:#000">=</span> <span style="color:#000">id</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">while</span> (<span style="color:#000">f</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">!</span><span style="color:#000">ch</span>[<span style="color:#000">f</span>][<span style="color:#000">c</span>])
</span></span><span style="display:flex;"><span>                <span style="color:#000">ch</span>[<span style="color:#000">f</span>][<span style="color:#000">c</span>] <span style="color:#000">=</span> <span style="color:#000">p</span>, <span style="color:#000">f</span> <span style="color:#000">=</span> <span style="color:#000">father</span>[<span style="color:#000">f</span>];
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">!</span><span style="color:#000">f</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">father</span>[<span style="color:#000">p</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>            {
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">int</span> <span style="color:#000">q</span> <span style="color:#000">=</span> <span style="color:#000">ch</span>[<span style="color:#000">f</span>][<span style="color:#000">c</span>];
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">if</span> (<span style="color:#000">mx</span>[<span style="color:#000">q</span>] <span style="color:#000">==</span> <span style="color:#000">mx</span>[<span style="color:#000">f</span>] <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>                    <span style="color:#000">father</span>[<span style="color:#000">p</span>] <span style="color:#000">=</span> <span style="color:#000">q</span>;
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>                {
</span></span><span style="display:flex;"><span>                    <span style="color:#a90d91">int</span> <span style="color:#000">nq</span> <span style="color:#000">=</span> <span style="color:#000">++</span><span style="color:#000">tot</span>;
</span></span><span style="display:flex;"><span>                    <span style="color:#000">memcpy</span>(<span style="color:#000">ch</span>[<span style="color:#000">nq</span>], <span style="color:#000">ch</span>[<span style="color:#000">q</span>], <span style="color:#a90d91">sizeof</span>(<span style="color:#000">ch</span>[<span style="color:#000">q</span>])), <span style="color:#000">father</span>[<span style="color:#000">nq</span>] <span style="color:#000">=</span> <span style="color:#000">father</span>[<span style="color:#000">q</span>], <span style="color:#000">mx</span>[<span style="color:#000">nq</span>] <span style="color:#000">=</span> <span style="color:#000">mx</span>[<span style="color:#000">f</span>] <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>                    <span style="color:#000">pos</span>[<span style="color:#000">nq</span>] <span style="color:#000">=</span> <span style="color:#000">n</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>                    <span style="color:#000">father</span>[<span style="color:#000">p</span>] <span style="color:#000">=</span> <span style="color:#000">father</span>[<span style="color:#000">q</span>] <span style="color:#000">=</span> <span style="color:#000">nq</span>;
</span></span><span style="display:flex;"><span>                    <span style="color:#a90d91">while</span> (<span style="color:#000">f</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">ch</span>[<span style="color:#000">f</span>][<span style="color:#000">c</span>] <span style="color:#000">==</span> <span style="color:#000">q</span>)
</span></span><span style="display:flex;"><span>                        <span style="color:#000">ch</span>[<span style="color:#000">f</span>][<span style="color:#000">c</span>] <span style="color:#000">=</span> <span style="color:#000">nq</span>, <span style="color:#000">f</span> <span style="color:#000">=</span> <span style="color:#000">father</span>[<span style="color:#000">f</span>];
</span></span><span style="display:flex;"><span>                }
</span></span><span style="display:flex;"><span>            }    
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#000">vector</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">e</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">void</span> <span style="color:#000">build</span>()
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">tot</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">e</span>[<span style="color:#000">father</span>[<span style="color:#000">i</span>]].<span style="color:#000">push_back</span>(<span style="color:#000">i</span>);
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">void</span> <span style="color:#000">dfs</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">v</span> : <span style="color:#000">e</span>[<span style="color:#000">x</span>])
</span></span><span style="display:flex;"><span>            {
</span></span><span style="display:flex;"><span>                <span style="color:#000">dfs</span>(<span style="color:#000">v</span>);
</span></span><span style="display:flex;"><span>                <span style="color:#000">siz</span>[<span style="color:#000">x</span>] <span style="color:#000">+=</span> <span style="color:#000">siz</span>[<span style="color:#000">v</span>], <span style="color:#000">pos</span>[<span style="color:#000">x</span>] <span style="color:#000">=</span> <span style="color:#000">min</span>(<span style="color:#000">pos</span>[<span style="color:#000">x</span>], <span style="color:#000">pos</span>[<span style="color:#000">v</span>]);
</span></span><span style="display:flex;"><span>            }
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">siz</span>[<span style="color:#000">x</span>] <span style="color:#000">&gt;</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#000">max</span>(<span style="color:#000">ans</span>, (<span style="color:#000">n</span> <span style="color:#000">-</span> <span style="color:#000">pos</span>[<span style="color:#000">x</span>]) <span style="color:#000">/</span> <span style="color:#1c01ce">2</span> <span style="color:#000">+</span> <span style="color:#000">mx</span>[<span style="color:#000">x</span>]);
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">void</span> <span style="color:#000">clear</span>()
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">tot</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">e</span>[<span style="color:#000">i</span>].<span style="color:#000">clear</span>(), <span style="color:#000">memset</span>(<span style="color:#000">ch</span>[<span style="color:#000">i</span>], <span style="color:#1c01ce">0</span>, <span style="color:#a90d91">sizeof</span>(<span style="color:#000">ch</span>[<span style="color:#000">i</span>]));
</span></span><span style="display:flex;"><span>            <span style="color:#000">memset</span>(<span style="color:#000">father</span>, <span style="color:#1c01ce">0</span>, <span style="color:#a90d91">sizeof</span>(<span style="color:#a90d91">int</span>) <span style="color:#000">*</span> (<span style="color:#000">tot</span> <span style="color:#000">+</span> <span style="color:#1c01ce">4</span>));
</span></span><span style="display:flex;"><span>            <span style="color:#000">memset</span>(<span style="color:#000">mx</span>, <span style="color:#1c01ce">0</span>, <span style="color:#a90d91">sizeof</span>(<span style="color:#a90d91">int</span>) <span style="color:#000">*</span> (<span style="color:#000">tot</span> <span style="color:#000">+</span> <span style="color:#1c01ce">4</span>));
</span></span><span style="display:flex;"><span>            <span style="color:#000">memset</span>(<span style="color:#000">siz</span>, <span style="color:#1c01ce">0</span>, <span style="color:#a90d91">sizeof</span>(<span style="color:#a90d91">int</span>) <span style="color:#000">*</span> (<span style="color:#000">tot</span> <span style="color:#000">+</span> <span style="color:#1c01ce">4</span>));
</span></span><span style="display:flex;"><span>            <span style="color:#000">memset</span>(<span style="color:#000">pos</span>, <span style="color:#1c01ce">0</span>, <span style="color:#a90d91">sizeof</span>(<span style="color:#a90d91">int</span>) <span style="color:#000">*</span> (<span style="color:#000">tot</span> <span style="color:#000">+</span> <span style="color:#1c01ce">4</span>));
</span></span><span style="display:flex;"><span>            <span style="color:#000">lst</span> <span style="color:#000">=</span> <span style="color:#000">tot</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#000">SAM</span>() { <span style="color:#000">lst</span> <span style="color:#000">=</span> <span style="color:#000">tot</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; }
</span></span><span style="display:flex;"><span>    } <span style="color:#000">sam</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">char</span> <span style="color:#000">s</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">void</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">s</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">n</span> <span style="color:#000">=</span> <span style="color:#000">strlen</span>(<span style="color:#000">s</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">sam</span>.<span style="color:#000">insert</span>(<span style="color:#000">s</span>[<span style="color:#000">i</span>] <span style="color:#000">-</span> <span style="color:#2300ce">&#39;a&#39;</span>, <span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">sam</span>.<span style="color:#000">build</span>(), <span style="color:#000">sam</span>.<span style="color:#000">dfs</span>(<span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">max</span>(<span style="color:#000">sam</span>.<span style="color:#000">ans</span>, <span style="color:#000">n</span> <span style="color:#000">/</span> <span style="color:#1c01ce">2</span>) <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">sam</span>.<span style="color:#000">clear</span>();
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">ios</span><span style="color:#000">::</span><span style="color:#000">sync_with_stdio</span>(<span style="color:#a90d91">false</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">T</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">T</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> (<span style="color:#000">T</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">solve</span><span style="color:#000">::</span><span style="color:#000">main</span>();
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div>]]></content:encoded>
    </item>
    
    <item>
      <title>LNOI2022</title>
      <link>https://luoyisu.github.io/posts/lnoi2022/</link>
      <pubDate>Thu, 26 May 2022 07:01:46 +0000</pubDate>
      
      <guid>https://luoyisu.github.io/posts/lnoi2022/</guid>
      <description>&lt;h1 id=&#34;lnoi2022&#34;&gt;LNOI2022&lt;/h1&gt;
&lt;p&gt;单看省选成绩是第七名，算上 NOIP 就是第十名左右，翻盘失败。&lt;/p&gt;</description>
      <content:encoded><![CDATA[<h1 id="lnoi2022">LNOI2022</h1>
<p>单看省选成绩是第七名，算上 NOIP 就是第十名左右，翻盘失败。</p>
<h2 id="day1-下午">Day1 下午</h2>
<p>直接进入考试吧，前面没啥可说的。</p>
<p>看到 A，看上去是一个贪心，想了一会不会，乱写了一个贪心，过了所有样例。</p>
<p>根据经验这种定位的题即使贪心错了也不会丢掉太多分，我决定就当我过了。</p>
<p>这时候过了半个小时。</p>
<p>看第二题，想了一会发现可以直接记录 1、2、3、13、21、32、合法 这七种三元组有几个，先不考虑顺序，最后乘上 $n!$。复杂度 $O(n^8)$，想了下感觉记录合法三元组不必要，就 $O(n^7)$ 了，可以得到 $80\sim100$ 分。</p>
<p>然后就写了一个，但是过不去样例，想了半天也不懂。。</p>
<p>上了个厕所冷静一下，回来过了一会就意识到转移没加上系数。</p>
<p>然后把系数加上了，但是同时多记了一维合法的个数，复杂度又变回 $O(n^8)$ 了。</p>
<p>然后没细想能不能优化，稍微优化了一下常数，发现能过 $60$ 分，就先放着了。</p>
<p>大概过了两个小时？</p>
<p>去看第三题，想了半天还是只会 $20$，大概已经不太能冷静思考了。。后面的特殊性质大概是什么组合数吧。</p>
<p>看了看第四题，往一些字符串算法上套了一下没啥结果，哈希表搞一搞能得个 $40$。</p>
<p>然后写第三题，中途还挂了，我这啥代码能力啊。</p>
<p>好不容易调出来了，急忙去写 T4，然后写了一半多没时间了只能遗憾离场。</p>
<p>我这啥代码能力啊。。</p>
<p>然后出了考场准备回家的时候忽然意识到 T2 怎么做。。其实就是一样的思路，不记录合法三元组个数，最后乘上阶乘。</p>
<p>。。。。白给了 $40$ 分。。。</p>
<p>T4 也白给了 $40$ 分。。</p>
<h2 id="day1-晚">Day1 晚</h2>
<p>$85+50+20+0=155$，比想的略低，但也在意料之中。</p>
<p>怎么说呢，T2、T4 都很遗憾。</p>
<p>大概算了一下，想进队线需要得到 T4 的 $40$ 分，而想进队需要得到 $95$ 分。。</p>
<p>怎么说呢，T2 这种题我现在会做也挺惊讶的，放到 NOIP 肯定是完全不会做的。。</p>
<p>行吧行吧，进步是有的，但还是题做少了。</p>]]></content:encoded>
    </item>
    
    <item>
      <title>数位统计问题练习记录</title>
      <link>https://luoyisu.github.io/posts/number-dp/</link>
      <pubDate>Wed, 11 May 2022 22:24:35 +0000</pubDate>
      
      <guid>https://luoyisu.github.io/posts/number-dp/</guid>
      <description>&lt;p&gt;不给出题目链接了，网上可以找到（推荐vjudge）。&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>不给出题目链接了，网上可以找到（推荐vjudge）。</p>
<h2 id="bzoj4292-rownanie">BZOJ4292 Rownanie</h2>
<h3 id="description">Description</h3>
<p>对于一个正整数 $n$，定义 $f(n)$ 为它十进制下每一位数字的平方的和。
现在给定三个正整数 $k$, $a$, b，请求出满足 $a\leq n\leq b$ 且 $k\times f(n) = n$ 的 $n$ 的个数。</p>
<h3 id="solution">Solution</h3>
<p>$k$ 是给定的，那么对于一个 $f(n)$，只至多一个 $n$ 是合法的。我们直接枚举 $f(n)$ 即可。</p>
<h3 id="code">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#a90d91">namespace</span> <span style="color:#000">solve</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">void</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">k</span>, <span style="color:#000">a</span>, <span style="color:#000">b</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">k</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">a</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">b</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#1c01ce">1500</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">__int128_t</span> <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">__int128_t</span>(<span style="color:#000">k</span>) <span style="color:#000">*</span> <span style="color:#000">i</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">x</span> <span style="color:#000">&gt;=</span> <span style="color:#000">a</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">x</span> <span style="color:#000">&lt;=</span> <span style="color:#000">b</span>)
</span></span><span style="display:flex;"><span>            {
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">while</span> (<span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>                    <span style="color:#000">j</span> <span style="color:#000">+=</span> (<span style="color:#000">x</span> <span style="color:#000">%</span> <span style="color:#1c01ce">10</span>) <span style="color:#000">*</span> (<span style="color:#000">x</span> <span style="color:#000">%</span> <span style="color:#1c01ce">10</span>), <span style="color:#000">x</span> <span style="color:#000">/=</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">if</span> (<span style="color:#000">j</span> <span style="color:#000">==</span> <span style="color:#000">i</span>)
</span></span><span style="display:flex;"><span>                    <span style="color:#000">ans</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>            }
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">ans</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div>]]></content:encoded>
    </item>
    
    <item>
      <title>loj3049 「十二省联考 2019」字符串问题</title>
      <link>https://luoyisu.github.io/posts/loj3049/</link>
      <pubDate>Sat, 07 May 2022 09:07:28 +0000</pubDate>
      
      <guid>https://luoyisu.github.io/posts/loj3049/</guid>
      <description>&lt;h2 id=&#34;description&#34;&gt;Description&lt;/h2&gt;
&lt;p&gt;有一个字符串 $S$，有 $n_a$ 个 A 类串是其子串，有 $n_b$ 个 B 类串是其子串，另外有 $m$ 个支配关系，表示第 $x$ 个 A 类串支配第 $y$ 个 B 类串。&lt;/p&gt;
&lt;p&gt;求一个长度最大的字符串 $T$，需要满足两个条件：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;其可以分割为若干个 A 类串；&lt;/li&gt;
&lt;li&gt;不妨设 $T=t_1+t_2+t_3+&amp;hellip;+t_k$，$t_i=A_{id_i}$，那么对于所有的 $t_i,t_{i+1}$，都存在一个 $A_{id_i}$ 支配的 B 类串，使得这个 B 类串是 $t_{i+1}$ 的前缀。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;只需要输出长度的最大值即可，若可以无限长，输出 $-1$。&lt;/p&gt;
&lt;p&gt;$|S|,n_a,n_b,m\leq2\times10^5$，多组数据，每个数据点中 $|S|,n_a,n_b,m$ 的总和不会超过单组数据限制的 $10$ 倍。&lt;/p&gt;</description>
      <content:encoded><![CDATA[<h2 id="description">Description</h2>
<p>有一个字符串 $S$，有 $n_a$ 个 A 类串是其子串，有 $n_b$ 个 B 类串是其子串，另外有 $m$ 个支配关系，表示第 $x$ 个 A 类串支配第 $y$ 个 B 类串。</p>
<p>求一个长度最大的字符串 $T$，需要满足两个条件：</p>
<ul>
<li>其可以分割为若干个 A 类串；</li>
<li>不妨设 $T=t_1+t_2+t_3+&hellip;+t_k$，$t_i=A_{id_i}$，那么对于所有的 $t_i,t_{i+1}$，都存在一个 $A_{id_i}$ 支配的 B 类串，使得这个 B 类串是 $t_{i+1}$ 的前缀。</li>
</ul>
<p>只需要输出长度的最大值即可，若可以无限长，输出 $-1$。</p>
<p>$|S|,n_a,n_b,m\leq2\times10^5$，多组数据，每个数据点中 $|S|,n_a,n_b,m$ 的总和不会超过单组数据限制的 $10$ 倍。</p>
<h2 id="solution">Solution</h2>
<p>看到这个要求的东西以及这个支配关系，很容易想到尝试用图论模型描述这个题。</p>
<p>对于每个 A 类串，向其支配的 B 类串连边权为 A 类串长度的边，对于每个 B 类串，连向所有以这个 B 类串为前缀的 A 类串，边权为 $0$，这样目标串就对应这个图上的一个最长路再加上终点 A 类串的长度。</p>
<p>或者把 A 类串看作点权，求一个点权最大的路径。</p>
<p>暴力连是 $O(n^3)$，然后可以考虑用一个后缀数据结构，发现后缀树可以比较好描述这个东西。</p>
<p>我们找到每个 A 类串和 B 类串，对于支配关系直接连边，然后对于每个 B 类串，向其子树里所有 A 类串连边就好了。</p>
<p>这样是 $O(n^2)$ 的。</p>
<p>然后找到 A 类串和 B 类串这件事可以用倍增找：找到一个子串 $S[l:r]$，找到后缀 $l$ 在后缀树上对应的叶子结点，然后往上跳即可。这是 $O(n\log n)$ 的。</p>
<p>连边的话可以利用现成的后缀树，后缀树相当于已经帮我们连好边了。这是 $O(n)$ 的。</p>
<p>然后还有个问题是后缀树上的点是压缩过的，当同一个点对应长度不同的子串的时候，我们需要把它拆开，从长度小连向长度大即可。</p>
<p>需要注意的是，这么折腾完之后我们原来图上 A 连 B、B 连 A 的性质被破坏了，因此不能用上面说的点权的方法求答案，只能用边权来求。</p>
<h2 id="code">Code</h2>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;queue&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;set&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;utility&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cctype&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#a90d91">namespace</span> <span style="color:#000">std</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">namespace</span> <span style="color:#000">solve</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1e6</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">typedef</span> <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">ll</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">read</span>(<span style="color:#a90d91">int</span> <span style="color:#000">&amp;</span><span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">char</span> <span style="color:#000">ch</span> <span style="color:#000">=</span> <span style="color:#000">getchar</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (; <span style="color:#000">!</span><span style="color:#000">isdigit</span>(<span style="color:#000">ch</span>); <span style="color:#000">ch</span> <span style="color:#000">=</span> <span style="color:#000">getchar</span>())
</span></span><span style="display:flex;"><span>            ;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (; <span style="color:#000">isdigit</span>(<span style="color:#000">ch</span>); <span style="color:#000">ch</span> <span style="color:#000">=</span> <span style="color:#000">getchar</span>())
</span></span><span style="display:flex;"><span>            <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">x</span> <span style="color:#000">*</span> <span style="color:#1c01ce">10</span> <span style="color:#000">+</span> <span style="color:#000">ch</span> <span style="color:#000">-</span> <span style="color:#2300ce">&#39;0&#39;</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">int</span> <span style="color:#000">lg</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>) { <span style="color:#a90d91">return</span> <span style="color:#1c01ce">31</span> <span style="color:#000">-</span> <span style="color:#000">__builtin_clz</span>(<span style="color:#000">x</span>); }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">tot</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">ch</span>[<span style="color:#000">maxn</span>][<span style="color:#1c01ce">26</span>], <span style="color:#000">father</span>[<span style="color:#000">maxn</span>], <span style="color:#000">mx</span>[<span style="color:#000">maxn</span>], <span style="color:#000">id</span>[<span style="color:#000">maxn</span>], <span style="color:#000">lst</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">void</span> <span style="color:#000">insert</span>(<span style="color:#a90d91">int</span> <span style="color:#000">c</span>, <span style="color:#a90d91">int</span> <span style="color:#000">i</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">p</span> <span style="color:#000">=</span> <span style="color:#000">++</span><span style="color:#000">tot</span>, <span style="color:#000">f</span> <span style="color:#000">=</span> <span style="color:#000">lst</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">lst</span> <span style="color:#000">=</span> <span style="color:#000">p</span>, <span style="color:#000">id</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">p</span>, <span style="color:#000">mx</span>[<span style="color:#000">p</span>] <span style="color:#000">=</span> <span style="color:#000">mx</span>[<span style="color:#000">f</span>] <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">while</span> (<span style="color:#000">f</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">!</span><span style="color:#000">ch</span>[<span style="color:#000">f</span>][<span style="color:#000">c</span>])
</span></span><span style="display:flex;"><span>            <span style="color:#000">ch</span>[<span style="color:#000">f</span>][<span style="color:#000">c</span>] <span style="color:#000">=</span> <span style="color:#000">p</span>, <span style="color:#000">f</span> <span style="color:#000">=</span> <span style="color:#000">father</span>[<span style="color:#000">f</span>];
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">f</span> <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">father</span>[<span style="color:#000">p</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">int</span> <span style="color:#000">q</span> <span style="color:#000">=</span> <span style="color:#000">ch</span>[<span style="color:#000">f</span>][<span style="color:#000">c</span>];
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">mx</span>[<span style="color:#000">q</span>] <span style="color:#000">==</span> <span style="color:#000">mx</span>[<span style="color:#000">f</span>] <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">father</span>[<span style="color:#000">p</span>] <span style="color:#000">=</span> <span style="color:#000">q</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>            {
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">int</span> <span style="color:#000">nq</span> <span style="color:#000">=</span> <span style="color:#000">++</span><span style="color:#000">tot</span>;
</span></span><span style="display:flex;"><span>                <span style="color:#000">memcpy</span>(<span style="color:#000">ch</span>[<span style="color:#000">nq</span>], <span style="color:#000">ch</span>[<span style="color:#000">q</span>], <span style="color:#a90d91">sizeof</span>(<span style="color:#000">ch</span>[<span style="color:#000">q</span>])), <span style="color:#000">father</span>[<span style="color:#000">nq</span>] <span style="color:#000">=</span> <span style="color:#000">father</span>[<span style="color:#000">q</span>], <span style="color:#000">mx</span>[<span style="color:#000">nq</span>] <span style="color:#000">=</span> <span style="color:#000">mx</span>[<span style="color:#000">f</span>] <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>                <span style="color:#000">father</span>[<span style="color:#000">p</span>] <span style="color:#000">=</span> <span style="color:#000">father</span>[<span style="color:#000">q</span>] <span style="color:#000">=</span> <span style="color:#000">nq</span>;
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">while</span> (<span style="color:#000">f</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">ch</span>[<span style="color:#000">f</span>][<span style="color:#000">c</span>] <span style="color:#000">==</span> <span style="color:#000">q</span>)
</span></span><span style="display:flex;"><span>                    <span style="color:#000">ch</span>[<span style="color:#000">f</span>][<span style="color:#000">c</span>] <span style="color:#000">=</span> <span style="color:#000">nq</span>, <span style="color:#000">f</span> <span style="color:#000">=</span> <span style="color:#000">father</span>[<span style="color:#000">f</span>];
</span></span><span style="display:flex;"><span>            }
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">namespace</span> <span style="color:#000">dag</span>
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">struct</span> <span style="color:#3f6e75">edge</span>
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">int</span> <span style="color:#000">y</span>, <span style="color:#000">w</span>;
</span></span><span style="display:flex;"><span>        };
</span></span><span style="display:flex;"><span>        <span style="color:#000">vector</span><span style="color:#000">&lt;</span><span style="color:#000">edge</span><span style="color:#000">&gt;</span> <span style="color:#000">e</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">rd</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">add</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>, <span style="color:#a90d91">int</span> <span style="color:#000">w</span>) { <span style="color:#000">e</span>[<span style="color:#000">x</span>].<span style="color:#000">push_back</span>({<span style="color:#000">y</span>, <span style="color:#000">w</span>}), <span style="color:#000">rd</span>[<span style="color:#000">y</span>]<span style="color:#000">++</span>; }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>        <span style="color:#000">ll</span> <span style="color:#000">f</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">val</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>        
</span></span><span style="display:flex;"><span>        <span style="color:#000">ll</span> <span style="color:#000">dp</span>()
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">queue</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">q</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">tot</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">if</span> (<span style="color:#000">!</span><span style="color:#000">rd</span>[<span style="color:#000">i</span>])
</span></span><span style="display:flex;"><span>                    <span style="color:#000">q</span>.<span style="color:#000">push</span>(<span style="color:#000">i</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">while</span> (<span style="color:#000">!</span><span style="color:#000">q</span>.<span style="color:#000">empty</span>())
</span></span><span style="display:flex;"><span>            {
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">int</span> <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">q</span>.<span style="color:#000">front</span>();
</span></span><span style="display:flex;"><span>                <span style="color:#000">q</span>.<span style="color:#000">pop</span>();
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">for</span> (<span style="color:#a90d91">auto</span> <span style="color:#000">k</span> : <span style="color:#000">e</span>[<span style="color:#000">x</span>])
</span></span><span style="display:flex;"><span>                {
</span></span><span style="display:flex;"><span>                    <span style="color:#a90d91">int</span> <span style="color:#000">v</span> <span style="color:#000">=</span> <span style="color:#000">k</span>.<span style="color:#000">y</span>, <span style="color:#000">w</span> <span style="color:#000">=</span> <span style="color:#000">k</span>.<span style="color:#000">w</span>;
</span></span><span style="display:flex;"><span>                    <span style="color:#000">f</span>[<span style="color:#000">v</span>] <span style="color:#000">=</span> <span style="color:#000">max</span>(<span style="color:#000">f</span>[<span style="color:#000">v</span>], <span style="color:#000">f</span>[<span style="color:#000">x</span>] <span style="color:#000">+</span> <span style="color:#000">w</span>);
</span></span><span style="display:flex;"><span>                    <span style="color:#a90d91">if</span> (<span style="color:#000">--</span><span style="color:#000">rd</span>[<span style="color:#000">v</span>] <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>                        <span style="color:#000">q</span>.<span style="color:#000">push</span>(<span style="color:#000">v</span>);
</span></span><span style="display:flex;"><span>                }
</span></span><span style="display:flex;"><span>            }
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">tot</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">if</span> (<span style="color:#000">rd</span>[<span style="color:#000">i</span>])  
</span></span><span style="display:flex;"><span>                    <span style="color:#a90d91">return</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">tot</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">f</span>[<span style="color:#000">i</span>] <span style="color:#000">+=</span> <span style="color:#000">val</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">return</span> <span style="color:#000">*</span><span style="color:#000">max_element</span>(<span style="color:#000">f</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">f</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">+</span> <span style="color:#000">tot</span>);
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#000">vector</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">e</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">dep</span>[<span style="color:#000">maxn</span>], <span style="color:#000">ff</span>[<span style="color:#000">maxn</span>][<span style="color:#1c01ce">20</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">void</span> <span style="color:#000">build</span>()
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">tot</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">e</span>[<span style="color:#000">father</span>[<span style="color:#000">i</span>]].<span style="color:#000">push_back</span>(<span style="color:#000">i</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">void</span> <span style="color:#000">dfs1</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">fa</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">dep</span>[<span style="color:#000">x</span>] <span style="color:#000">=</span> <span style="color:#000">dep</span>[<span style="color:#000">fa</span>] <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">ff</span>[<span style="color:#000">x</span>][<span style="color:#1c01ce">0</span>] <span style="color:#000">=</span> <span style="color:#000">fa</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#1c01ce">18</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">ff</span>[<span style="color:#000">x</span>][<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">ff</span>[<span style="color:#000">ff</span>[<span style="color:#000">x</span>][<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>]][<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>];
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">v</span> : <span style="color:#000">e</span>[<span style="color:#000">x</span>])
</span></span><span style="display:flex;"><span>            <span style="color:#000">dfs1</span>(<span style="color:#000">v</span>, <span style="color:#000">x</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#000">vector</span><span style="color:#000">&lt;</span><span style="color:#000">pair</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span>, <span style="color:#a90d91">int</span><span style="color:#000">&gt;&gt;</span> <span style="color:#000">a</span>[<span style="color:#000">maxn</span>]; <span style="color:#177500">// first : len, second : i
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">int</span> <span style="color:#000">jump</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">len</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#000">lg</span>(<span style="color:#000">dep</span>[<span style="color:#000">x</span>]); <span style="color:#000">i</span> <span style="color:#000">&gt;=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">mx</span>[<span style="color:#000">ff</span>[<span style="color:#000">x</span>][<span style="color:#000">i</span>]] <span style="color:#000">&gt;=</span> <span style="color:#000">len</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">ff</span>[<span style="color:#000">x</span>][<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#000">x</span>;  
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">char</span> <span style="color:#000">str</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">n</span>, <span style="color:#000">m</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">pair</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span>, <span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">seg</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">p</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">void</span> <span style="color:#000">dfs</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">fa</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">fa</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">dag</span><span style="color:#000">::</span><span style="color:#000">add</span>(<span style="color:#000">fa</span>, <span style="color:#000">x</span>, <span style="color:#1c01ce">0</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">sort</span>(<span style="color:#000">a</span>[<span style="color:#000">x</span>].<span style="color:#000">begin</span>(), <span style="color:#000">a</span>[<span style="color:#000">x</span>].<span style="color:#000">end</span>());
</span></span><span style="display:flex;"><span>        <span style="color:#000">a</span>[<span style="color:#000">x</span>].<span style="color:#000">erase</span>(<span style="color:#000">unique</span>(<span style="color:#000">a</span>[<span style="color:#000">x</span>].<span style="color:#000">begin</span>(), <span style="color:#000">a</span>[<span style="color:#000">x</span>].<span style="color:#000">end</span>()), <span style="color:#000">a</span>[<span style="color:#000">x</span>].<span style="color:#000">end</span>());
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">lst</span> <span style="color:#000">=</span> <span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> (<span style="color:#a90d91">int</span>)<span style="color:#000">a</span>[<span style="color:#000">x</span>].<span style="color:#000">size</span>(); <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">a</span>[<span style="color:#000">x</span>][<span style="color:#000">i</span>].<span style="color:#000">first</span> <span style="color:#000">!=</span> <span style="color:#000">a</span>[<span style="color:#000">x</span>][<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>].<span style="color:#000">first</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">dag</span><span style="color:#000">::</span><span style="color:#000">add</span>(<span style="color:#000">lst</span>, <span style="color:#000">++</span><span style="color:#000">tot</span>, <span style="color:#1c01ce">0</span>), <span style="color:#000">lst</span> <span style="color:#000">=</span> <span style="color:#000">tot</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">p</span>[<span style="color:#000">a</span>[<span style="color:#000">x</span>][<span style="color:#000">i</span>].<span style="color:#000">second</span>] <span style="color:#000">=</span> <span style="color:#000">lst</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">v</span> : <span style="color:#000">e</span>[<span style="color:#000">x</span>])
</span></span><span style="display:flex;"><span>            <span style="color:#000">dfs</span>(<span style="color:#000">v</span>, <span style="color:#000">lst</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">void</span> <span style="color:#000">clear</span>()
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">tot</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">dag</span><span style="color:#000">::</span><span style="color:#000">rd</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">dag</span><span style="color:#000">::</span><span style="color:#000">f</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>, <span style="color:#000">dag</span><span style="color:#000">::</span><span style="color:#000">e</span>[<span style="color:#000">i</span>].<span style="color:#000">clear</span>(), <span style="color:#000">dag</span><span style="color:#000">::</span><span style="color:#000">val</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">tot</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">clear</span>(), <span style="color:#000">p</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>, <span style="color:#000">memset</span>(<span style="color:#000">ch</span>[<span style="color:#000">i</span>], <span style="color:#1c01ce">0</span>, <span style="color:#a90d91">sizeof</span>(<span style="color:#000">ch</span>[<span style="color:#000">i</span>])), <span style="color:#000">father</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">id</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">mx</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">tot</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">e</span>[<span style="color:#000">i</span>].<span style="color:#000">clear</span>(), <span style="color:#000">dep</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>, <span style="color:#000">memset</span>(<span style="color:#000">ff</span>[<span style="color:#000">i</span>], <span style="color:#1c01ce">0</span>, <span style="color:#a90d91">sizeof</span>(<span style="color:#000">ff</span>[<span style="color:#000">i</span>]));
</span></span><span style="display:flex;"><span>        <span style="color:#000">lst</span> <span style="color:#000">=</span> <span style="color:#000">tot</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">void</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">scanf</span>(<span style="color:#c41a16">&#34;%s&#34;</span>, <span style="color:#000">str</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">len</span> <span style="color:#000">=</span> <span style="color:#000">strlen</span>(<span style="color:#000">str</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#000">len</span>; <span style="color:#000">i</span> <span style="color:#000">&gt;=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">insert</span>(<span style="color:#000">str</span>[<span style="color:#000">i</span>] <span style="color:#000">-</span> <span style="color:#2300ce">&#39;a&#39;</span>, <span style="color:#000">i</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">build</span>(), <span style="color:#000">dfs1</span>(<span style="color:#1c01ce">1</span>, <span style="color:#1c01ce">0</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">read</span>(<span style="color:#000">n</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">read</span>(<span style="color:#000">seg</span>[<span style="color:#000">i</span>].<span style="color:#000">first</span>), <span style="color:#000">read</span>(<span style="color:#000">seg</span>[<span style="color:#000">i</span>].<span style="color:#000">second</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">read</span>(<span style="color:#000">m</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#000">n</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span> <span style="color:#000">+</span> <span style="color:#000">m</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">read</span>(<span style="color:#000">seg</span>[<span style="color:#000">i</span>].<span style="color:#000">first</span>), <span style="color:#000">read</span>(<span style="color:#000">seg</span>[<span style="color:#000">i</span>].<span style="color:#000">second</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span> <span style="color:#000">+</span> <span style="color:#000">m</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">p</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">jump</span>(<span style="color:#000">id</span>[<span style="color:#000">seg</span>[<span style="color:#000">i</span>].<span style="color:#000">first</span>], <span style="color:#000">seg</span>[<span style="color:#000">i</span>].<span style="color:#000">second</span> <span style="color:#000">-</span> <span style="color:#000">seg</span>[<span style="color:#000">i</span>].<span style="color:#000">first</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#000">a</span>[<span style="color:#000">p</span>[<span style="color:#000">i</span>]].<span style="color:#000">emplace_back</span>(<span style="color:#000">seg</span>[<span style="color:#000">i</span>].<span style="color:#000">second</span> <span style="color:#000">-</span> <span style="color:#000">seg</span>[<span style="color:#000">i</span>].<span style="color:#000">first</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">i</span>);
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#000">dfs</span>(<span style="color:#1c01ce">1</span>, <span style="color:#1c01ce">0</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">dag</span><span style="color:#000">::</span><span style="color:#000">val</span>[<span style="color:#000">p</span>[<span style="color:#000">i</span>]] <span style="color:#000">=</span> <span style="color:#000">seg</span>[<span style="color:#000">i</span>].<span style="color:#000">second</span> <span style="color:#000">-</span> <span style="color:#000">seg</span>[<span style="color:#000">i</span>].<span style="color:#000">first</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">k</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">read</span>(<span style="color:#000">k</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">k</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#000">y</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">read</span>(<span style="color:#000">x</span>), <span style="color:#000">read</span>(<span style="color:#000">y</span>), <span style="color:#000">dag</span><span style="color:#000">::</span><span style="color:#000">add</span>(<span style="color:#000">p</span>[<span style="color:#000">x</span>], <span style="color:#000">p</span>[<span style="color:#000">y</span> <span style="color:#000">+</span> <span style="color:#000">n</span>], <span style="color:#000">seg</span>[<span style="color:#000">x</span>].<span style="color:#000">second</span> <span style="color:#000">-</span> <span style="color:#000">seg</span>[<span style="color:#000">x</span>].<span style="color:#000">first</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">dag</span><span style="color:#000">::</span><span style="color:#000">dp</span>() <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">clear</span>();
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">T</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">T</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> (<span style="color:#000">T</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">solve</span><span style="color:#000">::</span><span style="color:#000">main</span>();
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div>]]></content:encoded>
    </item>
    
    <item>
      <title>loj3702 「联合省选 2022」学术社区</title>
      <link>https://luoyisu.github.io/posts/loj3702/</link>
      <pubDate>Wed, 20 Apr 2022 19:59:46 +0000</pubDate>
      
      <guid>https://luoyisu.github.io/posts/loj3702/</guid>
      <description>&lt;p&gt;参考：&lt;a href=&#34;https://www.luogu.com.cn/blog/pengSiJin/lian-ge-xing-xuan-2022-xue-shu-she-ou-analysis&#34;&gt;出题人 Itst 的题解&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;确实是神仙，不好想。&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>参考：<a href="https://www.luogu.com.cn/blog/pengSiJin/lian-ge-xing-xuan-2022-xue-shu-she-ou-analysis">出题人 Itst 的题解</a>。</p>
<p>确实是神仙，不好想。</p>
<h2 id="description">Description</h2>
<p>有一个帖子，总共有 $n$ 个人在帖子里发过消息。这个帖子里有 $m$ 条消息，每条消息包含三个字符串 $s1,s2,s3$，$s1$ 代表发出者的名字。消息分三类：</p>
<ul>
<li>楼上型消息：如果 $s3$ 是 <code>loushang</code>，且 $s2$ 是在帖子里发过贴的人的名字，那么称该消息为楼上型消息，该消息被满足当且仅当上一条消息的发出者为 $s2$；</li>
<li>楼下型消息：如果 $s3$ 是 <code>louxia</code>，且 $s2$ 是在帖子里发过贴的人的名字，那么称该消息为楼下型消息，该消息被满足当且仅当下一条消息的发出者为 $s2$；</li>
<li>学术消息：不满足以上条件即为学术消息。这类消息无法被满足。</li>
</ul>
<p>你需要对这 $m$ 条消息进行重新排列使得被满足的消息数量最大，输出这个最大值以及排列。</p>
<p>保证每个人至少发过一条学术消息。</p>
<p>多组数据，数据组数 $T\leq100$，$n\leq m\leq77777$，$\sum m\leq2.5\times10^5$。</p>
<h2 id="solution">Solution</h2>
<p>让我们忽略魔怔的题面，来分析这个问题吧。</p>
<p>首先题目中的楼上型消息和楼下型消息很容易想到可以用边的方式去刻画，我们有了一个初步的方向：加边加边加边，跑某某某算法。</p>
<h3 id="特殊性质-bc">特殊性质 BC</h3>
<p>因为每个消息都能被满足，且没有互相满足的消息，最后的帖子一定是由若干块下面这种形式组成：</p>
<pre tabindex="0"><code>A B loushang
B C loushang
C C C
D C louxia
A D louxia
</code></pre><p>即若干个楼上消息，一个学术消息，若干个楼下消息。</p>
<p>一个简单想法是：把满足要求的消息按照楼上到楼下的方向连边，把这种形式抽象为一条链，然后搞欧拉回路之类的覆盖所有边的算法。</p>
<p>比如 <code>A B loushang</code>，就从 $A$ 向 $B$ 连边，<code>A B louxia</code>，就从 $B$ 向 $A$ 连边。</p>
<p>乍一看挺对，但直接连边是不能体现出经过学术消息走到楼下消息这一不可逆的过程，对于这种不可逆的边我们可以用分层图来描述：</p>
<p>建立二层图 $G_1,G_2$，对于楼上型消息，我们在 $G_1$ 中连边；对于楼下型消息，我们在 $G_2$ 中连边；对于学术消息，我们把发出者从 $G_1$ 连向 $G_2$，这样一个块就是从 $G_1$ 出发经过若干条边然后走一个学术边到达 $G_2$ 再走若干条边结束。</p>
<p>因为所有消息都可以被满足，我们建一个辅助点然后平衡一下度数，跑欧拉回路就好了。</p>
<p>具体而言就是 $G_1$ 要是入度不够就从辅助点向它连边，$G_2$ 相反。</p>
<h3 id="特殊性质-c">特殊性质 C</h3>
<p>现在有消息不能被满足了，也就是说 $G_1$ 中有点入度大于出度，这些入度减出度条边无法满足要求，$G_2$ 中就是反过来。</p>
<p>首先我们如果把多的边全都扔掉肯定是可以构造出一组方案的，但是并不一定是最优，因为扔掉的边可以变为学术消息再次利用。变成学术消息后 $G_1$ 中对应点入度会减 $1$，$G_2$ 中对应点入度会加 $1$，这样我们扔掉了一条边，而可以满足两个需要的边。</p>
<p>我们要让扔掉一些边之后能尽可能多匹配不能被满足的边。</p>
<p>问题转化为：每个点有一个需求，而假如舍弃一条边，可以满足 $G_1,G_2$ 中各一个点的需求减去 $1$，要最大化满足的需求。</p>
<p>然后这个问题很明显可以用最大流求解，源点向 $G_1$ 中的点连流量为该点不能满足的边的数量，$G_2$ 中的点向汇点连该点不能满足的边的数量。对于一条边 <code>A B loushang</code>，我们从 $G_1$ 的 $B$ 连向 $G_2$ 的 $A$，流量为 $1$，表示断掉这条边，这两个点的需求都减少 $1$；楼下消息同理。</p>
<p>接下来我们把被舍弃的边看作学术消息，做特殊性质 BC 就可以了。</p>
<h3 id="无特殊性质">无特殊性质</h3>
<p>现在没有了特殊性质 C，不同就是一条链的中间点除了是学术消息，还可以是下面这种形式：</p>
<pre tabindex="0"><code>A B loushang
B A louxia
</code></pre><p><del>因为这部分没多少分我们可以直接猜测只需要把边简单地缩起来就可以搞定</del></p>
<p>调整法就可以证明，把这两条消息看成一条从 $A$ 到 $B$ 的学术消息边一定是不劣的。</p>
<p>简单证明一下就是如果拆开，那么把 <code>A B loushang</code> 的上面匹配的楼上消息以及 <code>B A louxia</code> 下面匹配的楼下消息都搬出来，再合到一起去，肯定是不劣的。</p>
<p>然后我们就可以快乐地把这两条边看成一条学术边然后做特殊性质 C 了，好耶！</p>
<p>实现的时候发现一个小问题：缩起来的边在跑欧拉路的时候记录方案略难受，我的方法是对于每组边，再建一个虚点，$A$ 向虚点连边，虚点向 $B$ 连边。</p>
<p>时间复杂度为预处理 $O(m\log m)$，最大流 $O(dinic)$，欧拉路 $O(n+m)$，加起来反正能过。</p>
<p>我感觉这个二分图，流量不大，dinic应该是很快的。</p>
<h2 id="code">Code</h2>
<p>不是非常好写，码量略大。</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#a90d91">namespace</span> <span style="color:#000">solve</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">3e5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">inf</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1e9</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">const</span> <span style="color:#000">string</span> <span style="color:#000">louxia</span> <span style="color:#000">=</span> <span style="color:#c41a16">&#34;louxia&#34;</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">const</span> <span style="color:#000">string</span> <span style="color:#000">loushang</span> <span style="color:#000">=</span> <span style="color:#c41a16">&#34;loushang&#34;</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">typedef</span> <span style="color:#000">pair</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span>, <span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">pii</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">n</span>, <span style="color:#000">m</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">unordered_map</span><span style="color:#000">&lt;</span><span style="color:#000">string</span>, <span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">mp</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#000">vector</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">a</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">ans</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">struct</span> <span style="color:#3f6e75">message</span>
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#000">y</span>, <span style="color:#000">type</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#177500">// 1 楼上 2 楼下
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>    } <span style="color:#000">all</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">cnt</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">namespace</span> <span style="color:#000">flow</span>
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">struct</span> <span style="color:#3f6e75">edge</span>
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#000">y</span>, <span style="color:#000">cap</span>, <span style="color:#000">flow</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">int</span> <span style="color:#000">now_flow</span>() { <span style="color:#a90d91">return</span> <span style="color:#000">cap</span> <span style="color:#000">-</span> <span style="color:#000">flow</span>; }
</span></span><span style="display:flex;"><span>        };
</span></span><span style="display:flex;"><span>        <span style="color:#000">vector</span><span style="color:#000">&lt;</span><span style="color:#000">edge</span><span style="color:#000">&gt;</span> <span style="color:#000">edges</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">vector</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">e</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">inline</span> <span style="color:#a90d91">int</span> <span style="color:#000">add</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>, <span style="color:#a90d91">int</span> <span style="color:#000">cap</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">cnt</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">edges</span>.<span style="color:#000">push_back</span>({<span style="color:#000">x</span>, <span style="color:#000">y</span>, <span style="color:#000">cap</span>, <span style="color:#1c01ce">0</span>});
</span></span><span style="display:flex;"><span>            <span style="color:#000">edges</span>.<span style="color:#000">push_back</span>({<span style="color:#000">y</span>, <span style="color:#000">x</span>, <span style="color:#1c01ce">0</span>, <span style="color:#1c01ce">0</span>});
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">int</span> <span style="color:#000">m</span> <span style="color:#000">=</span> <span style="color:#000">edges</span>.<span style="color:#000">size</span>();
</span></span><span style="display:flex;"><span>            <span style="color:#000">e</span>[<span style="color:#000">x</span>].<span style="color:#000">push_back</span>(<span style="color:#000">m</span> <span style="color:#000">-</span> <span style="color:#1c01ce">2</span>), <span style="color:#000">e</span>[<span style="color:#000">y</span>].<span style="color:#000">push_back</span>(<span style="color:#000">m</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">return</span> <span style="color:#000">m</span> <span style="color:#000">-</span> <span style="color:#1c01ce">2</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">cur</span>[<span style="color:#000">maxn</span>], <span style="color:#000">vis</span>[<span style="color:#000">maxn</span>], <span style="color:#000">s</span>, <span style="color:#000">t</span>, <span style="color:#000">dis</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">bool</span> <span style="color:#000">bfs</span>()
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">fill</span>(<span style="color:#000">vis</span>, <span style="color:#000">vis</span> <span style="color:#000">+</span> <span style="color:#000">t</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#1c01ce">0</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#000">dis</span>[<span style="color:#000">s</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>, <span style="color:#000">vis</span>[<span style="color:#000">s</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">queue</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">q</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">q</span>.<span style="color:#000">push</span>(<span style="color:#000">s</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">while</span> (<span style="color:#000">!</span><span style="color:#000">q</span>.<span style="color:#000">empty</span>())
</span></span><span style="display:flex;"><span>            {
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">int</span> <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">q</span>.<span style="color:#000">front</span>();
</span></span><span style="display:flex;"><span>                <span style="color:#000">q</span>.<span style="color:#000">pop</span>();
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> : <span style="color:#000">e</span>[<span style="color:#000">x</span>])
</span></span><span style="display:flex;"><span>                {
</span></span><span style="display:flex;"><span>                    <span style="color:#a90d91">auto</span> <span style="color:#000">&amp;</span><span style="color:#000">k</span> <span style="color:#000">=</span> <span style="color:#000">edges</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>                    <span style="color:#a90d91">if</span> (<span style="color:#000">!</span><span style="color:#000">vis</span>[<span style="color:#000">k</span>.<span style="color:#000">y</span>] <span style="color:#000">&amp;&amp;</span> <span style="color:#000">k</span>.<span style="color:#000">cap</span> <span style="color:#000">-</span> <span style="color:#000">k</span>.<span style="color:#000">flow</span> <span style="color:#000">&gt;</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>                    {
</span></span><span style="display:flex;"><span>                        <span style="color:#000">dis</span>[<span style="color:#000">k</span>.<span style="color:#000">y</span>] <span style="color:#000">=</span> <span style="color:#000">dis</span>[<span style="color:#000">x</span>] <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>                        <span style="color:#000">vis</span>[<span style="color:#000">k</span>.<span style="color:#000">y</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">q</span>.<span style="color:#000">push</span>(<span style="color:#000">k</span>.<span style="color:#000">y</span>);
</span></span><span style="display:flex;"><span>                    }
</span></span><span style="display:flex;"><span>                }
</span></span><span style="display:flex;"><span>            }
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">return</span> <span style="color:#000">vis</span>[<span style="color:#000">t</span>];
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">dfs</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">lim</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">x</span> <span style="color:#000">==</span> <span style="color:#000">t</span> <span style="color:#000">||</span> <span style="color:#000">lim</span> <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">return</span> <span style="color:#000">lim</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">int</span> <span style="color:#000">res</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>, <span style="color:#000">f</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">&amp;</span><span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#000">cur</span>[<span style="color:#000">x</span>]; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> (<span style="color:#a90d91">int</span>)<span style="color:#000">e</span>[<span style="color:#000">x</span>].<span style="color:#000">size</span>(); <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            {
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">auto</span> <span style="color:#000">&amp;</span><span style="color:#000">k</span> <span style="color:#000">=</span> <span style="color:#000">edges</span>[<span style="color:#000">e</span>[<span style="color:#000">x</span>][<span style="color:#000">i</span>]];
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">if</span> (<span style="color:#000">dis</span>[<span style="color:#000">x</span>] <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">!=</span> <span style="color:#000">dis</span>[<span style="color:#000">k</span>.<span style="color:#000">y</span>] <span style="color:#000">||</span> (<span style="color:#000">f</span> <span style="color:#000">=</span> <span style="color:#000">dfs</span>(<span style="color:#000">k</span>.<span style="color:#000">y</span>, <span style="color:#000">min</span>(<span style="color:#000">lim</span>, <span style="color:#000">k</span>.<span style="color:#000">cap</span> <span style="color:#000">-</span> <span style="color:#000">k</span>.<span style="color:#000">flow</span>))) <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>                    <span style="color:#a90d91">continue</span>;
</span></span><span style="display:flex;"><span>                <span style="color:#000">res</span> <span style="color:#000">+=</span> <span style="color:#000">f</span>, <span style="color:#000">lim</span> <span style="color:#000">-=</span> <span style="color:#000">f</span>, <span style="color:#000">k</span>.<span style="color:#000">flow</span> <span style="color:#000">+=</span> <span style="color:#000">f</span>, <span style="color:#000">edges</span>[<span style="color:#000">e</span>[<span style="color:#000">x</span>][<span style="color:#000">i</span>] <span style="color:#000">^</span> <span style="color:#1c01ce">1</span>].<span style="color:#000">flow</span> <span style="color:#000">-=</span> <span style="color:#000">f</span>;
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">if</span> (<span style="color:#000">lim</span> <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>                    <span style="color:#a90d91">break</span>;
</span></span><span style="display:flex;"><span>            }
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">return</span> <span style="color:#000">res</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">dinic</span>(<span style="color:#a90d91">int</span> <span style="color:#000">s_</span>, <span style="color:#a90d91">int</span> <span style="color:#000">t_</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">s</span> <span style="color:#000">=</span> <span style="color:#000">s_</span>, <span style="color:#000">t</span> <span style="color:#000">=</span> <span style="color:#000">t_</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">int</span> <span style="color:#000">res</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">while</span> (<span style="color:#000">bfs</span>())
</span></span><span style="display:flex;"><span>                <span style="color:#000">fill</span>(<span style="color:#000">cur</span>, <span style="color:#000">cur</span> <span style="color:#000">+</span> <span style="color:#000">t</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#1c01ce">0</span>), <span style="color:#000">res</span> <span style="color:#000">+=</span> <span style="color:#000">dfs</span>(<span style="color:#000">s</span>, <span style="color:#000">inf</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">return</span> <span style="color:#000">res</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">void</span> <span style="color:#000">clear</span>()
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">t</span> <span style="color:#000">*</span> <span style="color:#1c01ce">2</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">e</span>[<span style="color:#000">i</span>].<span style="color:#000">clear</span>();
</span></span><span style="display:flex;"><span>            <span style="color:#000">edges</span>.<span style="color:#000">clear</span>();
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">namespace</span> <span style="color:#000">euler</span>
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">vector</span><span style="color:#000">&lt;</span><span style="color:#000">pii</span><span style="color:#000">&gt;</span> <span style="color:#000">e</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">ans</span>[<span style="color:#000">maxn</span>], <span style="color:#000">tot</span>, <span style="color:#000">deg</span>[<span style="color:#000">maxn</span>]; <span style="color:#177500">// cd - rd
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>        <span style="color:#a90d91">int</span> <span style="color:#000">virtual_node</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">add</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>, <span style="color:#a90d91">int</span> <span style="color:#000">id</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">e</span>[<span style="color:#000">x</span>].<span style="color:#000">emplace_back</span>(<span style="color:#000">y</span>, <span style="color:#000">id</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#000">deg</span>[<span style="color:#000">x</span>]<span style="color:#000">++</span>, <span style="color:#000">deg</span>[<span style="color:#000">y</span>]<span style="color:#000">--</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">void</span> <span style="color:#000">clear</span>()
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">virtual_node</span> <span style="color:#000">+</span> <span style="color:#1c01ce">5</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">e</span>[<span style="color:#000">i</span>].<span style="color:#000">clear</span>(), <span style="color:#000">deg</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">tot</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">void</span> <span style="color:#000">dfs</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">while</span> (<span style="color:#000">e</span>[<span style="color:#000">x</span>].<span style="color:#000">size</span>())
</span></span><span style="display:flex;"><span>            {
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">auto</span> <span style="color:#000">&amp;</span><span style="color:#000">p</span> <span style="color:#000">=</span> <span style="color:#000">e</span>[<span style="color:#000">x</span>].<span style="color:#000">back</span>();
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">int</span> <span style="color:#000">v</span> <span style="color:#000">=</span> <span style="color:#000">p</span>.<span style="color:#000">first</span>, <span style="color:#000">id</span> <span style="color:#000">=</span> <span style="color:#000">p</span>.<span style="color:#000">second</span>;
</span></span><span style="display:flex;"><span>                <span style="color:#000">e</span>[<span style="color:#000">x</span>].<span style="color:#000">pop_back</span>();
</span></span><span style="display:flex;"><span>                <span style="color:#000">dfs</span>(<span style="color:#000">v</span>);
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">if</span> (<span style="color:#000">id</span>)
</span></span><span style="display:flex;"><span>                    <span style="color:#000">ans</span>[<span style="color:#000">++</span><span style="color:#000">tot</span>] <span style="color:#000">=</span> <span style="color:#000">id</span>;
</span></span><span style="display:flex;"><span>            }
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">notc</span>[<span style="color:#000">maxn</span>]; <span style="color:#177500">// not satisfy C
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>    <span style="color:#a90d91">int</span> <span style="color:#000">rd</span>[<span style="color:#000">maxn</span>], <span style="color:#000">cd</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">void</span> <span style="color:#000">clear</span>()
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">flow</span><span style="color:#000">::</span><span style="color:#000">clear</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#000">euler</span><span style="color:#000">::</span><span style="color:#000">clear</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#000">mp</span>.<span style="color:#000">clear</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span> <span style="color:#000">*</span> <span style="color:#1c01ce">2</span> <span style="color:#000">+</span> <span style="color:#1c01ce">5</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">rd</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">cd</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">notc</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">void</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">clear</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">m</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">euler</span><span style="color:#000">::</span><span style="color:#000">virtual_node</span> <span style="color:#000">=</span> <span style="color:#000">n</span> <span style="color:#000">*</span> <span style="color:#1c01ce">2</span> <span style="color:#000">+</span> <span style="color:#1c01ce">3</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">string</span> <span style="color:#000">s</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">s</span>, <span style="color:#000">mp</span>[<span style="color:#000">s</span>] <span style="color:#000">=</span> <span style="color:#000">i</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">map</span><span style="color:#000">&lt;</span><span style="color:#000">pii</span>, <span style="color:#000">vector</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span><span style="color:#000">&gt;&gt;</span> <span style="color:#000">pos</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">string</span> <span style="color:#000">s1</span>, <span style="color:#000">s2</span>, <span style="color:#000">s3</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">s1</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">s2</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">s3</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">int</span> <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">mp</span>[<span style="color:#000">s1</span>], <span style="color:#000">y</span> <span style="color:#000">=</span> <span style="color:#000">mp</span>.<span style="color:#000">count</span>(<span style="color:#000">s2</span>) <span style="color:#000">?</span> <span style="color:#000">mp</span>[<span style="color:#000">s2</span>] <span style="color:#000">:</span> <span style="color:#1c01ce">0</span>, <span style="color:#000">type</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">s3</span> <span style="color:#000">==</span> <span style="color:#000">loushang</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">y</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">type</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">ans</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">else</span> <span style="color:#a90d91">if</span> (<span style="color:#000">s3</span> <span style="color:#000">==</span> <span style="color:#000">louxia</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">y</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">type</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2</span>, <span style="color:#000">swap</span>(<span style="color:#000">x</span>, <span style="color:#000">y</span>), <span style="color:#000">ans</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">all</span>[<span style="color:#000">i</span>].<span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">x</span>, <span style="color:#000">all</span>[<span style="color:#000">i</span>].<span style="color:#000">y</span> <span style="color:#000">=</span> <span style="color:#000">y</span>, <span style="color:#000">all</span>[<span style="color:#000">i</span>].<span style="color:#000">type</span> <span style="color:#000">=</span> <span style="color:#000">type</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">all</span>[<span style="color:#000">i</span>].<span style="color:#000">type</span> <span style="color:#000">==</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">pos</span>[<span style="color:#000">pii</span>(<span style="color:#000">all</span>[<span style="color:#000">i</span>].<span style="color:#000">x</span>, <span style="color:#000">all</span>[<span style="color:#000">i</span>].<span style="color:#000">y</span>)].<span style="color:#000">push_back</span>(<span style="color:#000">i</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">all</span>[<span style="color:#000">i</span>].<span style="color:#000">type</span> <span style="color:#000">==</span> <span style="color:#1c01ce">2</span>)
</span></span><span style="display:flex;"><span>            {
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">auto</span> <span style="color:#000">p</span> <span style="color:#000">=</span> <span style="color:#000">pii</span>(<span style="color:#000">all</span>[<span style="color:#000">i</span>].<span style="color:#000">x</span>, <span style="color:#000">all</span>[<span style="color:#000">i</span>].<span style="color:#000">y</span>);
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">if</span> (<span style="color:#000">!</span><span style="color:#000">pos</span>.<span style="color:#000">count</span>(<span style="color:#000">p</span>))
</span></span><span style="display:flex;"><span>                    <span style="color:#a90d91">continue</span>;
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">auto</span> <span style="color:#000">&amp;</span><span style="color:#000">arr</span> <span style="color:#000">=</span> <span style="color:#000">pos</span>[<span style="color:#000">p</span>];
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">if</span> (<span style="color:#000">!</span><span style="color:#000">arr</span>.<span style="color:#000">empty</span>())
</span></span><span style="display:flex;"><span>                {
</span></span><span style="display:flex;"><span>                    <span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#000">arr</span>.<span style="color:#000">back</span>();
</span></span><span style="display:flex;"><span>                    <span style="color:#000">arr</span>.<span style="color:#000">pop_back</span>();
</span></span><span style="display:flex;"><span>                    <span style="color:#000">notc</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">notc</span>[<span style="color:#000">j</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">rd</span>[<span style="color:#000">all</span>[<span style="color:#000">j</span>].<span style="color:#000">y</span> <span style="color:#000">+</span> <span style="color:#000">n</span>]<span style="color:#000">++</span>, <span style="color:#000">cd</span>[<span style="color:#000">all</span>[<span style="color:#000">j</span>].<span style="color:#000">x</span>]<span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>                    <span style="color:#000">euler</span><span style="color:#000">::</span><span style="color:#000">virtual_node</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>                    <span style="color:#000">euler</span><span style="color:#000">::</span><span style="color:#000">add</span>(<span style="color:#000">all</span>[<span style="color:#000">j</span>].<span style="color:#000">x</span>, <span style="color:#000">euler</span><span style="color:#000">::</span><span style="color:#000">virtual_node</span>, <span style="color:#000">j</span>);
</span></span><span style="display:flex;"><span>                    <span style="color:#000">euler</span><span style="color:#000">::</span><span style="color:#000">add</span>(<span style="color:#000">euler</span><span style="color:#000">::</span><span style="color:#000">virtual_node</span>, <span style="color:#000">all</span>[<span style="color:#000">j</span>].<span style="color:#000">y</span> <span style="color:#000">+</span> <span style="color:#000">n</span>, <span style="color:#000">i</span>);
</span></span><span style="display:flex;"><span>                }
</span></span><span style="display:flex;"><span>            }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">!</span><span style="color:#000">notc</span>[<span style="color:#000">i</span>])
</span></span><span style="display:flex;"><span>            {
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">if</span> (<span style="color:#000">all</span>[<span style="color:#000">i</span>].<span style="color:#000">type</span> <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>                    <span style="color:#000">rd</span>[<span style="color:#000">all</span>[<span style="color:#000">i</span>].<span style="color:#000">x</span> <span style="color:#000">+</span> <span style="color:#000">n</span>]<span style="color:#000">++</span>, <span style="color:#000">cd</span>[<span style="color:#000">all</span>[<span style="color:#000">i</span>].<span style="color:#000">x</span>]<span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">else</span> <span style="color:#a90d91">if</span> (<span style="color:#000">all</span>[<span style="color:#000">i</span>].<span style="color:#000">type</span> <span style="color:#000">==</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>                    <span style="color:#000">cd</span>[<span style="color:#000">all</span>[<span style="color:#000">i</span>].<span style="color:#000">x</span>]<span style="color:#000">++</span>, <span style="color:#000">rd</span>[<span style="color:#000">all</span>[<span style="color:#000">i</span>].<span style="color:#000">y</span>]<span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>                    <span style="color:#000">cd</span>[<span style="color:#000">all</span>[<span style="color:#000">i</span>].<span style="color:#000">x</span> <span style="color:#000">+</span> <span style="color:#000">n</span>]<span style="color:#000">++</span>, <span style="color:#000">rd</span>[<span style="color:#000">all</span>[<span style="color:#000">i</span>].<span style="color:#000">y</span> <span style="color:#000">+</span> <span style="color:#000">n</span>]<span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>            }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">S</span> <span style="color:#000">=</span> <span style="color:#000">n</span> <span style="color:#000">*</span> <span style="color:#1c01ce">2</span> <span style="color:#000">+</span> <span style="color:#1c01ce">5</span>, <span style="color:#000">T</span> <span style="color:#000">=</span> <span style="color:#000">S</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">rd</span>[<span style="color:#000">i</span>] <span style="color:#000">&gt;</span> <span style="color:#000">cd</span>[<span style="color:#000">i</span>])
</span></span><span style="display:flex;"><span>                <span style="color:#000">flow</span><span style="color:#000">::</span><span style="color:#000">add</span>(<span style="color:#000">S</span>, <span style="color:#000">i</span>, <span style="color:#000">rd</span>[<span style="color:#000">i</span>] <span style="color:#000">-</span> <span style="color:#000">cd</span>[<span style="color:#000">i</span>]);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#000">n</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span> <span style="color:#000">+</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">cd</span>[<span style="color:#000">i</span>] <span style="color:#000">&gt;</span> <span style="color:#000">rd</span>[<span style="color:#000">i</span>])
</span></span><span style="display:flex;"><span>                <span style="color:#000">flow</span><span style="color:#000">::</span><span style="color:#000">add</span>(<span style="color:#000">i</span>, <span style="color:#000">T</span>, <span style="color:#000">cd</span>[<span style="color:#000">i</span>] <span style="color:#000">-</span> <span style="color:#000">rd</span>[<span style="color:#000">i</span>]);
</span></span><span style="display:flex;"><span>        <span style="color:#000">vector</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">id</span>(<span style="color:#000">m</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">!</span><span style="color:#000">notc</span>[<span style="color:#000">i</span>])
</span></span><span style="display:flex;"><span>            {
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">if</span> (<span style="color:#000">all</span>[<span style="color:#000">i</span>].<span style="color:#000">type</span> <span style="color:#000">==</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>                    <span style="color:#000">id</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">flow</span><span style="color:#000">::</span><span style="color:#000">add</span>(<span style="color:#000">all</span>[<span style="color:#000">i</span>].<span style="color:#000">y</span>, <span style="color:#000">all</span>[<span style="color:#000">i</span>].<span style="color:#000">x</span> <span style="color:#000">+</span> <span style="color:#000">n</span>, <span style="color:#1c01ce">1</span>); 
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">else</span> <span style="color:#a90d91">if</span> (<span style="color:#000">all</span>[<span style="color:#000">i</span>].<span style="color:#000">type</span> <span style="color:#000">==</span> <span style="color:#1c01ce">2</span>)
</span></span><span style="display:flex;"><span>                    <span style="color:#000">id</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">flow</span><span style="color:#000">::</span><span style="color:#000">add</span>(<span style="color:#000">all</span>[<span style="color:#000">i</span>].<span style="color:#000">y</span>, <span style="color:#000">all</span>[<span style="color:#000">i</span>].<span style="color:#000">x</span> <span style="color:#000">+</span> <span style="color:#000">n</span>, <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>            }
</span></span><span style="display:flex;"><span>        <span style="color:#000">ans</span> <span style="color:#000">-=</span> <span style="color:#000">flow</span><span style="color:#000">::</span><span style="color:#000">dinic</span>(<span style="color:#000">S</span>, <span style="color:#000">T</span>); <span style="color:#177500">// 减去舍弃的边
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">notc</span>[<span style="color:#000">i</span>])
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">continue</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">all</span>[<span style="color:#000">i</span>].<span style="color:#000">type</span> <span style="color:#000">==</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">flow</span><span style="color:#000">::</span><span style="color:#000">edges</span>[<span style="color:#000">id</span>[<span style="color:#000">i</span>]].<span style="color:#000">now_flow</span>() <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">all</span>[<span style="color:#000">i</span>].<span style="color:#000">type</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">all</span>[<span style="color:#000">i</span>].<span style="color:#000">type</span> <span style="color:#000">==</span> <span style="color:#1c01ce">2</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">flow</span><span style="color:#000">::</span><span style="color:#000">edges</span>[<span style="color:#000">id</span>[<span style="color:#000">i</span>]].<span style="color:#000">now_flow</span>() <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">all</span>[<span style="color:#000">i</span>].<span style="color:#000">type</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>, <span style="color:#000">swap</span>(<span style="color:#000">all</span>[<span style="color:#000">i</span>].<span style="color:#000">x</span>, <span style="color:#000">all</span>[<span style="color:#000">i</span>].<span style="color:#000">y</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">all</span>[<span style="color:#000">i</span>].<span style="color:#000">type</span> <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">euler</span><span style="color:#000">::</span><span style="color:#000">add</span>(<span style="color:#000">all</span>[<span style="color:#000">i</span>].<span style="color:#000">x</span>, <span style="color:#000">all</span>[<span style="color:#000">i</span>].<span style="color:#000">x</span> <span style="color:#000">+</span> <span style="color:#000">n</span>, <span style="color:#000">i</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">else</span> <span style="color:#a90d91">if</span> (<span style="color:#000">all</span>[<span style="color:#000">i</span>].<span style="color:#000">type</span> <span style="color:#000">==</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">euler</span><span style="color:#000">::</span><span style="color:#000">add</span>(<span style="color:#000">all</span>[<span style="color:#000">i</span>].<span style="color:#000">x</span>, <span style="color:#000">all</span>[<span style="color:#000">i</span>].<span style="color:#000">y</span>, <span style="color:#000">i</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>                <span style="color:#000">euler</span><span style="color:#000">::</span><span style="color:#000">add</span>(<span style="color:#000">all</span>[<span style="color:#000">i</span>].<span style="color:#000">x</span> <span style="color:#000">+</span> <span style="color:#000">n</span>, <span style="color:#000">all</span>[<span style="color:#000">i</span>].<span style="color:#000">y</span> <span style="color:#000">+</span> <span style="color:#000">n</span>, <span style="color:#000">i</span>);
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">aux_node</span> <span style="color:#000">=</span> <span style="color:#000">n</span> <span style="color:#000">*</span> <span style="color:#1c01ce">2</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">while</span> (<span style="color:#000">euler</span><span style="color:#000">::</span><span style="color:#000">deg</span>[<span style="color:#000">i</span>] <span style="color:#000">&gt;</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">euler</span><span style="color:#000">::</span><span style="color:#000">add</span>(<span style="color:#000">aux_node</span>, <span style="color:#000">i</span>, <span style="color:#1c01ce">0</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">while</span> (<span style="color:#000">euler</span><span style="color:#000">::</span><span style="color:#000">deg</span>[<span style="color:#000">i</span>] <span style="color:#000">&lt;</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">euler</span><span style="color:#000">::</span><span style="color:#000">add</span>(<span style="color:#000">i</span>, <span style="color:#000">aux_node</span>, <span style="color:#1c01ce">0</span>), <span style="color:#000">ans</span><span style="color:#000">--</span>; <span style="color:#177500">// 减去无法匹配的边
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#000">n</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span> <span style="color:#000">+</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">while</span> (<span style="color:#000">euler</span><span style="color:#000">::</span><span style="color:#000">deg</span>[<span style="color:#000">i</span>] <span style="color:#000">&gt;</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">euler</span><span style="color:#000">::</span><span style="color:#000">add</span>(<span style="color:#000">aux_node</span>, <span style="color:#000">i</span>, <span style="color:#1c01ce">0</span>), <span style="color:#000">ans</span><span style="color:#000">--</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">while</span> (<span style="color:#000">euler</span><span style="color:#000">::</span><span style="color:#000">deg</span>[<span style="color:#000">i</span>] <span style="color:#000">&lt;</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">euler</span><span style="color:#000">::</span><span style="color:#000">add</span>(<span style="color:#000">i</span>, <span style="color:#000">aux_node</span>, <span style="color:#1c01ce">0</span>);
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">ans</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">euler</span><span style="color:#000">::</span><span style="color:#000">dfs</span>(<span style="color:#000">aux_node</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">reverse</span>(<span style="color:#000">euler</span><span style="color:#000">::</span><span style="color:#000">ans</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">euler</span><span style="color:#000">::</span><span style="color:#000">ans</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">+</span> <span style="color:#000">m</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">euler</span><span style="color:#000">::</span><span style="color:#000">ans</span>[<span style="color:#000">i</span>] <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div>]]></content:encoded>
    </item>
    
    <item>
      <title>uoj123 NOI2013 小Q的修炼</title>
      <link>https://luoyisu.github.io/posts/uoj123/</link>
      <pubDate>Sun, 17 Apr 2022 12:42:59 +0000</pubDate>
      
      <guid>https://luoyisu.github.io/posts/uoj123/</guid>
      <description>&lt;p&gt;这个提答还算小清新，不用跑很久，主要是观察数据性质。&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>这个提答还算小清新，不用跑很久，主要是观察数据性质。</p>
<h2 id="description">Description</h2>
<p>小 Q 最近发现了一款新游戏，游戏的目标是从一个新手修炼成为武功高强的大侠。</p>
<p>对着这个游戏，小 Q 玩了很多次仍然玩不出他想要的结局，于是他费尽千辛万苦找到了游戏的剧本。令人惊讶的是，游戏的剧本并不像我们平时见到的剧本，反而很像代码。这个剧本是这样描述的：</p>
<p>量：有 $2$ 种量，常数和变量。</p>
<p>常数：一个整数。</p>
<p>变量：初始值为 $0$ 的可变整数，不同变量用不同正整数区分。</p>
<p>事件：整个剧本由若干个事件构成。所有的事件按照给定的顺序从 $1$ 开始依次编号。事件共有 $3$ 种：普通事件、选择跳转和条件跳转。</p>
<p>执行位置：一个整数，表示接下来将会执行的事件编号，如果不存在这个编号的事件则停止，即游戏到了一个结局。最初的时候执行位置为 $1$。</p>
<p>普通事件：一个变量增加或减少一个量的值。之后执行位置增加 $1$。</p>
<p>选择跳转：两个整数。执行到这里时玩家需要在这两个整数中选择一个，之后执行位置将被修改为这个整数。</p>
<p>条件跳转：两个量和两个整数。执行到这里时，若第一个量小于第二个量，则执行位置将被修改为第一个整数，否则将被修改为第二个整数。</p>
<p>小 Q 认为，整个游戏是希望一个叫做“成就值”的变量（编号为 $1$）最大。</p>
<p>现在给出 $10$ 个剧本，需要求出每个剧本获得最大成就值的每一步选择。</p>
<h2 id="solution">Solution</h2>
<p>这个题乍看上去除了 $2^x$ 的搜索没啥办法能做，去看看数据，选择跳转的次数是非常多的。</p>
<p>不知道模拟退火效果怎么样，我估计可以得到一定分数，但无法 AC。</p>
<p>就看看数据吧。</p>
<p>前两个点可以直接搜索过去。</p>
<p>第三个点挺整齐的，发现每 $170$ 行之间是独立的，在进入下一个之前会把所有变量的绝对值加到变量 $1$ 上并清空所有变量。</p>
<p>那么我们对每个块内搜索就好了，最后答案就是每个块内的最大值加起来。</p>
<p>第三个点的代码：</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#a90d91">namespace</span> <span style="color:#000">solve</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">40000</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">var</span>[<span style="color:#000">maxn</span>], <span style="color:#000">n</span>, <span style="color:#000">m</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">struct</span> <span style="color:#3f6e75">number</span>
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">char</span> <span style="color:#000">type</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">inline</span> <span style="color:#a90d91">int</span> <span style="color:#000">val</span>() { <span style="color:#a90d91">return</span> <span style="color:#000">type</span> <span style="color:#000">==</span> <span style="color:#2300ce">&#39;c&#39;</span> <span style="color:#000">?</span> <span style="color:#000">x</span> : <span style="color:#000">var</span>[<span style="color:#000">x</span>]; }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">in</span>() { <span style="color:#000">type</span> <span style="color:#000">=</span> <span style="color:#000">readchar</span>(), <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">read</span>(); }
</span></span><span style="display:flex;"><span>    };
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">struct</span> <span style="color:#3f6e75">opt</span>
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">char</span> <span style="color:#000">type</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">s1</span>, <span style="color:#000">s2</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">mul</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">number</span> <span style="color:#000">a</span>, <span style="color:#000">b</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">in</span>(<span style="color:#a90d91">int</span> <span style="color:#000">id</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">type</span> <span style="color:#000">=</span> <span style="color:#000">readchar</span>();
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">type</span> <span style="color:#000">==</span> <span style="color:#2300ce">&#39;s&#39;</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">s1</span> <span style="color:#000">=</span> <span style="color:#000">read</span>(), <span style="color:#000">s2</span> <span style="color:#000">=</span> <span style="color:#000">read</span>();
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">else</span> <span style="color:#a90d91">if</span> (<span style="color:#000">type</span> <span style="color:#000">==</span> <span style="color:#2300ce">&#39;i&#39;</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">a</span>.<span style="color:#000">in</span>(), <span style="color:#000">b</span>.<span style="color:#000">in</span>(), <span style="color:#000">s1</span> <span style="color:#000">=</span> <span style="color:#000">read</span>(), <span style="color:#000">s2</span> <span style="color:#000">=</span> <span style="color:#000">read</span>();
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>            {
</span></span><span style="display:flex;"><span>                <span style="color:#000">s1</span> <span style="color:#000">=</span> <span style="color:#000">id</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>                <span style="color:#000">a</span>.<span style="color:#000">type</span> <span style="color:#000">=</span> <span style="color:#2300ce">&#39;v&#39;</span>, <span style="color:#000">a</span>.<span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">read</span>(), <span style="color:#000">mul</span> <span style="color:#000">=</span> <span style="color:#000">readchar</span>() <span style="color:#000">==</span> <span style="color:#2300ce">&#39;+&#39;</span> <span style="color:#000">?</span> <span style="color:#1c01ce">1</span> <span style="color:#000">:</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>                <span style="color:#000">b</span>.<span style="color:#000">in</span>();
</span></span><span style="display:flex;"><span>            }
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    } <span style="color:#000">a</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">choice</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">ans_choice</span>[<span style="color:#000">maxn</span>], <span style="color:#000">ans</span>, <span style="color:#000">tot</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">void</span> <span style="color:#000">dfs</span>(<span style="color:#a90d91">int</span> <span style="color:#000">now</span>, <span style="color:#a90d91">int</span> <span style="color:#000">dep</span>, <span style="color:#a90d91">int</span> <span style="color:#000">i</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">now</span> <span style="color:#000">&gt;</span> (<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>) <span style="color:#000">*</span> <span style="color:#1c01ce">170</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">var</span>[<span style="color:#1c01ce">1</span>] <span style="color:#000">&gt;</span> <span style="color:#000">ans</span>)
</span></span><span style="display:flex;"><span>            {
</span></span><span style="display:flex;"><span>                <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#000">var</span>[<span style="color:#1c01ce">1</span>];
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">dep</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                    <span style="color:#000">ans_choice</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">choice</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>                <span style="color:#000">tot</span> <span style="color:#000">=</span> <span style="color:#000">dep</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>            }
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">return</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">a</span>[<span style="color:#000">now</span>].<span style="color:#000">type</span> <span style="color:#000">==</span> <span style="color:#2300ce">&#39;s&#39;</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">choice</span>[<span style="color:#000">dep</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">dfs</span>(<span style="color:#000">a</span>[<span style="color:#000">now</span>].<span style="color:#000">s1</span>, <span style="color:#000">dep</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">i</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#000">choice</span>[<span style="color:#000">dep</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">2</span>, <span style="color:#000">dfs</span>(<span style="color:#000">a</span>[<span style="color:#000">now</span>].<span style="color:#000">s2</span>, <span style="color:#000">dep</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">i</span>);
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span> <span style="color:#a90d91">if</span> (<span style="color:#000">a</span>[<span style="color:#000">now</span>].<span style="color:#000">type</span> <span style="color:#000">==</span> <span style="color:#2300ce">&#39;i&#39;</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">a</span>[<span style="color:#000">now</span>].<span style="color:#000">a</span>.<span style="color:#000">val</span>() <span style="color:#000">&lt;</span> <span style="color:#000">a</span>[<span style="color:#000">now</span>].<span style="color:#000">b</span>.<span style="color:#000">val</span>())
</span></span><span style="display:flex;"><span>                <span style="color:#000">dfs</span>(<span style="color:#000">a</span>[<span style="color:#000">now</span>].<span style="color:#000">s1</span>, <span style="color:#000">dep</span>, <span style="color:#000">i</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>                <span style="color:#000">dfs</span>(<span style="color:#000">a</span>[<span style="color:#000">now</span>].<span style="color:#000">s2</span>, <span style="color:#000">dep</span>, <span style="color:#000">i</span>);
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">int</span> <span style="color:#000">tmp</span> <span style="color:#000">=</span> <span style="color:#000">a</span>[<span style="color:#000">now</span>].<span style="color:#000">mul</span> <span style="color:#000">*</span> <span style="color:#000">a</span>[<span style="color:#000">now</span>].<span style="color:#000">b</span>.<span style="color:#000">val</span>();
</span></span><span style="display:flex;"><span>            <span style="color:#000">var</span>[<span style="color:#000">a</span>[<span style="color:#000">now</span>].<span style="color:#000">a</span>.<span style="color:#000">x</span>] <span style="color:#000">+=</span> <span style="color:#000">tmp</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">dfs</span>(<span style="color:#000">now</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">dep</span>, <span style="color:#000">i</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#000">var</span>[<span style="color:#000">a</span>[<span style="color:#000">now</span>].<span style="color:#000">a</span>.<span style="color:#000">x</span>] <span style="color:#000">-=</span> <span style="color:#000">tmp</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">void</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">n</span> <span style="color:#000">=</span> <span style="color:#000">read</span>(), <span style="color:#000">m</span> <span style="color:#000">=</span> <span style="color:#000">read</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">in</span>(<span style="color:#000">i</span>);
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">all</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#1c01ce">200</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">dfs</span>(<span style="color:#000">i</span> <span style="color:#000">*</span> <span style="color:#1c01ce">170</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#1c01ce">1</span>, <span style="color:#000">i</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">tot</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">ans_choice</span>[<span style="color:#000">i</span>] <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">all</span> <span style="color:#000">+=</span> <span style="color:#000">ans</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">memset</span>(<span style="color:#000">var</span>, <span style="color:#1c01ce">0</span>, <span style="color:#a90d91">sizeof</span>(<span style="color:#000">var</span>)), <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#000">cerr</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">all</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><p>第 456 个点可以发现都是很多下面这种形式组合起来：</p>
<pre tabindex="0"><code>
i v 2 c 10 3 4
i c 0 c 1 8 0
s 5 8
v 2 - c 10
v 1 + c 22750
i c 0 c 1 8 0
</code></pre><p>意思就是，变量 2 有个初值，然后如果变量 2 的值大于 $x$，可以让变量 2 的值减去 $x$，同时变量 1 的值加上一个数，也可以不选。</p>
<p>发现每次跳的地方都比这个地方大，也就是说这是个 DAG，我们倒着跑一个背包即可。</p>
<p>第 78910 个点发现也是由 456 点那样的大块组成的，然后大块内部是类似第三个点的结构，那就大块内搜索，然后背包就好了。</p>
<p>注意不能用行数分块，数据好像并不是完全均匀的，以及价值之类的要算清楚。</p>
<p>直接给出 7 8 9 10 的代码：</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">namespace</span> <span style="color:#000">solve</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">40000</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">var</span>[<span style="color:#000">maxn</span>], <span style="color:#000">n</span>, <span style="color:#000">m</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">struct</span> <span style="color:#3f6e75">number</span>
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">char</span> <span style="color:#000">type</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">inline</span> <span style="color:#a90d91">int</span> <span style="color:#000">val</span>() { <span style="color:#a90d91">return</span> <span style="color:#000">type</span> <span style="color:#000">==</span> <span style="color:#2300ce">&#39;c&#39;</span> <span style="color:#000">?</span> <span style="color:#000">x</span> : <span style="color:#000">var</span>[<span style="color:#000">x</span>]; }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">in</span>() { <span style="color:#000">type</span> <span style="color:#000">=</span> <span style="color:#000">readchar</span>(), <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">read</span>(); }
</span></span><span style="display:flex;"><span>    };
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">struct</span> <span style="color:#3f6e75">opt</span>
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">char</span> <span style="color:#000">type</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">s1</span>, <span style="color:#000">s2</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">mul</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">number</span> <span style="color:#000">a</span>, <span style="color:#000">b</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">in</span>(<span style="color:#a90d91">int</span> <span style="color:#000">id</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">type</span> <span style="color:#000">=</span> <span style="color:#000">readchar</span>();
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">type</span> <span style="color:#000">==</span> <span style="color:#2300ce">&#39;s&#39;</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">s1</span> <span style="color:#000">=</span> <span style="color:#000">read</span>(), <span style="color:#000">s2</span> <span style="color:#000">=</span> <span style="color:#000">read</span>();
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">else</span> <span style="color:#a90d91">if</span> (<span style="color:#000">type</span> <span style="color:#000">==</span> <span style="color:#2300ce">&#39;i&#39;</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">a</span>.<span style="color:#000">in</span>(), <span style="color:#000">b</span>.<span style="color:#000">in</span>(), <span style="color:#000">s1</span> <span style="color:#000">=</span> <span style="color:#000">read</span>(), <span style="color:#000">s2</span> <span style="color:#000">=</span> <span style="color:#000">read</span>();
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>            {
</span></span><span style="display:flex;"><span>                <span style="color:#000">s1</span> <span style="color:#000">=</span> <span style="color:#000">id</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>                <span style="color:#000">a</span>.<span style="color:#000">type</span> <span style="color:#000">=</span> <span style="color:#2300ce">&#39;v&#39;</span>, <span style="color:#000">a</span>.<span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">read</span>(), <span style="color:#000">mul</span> <span style="color:#000">=</span> <span style="color:#000">readchar</span>() <span style="color:#000">==</span> <span style="color:#2300ce">&#39;+&#39;</span> <span style="color:#000">?</span> <span style="color:#1c01ce">1</span> <span style="color:#000">:</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>                <span style="color:#000">b</span>.<span style="color:#000">in</span>();
</span></span><span style="display:flex;"><span>            }
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    } <span style="color:#000">a</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">id</span>[<span style="color:#000">maxn</span>], <span style="color:#000">cnt</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">val</span>[<span style="color:#000">maxn</span>], <span style="color:#000">w</span>[<span style="color:#000">maxn</span>], <span style="color:#000">nxt</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">is</span>[<span style="color:#1c01ce">3000</span>][<span style="color:#1c01ce">10010</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">f</span>[<span style="color:#1c01ce">3000</span>][<span style="color:#1c01ce">10010</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#000">vector</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">all</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">namespace</span> <span style="color:#000">dfs</span>
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">ans</span>, <span style="color:#000">ans_choice</span>[<span style="color:#000">maxn</span>], <span style="color:#000">tot</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">choice</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">void</span> <span style="color:#000">dfs</span>(<span style="color:#a90d91">int</span> <span style="color:#000">now</span>, <span style="color:#a90d91">int</span> <span style="color:#000">dep</span>, <span style="color:#a90d91">int</span> <span style="color:#000">ed</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">now</span> <span style="color:#000">&gt;</span> <span style="color:#000">ed</span>) 
</span></span><span style="display:flex;"><span>            {
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">if</span> (<span style="color:#000">var</span>[<span style="color:#1c01ce">1</span>] <span style="color:#000">&gt;</span> <span style="color:#000">ans</span>)
</span></span><span style="display:flex;"><span>                {
</span></span><span style="display:flex;"><span>                    <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#000">var</span>[<span style="color:#1c01ce">1</span>];
</span></span><span style="display:flex;"><span>                    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">dep</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                        <span style="color:#000">ans_choice</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">choice</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>                    <span style="color:#000">tot</span> <span style="color:#000">=</span> <span style="color:#000">dep</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>                }
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">return</span>;
</span></span><span style="display:flex;"><span>            }
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">a</span>[<span style="color:#000">now</span>].<span style="color:#000">type</span> <span style="color:#000">==</span> <span style="color:#2300ce">&#39;s&#39;</span>)
</span></span><span style="display:flex;"><span>            {
</span></span><span style="display:flex;"><span>                <span style="color:#000">choice</span>[<span style="color:#000">dep</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">dfs</span>(<span style="color:#000">a</span>[<span style="color:#000">now</span>].<span style="color:#000">s1</span>, <span style="color:#000">dep</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">ed</span>);
</span></span><span style="display:flex;"><span>                <span style="color:#000">choice</span>[<span style="color:#000">dep</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">2</span>, <span style="color:#000">dfs</span>(<span style="color:#000">a</span>[<span style="color:#000">now</span>].<span style="color:#000">s2</span>, <span style="color:#000">dep</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">ed</span>);
</span></span><span style="display:flex;"><span>            }
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">else</span> <span style="color:#a90d91">if</span> (<span style="color:#000">a</span>[<span style="color:#000">now</span>].<span style="color:#000">type</span> <span style="color:#000">==</span> <span style="color:#2300ce">&#39;i&#39;</span>)
</span></span><span style="display:flex;"><span>            {
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">if</span> (<span style="color:#000">a</span>[<span style="color:#000">now</span>].<span style="color:#000">a</span>.<span style="color:#000">val</span>() <span style="color:#000">&lt;</span> <span style="color:#000">a</span>[<span style="color:#000">now</span>].<span style="color:#000">b</span>.<span style="color:#000">val</span>())
</span></span><span style="display:flex;"><span>                    <span style="color:#000">dfs</span>(<span style="color:#000">a</span>[<span style="color:#000">now</span>].<span style="color:#000">s1</span>, <span style="color:#000">dep</span>, <span style="color:#000">ed</span>);
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>                    <span style="color:#000">dfs</span>(<span style="color:#000">a</span>[<span style="color:#000">now</span>].<span style="color:#000">s2</span>, <span style="color:#000">dep</span>, <span style="color:#000">ed</span>);
</span></span><span style="display:flex;"><span>            }
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>            {
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">int</span> <span style="color:#000">tmp</span> <span style="color:#000">=</span> <span style="color:#000">a</span>[<span style="color:#000">now</span>].<span style="color:#000">mul</span> <span style="color:#000">*</span> <span style="color:#000">a</span>[<span style="color:#000">now</span>].<span style="color:#000">b</span>.<span style="color:#000">val</span>();
</span></span><span style="display:flex;"><span>                <span style="color:#000">var</span>[<span style="color:#000">a</span>[<span style="color:#000">now</span>].<span style="color:#000">a</span>.<span style="color:#000">x</span>] <span style="color:#000">+=</span> <span style="color:#000">tmp</span>;
</span></span><span style="display:flex;"><span>                <span style="color:#000">dfs</span>(<span style="color:#000">now</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">dep</span>, <span style="color:#000">ed</span>);
</span></span><span style="display:flex;"><span>                <span style="color:#000">var</span>[<span style="color:#000">a</span>[<span style="color:#000">now</span>].<span style="color:#000">a</span>.<span style="color:#000">x</span>] <span style="color:#000">-=</span> <span style="color:#000">tmp</span>;
</span></span><span style="display:flex;"><span>            }
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">void</span> <span style="color:#000">work</span>(<span style="color:#a90d91">int</span> <span style="color:#000">bg</span>, <span style="color:#a90d91">int</span> <span style="color:#000">ed</span>, <span style="color:#a90d91">int</span> <span style="color:#000">i</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">memset</span>(<span style="color:#000">var</span>, <span style="color:#1c01ce">0</span>, <span style="color:#a90d91">sizeof</span>(<span style="color:#000">var</span>)), <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">memset</span>(<span style="color:#000">ans_choice</span>, <span style="color:#1c01ce">0</span>, <span style="color:#a90d91">sizeof</span>(<span style="color:#000">ans_choice</span>)), <span style="color:#000">tot</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">memset</span>(<span style="color:#000">choice</span>, <span style="color:#1c01ce">0</span>, <span style="color:#a90d91">sizeof</span>(<span style="color:#000">choice</span>));
</span></span><span style="display:flex;"><span>            <span style="color:#000">dfs</span>(<span style="color:#000">bg</span>, <span style="color:#1c01ce">1</span>, <span style="color:#000">ed</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#177500">// cerr &lt;&lt; bg &lt;&lt; &#34; &#34; &lt;&lt; ed &lt;&lt; &#34; &#34; &lt;&lt; i &lt;&lt; &#34; &#34; &lt;&lt; ans &lt;&lt; endl;
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;=</span> <span style="color:#000">tot</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">all</span>[<span style="color:#000">i</span>].<span style="color:#000">push_back</span>(<span style="color:#000">ans_choice</span>[<span style="color:#000">j</span>]);
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#000">vector</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">choice</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">void</span> <span style="color:#000">choose</span>(<span style="color:#a90d91">int</span> <span style="color:#000">id</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">p</span> : <span style="color:#000">all</span>[<span style="color:#000">id</span>])
</span></span><span style="display:flex;"><span>            <span style="color:#000">choice</span>.<span style="color:#000">push_back</span>(<span style="color:#000">p</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">void</span> <span style="color:#000">back</span>(<span style="color:#a90d91">int</span> <span style="color:#000">i</span>, <span style="color:#a90d91">int</span> <span style="color:#000">j</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#177500">// cerr &lt;&lt; i &lt;&lt; &#34; &#34; &lt;&lt; j &lt;&lt; endl;
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>        <span style="color:#a90d91">if</span> (<span style="color:#000">i</span> <span style="color:#000">&gt;</span> <span style="color:#000">cnt</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">return</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">is</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>])
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">choice</span>.<span style="color:#000">push_back</span>(<span style="color:#1c01ce">1</span>), <span style="color:#000">choose</span>(<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#000">back</span>(<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">j</span> <span style="color:#000">-</span> <span style="color:#000">w</span>[<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>]);
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">j</span> <span style="color:#000">&gt;=</span> <span style="color:#000">w</span>[<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>])
</span></span><span style="display:flex;"><span>                <span style="color:#000">choice</span>.<span style="color:#000">push_back</span>(<span style="color:#1c01ce">2</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#000">back</span>(<span style="color:#000">nxt</span>[<span style="color:#000">i</span>], <span style="color:#000">j</span>);
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">isbg</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">void</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">n</span> <span style="color:#000">=</span> <span style="color:#000">read</span>(), <span style="color:#000">m</span> <span style="color:#000">=</span> <span style="color:#000">read</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">in</span>(<span style="color:#000">i</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">W</span> <span style="color:#000">=</span> <span style="color:#000">a</span>[<span style="color:#1c01ce">1</span>].<span style="color:#000">b</span>.<span style="color:#000">val</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span> <span style="color:#000">-</span> <span style="color:#1c01ce">2</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">type</span> <span style="color:#000">==</span> <span style="color:#2300ce">&#39;s&#39;</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">a</span>[<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>].<span style="color:#000">type</span> <span style="color:#000">==</span> <span style="color:#2300ce">&#39;v&#39;</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">a</span>[<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">2</span>].<span style="color:#000">type</span> <span style="color:#000">==</span> <span style="color:#2300ce">&#39;s&#39;</span>)
</span></span><span style="display:flex;"><span>            {
</span></span><span style="display:flex;"><span>                <span style="color:#000">isbg</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>                <span style="color:#000">id</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">++</span><span style="color:#000">cnt</span>;
</span></span><span style="display:flex;"><span>            }
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#000">id</span>[<span style="color:#000">n</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">=</span> <span style="color:#000">cnt</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">w</span>[<span style="color:#000">cnt</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1e9</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">cerr</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">cnt</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span> <span style="color:#000">&gt;=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">!</span><span style="color:#000">id</span>[<span style="color:#000">i</span>])
</span></span><span style="display:flex;"><span>                <span style="color:#000">id</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">id</span>[<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>];
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">isbg</span>[<span style="color:#000">i</span>])
</span></span><span style="display:flex;"><span>            {
</span></span><span style="display:flex;"><span>                <span style="color:#000">dfs</span><span style="color:#000">::</span><span style="color:#000">work</span>(<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">2</span>, <span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">s2</span> <span style="color:#000">-</span> <span style="color:#1c01ce">2</span>, <span style="color:#000">id</span>[<span style="color:#000">i</span>] <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>                <span style="color:#000">val</span>[<span style="color:#000">id</span>[<span style="color:#000">i</span>] <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">=</span> <span style="color:#000">dfs</span><span style="color:#000">::</span><span style="color:#000">ans</span>;
</span></span><span style="display:flex;"><span>                <span style="color:#000">w</span>[<span style="color:#000">id</span>[<span style="color:#000">i</span>] <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">=</span> <span style="color:#000">a</span>[<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">2</span>].<span style="color:#000">b</span>.<span style="color:#000">val</span>();
</span></span><span style="display:flex;"><span>                <span style="color:#000">nxt</span>[<span style="color:#000">id</span>[<span style="color:#000">i</span>]] <span style="color:#000">=</span> <span style="color:#000">id</span>[<span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">s2</span>];
</span></span><span style="display:flex;"><span>            }
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">cnt</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">!</span><span style="color:#000">nxt</span>[<span style="color:#000">i</span>])
</span></span><span style="display:flex;"><span>                <span style="color:#000">nxt</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">cnt</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#177500">// for (int i = 1; i &lt;= cnt; i++)
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>            <span style="color:#177500">// cerr &lt;&lt; nxt[i] &lt;&lt; endl;
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#000">cnt</span>; <span style="color:#000">i</span> <span style="color:#000">&gt;=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">memcpy</span>(<span style="color:#000">f</span>[<span style="color:#000">i</span>], <span style="color:#000">f</span>[<span style="color:#000">nxt</span>[<span style="color:#000">i</span>]], <span style="color:#a90d91">sizeof</span>(<span style="color:#000">f</span>[<span style="color:#000">i</span>]));
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#000">W</span>; <span style="color:#000">j</span> <span style="color:#000">&gt;=</span> <span style="color:#000">w</span>[<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>]; <span style="color:#000">j</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>            {
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">if</span> (<span style="color:#000">f</span>[<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>][<span style="color:#000">j</span> <span style="color:#000">-</span> <span style="color:#000">w</span>[<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>]] <span style="color:#000">+</span> <span style="color:#000">val</span>[<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">&gt;</span> <span style="color:#000">f</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>])
</span></span><span style="display:flex;"><span>                {
</span></span><span style="display:flex;"><span>                    <span style="color:#000">f</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>] <span style="color:#000">=</span> <span style="color:#000">f</span>[<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>][<span style="color:#000">j</span> <span style="color:#000">-</span> <span style="color:#000">w</span>[<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>]] <span style="color:#000">+</span> <span style="color:#000">val</span>[<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>];
</span></span><span style="display:flex;"><span>                    <span style="color:#000">is</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>                }
</span></span><span style="display:flex;"><span>            }
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#177500">// for (int i = 1; i &lt;= cnt + 1; i++)
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>            <span style="color:#177500">// cerr &lt;&lt; w[i] &lt;&lt; &#34; &#34; &lt;&lt; val[i] &lt;&lt; endl;
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>        <span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#000">max_element</span>(<span style="color:#000">f</span>[<span style="color:#1c01ce">1</span>], <span style="color:#000">f</span>[<span style="color:#1c01ce">1</span>] <span style="color:#000">+</span> <span style="color:#000">W</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>) <span style="color:#000">-</span> <span style="color:#000">f</span>[<span style="color:#1c01ce">1</span>], <span style="color:#000">res</span> <span style="color:#000">=</span> <span style="color:#000">f</span>[<span style="color:#1c01ce">1</span>][<span style="color:#000">j</span>];
</span></span><span style="display:flex;"><span>        <span style="color:#000">cerr</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">j</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">res</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">back</span>(<span style="color:#1c01ce">1</span>, <span style="color:#000">j</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">p</span> : <span style="color:#000">choice</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">p</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div>]]></content:encoded>
    </item>
    
    <item>
      <title>loj 2084 「NOI2016」网格</title>
      <link>https://luoyisu.github.io/posts/loj2084/</link>
      <pubDate>Sun, 17 Apr 2022 11:25:29 +0000</pubDate>
      
      <guid>https://luoyisu.github.io/posts/loj2084/</guid>
      <description>&lt;p&gt;很多分类讨论的题，不对拍很容易被卡正确性。&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>很多分类讨论的题，不对拍很容易被卡正确性。</p>
<h2 id="description">Description</h2>
<p>给一个 $n\times m$ 的网格图，删去其中 $c$ 个点，问再删去至少几个点可以使图上存在两个点不连通。</p>
<p>无法达到目的输出 $-1$。</p>
<p>$n,m\leq10^9,c\leq10^5$。</p>
<h2 id="solution">Solution</h2>
<p>首先答案最大是 $2$，删除一个角落相邻的点就可以做到。</p>
<p>玩一玩，答案是 $-1$ 有两种情况：$n\times m-c&lt;2$，或 $n\times m-c=2$ 且剩下的两个点连通。</p>
<p>答案是 $0$ 就是已经存在不连通的两个点。</p>
<p>如果我们把 $n\times m$ 的图建出来，那么答案是 $1$ 就是存在割点。</p>
<p>剩下的答案就是 $2$ 了。</p>
<p>现在问题是图太大，我们需要把这个图缩成 $O(c)$ 个点。</p>
<p>很容易想到周围一大圈都没有被删掉的点的点是没用的，那我们的思路就是把被删掉的点周围的点拉出来建图。</p>
<p>只把周围 $3\times3$ 的点拉出来是不对的，考虑下面这个：</p>
<pre tabindex="0"><code>...
..*
...
</code></pre><p>$(2,2)$ 会成为割点，但实际上它并不是。</p>
<p>所以要拉出来 $5\times5$ 的点，并且只有在 $3\times 3$ 范围内的割点才有效。</p>
<p>然后判断原图是否连通可以用如下的办法：对建出来的图搜连通块，然后把相邻的被删掉的点看作一个整体，如果一组被删掉的点周围四连通的点不属于同一连通块，那么原图就不连通。</p>
<p>最后判断有没有割点用 tarjan 就好了。</p>
<p>复杂度在建图上，如果用哈希表实现，复杂度可以看作 $O(24c)$。</p>
<h2 id="code">Code</h2>
<p>常数巨大，别学。</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#a90d91">namespace</span> <span style="color:#000">solve</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1e6</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">typedef</span> <span style="color:#000">pair</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span>, <span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">pii</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">dx4</span>[] <span style="color:#000">=</span> {<span style="color:#1c01ce">0</span>, <span style="color:#1c01ce">0</span>, <span style="color:#1c01ce">1</span>, <span style="color:#000">-</span><span style="color:#1c01ce">1</span>};
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">dy4</span>[] <span style="color:#000">=</span> {<span style="color:#1c01ce">1</span>, <span style="color:#000">-</span><span style="color:#1c01ce">1</span>, <span style="color:#1c01ce">0</span>, <span style="color:#1c01ce">0</span>};
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#000">vector</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">e</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">n</span>, <span style="color:#000">m</span>, <span style="color:#000">c</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">bool</span> <span style="color:#000">is_in</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>) { <span style="color:#a90d91">return</span> <span style="color:#000">x</span> <span style="color:#000">&gt;=</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">x</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">y</span> <span style="color:#000">&gt;=</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">y</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#000">pii</span> <span style="color:#000">a</span>[<span style="color:#000">maxn</span>], <span style="color:#000">all</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">cnt</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">struct</span> <span style="color:#3f6e75">hash_map</span>
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">static</span> <span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">mod</span> <span style="color:#000">=</span> <span style="color:#000">maxn</span> <span style="color:#000">+</span> <span style="color:#000">-</span><span style="color:#1c01ce">3</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">hash</span>(<span style="color:#a90d91">const</span> <span style="color:#000">pii</span> <span style="color:#000">&amp;</span><span style="color:#000">x</span>) { <span style="color:#a90d91">return</span> (<span style="color:#1c01ce">1ll</span> <span style="color:#000">*</span> <span style="color:#000">x</span>.<span style="color:#000">first</span> <span style="color:#000">*</span> <span style="color:#000">m</span> <span style="color:#000">+</span> <span style="color:#000">x</span>.<span style="color:#000">second</span>) <span style="color:#000">%</span> <span style="color:#000">mod</span>; }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">struct</span> <span style="color:#3f6e75">node</span>
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">pii</span> <span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">int</span> <span style="color:#000">val</span>, <span style="color:#000">nxt</span>;
</span></span><span style="display:flex;"><span>        } <span style="color:#000">a</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">hd</span>[<span style="color:#000">mod</span>], <span style="color:#000">tot</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">&amp;</span><span style="color:#a90d91">operator</span>[](<span style="color:#a90d91">const</span> <span style="color:#000">pii</span> <span style="color:#000">&amp;</span><span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">int</span> <span style="color:#000">pos</span> <span style="color:#000">=</span> <span style="color:#000">hash</span>(<span style="color:#000">x</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">p</span> <span style="color:#000">=</span> <span style="color:#000">hd</span>[<span style="color:#000">pos</span>]; <span style="color:#000">p</span>; <span style="color:#000">p</span> <span style="color:#000">=</span> <span style="color:#000">a</span>[<span style="color:#000">p</span>].<span style="color:#000">nxt</span>)
</span></span><span style="display:flex;"><span>            {
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">if</span> (<span style="color:#000">x</span> <span style="color:#000">==</span> <span style="color:#000">a</span>[<span style="color:#000">p</span>].<span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>                {
</span></span><span style="display:flex;"><span>                    <span style="color:#a90d91">return</span> <span style="color:#000">a</span>[<span style="color:#000">p</span>].<span style="color:#000">val</span>;
</span></span><span style="display:flex;"><span>                }
</span></span><span style="display:flex;"><span>            }
</span></span><span style="display:flex;"><span>            <span style="color:#000">a</span>[<span style="color:#000">++</span><span style="color:#000">tot</span>] <span style="color:#000">=</span> {<span style="color:#000">x</span>, <span style="color:#1c01ce">0</span>, <span style="color:#000">hd</span>[<span style="color:#000">pos</span>]}, <span style="color:#000">hd</span>[<span style="color:#000">pos</span>] <span style="color:#000">=</span> <span style="color:#000">tot</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">return</span> <span style="color:#000">a</span>[<span style="color:#000">tot</span>].<span style="color:#000">val</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">count</span>(<span style="color:#a90d91">const</span> <span style="color:#000">pii</span> <span style="color:#000">&amp;</span><span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">int</span> <span style="color:#000">pos</span> <span style="color:#000">=</span> <span style="color:#000">hash</span>(<span style="color:#000">x</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">p</span> <span style="color:#000">=</span> <span style="color:#000">hd</span>[<span style="color:#000">pos</span>]; <span style="color:#000">p</span>; <span style="color:#000">p</span> <span style="color:#000">=</span> <span style="color:#000">a</span>[<span style="color:#000">p</span>].<span style="color:#000">nxt</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">if</span> (<span style="color:#000">x</span> <span style="color:#000">==</span> <span style="color:#000">a</span>[<span style="color:#000">p</span>].<span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>                    <span style="color:#a90d91">return</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">return</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">void</span> <span style="color:#000">clear</span>()
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">memset</span>(<span style="color:#000">hd</span>, <span style="color:#1c01ce">0</span>, <span style="color:#a90d91">sizeof</span>(<span style="color:#000">hd</span>)), <span style="color:#000">tot</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    } <span style="color:#000">mp</span>, <span style="color:#000">mp2</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">bool</span> <span style="color:#000">has</span>(<span style="color:#000">pii</span> <span style="color:#000">x</span>) { <span style="color:#a90d91">return</span> <span style="color:#000">mp2</span>.<span style="color:#000">count</span>(<span style="color:#000">x</span>); }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">bool</span> <span style="color:#000">has</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>) { <span style="color:#a90d91">return</span> <span style="color:#000">has</span>(<span style="color:#000">pii</span>(<span style="color:#000">x</span>, <span style="color:#000">y</span>)); } 
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">namespace</span> <span style="color:#000">no_solution</span>
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">bool</span> <span style="color:#000">work</span>()
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#1c01ce">1ll</span> <span style="color:#000">*</span> <span style="color:#000">n</span> <span style="color:#000">*</span> <span style="color:#000">m</span> <span style="color:#000">-</span> <span style="color:#000">c</span> <span style="color:#000">&lt;=</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">return</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#1c01ce">1ll</span> <span style="color:#000">*</span> <span style="color:#000">n</span> <span style="color:#000">*</span> <span style="color:#000">m</span> <span style="color:#000">-</span> <span style="color:#000">c</span> <span style="color:#000">&gt;</span> <span style="color:#1c01ce">2</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">return</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                    <span style="color:#a90d91">if</span> (<span style="color:#000">!</span><span style="color:#000">has</span>(<span style="color:#000">i</span>, <span style="color:#000">j</span>))
</span></span><span style="display:flex;"><span>                    {
</span></span><span style="display:flex;"><span>                        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">k</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">k</span> <span style="color:#000">&lt;</span> <span style="color:#1c01ce">4</span>; <span style="color:#000">k</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                        {
</span></span><span style="display:flex;"><span>                            <span style="color:#a90d91">int</span> <span style="color:#000">nx</span> <span style="color:#000">=</span> <span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#000">dx4</span>[<span style="color:#000">k</span>], <span style="color:#000">ny</span> <span style="color:#000">=</span> <span style="color:#000">j</span> <span style="color:#000">+</span> <span style="color:#000">dy4</span>[<span style="color:#000">k</span>];
</span></span><span style="display:flex;"><span>                            <span style="color:#a90d91">if</span> (<span style="color:#000">is_in</span>(<span style="color:#000">nx</span>, <span style="color:#000">ny</span>) <span style="color:#000">&amp;&amp;</span> <span style="color:#000">!</span><span style="color:#000">has</span>(<span style="color:#000">nx</span>, <span style="color:#000">ny</span>))
</span></span><span style="display:flex;"><span>                                <span style="color:#a90d91">return</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>                        }
</span></span><span style="display:flex;"><span>                        <span style="color:#a90d91">return</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>                    }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">return</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">namespace</span> <span style="color:#000">ans_eq_zero</span>
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">father</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">find</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>) { <span style="color:#a90d91">return</span> <span style="color:#000">x</span> <span style="color:#000">==</span> <span style="color:#000">father</span>[<span style="color:#000">x</span>] <span style="color:#000">?</span> <span style="color:#000">x</span> : <span style="color:#000">father</span>[<span style="color:#000">x</span>] <span style="color:#000">=</span> <span style="color:#000">find</span>(<span style="color:#000">father</span>[<span style="color:#000">x</span>]); }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">void</span> <span style="color:#000">uni</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>) { <span style="color:#000">father</span>[<span style="color:#000">find</span>(<span style="color:#000">x</span>)] <span style="color:#000">=</span> <span style="color:#000">find</span>(<span style="color:#000">y</span>); }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">color</span>[<span style="color:#000">maxn</span>], <span style="color:#000">tot</span>, <span style="color:#000">ucolor</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">void</span> <span style="color:#000">dfs</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">col</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">color</span>[<span style="color:#000">x</span>] <span style="color:#000">=</span> <span style="color:#000">col</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">v</span> : <span style="color:#000">e</span>[<span style="color:#000">x</span>])
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">if</span> (<span style="color:#000">!</span><span style="color:#000">color</span>[<span style="color:#000">v</span>])
</span></span><span style="display:flex;"><span>                    <span style="color:#000">dfs</span>(<span style="color:#000">v</span>, <span style="color:#000">col</span>);
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">bool</span> <span style="color:#000">work</span>()
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">cnt</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">father</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">i</span>, <span style="color:#000">color</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">ucolor</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">cnt</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">if</span> (<span style="color:#000">!</span><span style="color:#000">color</span>[<span style="color:#000">i</span>])
</span></span><span style="display:flex;"><span>                    <span style="color:#000">tot</span><span style="color:#000">++</span>, <span style="color:#000">dfs</span>(<span style="color:#000">i</span>, <span style="color:#000">tot</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#177500">// for (int i = 1; i &lt;= cnt; i++)
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>                <span style="color:#177500">// cout &lt;&lt; color[i] &lt;&lt; &#34; &#34;;
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>            <span style="color:#177500">// cout &lt;&lt; endl;
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">c</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            {
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;</span> <span style="color:#1c01ce">4</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                {
</span></span><span style="display:flex;"><span>                    <span style="color:#a90d91">int</span> <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">first</span> <span style="color:#000">+</span> <span style="color:#000">dx4</span>[<span style="color:#000">j</span>], <span style="color:#000">y</span> <span style="color:#000">=</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">second</span> <span style="color:#000">+</span> <span style="color:#000">dy4</span>[<span style="color:#000">j</span>];
</span></span><span style="display:flex;"><span>                    <span style="color:#a90d91">if</span> (<span style="color:#000">is_in</span>(<span style="color:#000">x</span>, <span style="color:#000">y</span>) <span style="color:#000">&amp;&amp;</span> <span style="color:#000">has</span>(<span style="color:#000">x</span>, <span style="color:#000">y</span>))
</span></span><span style="display:flex;"><span>                        <span style="color:#000">uni</span>(<span style="color:#000">i</span>, <span style="color:#000">mp2</span>[<span style="color:#000">pii</span>(<span style="color:#000">x</span>, <span style="color:#000">y</span>)]);
</span></span><span style="display:flex;"><span>                }
</span></span><span style="display:flex;"><span>            }
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">c</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            {
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;</span> <span style="color:#1c01ce">4</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                {
</span></span><span style="display:flex;"><span>                    <span style="color:#a90d91">int</span> <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">first</span> <span style="color:#000">+</span> <span style="color:#000">dx4</span>[<span style="color:#000">j</span>], <span style="color:#000">y</span> <span style="color:#000">=</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">second</span> <span style="color:#000">+</span> <span style="color:#000">dy4</span>[<span style="color:#000">j</span>];
</span></span><span style="display:flex;"><span>                    <span style="color:#a90d91">if</span> (<span style="color:#000">is_in</span>(<span style="color:#000">x</span>, <span style="color:#000">y</span>) <span style="color:#000">&amp;&amp;</span> <span style="color:#000">mp</span>.<span style="color:#000">count</span>(<span style="color:#000">pii</span>(<span style="color:#000">x</span>, <span style="color:#000">y</span>)))
</span></span><span style="display:flex;"><span>                    {
</span></span><span style="display:flex;"><span>                        <span style="color:#a90d91">int</span> <span style="color:#000">pos</span> <span style="color:#000">=</span> <span style="color:#000">mp</span>[<span style="color:#000">pii</span>(<span style="color:#000">x</span>, <span style="color:#000">y</span>)];
</span></span><span style="display:flex;"><span>                        <span style="color:#a90d91">if</span> (<span style="color:#000">!</span><span style="color:#000">ucolor</span>[<span style="color:#000">find</span>(<span style="color:#000">i</span>)])
</span></span><span style="display:flex;"><span>                            <span style="color:#000">ucolor</span>[<span style="color:#000">find</span>(<span style="color:#000">i</span>)] <span style="color:#000">=</span> <span style="color:#000">color</span>[<span style="color:#000">pos</span>];
</span></span><span style="display:flex;"><span>                        <span style="color:#a90d91">else</span> <span style="color:#a90d91">if</span> (<span style="color:#000">ucolor</span>[<span style="color:#000">find</span>(<span style="color:#000">i</span>)] <span style="color:#000">!=</span> <span style="color:#000">color</span>[<span style="color:#000">pos</span>])
</span></span><span style="display:flex;"><span>                        {
</span></span><span style="display:flex;"><span>                            <span style="color:#177500">// cout &lt;&lt; i &lt;&lt; &#34; &#34; &lt;&lt; x &lt;&lt; &#34; &#34; &lt;&lt; y &lt;&lt; endl;
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>                            <span style="color:#a90d91">return</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>                        }
</span></span><span style="display:flex;"><span>                    }
</span></span><span style="display:flex;"><span>                }
</span></span><span style="display:flex;"><span>            }
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">return</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">dfn</span>[<span style="color:#000">maxn</span>], <span style="color:#000">low</span>[<span style="color:#000">maxn</span>], <span style="color:#000">son</span>[<span style="color:#000">maxn</span>], <span style="color:#000">tot</span>, <span style="color:#000">cut</span>, <span style="color:#000">cntt</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">vector</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">ans</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">void</span> <span style="color:#000">tarjan</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">fa</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">dfn</span>[<span style="color:#000">x</span>] <span style="color:#000">=</span> <span style="color:#000">low</span>[<span style="color:#000">x</span>] <span style="color:#000">=</span> <span style="color:#000">++</span><span style="color:#000">cntt</span>, <span style="color:#000">son</span>[<span style="color:#000">x</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>, <span style="color:#000">tot</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">v</span> : <span style="color:#000">e</span>[<span style="color:#000">x</span>])
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">!</span><span style="color:#000">dfn</span>[<span style="color:#000">v</span>])
</span></span><span style="display:flex;"><span>            {
</span></span><span style="display:flex;"><span>                <span style="color:#000">son</span>[<span style="color:#000">x</span>]<span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>                <span style="color:#000">tarjan</span>(<span style="color:#000">v</span>, <span style="color:#000">x</span>);
</span></span><span style="display:flex;"><span>                <span style="color:#000">low</span>[<span style="color:#000">x</span>] <span style="color:#000">=</span> <span style="color:#000">min</span>(<span style="color:#000">low</span>[<span style="color:#000">x</span>], <span style="color:#000">low</span>[<span style="color:#000">v</span>]);
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">if</span> (<span style="color:#000">fa</span> <span style="color:#000">!=</span> <span style="color:#1c01ce">0</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">low</span>[<span style="color:#000">v</span>] <span style="color:#000">&gt;=</span> <span style="color:#000">dfn</span>[<span style="color:#000">x</span>])
</span></span><span style="display:flex;"><span>                    <span style="color:#000">cut</span><span style="color:#000">++</span>, <span style="color:#000">ans</span>.<span style="color:#000">push_back</span>(<span style="color:#000">x</span>);
</span></span><span style="display:flex;"><span>            }
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">else</span> <span style="color:#a90d91">if</span> (<span style="color:#000">v</span> <span style="color:#000">!=</span> <span style="color:#000">fa</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">low</span>[<span style="color:#000">x</span>] <span style="color:#000">=</span> <span style="color:#000">min</span>(<span style="color:#000">low</span>[<span style="color:#000">x</span>], <span style="color:#000">dfn</span>[<span style="color:#000">v</span>]);
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">fa</span> <span style="color:#000">==</span> <span style="color:#1c01ce">0</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">son</span>[<span style="color:#000">x</span>] <span style="color:#000">&gt;=</span> <span style="color:#1c01ce">2</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">cut</span><span style="color:#000">++</span>, <span style="color:#000">ans</span>.<span style="color:#000">push_back</span>(<span style="color:#000">x</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">ok</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">void</span> <span style="color:#000">clear</span>()
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">mp</span>.<span style="color:#000">clear</span>(), <span style="color:#000">mp2</span>.<span style="color:#000">clear</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">cnt</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">dfn</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">low</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">son</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>, <span style="color:#000">e</span>[<span style="color:#000">i</span>].<span style="color:#000">clear</span>(), <span style="color:#000">ok</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">cnt</span> <span style="color:#000">=</span> <span style="color:#000">cntt</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>, <span style="color:#000">tot</span> <span style="color:#000">=</span> <span style="color:#000">cut</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">ans</span>.<span style="color:#000">clear</span>();
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">bool</span> <span style="color:#000">check</span>()
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">p</span> : <span style="color:#000">ans</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">ok</span>[<span style="color:#000">p</span>])
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">return</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">void</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">clear</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#000">n</span> <span style="color:#000">=</span> <span style="color:#000">read</span>(), <span style="color:#000">m</span> <span style="color:#000">=</span> <span style="color:#000">read</span>(), <span style="color:#000">c</span> <span style="color:#000">=</span> <span style="color:#000">read</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">c</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">first</span> <span style="color:#000">=</span> <span style="color:#000">read</span>(), <span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">second</span> <span style="color:#000">=</span> <span style="color:#000">read</span>(), <span style="color:#000">mp2</span>[<span style="color:#000">a</span>[<span style="color:#000">i</span>]] <span style="color:#000">=</span> <span style="color:#000">i</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">no_solution</span><span style="color:#000">::</span><span style="color:#000">work</span>())
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">puts</span>(<span style="color:#c41a16">&#34;-1&#34;</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">return</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">c</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">dx</span> <span style="color:#000">=</span> <span style="color:#000">-</span><span style="color:#1c01ce">2</span>; <span style="color:#000">dx</span> <span style="color:#000">&lt;=</span> <span style="color:#1c01ce">2</span>; <span style="color:#000">dx</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">dy</span> <span style="color:#000">=</span> <span style="color:#000">-</span><span style="color:#1c01ce">2</span>; <span style="color:#000">dy</span> <span style="color:#000">&lt;=</span> <span style="color:#1c01ce">2</span>; <span style="color:#000">dy</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                {
</span></span><span style="display:flex;"><span>                    <span style="color:#a90d91">int</span> <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">first</span> <span style="color:#000">+</span> <span style="color:#000">dx</span>, <span style="color:#000">y</span> <span style="color:#000">=</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">second</span> <span style="color:#000">+</span> <span style="color:#000">dy</span>;
</span></span><span style="display:flex;"><span>                    <span style="color:#a90d91">if</span> (<span style="color:#000">!</span><span style="color:#000">is_in</span>(<span style="color:#000">x</span>, <span style="color:#000">y</span>) <span style="color:#000">||</span> <span style="color:#000">has</span>(<span style="color:#000">x</span>, <span style="color:#000">y</span>))
</span></span><span style="display:flex;"><span>                        <span style="color:#a90d91">continue</span>;
</span></span><span style="display:flex;"><span>                    <span style="color:#a90d91">if</span> (<span style="color:#000">mp</span>.<span style="color:#000">count</span>(<span style="color:#000">pii</span>(<span style="color:#000">x</span>, <span style="color:#000">y</span>)))
</span></span><span style="display:flex;"><span>                    {
</span></span><span style="display:flex;"><span>                        <span style="color:#000">ok</span>[<span style="color:#000">mp</span>[<span style="color:#000">pii</span>(<span style="color:#000">x</span>, <span style="color:#000">y</span>)]] <span style="color:#000">|=</span> <span style="color:#000">abs</span>(<span style="color:#000">dx</span>) <span style="color:#000">&lt;=</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">abs</span>(<span style="color:#000">dy</span>) <span style="color:#000">&lt;=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>                        <span style="color:#a90d91">continue</span>;
</span></span><span style="display:flex;"><span>                    }
</span></span><span style="display:flex;"><span>                    <span style="color:#000">mp</span>[<span style="color:#000">pii</span>(<span style="color:#000">x</span>, <span style="color:#000">y</span>)] <span style="color:#000">=</span> <span style="color:#000">++</span><span style="color:#000">cnt</span>, <span style="color:#000">all</span>[<span style="color:#000">cnt</span>] <span style="color:#000">=</span> <span style="color:#000">pii</span>(<span style="color:#000">x</span>, <span style="color:#000">y</span>);
</span></span><span style="display:flex;"><span>                    <span style="color:#000">ok</span>[<span style="color:#000">cnt</span>] <span style="color:#000">=</span> (<span style="color:#000">abs</span>(<span style="color:#000">dx</span>) <span style="color:#000">&lt;=</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">abs</span>(<span style="color:#000">dy</span>) <span style="color:#000">&lt;=</span> <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>                }
</span></span><span style="display:flex;"><span>        <span style="color:#177500">// for (int i = 1; i &lt;= cnt; i++)
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>        <span style="color:#177500">// {
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>            <span style="color:#177500">// cout &lt;&lt; i &lt;&lt; &#34; &#34; &lt;&lt; all[i].first &lt;&lt; &#34; &#34; &lt;&lt; all[i].second &lt;&lt; endl;
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>        <span style="color:#177500">// }
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>        <span style="color:#a90d91">if</span> (<span style="color:#000">c</span> <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">puts</span>((<span style="color:#000">n</span> <span style="color:#000">==</span> <span style="color:#1c01ce">1</span> <span style="color:#000">||</span> <span style="color:#000">m</span> <span style="color:#000">==</span> <span style="color:#1c01ce">1</span>) <span style="color:#000">?</span> <span style="color:#c41a16">&#34;1&#34;</span> <span style="color:#000">:</span> <span style="color:#c41a16">&#34;2&#34;</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">return</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">cnt</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;</span> <span style="color:#1c01ce">4</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            {
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">int</span> <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">all</span>[<span style="color:#000">i</span>].<span style="color:#000">first</span> <span style="color:#000">+</span> <span style="color:#000">dx4</span>[<span style="color:#000">j</span>], <span style="color:#000">y</span> <span style="color:#000">=</span> <span style="color:#000">all</span>[<span style="color:#000">i</span>].<span style="color:#000">second</span> <span style="color:#000">+</span> <span style="color:#000">dy4</span>[<span style="color:#000">j</span>];
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">if</span> (<span style="color:#000">is_in</span>(<span style="color:#000">x</span>, <span style="color:#000">y</span>) <span style="color:#000">&amp;&amp;</span> <span style="color:#000">mp</span>.<span style="color:#000">count</span>(<span style="color:#000">pii</span>(<span style="color:#000">x</span>, <span style="color:#000">y</span>)))
</span></span><span style="display:flex;"><span>                {
</span></span><span style="display:flex;"><span>                    <span style="color:#a90d91">int</span> <span style="color:#000">w</span> <span style="color:#000">=</span> <span style="color:#000">mp</span>[<span style="color:#000">pii</span>(<span style="color:#000">x</span>, <span style="color:#000">y</span>)];
</span></span><span style="display:flex;"><span>                    <span style="color:#000">e</span>[<span style="color:#000">i</span>].<span style="color:#000">push_back</span>(<span style="color:#000">w</span>);
</span></span><span style="display:flex;"><span>                    <span style="color:#000">e</span>[<span style="color:#000">w</span>].<span style="color:#000">push_back</span>(<span style="color:#000">i</span>);
</span></span><span style="display:flex;"><span>                }
</span></span><span style="display:flex;"><span>            }
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">ans_eq_zero</span><span style="color:#000">::</span><span style="color:#000">work</span>())
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">puts</span>(<span style="color:#c41a16">&#34;0&#34;</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">return</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">cnt</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">!</span><span style="color:#000">dfn</span>[<span style="color:#000">i</span>])
</span></span><span style="display:flex;"><span>                <span style="color:#000">tarjan</span>(<span style="color:#000">i</span>, <span style="color:#1c01ce">0</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> ((<span style="color:#000">cut</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">check</span>()) <span style="color:#000">||</span> <span style="color:#000">n</span> <span style="color:#000">==</span> <span style="color:#1c01ce">1</span> <span style="color:#000">||</span> <span style="color:#000">m</span> <span style="color:#000">==</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">puts</span>(<span style="color:#c41a16">&#34;1&#34;</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>            <span style="color:#000">puts</span>(<span style="color:#c41a16">&#34;2&#34;</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div>]]></content:encoded>
    </item>
    
    <item>
      <title>noi-online-2022</title>
      <link>https://luoyisu.github.io/posts/noi-online-2022/</link>
      <pubDate>Sun, 27 Mar 2022 11:02:32 +0000</pubDate>
      
      <guid>https://luoyisu.github.io/posts/noi-online-2022/</guid>
      <description>&lt;h2 id=&#34;概述&#34;&gt;概述&lt;/h2&gt;
&lt;p&gt;很炸裂。&lt;/p&gt;</description>
      <content:encoded><![CDATA[<h2 id="概述">概述</h2>
<p>很炸裂。</p>
<h2 id="赛时">赛时</h2>
<p>三个传统题好耶！</p>
<p>大概看了一眼三个题，还是决定按照顺序做。</p>
<p>T1 一开始想的有点歪，然后脑子转的有点慢，后来过了 20min 才意识到只需要求出来每个元素加进栈时候上一个元素的位置，询问的时候看区间里的会不会被删空就好了，迅速写了一发暴力验证了正确性。</p>
<p>按理来说已经该切掉了，但是我接下来进行了一波脑溢血操作——把题意转化为区间加区间小于等于 $0$ 个数。</p>
<p>一开始还认为线段树能做，然后发现不对，然后开始走远——莫队？分块？？？？？</p>
<p>然后还流了鼻血，浪费一点时间处理之后决定冷静思考。</p>
<p>然后思考了一两分钟忽然意识到这不是问区间小于等于某数个数吗？我在想啥？？</p>
<p>赶快写了一发离线树状数组，然后一发过了所有样例。。。</p>
<p>这时候已经过去 1.5h 了，心态十分爆炸，感觉大家都已经过了两个题。。。</p>
<p>也不想写对拍了，直接去看 T2。</p>
<p>可能也冷静不下来，想到了哈希、SA等奇妙的东西，发现都不太对，只好先放着，去看 T3,。</p>
<p>T3 也不太会，然后感觉我太菜了。。</p>
<p>想了一下，T2 可以用 bitset 得到 $30\sim40$ 分，于是去写了。</p>
<p>然后又写了 T3 的 $10$ 分。。</p>
<p>T3 还有 $10$ 分我通过一些卡常操作也草过去了。</p>
<p>然后开始摆烂，主要是在想 T2，感觉应该不是很难啊。。。</p>
<p>后来又去看 T3，可能是也平静下来了吧，我发现 $m=2$ 实际上非常简单，于是把卡常代码换成正常代码。</p>
<p>然后意识到 $m=3$ 可以直接枚举哪个作为答案，然后二维偏序一波，但是来不及写完了。。。</p>
<p>然后意识到 $m=4$ 可以转化为三维偏序，但是更来不及写完了。</p>
<p>行啊。。</p>
<h2 id="赛后">赛后</h2>
<p>看到有人说 T2 排序。。我忽然想起来排序之后比较相邻集合复杂度不是错的，那我在想啥呢？？？？？</p>
<p>行啊。</p>
<p>罢了罢了。</p>
<h2 id="总结">总结</h2>
<p>比赛时还是缺乏冷静啊，如果实力不能碾压题目心态就会受挫。</p>
<p>实力和心态都很重要啊qwq</p>
<p>也许应该学会逆风翻盘。</p>]]></content:encoded>
    </item>
    
    <item>
      <title>220326 和大连理工大学线上 PK 记</title>
      <link>https://luoyisu.github.io/posts/220326-contest-with-dut/</link>
      <pubDate>Sat, 26 Mar 2022 19:25:58 +0000</pubDate>
      
      <guid>https://luoyisu.github.io/posts/220326-contest-with-dut/</guid>
      <description>&lt;h2 id=&#34;概述&#34;&gt;概述&lt;/h2&gt;
&lt;p&gt;虽说是和大工 PK，但感觉他们好像做了一会题就走了，主要是我们校内在做这些题。&lt;/p&gt;
&lt;p&gt;实际上水这么一篇博客的目的就是摆烂。。。&lt;/p&gt;</description>
      <content:encoded><![CDATA[<h2 id="概述">概述</h2>
<p>虽说是和大工 PK，但感觉他们好像做了一会题就走了，主要是我们校内在做这些题。</p>
<p>实际上水这么一篇博客的目的就是摆烂。。。</p>
<h2 id="赛前">赛前</h2>
<p>和上次分队一样。</p>
<h2 id="赛时">赛时</h2>
<p>10min 杜过了 D。</p>
<p>17min 我过了 C。（简单排序 + dp）</p>
<p>27min KH 开始交 K，但莫名 TLE。</p>
<p>40min 杜过了 G。</p>
<p>紧接着我开始交 K。（究极水题）然后 TLE。</p>
<p>杜也来帮我看了看怎么回事，然后 KH 发现是读入太慢导致他 TLE 了，我好像也是同样的原因。</p>
<p>我们都过了。</p>
<p>看了眼 J，数学题，KH 说求导就好了qwq，他去写了。</p>
<p>我去看了个 H，发现裸中国剩余定理，复制了个板子，1h 的时候给过了。</p>
<p>紧接着 J 过了。</p>
<p>KH 去看了看 I，说他会了然后开始写，但是这个题好像很难的样子qwq。</p>
<p>杜大佬打了 F 的表，然后发现不怎么好写，扔给我了，他去做我之前看的 E 了。</p>
<p>然后 2h 的时候他的 E WA了。。</p>
<p>我的 F 也在差不多的时间 WA 了，看了很久发现忘记取模了，加上就过了。</p>
<p>然后杜还在调 E，我帮他写了个暴力用于对拍。</p>
<p>KH 在 2.5h 的时候开始交 I 了，然后一直 WA。。</p>
<p>我这时候去做了 A，发现建个树出来就可以了，开始写写写。</p>
<p>3h 的时候把 A 过了。</p>
<p>KH 那边因为我们都不怎么会 I 没法帮他。。。</p>
<p>我想到了一个 E 的 dp 做法，然后写了一阵子 3.5h 的时候给过了。</p>
<p>然后就开始摆，KH 最后发现他 I 有地方没取模，终于在 4h 的时候给过了。</p>
<p>我们就剩 B 了，然后齐心合力明白了怎么做，就是先特判，然后小数据暴力打表。</p>
<p>但是因为暴力的复杂度有点高以及时间不够没能过掉，最后 11 题。</p>
<h2 id="赛后">赛后</h2>
<p>B 也过了。</p>
<h2 id="总结">总结</h2>
<p>计数计数计数。</p>]]></content:encoded>
    </item>
    
    <item>
      <title>220324线上模拟赛</title>
      <link>https://luoyisu.github.io/posts/220324-contest/</link>
      <pubDate>Thu, 24 Mar 2022 14:41:17 +0000</pubDate>
      
      <guid>https://luoyisu.github.io/posts/220324-contest/</guid>
      <description>&lt;h2 id=&#34;概述&#34;&gt;概述&lt;/h2&gt;
&lt;p&gt;预计 $100+100+4=204$，实际 $100+100+0=200$，和想的差不多。&lt;/p&gt;</description>
      <content:encoded><![CDATA[<h2 id="概述">概述</h2>
<p>预计 $100+100+4=204$，实际 $100+100+0=200$，和想的差不多。</p>
<h2 id="赛时">赛时</h2>
<p>拿到 pdf，看到 T1，构造，再看两眼，画个图，哦我会了。只要构造一个长度为 $2$ 的菊花，然后剩下的再连一个链出去就好了。</p>
<p>于是直接开始写，写了五分钟吧。。然后又花 30min 写+调 checker，哈哈。。。。。</p>
<p>反正把所有数据都测了一遍，没问题。。</p>
<p>于是看 T2，字符串题。。等会再说。</p>
<p>看 T3，计数，DP，看到本质不同子序列忽然想到一个叫子序列自动机的玩意。。。不可做！（大雾）</p>
<p>于是看 T2，退火没前途，二分没前途，高斯消元好像挺对的，但也没啥前途（没细想）。</p>
<p>毕竟是后缀的 lcp，能用到的东西也不怎么多。开始枚举知识点！</p>
<p>于是用一些后缀数据结构往上套，主要套后缀数组和后缀树。。</p>
<p>然后玩了好几个数据（aab，aabaa，aaba，abaa 等）。</p>
<p>aab 比较有启发啊，然后在后缀树上模拟了一波好像明白了。</p>
<p>就是设 $f_i$ 表示已经把这个子树上分好了的答案，我们对于每个点只考虑它与它父亲多出来的长度的贡献。</p>
<p>对于直接就是原串后缀的点，贡献就是多出来的长度；如果不是原串后缀，那么就是多出来长度加上把儿子分一下。</p>
<p>这个分儿子的过程，具体来说，设儿子的 $f$ 值为 $f_1,f_2,f_3\dots f_m$，然后你需要构造 $k_1,k_2,k_3\dots k_m$，使 $\sum k=1$ 且 $\max(f_ik_i)$ 最小。</p>
<p>然后想一想，所有 $f_ik_i$ 都相等肯定是最优的（否则可以调整成相等使更优），然后再随便推一推，$\max(f_ik_i)=\dfrac{1}{\sum_{j=1}^m\dfrac{1}{f_j}}$。</p>
<p>（我也讲不清楚了，可以看代码）</p>
<p>（其实好像不是多出来长度贡献，而是一个类似区间 DP 的思想？或者说选父亲就不选儿子？）</p>
<p>（实际上上述过程花了很长很长很长时间，主要是对于只考虑多出来长度这部分想了很久才勉强想清楚）</p>
<p>于是写完了，又发现被卡空间了，卡了一阵子，卡完之后也不剩什么时间了，急忙开 T3。。</p>
<p>我会 $O(nq)$ 暴力DP！</p>
<p>写写写，怎么过不去样例啊。。。。。</p>
<p>好吧好像是错的，哦好像可以改成 $O(nmq)$，也是有分的，写写写。。。</p>
<p>好家伙没时间了，结果没调出来。。。那就这样吧。。</p>
<h2 id="赛后">赛后</h2>
<p>T2 数据错了，题面 $n=10^6$，结果数据 $n=10^4$？？？</p>
<p>因为数组开小 T3 白送的 $4$ 分好像也没拿到，悲剧。。。</p>
<p>怎么说呢，T2 冥思苦想也不会的时候，也许应该先开 T3 打一打暴力。。。</p>
<p>枚举知识点实在是过于耗费时间了。。。</p>
<p>然后看了别人的代码和题解意识到我 T3 当时想的那个 $O(nq)$ 确实错了，但是 $O(nmq)$ 的做法是对的&hellip;总之 DP 这个东西还是要仔细想一下，硬莽好像不是很对。</p>
<h2 id="总结">总结</h2>
<p>反正今天这个 T2 和 T3 真不好说。。</p>
<p>T3 其实也不是特别难，如果花时间想还是能得一些分数的，正解可能想不太到，但暴力有希望能多拿几十分。</p>
<p>主要是 $m\leq200$，就让人遐想&hellip;</p>
<p>但是这个 T2 实在是有点让人上头，主要是要用后缀数据结构有点明显了，然后就一直想往上套。。</p>
<p>std 的分治做法也得学一学，我现在 SA 水平真的是很差。。。</p>]]></content:encoded>
    </item>
    
    <item>
      <title>220319 和大连理工大学线上 PK 记</title>
      <link>https://luoyisu.github.io/posts/220319-contest-with-dut/</link>
      <pubDate>Sun, 20 Mar 2022 12:41:11 +0000</pubDate>
      
      <guid>https://luoyisu.github.io/posts/220319-contest-with-dut/</guid>
      <description>&lt;p&gt;虽说是和大工 PK，但感觉他们好像做了一会题就走了，主要是我们校内在比（&lt;/p&gt;
&lt;p&gt;实际上水这么一篇博客的目的就是摆烂。。。&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>虽说是和大工 PK，但感觉他们好像做了一会题就走了，主要是我们校内在比（</p>
<p>实际上水这么一篇博客的目的就是摆烂。。。</p>
<h2 id="概述">概述</h2>
<p>我，KH，杜大佬一队，被 KH 带飞了！！！！！</p>
<h2 id="赛前">赛前</h2>
<p>队名叫 <a href="https://codeforces.com/team/98219">Civilized Code Style</a>，因为我们的码风都非常文明！！</p>
<h2 id="赛时">赛时</h2>
<p>看 A，好长啊不想看。。</p>
<p>看 B，卧槽怎么已经有人过了？想了下，又咨询了一下 KH，就懂了，是个 0/1 分数规划，于是开始写。</p>
<p>写着写着 KH 就把 G 过了，杜大佬在写 K，但似乎假了。</p>
<p>我刚写完 B，结果惨遭卡常（其实也不算常数问题，二分次数太多了）。</p>
<p>然后 KH 又把 L 过了，神！</p>
<p>他们一阵讨论，对拍都上了也不知道哪里有问题。</p>
<p>然后我终于过了 B，去看 M，感觉是个换根 DP。。</p>
<p>他们好像发现 K 题意理解有误，明白怎么做之后 KH 去写了，挂了几发之后过了。</p>
<p>杜大佬好像又在和 KH 商量 J，会了之后杜大佬把 J 过了，KH 去做了 D，是个我不会的奇妙概率 DP，然后一发过了。</p>
<p>期间我们商量了一下 C 题，好像并没有人想做，也不是特别会。。</p>
<p>然后杜大佬好像是去做 E 了。。</p>
<p>我期间一直在想 M，因为不是很会换根，想找一些别的方法。</p>
<p>结果别的方法还真有，就硬分类讨论，我开始艰难地敲代码。。。</p>
<p>然后一个小时内都没人交题。。。</p>
<p>KH 打破僵局，他一发过了 F！</p>
<p>过了十几分钟我一发过了 M！</p>
<p>接着 KH 去和杜大佬商量了一下 E，然后接力去做了，杜大佬会了 C，去写了，然后我去做了 I。</p>
<p>I 是一个奇妙的构造题，我玩了半天好像是给玩出来了，于是去写，倒不难写，罚了一发之后加个特判就过了。。</p>
<p>杜大佬好像还在调 C，KH 的 E 还在罚时。。我去帮 KH 看了看 E 题，找了个 bug 然后过了，好耶！！</p>
<p>这时候也就剩不到一个小时了。</p>
<p>C 我们都不大会没法帮杜大佬调，于是 KH 去看了 A，会了，但是不好写，他开始写了。。</p>
<p>我不想看 H，就去看了 N，是个下棋题，我后来意识到这个题硬下就可以，但是没时间下完了qwq。</p>
<p>杜大佬最后也没调出来 C，我们最终 $10/14$ 题，然后在 $10$ 题队伍中垫底，我的罚时功不可没啊！！</p>
<p>我们学校的另一个队是 $9$ 题的第一名，就很神仙。</p>
<h2 id="总结">总结</h2>
<p>也不能完全不总结吧。。</p>
<p>其实不会的还是一些小清新的 DP 题。。</p>]]></content:encoded>
    </item>
    
    <item>
      <title>统一省选2021 A卷 题解</title>
      <link>https://luoyisu.github.io/posts/shengxuan-2021/</link>
      <pubDate>Sat, 19 Mar 2022 19:00:20 +0000</pubDate>
      
      <guid>https://luoyisu.github.io/posts/shengxuan-2021/</guid>
      <description>&lt;p&gt;目前只有 Day1 的题目。&lt;/p&gt;
&lt;p&gt;感觉 Day1 的三道题很 CF。&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>目前只有 Day1 的题目。</p>
<p>感觉 Day1 的三道题很 CF。</p>
<h2 id="卡牌游戏httpsuojacproblem624"><a href="https://uoj.ac/problem/624">卡牌游戏</a></h2>
<h3 id="description">Description</h3>
<p>有 $n$ 张卡牌，第 $i$ 张卡牌的正面有数字 $a_i$，背面有数字 $b_i$，初始时所有卡牌正面朝上。</p>
<p>现在 Alice 可以将不超过 $m$ 张卡牌翻面，即由正面朝上改为背面朝上。Alice 的目标是让最终朝上的 $n$ 个数字的极差（最大值与最小值的差）尽量小。请你帮 Alice 算一算极差的最小值是多少。</p>
<p>$n,m\leq10^6,a_i,b_i\leq10^9$。</p>
<h3 id="solution">Solution</h3>
<p>首先我们要确定：常数小的 $O(n\log a_i)$ 是可以过的。</p>
<p>然后二分一个答案，考虑怎么 check，我们显然需要保留一段连续的区间不翻面（换句话说，一定只翻前后缀）。</p>
<p>考虑已经有左端点了，我们双指针确定右端点，这是 $O(n)$ 的，接下来不在这段区间内的卡牌显然全部需要翻面，那就变成了一个 RMQ 问题，用 ST 表解决就好了。</p>
<p>时间复杂度 $O(n\log n+n\log a_i)$。</p>
<h3 id="code">Code</h3>
<p>注意细节，然后建议去 uoj 看看 hack 数据的威力。</p>
<p>被卡常可以考虑把 ST 表小的一维放前面。</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cctype&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#a90d91">namespace</span> <span style="color:#000">std</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">read</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">char</span> <span style="color:#000">ch</span> <span style="color:#000">=</span> <span style="color:#000">getchar</span>();
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (; <span style="color:#000">!</span><span style="color:#000">isdigit</span>(<span style="color:#000">ch</span>); <span style="color:#000">ch</span> <span style="color:#000">=</span> <span style="color:#000">getchar</span>())
</span></span><span style="display:flex;"><span>        ;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (; <span style="color:#000">isdigit</span>(<span style="color:#000">ch</span>); <span style="color:#000">ch</span> <span style="color:#000">=</span> <span style="color:#000">getchar</span>())
</span></span><span style="display:flex;"><span>        <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">x</span> <span style="color:#000">*</span> <span style="color:#1c01ce">10</span> <span style="color:#000">+</span> <span style="color:#000">ch</span> <span style="color:#000">-</span> <span style="color:#2300ce">&#39;0&#39;</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2e6</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">inf</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2e9</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">mx</span>[<span style="color:#1c01ce">22</span>][<span style="color:#000">maxn</span>], <span style="color:#000">mi</span>[<span style="color:#1c01ce">22</span>][<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">n</span>, <span style="color:#000">a</span>[<span style="color:#000">maxn</span>], <span style="color:#000">b</span>[<span style="color:#000">maxn</span>], <span style="color:#000">m</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">lg</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">build</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">memset</span>(<span style="color:#000">mi</span>, <span style="color:#1c01ce">0x7f</span>, <span style="color:#a90d91">sizeof</span>(<span style="color:#000">mi</span>));
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">mx</span>[<span style="color:#1c01ce">0</span>][<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">mi</span>[<span style="color:#1c01ce">0</span>][<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">b</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#000">lg</span>[<span style="color:#1c01ce">0</span>] <span style="color:#000">=</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">lg</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">lg</span>[<span style="color:#000">i</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;=</span> <span style="color:#1c01ce">21</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">+</span> (<span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">j</span>) <span style="color:#000">-</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">mx</span>[<span style="color:#000">j</span>][<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">max</span>(<span style="color:#000">mx</span>[<span style="color:#000">j</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>][<span style="color:#000">i</span>], <span style="color:#000">mx</span>[<span style="color:#000">j</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>][<span style="color:#000">i</span> <span style="color:#000">+</span> (<span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> (<span style="color:#000">j</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>))]);
</span></span><span style="display:flex;"><span>            <span style="color:#000">mi</span>[<span style="color:#000">j</span>][<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">min</span>(<span style="color:#000">mi</span>[<span style="color:#000">j</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>][<span style="color:#000">i</span>], <span style="color:#000">mi</span>[<span style="color:#000">j</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>][<span style="color:#000">i</span> <span style="color:#000">+</span> (<span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> (<span style="color:#000">j</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>))]);
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#177500">//for (int i = 0; i &lt; 4; i++, cout &lt;&lt; endl)
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>    <span style="color:#177500">//    for (int j = 1; j &lt;= n; j++)
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>    <span style="color:#177500">//        cout &lt;&lt; mi[j][i] &lt;&lt; &#34; &#34;;
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">query_mx</span>(<span style="color:#a90d91">int</span> <span style="color:#000">l</span>, <span style="color:#a90d91">int</span> <span style="color:#000">r</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">l</span> <span style="color:#000">&gt;</span> <span style="color:#000">r</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#000">-</span><span style="color:#000">inf</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">d</span> <span style="color:#000">=</span> <span style="color:#000">r</span> <span style="color:#000">-</span> <span style="color:#000">l</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">g</span> <span style="color:#000">=</span> <span style="color:#000">lg</span>[<span style="color:#000">d</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#000">max</span>(<span style="color:#000">mx</span>[<span style="color:#000">g</span>][<span style="color:#000">l</span>], <span style="color:#000">mx</span>[<span style="color:#000">g</span>][<span style="color:#000">r</span> <span style="color:#000">-</span> (<span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">g</span>) <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>]);
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">query_mi</span>(<span style="color:#a90d91">int</span> <span style="color:#000">l</span>, <span style="color:#a90d91">int</span> <span style="color:#000">r</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">l</span> <span style="color:#000">&gt;</span> <span style="color:#000">r</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#000">inf</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">d</span> <span style="color:#000">=</span> <span style="color:#000">r</span> <span style="color:#000">-</span> <span style="color:#000">l</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">g</span> <span style="color:#000">=</span> <span style="color:#000">lg</span>[<span style="color:#000">d</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#000">min</span>(<span style="color:#000">mi</span>[<span style="color:#000">g</span>][<span style="color:#000">l</span>], <span style="color:#000">mi</span>[<span style="color:#000">g</span>][<span style="color:#000">r</span> <span style="color:#000">-</span> (<span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">g</span>) <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>]);
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">bool</span> <span style="color:#000">check</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">l</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">r</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> (<span style="color:#000">l</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">while</span> (<span style="color:#000">r</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">a</span>[<span style="color:#000">r</span>] <span style="color:#000">-</span> <span style="color:#000">a</span>[<span style="color:#000">l</span>] <span style="color:#000">&lt;=</span> <span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#177500">// cout &lt;&lt; l &lt;&lt; &#34; &#34; &lt;&lt; r &lt;&lt; &#34; &#34; &lt;&lt; x &lt;&lt; endl;
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>            <span style="color:#a90d91">if</span> (<span style="color:#000">l</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span> <span style="color:#000">+</span> <span style="color:#000">n</span> <span style="color:#000">-</span> <span style="color:#000">r</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">if</span> (<span style="color:#000">max</span>({<span style="color:#000">a</span>[<span style="color:#000">r</span>], <span style="color:#000">query_mx</span>(<span style="color:#1c01ce">1</span>, <span style="color:#000">l</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>), <span style="color:#000">query_mx</span>(<span style="color:#000">r</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">n</span>)}) <span style="color:#000">-</span> <span style="color:#000">min</span>({<span style="color:#000">a</span>[<span style="color:#000">l</span>], <span style="color:#000">query_mi</span>(<span style="color:#1c01ce">1</span>, <span style="color:#000">l</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>), <span style="color:#000">query_mi</span>(<span style="color:#000">r</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">n</span>)}) <span style="color:#000">&lt;=</span> <span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>                    <span style="color:#a90d91">return</span> <span style="color:#a90d91">true</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">r</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">r</span> <span style="color:#000">&gt;</span> <span style="color:#000">l</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">r</span><span style="color:#000">--</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">l</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#a90d91">false</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">n</span> <span style="color:#000">=</span> <span style="color:#000">read</span>(), <span style="color:#000">m</span> <span style="color:#000">=</span> <span style="color:#000">read</span>();
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">a</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">read</span>();
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">b</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">read</span>();
</span></span><span style="display:flex;"><span>    <span style="color:#000">build</span>();
</span></span><span style="display:flex;"><span>    <span style="color:#177500">//cout &lt;&lt; query_mi(1, n) &lt;&lt; endl &lt;&lt; query_mx(1, n) &lt;&lt; endl;
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>    <span style="color:#a90d91">int</span> <span style="color:#000">l</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>, <span style="color:#000">r</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1e9</span>, <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> (<span style="color:#000">l</span> <span style="color:#000">&lt;=</span> <span style="color:#000">r</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">mid</span> <span style="color:#000">=</span> (<span style="color:#000">l</span> <span style="color:#000">+</span> <span style="color:#000">r</span>) <span style="color:#000">/</span> <span style="color:#1c01ce">2</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">check</span>(<span style="color:#000">mid</span>))
</span></span><span style="display:flex;"><span>            <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#000">mid</span>, <span style="color:#000">r</span> <span style="color:#000">=</span> <span style="color:#000">mid</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>            <span style="color:#000">l</span> <span style="color:#000">=</span> <span style="color:#000">mid</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">ans</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="矩阵游戏httpsuojacproblem625"><a href="https://uoj.ac/problem/625">矩阵游戏</a></h2>
<h3 id="description-1">Description</h3>
<p>有一个 $(n-1)\times(m-1)$ 的矩阵 $b_{i,j}$，其是由 $n\times m$ 的矩阵 $a_{i,j}$ 生成得来的，生成方法为 $b_{i,j}=a_{i,j}+a_{i+1,j}+a_{i,j+1}+a_{i+1,j+1}$。</p>
<p>现在给出矩阵 $b$，你需要构造出矩阵 $a$，且满足 $0\leq a_{i,j}\leq10^6$，或判断无解。</p>
<p>$T$ 组数据。</p>
<p>$T\leq10,2\leq n,m\leq300,0\leq b_{i,j}\leq4\times10^6$。</p>
<h3 id="solution-1">Solution</h3>
<p>这个构造题就很妙，首先考虑没有值域限制，那可以随便搞出来一组解。</p>
<p>然后试图调整这组解，我们发现对每一行/列分别加上 $a,-a,a,-a&hellip;$ 仍然能满足题目的限制，然后控制一下行和列的符号，让他们恰好相反，得到以下不等式：$0\leq a_{i,j}\pm x_i\mp y_j\leq10^6$，这样就可以差分约束了！</p>
<p>具体点：</p>
<pre tabindex="0"><code>列：
-+-+-+
+-+-+-
-+-+-+
+-+-+-
-+-+-+
+-+-+-

行：
+-+-+-
-+-+-+
+-+-+-
-+-+-+
+-+-+-
-+-+-+
</code></pre><p>时间复杂度 $O(nm(n+m))$。</p>
<h3 id="code-1">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#a90d91">typedef</span> <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">ll</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">typedef</span> <span style="color:#a90d91">unsigned</span> <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">ull</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">int</span> <span style="color:#000">read</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">char</span> <span style="color:#000">ch</span> <span style="color:#000">=</span> <span style="color:#000">getchar</span>();
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (; <span style="color:#000">!</span><span style="color:#000">isdigit</span>(<span style="color:#000">ch</span>); <span style="color:#000">ch</span> <span style="color:#000">=</span> <span style="color:#000">getchar</span>())
</span></span><span style="display:flex;"><span>        ;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (; <span style="color:#000">isdigit</span>(<span style="color:#000">ch</span>); <span style="color:#000">ch</span> <span style="color:#000">=</span> <span style="color:#000">getchar</span>())
</span></span><span style="display:flex;"><span>        <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">x</span> <span style="color:#000">*</span> <span style="color:#1c01ce">10</span> <span style="color:#000">+</span> <span style="color:#000">ch</span> <span style="color:#000">-</span> <span style="color:#2300ce">&#39;0&#39;</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">bool</span> <span style="color:#000">MEM1</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">namespace</span> <span style="color:#000">solve</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">310</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">n</span>, <span style="color:#000">m</span>, <span style="color:#000">b</span>[<span style="color:#000">maxn</span>][<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#000">ll</span> <span style="color:#000">a</span>[<span style="color:#000">maxn</span>][<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">struct</span> <span style="color:#3f6e75">edge</span>
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">y</span>, <span style="color:#000">w</span>;
</span></span><span style="display:flex;"><span>    };
</span></span><span style="display:flex;"><span>    <span style="color:#000">vector</span><span style="color:#000">&lt;</span><span style="color:#000">edge</span><span style="color:#000">&gt;</span> <span style="color:#000">e</span>[<span style="color:#000">maxn</span> <span style="color:#000">*</span> <span style="color:#000">maxn</span> <span style="color:#000">*</span> <span style="color:#1c01ce">2</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">add</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>, <span style="color:#a90d91">int</span> <span style="color:#000">w</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">e</span>[<span style="color:#000">x</span>].<span style="color:#000">push_back</span>({<span style="color:#000">y</span>, <span style="color:#000">w</span>});
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">void</span> <span style="color:#000">clear</span>()
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">memset</span>(<span style="color:#000">a</span>, <span style="color:#1c01ce">0</span>, <span style="color:#a90d91">sizeof</span>(<span style="color:#000">a</span>)), <span style="color:#000">memset</span>(<span style="color:#000">b</span>, <span style="color:#1c01ce">0</span>, <span style="color:#a90d91">sizeof</span>(<span style="color:#000">b</span>));
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span> <span style="color:#000">+</span> <span style="color:#000">m</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">e</span>[<span style="color:#000">i</span>].<span style="color:#000">clear</span>();
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">int</span> <span style="color:#000">X</span>(<span style="color:#a90d91">int</span> <span style="color:#000">i</span>) { <span style="color:#a90d91">return</span> <span style="color:#000">i</span>; }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">int</span> <span style="color:#000">Y</span>(<span style="color:#a90d91">int</span> <span style="color:#000">i</span>) { <span style="color:#a90d91">return</span> <span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#000">n</span>; }
</span></span><span style="display:flex;"><span>    <span style="color:#000">ll</span> <span style="color:#000">dis</span>[<span style="color:#000">maxn</span> <span style="color:#000">*</span> <span style="color:#000">maxn</span> <span style="color:#000">*</span> <span style="color:#1c01ce">2</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">vis</span>[<span style="color:#000">maxn</span> <span style="color:#000">*</span> <span style="color:#000">maxn</span> <span style="color:#000">*</span> <span style="color:#1c01ce">2</span>], <span style="color:#000">cnt</span>[<span style="color:#000">maxn</span> <span style="color:#000">*</span> <span style="color:#000">maxn</span> <span style="color:#000">*</span> <span style="color:#1c01ce">2</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">bool</span> <span style="color:#000">spfa</span>()
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">memset</span>(<span style="color:#000">dis</span>, <span style="color:#1c01ce">0x3f</span>, <span style="color:#a90d91">sizeof</span>(<span style="color:#000">dis</span>)), <span style="color:#000">memset</span>(<span style="color:#000">vis</span>, <span style="color:#1c01ce">0</span>, <span style="color:#a90d91">sizeof</span>(<span style="color:#000">vis</span>)), <span style="color:#000">memset</span>(<span style="color:#000">cnt</span>, <span style="color:#1c01ce">0</span>, <span style="color:#a90d91">sizeof</span>(<span style="color:#000">cnt</span>));
</span></span><span style="display:flex;"><span>        <span style="color:#000">queue</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">q</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">q</span>.<span style="color:#000">push</span>(<span style="color:#000">n</span> <span style="color:#000">+</span> <span style="color:#000">m</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>), <span style="color:#000">vis</span>[<span style="color:#000">n</span> <span style="color:#000">+</span> <span style="color:#000">m</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">dis</span>[<span style="color:#000">n</span> <span style="color:#000">+</span> <span style="color:#000">m</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">while</span> (<span style="color:#000">!</span><span style="color:#000">q</span>.<span style="color:#000">empty</span>())
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">int</span> <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">q</span>.<span style="color:#000">front</span>();
</span></span><span style="display:flex;"><span>            <span style="color:#000">q</span>.<span style="color:#000">pop</span>();
</span></span><span style="display:flex;"><span>            <span style="color:#000">vis</span>[<span style="color:#000">x</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">auto</span> <span style="color:#000">k</span> : <span style="color:#000">e</span>[<span style="color:#000">x</span>])
</span></span><span style="display:flex;"><span>            {
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">int</span> <span style="color:#000">y</span> <span style="color:#000">=</span> <span style="color:#000">k</span>.<span style="color:#000">y</span>, <span style="color:#000">w</span> <span style="color:#000">=</span> <span style="color:#000">k</span>.<span style="color:#000">w</span>;
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">if</span> (<span style="color:#000">dis</span>[<span style="color:#000">x</span>] <span style="color:#000">+</span> <span style="color:#000">w</span> <span style="color:#000">&lt;</span> <span style="color:#000">dis</span>[<span style="color:#000">y</span>])
</span></span><span style="display:flex;"><span>                {
</span></span><span style="display:flex;"><span>                    <span style="color:#000">dis</span>[<span style="color:#000">y</span>] <span style="color:#000">=</span> <span style="color:#000">dis</span>[<span style="color:#000">x</span>] <span style="color:#000">+</span> <span style="color:#000">w</span>, <span style="color:#000">cnt</span>[<span style="color:#000">y</span>]<span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>                    <span style="color:#a90d91">if</span> (<span style="color:#000">cnt</span>[<span style="color:#000">y</span>] <span style="color:#000">&gt;</span> <span style="color:#000">n</span> <span style="color:#000">+</span> <span style="color:#000">m</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>                        <span style="color:#a90d91">return</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>                    <span style="color:#a90d91">if</span> (<span style="color:#000">!</span><span style="color:#000">vis</span>[<span style="color:#000">y</span>])
</span></span><span style="display:flex;"><span>                        <span style="color:#000">vis</span>[<span style="color:#000">y</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">q</span>.<span style="color:#000">push</span>(<span style="color:#000">y</span>);
</span></span><span style="display:flex;"><span>                }
</span></span><span style="display:flex;"><span>            }
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">void</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">n</span> <span style="color:#000">=</span> <span style="color:#000">read</span>(), <span style="color:#000">m</span> <span style="color:#000">=</span> <span style="color:#000">read</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;</span> <span style="color:#000">m</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">b</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>] <span style="color:#000">=</span> <span style="color:#000">read</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#000">n</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&gt;=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#000">m</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">j</span> <span style="color:#000">&gt;=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">j</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">a</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>] <span style="color:#000">=</span> <span style="color:#000">b</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>] <span style="color:#000">-</span> <span style="color:#000">a</span>[<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>][<span style="color:#000">j</span>] <span style="color:#000">-</span> <span style="color:#000">a</span>[<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>][<span style="color:#000">j</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">-</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>];
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            {
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">if</span> ((<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#000">j</span>) <span style="color:#000">%</span> <span style="color:#1c01ce">2</span> <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>                    <span style="color:#000">add</span>(<span style="color:#000">Y</span>(<span style="color:#000">j</span>), <span style="color:#000">X</span>(<span style="color:#000">i</span>), <span style="color:#1c01ce">1e6</span> <span style="color:#000">-</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>]), <span style="color:#000">add</span>(<span style="color:#000">X</span>(<span style="color:#000">i</span>), <span style="color:#000">Y</span>(<span style="color:#000">j</span>), <span style="color:#000">a</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>]);
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>                    <span style="color:#000">add</span>(<span style="color:#000">X</span>(<span style="color:#000">i</span>), <span style="color:#000">Y</span>(<span style="color:#000">j</span>), <span style="color:#1c01ce">1e6</span> <span style="color:#000">-</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>]), <span style="color:#000">add</span>(<span style="color:#000">Y</span>(<span style="color:#000">j</span>), <span style="color:#000">X</span>(<span style="color:#000">i</span>), <span style="color:#000">a</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>]);
</span></span><span style="display:flex;"><span>            }
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">add</span>(<span style="color:#000">n</span> <span style="color:#000">+</span> <span style="color:#000">m</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">X</span>(<span style="color:#000">i</span>), <span style="color:#1c01ce">0</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">add</span>(<span style="color:#000">n</span> <span style="color:#000">+</span> <span style="color:#000">m</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">Y</span>(<span style="color:#000">i</span>), <span style="color:#1c01ce">0</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">spfa</span>())
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">puts</span>(<span style="color:#c41a16">&#34;NO&#34;</span>);
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">puts</span>(<span style="color:#c41a16">&#34;YES&#34;</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>, <span style="color:#000">puts</span>(<span style="color:#c41a16">&#34;&#34;</span>))
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                {
</span></span><span style="display:flex;"><span>                    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>] <span style="color:#000">+</span> ((<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#000">j</span>) <span style="color:#000">%</span> <span style="color:#1c01ce">2</span> <span style="color:#000">?</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span> <span style="color:#000">:</span> <span style="color:#1c01ce">1</span>) <span style="color:#000">*</span> (<span style="color:#000">dis</span>[<span style="color:#000">X</span>(<span style="color:#000">i</span>)] <span style="color:#000">-</span> <span style="color:#000">dis</span>[<span style="color:#000">Y</span>(<span style="color:#000">j</span>)]) <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span>;
</span></span><span style="display:flex;"><span>                }
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="图函数httpsuojacproblem626"><a href="https://uoj.ac/problem/626">图函数</a></h2>
<h3 id="description-2">Description</h3>
<p>对于一张 $n$ 个点 $m$ 条边的有向图 $G$ (顶点从 $1 \sim n$ 编号)，定义函数 $f(u, G)$ :</p>
<ol>
<li>初始化返回值 $cnt = 0$，图 $G′ = G$。</li>
<li>从 $1$ 至 $n$ 按顺序枚举顶点 $v$，如果当前的图 $G′$ 中，从 $u$ 到 $v$ 与从 $v$ 到 $u$ 的路径都存在，则将 $cnt + 1$，并在图 $G′$ 中删去顶点 $v$ 以及与它相关的边。</li>
<li>第 $2$ 步结束后，返回值 $cnt$ 即为函数值。</li>
</ol>
<p>现在给定一张有向图 G,请你求出 $h(G) = f(1, G) + f(2, G) + \dots + f(n, G)$ 的值。</p>
<p>更进一步地，记删除（按输入顺序给出的）第 $1 \sim i$ 条边后的图为 $G_i (1 \leq i \leq m)$，请你求出所有 $h(G_i)$ 的值。</p>
<p>$2 \leq n \leq 1000, 1 \leq m \leq 2 \times 10^5, 1 \leq x_i, y_i \leq n$。</p>
<h3 id="solution-2">Solution</h3>
<p>很神秘的一道题。</p>
<p>我们先看一下 $f(u,G)$，首先如果 $v&gt;u$ 肯定是没意义的，因为 $u$ 会被自己删除掉。</p>
<p>发现点对 $(u,v)$ （$u&gt;v$） 会对这个函数有贡献当且仅当存在一条不经过点标号大于 $v$ 的路径 $u\rightarrow v$ 和 $v\rightarrow u$。</p>
<p>用反证法证明，假设路径上存在一个点 $k&lt;v$，分两种情况：</p>
<ul>
<li>$k$ 已经被删掉，那么显然不成立。</li>
<li>$k$ 没被删掉，那么如果还能走回来，就会矛盾（画画图就知道了）。</li>
</ul>
<p>这样对于 $h(G)$，我们只需要求出 $(u,v)$（$u&gt;v$）的对数，其中 $(u,v)$ 满足上面条件。</p>
<p>然后我们考虑删边这个事情，套路地，转化为加边。</p>
<p>那么一个点对显然会对答案的前缀产生贡献，开始产生贡献的时间就是 $u$ 到 $v$ （以及 $v$ 到 $u$ ）所有路径上加入时间最晚的边的最大值，这里显然可以把边的删除时间当作一种“边权”。</p>
<p>我试图用单源最短路解决这个问题，但是无果。</p>
<p>回头看看满足条件的点对，即只考虑 $[v,n]$ 内点，求 $u,v$ 联通性以及互相联通的时间。</p>
<p>emmm，floyd？好像从大到小枚举 $k$ 就能满足要求。</p>
<p>时间复杂度 $O(n^3+m)$，注意常数优化即可通过本题。</p>
<p>可能没讲清楚，看下面代码吧。</p>
<h3 id="code-2">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#define min(x, y) ((x) &lt; (y) ? (x) : (y))
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#define max(x, y) ((x) &gt; (y) ? (x) : (y))
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#a90d91">namespace</span> <span style="color:#000">std</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">namespace</span> <span style="color:#000">solve</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1e3</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxm</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2e5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">inf</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1e6</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">f</span>[<span style="color:#000">maxn</span>][<span style="color:#000">maxn</span>], <span style="color:#000">n</span>, <span style="color:#000">m</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">ans</span>[<span style="color:#000">maxm</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">void</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">ios</span><span style="color:#000">::</span><span style="color:#000">sync_with_stdio</span>(<span style="color:#a90d91">false</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">m</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">x</span>, <span style="color:#000">y</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">x</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">y</span>, <span style="color:#000">f</span>[<span style="color:#000">x</span>][<span style="color:#000">y</span>] <span style="color:#000">=</span> <span style="color:#000">i</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">f</span>[<span style="color:#000">i</span>][<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">m</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">k</span> <span style="color:#000">=</span> <span style="color:#000">n</span>; <span style="color:#000">k</span> <span style="color:#000">&gt;=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">k</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;=</span> (<span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">k</span> <span style="color:#000">?</span> <span style="color:#000">n</span> : <span style="color:#000">k</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>); <span style="color:#000">j</span><span style="color:#000">++</span>) <span style="color:#177500">// i j 至少一个小于 k
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>                    <span style="color:#000">f</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>] <span style="color:#000">=</span> <span style="color:#000">max</span>(<span style="color:#000">f</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>], <span style="color:#000">min</span>(<span style="color:#000">f</span>[<span style="color:#000">i</span>][<span style="color:#000">k</span>], <span style="color:#000">f</span>[<span style="color:#000">k</span>][<span style="color:#000">j</span>]));
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;=</span> <span style="color:#000">i</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">ans</span>[<span style="color:#000">min</span>(<span style="color:#000">f</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>], <span style="color:#000">f</span>[<span style="color:#000">j</span>][<span style="color:#000">i</span>])]<span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#000">m</span>; <span style="color:#000">i</span> <span style="color:#000">&gt;=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">ans</span>[<span style="color:#000">i</span>] <span style="color:#000">+=</span> <span style="color:#000">ans</span>[<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>];
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">ans</span>[<span style="color:#000">i</span>] <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div>]]></content:encoded>
    </item>
    
    <item>
      <title>luogu1852 跳跳棋</title>
      <link>https://luoyisu.github.io/posts/luogu1852/</link>
      <pubDate>Fri, 18 Mar 2022 13:48:34 +0000</pubDate>
      
      <guid>https://luoyisu.github.io/posts/luogu1852/</guid>
      <description>&lt;p&gt;一个奇妙的建模题。&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>一个奇妙的建模题。</p>
<h2 id="description">Description</h2>
<p>给出数轴上三个棋子 $a,b,c$，你可以对棋子进行如下操作：</p>
<ul>
<li>将一个棋子跳到另一个棋子的另一侧，距离不变，而且不能同时跳过两个棋子。</li>
</ul>
<p>问最少花费多少步能让三个棋子的位置变为 $x,y,z$。</p>
<p>$-10^9\leq a,b,c,x,y,z\leq10^9$。</p>
<h2 id="solution">Solution</h2>
<p>看到这个题感觉非常神秘，手玩一下一个点的所有变化可以发现每个状态最多只有三种变化，如果距离两两相同就只有两种。</p>
<p>然后发现其中一种变化相当于是倒退，而如果距离两两相同就没法倒退了。</p>
<p>我们把距离两两相同的状态看作根，这样所有变化就变成了一棵二叉树。</p>
<p>题目要求的就是两个状态在二叉树上的距离。</p>
<p>再深究一下，往根的方向走会让状态的距离之和变小（例如 $a,b,c$ 变成 $b,2b-a,c$），我们有一个很显然的暴力就是对初始状态和结束状态分别走到根，然后看什么时候相交，这是 $O(n)$ 的（$n$ 是值域）。</p>
<p>再观察一下变化树，发现往根的方向走一步相当于对距离执行一次辗转相减，那么我们用辗转相除就可以 $O(\log n)$ 向上跳了。</p>
<p>这样我们已经可以快速跳，并求出深度了，下一步是求 LCA，树剖之类的方法显然不好用，我们二分一下 LCA 就好了，复杂度 $O(\log^2n)$。</p>
<h2 id="code">Code</h2>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#a90d91">typedef</span> <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">ll</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">typedef</span> <span style="color:#a90d91">unsigned</span> <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">ull</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">namespace</span> <span style="color:#000">solve</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">typedef</span> <span style="color:#000">array</span><span style="color:#000">&lt;</span><span style="color:#000">ll</span>, <span style="color:#1c01ce">3</span><span style="color:#000">&gt;</span> <span style="color:#000">arr</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">inf</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2e9</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#000">arr</span> <span style="color:#000">bg</span>, <span style="color:#000">ed</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">void</span> <span style="color:#000">out</span>(<span style="color:#a90d91">const</span> <span style="color:#000">arr</span> <span style="color:#000">&amp;</span><span style="color:#000">a</span>) { <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">a</span>[<span style="color:#1c01ce">0</span>] <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">a</span>[<span style="color:#1c01ce">1</span>] <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">a</span>[<span style="color:#1c01ce">2</span>] <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>; }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#000">arr</span> <span style="color:#000">jump</span>(<span style="color:#000">arr</span> <span style="color:#000">a</span>, <span style="color:#000">ll</span> <span style="color:#000">d</span>, <span style="color:#a90d91">int</span> <span style="color:#000">&amp;</span><span style="color:#000">dep</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">arr</span> <span style="color:#000">res</span> <span style="color:#000">=</span> <span style="color:#000">a</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">ll</span> <span style="color:#000">dis1</span> <span style="color:#000">=</span> <span style="color:#000">a</span>[<span style="color:#1c01ce">1</span>] <span style="color:#000">-</span> <span style="color:#000">a</span>[<span style="color:#1c01ce">0</span>], <span style="color:#000">dis2</span> <span style="color:#000">=</span> <span style="color:#000">a</span>[<span style="color:#1c01ce">2</span>] <span style="color:#000">-</span> <span style="color:#000">a</span>[<span style="color:#1c01ce">1</span>];
</span></span><span style="display:flex;"><span>        <span style="color:#177500">// out(res);
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>        <span style="color:#a90d91">if</span> (<span style="color:#000">dis1</span> <span style="color:#000">==</span> <span style="color:#000">dis2</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">return</span> <span style="color:#000">res</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">dis1</span> <span style="color:#000">&lt;</span> <span style="color:#000">dis2</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">int</span> <span style="color:#000">p</span> <span style="color:#000">=</span> <span style="color:#000">min</span>((<span style="color:#000">dis2</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>) <span style="color:#000">/</span> <span style="color:#000">dis1</span>, <span style="color:#000">d</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#000">dis2</span> <span style="color:#000">-=</span> <span style="color:#000">p</span> <span style="color:#000">*</span> <span style="color:#000">dis1</span>, <span style="color:#000">d</span> <span style="color:#000">-=</span> <span style="color:#000">p</span>, <span style="color:#000">dep</span> <span style="color:#000">+=</span> <span style="color:#000">p</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">res</span>[<span style="color:#1c01ce">1</span>] <span style="color:#000">=</span> <span style="color:#000">res</span>[<span style="color:#1c01ce">2</span>] <span style="color:#000">-</span> <span style="color:#000">dis2</span>, <span style="color:#000">res</span>[<span style="color:#1c01ce">0</span>] <span style="color:#000">=</span> <span style="color:#000">res</span>[<span style="color:#1c01ce">1</span>] <span style="color:#000">-</span> <span style="color:#000">dis1</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">int</span> <span style="color:#000">p</span> <span style="color:#000">=</span> <span style="color:#000">min</span>((<span style="color:#000">dis1</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>) <span style="color:#000">/</span> <span style="color:#000">dis2</span>, <span style="color:#000">d</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#000">dis1</span> <span style="color:#000">-=</span> <span style="color:#000">p</span> <span style="color:#000">*</span> <span style="color:#000">dis2</span>, <span style="color:#000">d</span> <span style="color:#000">-=</span> <span style="color:#000">p</span>, <span style="color:#000">dep</span> <span style="color:#000">+=</span> <span style="color:#000">p</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">res</span>[<span style="color:#1c01ce">1</span>] <span style="color:#000">=</span> <span style="color:#000">res</span>[<span style="color:#1c01ce">0</span>] <span style="color:#000">+</span> <span style="color:#000">dis1</span>, <span style="color:#000">res</span>[<span style="color:#1c01ce">2</span>] <span style="color:#000">=</span> <span style="color:#000">res</span>[<span style="color:#1c01ce">1</span>] <span style="color:#000">+</span> <span style="color:#000">dis2</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#000">d</span> <span style="color:#000">?</span> <span style="color:#000">jump</span>(<span style="color:#000">res</span>, <span style="color:#000">d</span>, <span style="color:#000">dep</span>) <span style="color:#000">:</span> <span style="color:#000">res</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">void</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#1c01ce">3</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">bg</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#1c01ce">3</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">ed</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>        <span style="color:#000">sort</span>(<span style="color:#000">bg</span>.<span style="color:#000">begin</span>(), <span style="color:#000">bg</span>.<span style="color:#000">end</span>()), <span style="color:#000">sort</span>(<span style="color:#000">ed</span>.<span style="color:#000">begin</span>(), <span style="color:#000">ed</span>.<span style="color:#000">end</span>());
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">dep1</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>, <span style="color:#000">dep2</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">arr</span> <span style="color:#000">rt1</span> <span style="color:#000">=</span> <span style="color:#000">jump</span>(<span style="color:#000">bg</span>, <span style="color:#000">inf</span>, <span style="color:#000">dep1</span>), <span style="color:#000">rt2</span> <span style="color:#000">=</span> <span style="color:#000">jump</span>(<span style="color:#000">ed</span>, <span style="color:#000">inf</span>, <span style="color:#000">dep2</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#177500">//cout &lt;&lt; dep1 &lt;&lt; &#34; &#34; &lt;&lt; dep2 &lt;&lt; endl;
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>        <span style="color:#a90d91">if</span> (<span style="color:#000">rt1</span> <span style="color:#000">!=</span> <span style="color:#000">rt2</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34;NO&#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34;YES&#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">dep1</span> <span style="color:#000">&lt;</span> <span style="color:#000">dep2</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">swap</span>(<span style="color:#000">bg</span>, <span style="color:#000">ed</span>), <span style="color:#000">swap</span>(<span style="color:#000">dep1</span>, <span style="color:#000">dep2</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">int</span> <span style="color:#000">dep</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">bg</span> <span style="color:#000">=</span> <span style="color:#000">jump</span>(<span style="color:#000">bg</span>, <span style="color:#000">dep1</span> <span style="color:#000">-</span> <span style="color:#000">dep2</span>, <span style="color:#000">dep</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">int</span> <span style="color:#000">l</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>, <span style="color:#000">r</span> <span style="color:#000">=</span> <span style="color:#000">inf</span>, <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">while</span> (<span style="color:#000">l</span> <span style="color:#000">&lt;=</span> <span style="color:#000">r</span>)
</span></span><span style="display:flex;"><span>            {
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">int</span> <span style="color:#000">mid</span> <span style="color:#000">=</span> (<span style="color:#000">l</span> <span style="color:#000">+</span> <span style="color:#000">r</span>) <span style="color:#000">/</span> <span style="color:#1c01ce">2</span>;
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">if</span> (<span style="color:#000">jump</span>(<span style="color:#000">bg</span>, <span style="color:#000">mid</span>, <span style="color:#000">dep</span>) <span style="color:#000">==</span> <span style="color:#000">jump</span>(<span style="color:#000">ed</span>, <span style="color:#000">mid</span>, <span style="color:#000">dep</span>))
</span></span><span style="display:flex;"><span>                    <span style="color:#000">r</span> <span style="color:#000">=</span> <span style="color:#000">mid</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#000">mid</span>;
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>                    <span style="color:#000">l</span> <span style="color:#000">=</span> <span style="color:#000">mid</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>            }
</span></span><span style="display:flex;"><span>            <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">dep1</span> <span style="color:#000">-</span> <span style="color:#000">dep2</span> <span style="color:#000">+</span> <span style="color:#000">ans</span> <span style="color:#000">*</span> <span style="color:#1c01ce">2</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div>]]></content:encoded>
    </item>
    
    <item>
      <title>杜教筛简单学习笔记</title>
      <link>https://luoyisu.github.io/posts/du/</link>
      <pubDate>Tue, 15 Mar 2022 20:58:33 +0000</pubDate>
      
      <guid>https://luoyisu.github.io/posts/du/</guid>
      <description>&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;想感受一下敲公式的快感，于是有了这篇文章。&lt;/p&gt;
&lt;p&gt;只有一些最简单的应用。&lt;/p&gt;</description>
      <content:encoded><![CDATA[<h2 id="前言">前言</h2>
<p>想感受一下敲公式的快感，于是有了这篇文章。</p>
<p>只有一些最简单的应用。</p>
<h2 id="杜教筛">杜教筛</h2>
<p>可以在低于线性的时间内筛积性函数前缀和，下文介绍原理：</p>
<p>假设我们要求 $S(n)=\sum_{i=1}^nf(i)$，其中 $f(x)$ 是个积性函数。</p>
<p>然后对于任意一个积性函数 $g(x)$，都有：
$$
\begin{aligned}
\sum\limits_{i=1}^n(f<em>g)(i)
=&amp;\sum\limits_{i=1}^n\sum\limits_{d\mid i}g(d)f(i/d)\\
=&amp;\sum\limits_{d=1}^ng(d)\sum\limits_{d\mid i}^nf(i/d)\\
=&amp;\sum\limits_{d=1}^ng(d)S(\lfloor n/d\rfloor)\\
=&amp;\sum\limits_{i=1}^ng(i)S(\lfloor n/i\rfloor)
\end{aligned}
$$
接下来有：
$$
g(1)S(n)=\sum\limits_{i=1}^n(f</em>g)(i)-\sum_{i=2}^ng(i)S(\lfloor n/i\rfloor)
$$
需要构造合适的函数 $g(x)$ 来快速求解前一项，同时用整除分块计算后一项。</p>
<p>实现方式是先筛出来这个函数的前 $n^{\frac{2}{3}}$ 项，然后比这个数大的采用递归计算。用哈希表记忆化后的复杂度是 $O(n^{\frac{2}{3}})$，我不会证明。</p>
<h2 id="luogu4213-sum">luogu4213 sum</h2>
<h3 id="description">Description</h3>
<p>求 $\sum_{i=1}^n\mu(i),\sum_{i=1}^n\varphi(i)$，$n&lt;2^{31}$。</p>
<h3 id="solution">Solution</h3>
<p>$\mu*1=\epsilon$，第一个问题做完了。</p>
<p>第二个虽然可以用 $id=\varphi*1$ 做，但是用莫比乌斯反演更快一些：先求出 $\sum_{i=1}^n\sum_{j=1}^n[\gcd(i,j)=1]$，简单莫反得到这个东西等于 $\sum_{i=1}^n\mu(i)\lfloor n/d\rfloor^2$，求出 $\mu$ 的前缀和之后可以直接 $O(\sqrt n)$ 求解。</p>
<p>然后要求的答案是 $\sum_{i=1}^n\sum_{j=1}^i[\gcd(i,j)=1]$，把刚刚的答案除以 $2$，再考虑一下 $i=j=1$ 就做完了。</p>
<h3 id="code">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#a90d91">typedef</span> <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">ll</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">typedef</span> <span style="color:#a90d91">unsigned</span> <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">ull</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">namespace</span> <span style="color:#000">solve</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1e7</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">pri</span>[<span style="color:#000">maxn</span>], <span style="color:#000">phi</span>[<span style="color:#000">maxn</span>], <span style="color:#000">vis</span>[<span style="color:#000">maxn</span>], <span style="color:#000">mu</span>[<span style="color:#000">maxn</span>], <span style="color:#000">tot</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">void</span> <span style="color:#000">init</span>(<span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">n</span> <span style="color:#000">=</span> <span style="color:#1c01ce">5e6</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">mu</span>[<span style="color:#1c01ce">1</span>] <span style="color:#000">=</span> <span style="color:#000">phi</span>[<span style="color:#1c01ce">1</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">!</span><span style="color:#000">vis</span>[<span style="color:#000">i</span>])
</span></span><span style="display:flex;"><span>                <span style="color:#000">pri</span>[<span style="color:#000">++</span><span style="color:#000">tot</span>] <span style="color:#000">=</span> <span style="color:#000">i</span>, <span style="color:#000">mu</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span>, <span style="color:#000">phi</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;=</span> <span style="color:#000">tot</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">i</span> <span style="color:#000">*</span> <span style="color:#000">pri</span>[<span style="color:#000">j</span>] <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            {
</span></span><span style="display:flex;"><span>                <span style="color:#000">vis</span>[<span style="color:#000">i</span> <span style="color:#000">*</span> <span style="color:#000">pri</span>[<span style="color:#000">j</span>]] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">if</span> (<span style="color:#000">i</span> <span style="color:#000">%</span> <span style="color:#000">pri</span>[<span style="color:#000">j</span>] <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>                {
</span></span><span style="display:flex;"><span>                    <span style="color:#000">mu</span>[<span style="color:#000">i</span> <span style="color:#000">*</span> <span style="color:#000">pri</span>[<span style="color:#000">j</span>]] <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>                    <span style="color:#000">phi</span>[<span style="color:#000">i</span> <span style="color:#000">*</span> <span style="color:#000">pri</span>[<span style="color:#000">j</span>]] <span style="color:#000">=</span> <span style="color:#000">phi</span>[<span style="color:#000">i</span>] <span style="color:#000">*</span> <span style="color:#000">pri</span>[<span style="color:#000">j</span>];
</span></span><span style="display:flex;"><span>                    <span style="color:#a90d91">break</span>;
</span></span><span style="display:flex;"><span>                }
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>                {
</span></span><span style="display:flex;"><span>                    <span style="color:#000">mu</span>[<span style="color:#000">i</span> <span style="color:#000">*</span> <span style="color:#000">pri</span>[<span style="color:#000">j</span>]] <span style="color:#000">=</span> <span style="color:#000">-</span><span style="color:#000">mu</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>                    <span style="color:#000">phi</span>[<span style="color:#000">i</span> <span style="color:#000">*</span> <span style="color:#000">pri</span>[<span style="color:#000">j</span>]] <span style="color:#000">=</span> <span style="color:#000">phi</span>[<span style="color:#000">i</span>] <span style="color:#000">*</span> (<span style="color:#000">pri</span>[<span style="color:#000">j</span>] <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>                }
</span></span><span style="display:flex;"><span>            }
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">mu</span>[<span style="color:#000">i</span>] <span style="color:#000">+=</span> <span style="color:#000">mu</span>[<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>], <span style="color:#000">phi</span>[<span style="color:#000">i</span>] <span style="color:#000">+=</span> <span style="color:#000">phi</span>[<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>];
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">unordered_map</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span>, <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span><span style="color:#000">&gt;</span> <span style="color:#000">mp</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">sum_mu</span>(<span style="color:#a90d91">int</span> <span style="color:#000">n</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">n</span> <span style="color:#000">&lt;=</span> <span style="color:#1c01ce">5e6</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">return</span> <span style="color:#000">mu</span>[<span style="color:#000">n</span>];
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">mp</span>.<span style="color:#000">count</span>(<span style="color:#000">n</span>))
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">return</span> <span style="color:#000">mp</span>[<span style="color:#000">n</span>];
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">res</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2</span>, <span style="color:#000">j</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#000">j</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#000">n</span> <span style="color:#000">/</span> (<span style="color:#000">n</span> <span style="color:#000">/</span> <span style="color:#000">i</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#000">res</span> <span style="color:#000">-=</span> <span style="color:#1c01ce">1ll</span> <span style="color:#000">*</span> (<span style="color:#000">j</span> <span style="color:#000">-</span> <span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>) <span style="color:#000">*</span> <span style="color:#000">sum_mu</span>(<span style="color:#000">n</span> <span style="color:#000">/</span> <span style="color:#000">i</span>);
</span></span><span style="display:flex;"><span>        } 
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#000">mp</span>[<span style="color:#000">n</span>] <span style="color:#000">=</span> <span style="color:#000">res</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">sum_phi</span>(<span style="color:#a90d91">int</span> <span style="color:#000">n</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">n</span> <span style="color:#000">&lt;=</span> <span style="color:#1c01ce">5e6</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">return</span> <span style="color:#000">phi</span>[<span style="color:#000">n</span>];
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">res</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">j</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#000">j</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#000">n</span> <span style="color:#000">/</span> (<span style="color:#000">n</span> <span style="color:#000">/</span> <span style="color:#000">i</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#000">res</span> <span style="color:#000">+=</span> (<span style="color:#000">sum_mu</span>(<span style="color:#000">j</span>) <span style="color:#000">-</span> <span style="color:#000">sum_mu</span>(<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>)) <span style="color:#000">*</span> <span style="color:#1c01ce">1ll</span> <span style="color:#000">*</span> (<span style="color:#000">n</span> <span style="color:#000">/</span> <span style="color:#000">i</span>) <span style="color:#000">*</span> (<span style="color:#000">n</span> <span style="color:#000">/</span> <span style="color:#000">i</span>);
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> (<span style="color:#000">res</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>) <span style="color:#000">/</span> <span style="color:#1c01ce">2</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">void</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">init</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">T</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">T</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">while</span> (<span style="color:#000">T</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">int</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">sum_phi</span>(<span style="color:#000">n</span>) <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">sum_mu</span>(<span style="color:#000">n</span>) <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="luogu3768-简单的数学题">luogu3768 简单的数学题</h2>
<h3 id="description-1">Description</h3>
<p>求：
$$
\sum_{i=1}^n\sum_{j=1}^nij\gcd(i,j)
$$
对 $p$ 取模的结果。$n\leq10^{10}$。</p>
<h3 id="solution-1">Solution</h3>
<p>不说啥了，直接开始推。
$$
\begin{aligned}
ans
=&amp;\sum_{i=1}^n\sum_{j=1}^n\sum_{d=1,d|i,d|j}ijd[\gcd(i,j)=d]\\
=&amp;\sum_{d=1}^nd\sum_{i=1,d|i}^ni\sum_{j=1,j|i}^nj[\gcd(i,j)=d]\\
=&amp;\sum_{d=1}^nd^3\sum_{i=1}^{\lfloor n/d\rfloor}i\sum_{j=1}^{\lfloor n/d\rfloor}j[\gcd(i,j)=1]\\
=&amp;\sum_{d=1}^nd^3\sum_{i=1}^{\lfloor n/d\rfloor}i\sum_{j=1}^{\lfloor n/d\rfloor}j\sum_{k|i,k|j}\mu(k)\\
=&amp;\sum_{d=1}^nd^3\sum_{k=1}^{\lfloor n/d\rfloor}\mu(k)\sum_{i=1,k|i}^{\lfloor n/d\rfloor}i\sum_{j=1,k|j}^{\lfloor n/d\rfloor}j
\end{aligned}
$$
设 $f(x)=\dfrac{x^2(x+1)^2}{4}$。
$$
\begin{aligned}
ans=&amp;\sum_{d=1}^nd^3\sum_{k=1}^{\lfloor n/d\rfloor}\mu(k)k^2f(\lfloor\dfrac{n}{dk}\rfloor)
\end{aligned}
$$
设 $T=dk$。
$$
\begin{aligned}
ans
&amp;=\sum_{d=1}^nd\sum_{T=1,d|T}^{\lfloor n/d\rfloor}\mu(\dfrac{T}{d})T^2f(\lfloor\dfrac{n}{T}\rfloor)\\
&amp;=\sum_{T=1}^nf(\lfloor\dfrac{n}{T}\rfloor)T^2\sum_{d|T}d\times\mu(\dfrac{T}{d})
\end{aligned}
$$
由 $id*\mu=\varphi$，有：
$$
ans=\sum_{T=1}^nf(\lfloor\dfrac{n}{T}\rfloor)T^2\varphi(T)
$$
设 $g(x)=x^2\varphi(x)$，我们需要求出它的前缀和，开始杜教筛。</p>
<p>设 $h(x)=x^2$，那么 $(h<em>g)(n)=n^2\sum_{d|n}\varphi(d)$，又由于 $\varphi</em>1=id$，有 $(h*g)(x)=x^3$，这玩意的前缀和很好算。</p>
<p>然后就做完了。</p>
<h3 id="code-1">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#a90d91">namespace</span> <span style="color:#000">solve</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1e7</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">mod</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">vis</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#000">ll</span> <span style="color:#000">phi</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">pri</span>[<span style="color:#000">maxn</span>], <span style="color:#000">tot</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">ll</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">void</span> <span style="color:#000">init</span>(<span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">n</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1e7</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">phi</span>[<span style="color:#1c01ce">1</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">!</span><span style="color:#000">vis</span>[<span style="color:#000">i</span>])
</span></span><span style="display:flex;"><span>                <span style="color:#000">pri</span>[<span style="color:#000">++</span><span style="color:#000">tot</span>] <span style="color:#000">=</span> <span style="color:#000">i</span>, <span style="color:#000">phi</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;=</span> <span style="color:#000">tot</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">i</span> <span style="color:#000">*</span> <span style="color:#000">pri</span>[<span style="color:#000">j</span>] <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            {
</span></span><span style="display:flex;"><span>                <span style="color:#000">vis</span>[<span style="color:#000">i</span> <span style="color:#000">*</span> <span style="color:#000">pri</span>[<span style="color:#000">j</span>]] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">if</span> (<span style="color:#000">i</span> <span style="color:#000">%</span> <span style="color:#000">pri</span>[<span style="color:#000">j</span>])
</span></span><span style="display:flex;"><span>                    <span style="color:#000">phi</span>[<span style="color:#000">i</span> <span style="color:#000">*</span> <span style="color:#000">pri</span>[<span style="color:#000">j</span>]] <span style="color:#000">=</span> <span style="color:#000">phi</span>[<span style="color:#000">i</span>] <span style="color:#000">*</span> <span style="color:#000">phi</span>[<span style="color:#000">pri</span>[<span style="color:#000">j</span>]];
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>                {
</span></span><span style="display:flex;"><span>                    <span style="color:#000">phi</span>[<span style="color:#000">i</span> <span style="color:#000">*</span> <span style="color:#000">pri</span>[<span style="color:#000">j</span>]] <span style="color:#000">=</span> <span style="color:#000">phi</span>[<span style="color:#000">i</span>] <span style="color:#000">*</span> <span style="color:#000">pri</span>[<span style="color:#000">j</span>];
</span></span><span style="display:flex;"><span>                    <span style="color:#a90d91">break</span>;
</span></span><span style="display:flex;"><span>                }
</span></span><span style="display:flex;"><span>            }
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">phi</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1ll</span> <span style="color:#000">*</span> <span style="color:#000">i</span> <span style="color:#000">*</span> <span style="color:#000">i</span> <span style="color:#000">%</span> <span style="color:#000">mod</span> <span style="color:#000">*</span> <span style="color:#000">phi</span>[<span style="color:#000">i</span>] <span style="color:#000">%</span> <span style="color:#000">mod</span>, <span style="color:#000">phi</span>[<span style="color:#000">i</span>] <span style="color:#000">+=</span> <span style="color:#000">phi</span>[<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>], <span style="color:#000">phi</span>[<span style="color:#000">i</span>] <span style="color:#000">%=</span> <span style="color:#000">mod</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">ll</span> <span style="color:#000">qpow</span>(<span style="color:#000">ll</span> <span style="color:#000">a</span>, <span style="color:#000">ll</span> <span style="color:#000">x</span>, <span style="color:#000">ll</span> <span style="color:#000">p</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">ll</span> <span style="color:#000">res</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (; <span style="color:#000">x</span>; <span style="color:#000">x</span> <span style="color:#000">&gt;&gt;=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">a</span> <span style="color:#000">=</span> <span style="color:#000">a</span> <span style="color:#000">*</span> <span style="color:#000">a</span> <span style="color:#000">%</span> <span style="color:#000">p</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">x</span> <span style="color:#000">&amp;</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">res</span> <span style="color:#000">=</span> <span style="color:#000">res</span> <span style="color:#000">*</span> <span style="color:#000">a</span> <span style="color:#000">%</span> <span style="color:#000">p</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#000">res</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">ll</span> <span style="color:#000">S</span>(<span style="color:#000">ll</span> <span style="color:#000">x</span>) { <span style="color:#a90d91">return</span> <span style="color:#000">x</span> <span style="color:#000">*</span> (<span style="color:#000">x</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>) <span style="color:#000">/</span> <span style="color:#1c01ce">2</span> <span style="color:#000">%</span> <span style="color:#000">mod</span>; }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#000">ll</span> <span style="color:#000">f</span>(<span style="color:#000">ll</span> <span style="color:#000">x</span>) { <span style="color:#a90d91">return</span> <span style="color:#000">S</span>(<span style="color:#000">x</span> <span style="color:#000">%</span> <span style="color:#000">mod</span>) <span style="color:#000">*</span> <span style="color:#000">S</span>(<span style="color:#000">x</span> <span style="color:#000">%</span> <span style="color:#000">mod</span>) <span style="color:#000">%</span> <span style="color:#000">mod</span>; }
</span></span><span style="display:flex;"><span>    <span style="color:#000">ll</span> <span style="color:#000">inv6</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#000">ll</span> <span style="color:#000">h</span>(<span style="color:#000">ll</span> <span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">x</span> <span style="color:#000">%=</span> <span style="color:#000">mod</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#1c01ce">1ll</span> <span style="color:#000">*</span> <span style="color:#000">x</span> <span style="color:#000">*</span> (<span style="color:#000">x</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>) <span style="color:#000">%</span> <span style="color:#000">mod</span> <span style="color:#000">*</span> (<span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">x</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>) <span style="color:#000">%</span> <span style="color:#000">mod</span> <span style="color:#000">*</span> <span style="color:#000">inv6</span> <span style="color:#000">%</span> <span style="color:#000">mod</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">unordered_map</span><span style="color:#000">&lt;</span><span style="color:#000">ll</span>, <span style="color:#000">ll</span><span style="color:#000">&gt;</span> <span style="color:#000">mp</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">ll</span> <span style="color:#000">sum</span>(<span style="color:#000">ll</span> <span style="color:#000">n</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">n</span> <span style="color:#000">&lt;=</span> <span style="color:#1c01ce">1e7</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">return</span> <span style="color:#000">phi</span>[<span style="color:#000">n</span>];
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">mp</span>.<span style="color:#000">count</span>(<span style="color:#000">n</span>))
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">return</span> <span style="color:#000">mp</span>[<span style="color:#000">n</span>];
</span></span><span style="display:flex;"><span>        <span style="color:#000">ll</span> <span style="color:#000">res</span> <span style="color:#000">=</span> <span style="color:#000">f</span>(<span style="color:#000">n</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#000">ll</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2</span>, <span style="color:#000">j</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#000">j</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#000">n</span> <span style="color:#000">/</span> (<span style="color:#000">n</span> <span style="color:#000">/</span> <span style="color:#000">i</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#000">res</span> <span style="color:#000">-=</span> (<span style="color:#000">h</span>(<span style="color:#000">j</span>) <span style="color:#000">-</span> <span style="color:#000">h</span>(<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>) <span style="color:#000">+</span> <span style="color:#000">mod</span>) <span style="color:#000">%</span> <span style="color:#000">mod</span> <span style="color:#000">*</span> <span style="color:#000">sum</span>(<span style="color:#000">n</span> <span style="color:#000">/</span> <span style="color:#000">i</span>) <span style="color:#000">%</span> <span style="color:#000">mod</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">res</span> <span style="color:#000">%=</span> <span style="color:#000">mod</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#000">mp</span>[<span style="color:#000">n</span>] <span style="color:#000">=</span> (<span style="color:#000">res</span> <span style="color:#000">+</span> <span style="color:#000">mod</span>) <span style="color:#000">%</span> <span style="color:#000">mod</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">void</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">mod</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">init</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#000">inv6</span> <span style="color:#000">=</span> <span style="color:#000">qpow</span>(<span style="color:#1c01ce">6</span>, <span style="color:#000">mod</span> <span style="color:#000">-</span> <span style="color:#1c01ce">2</span>, <span style="color:#000">mod</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">ll</span> <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#000">ll</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">j</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#000">j</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#000">n</span> <span style="color:#000">/</span> (<span style="color:#000">n</span> <span style="color:#000">/</span> <span style="color:#000">i</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#000">ans</span> <span style="color:#000">+=</span> (<span style="color:#000">sum</span>(<span style="color:#000">j</span>) <span style="color:#000">-</span> <span style="color:#000">sum</span>(<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>)) <span style="color:#000">%</span> <span style="color:#000">mod</span> <span style="color:#000">*</span> <span style="color:#000">f</span>(<span style="color:#000">n</span> <span style="color:#000">/</span> <span style="color:#000">i</span>) <span style="color:#000">%</span> <span style="color:#000">mod</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">ans</span> <span style="color:#000">%=</span> <span style="color:#000">mod</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#000">ans</span> <span style="color:#000">+=</span> <span style="color:#000">mod</span>, <span style="color:#000">ans</span> <span style="color:#000">%=</span> <span style="color:#000">mod</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">ans</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="noi2016-循环之美">NOI2016 循环之美</h2>
<p>暂时不会推，先咕了。</p>]]></content:encoded>
    </item>
    
    <item>
      <title>220222 和大连理工大学线上 PK 记</title>
      <link>https://luoyisu.github.io/posts/220222-contest-with-dut/</link>
      <pubDate>Tue, 22 Feb 2022 19:43:24 +0000</pubDate>
      
      <guid>https://luoyisu.github.io/posts/220222-contest-with-dut/</guid>
      <description>&lt;h2 id=&#34;概述&#34;&gt;概述&lt;/h2&gt;
&lt;p&gt;我和杜大佬一队，各做了 $4$ 道题，但总体来说我还是被他带飞了。&lt;/p&gt;</description>
      <content:encoded><![CDATA[<h2 id="概述">概述</h2>
<p>我和杜大佬一队，各做了 $4$ 道题，但总体来说我还是被他带飞了。</p>
<h2 id="赛前">赛前</h2>
<p>我们总共有 $8$ 人，打算分成 $332$，我恰好就在那个 $2$ 里，感觉要被吊打了（）</p>
<p>又发现其他的高一同学们也开始组队了，好害怕。。。不垫底就是胜利！</p>
<p>起队名倒是很愉快，因为我们两个的码风非常优良，所以起名为 Go and learn our code style（然而事后发现其他人看不了我们的代码。。）。</p>
<p>大工的队伍为什么混进来了嘉心糖（）</p>
<h2 id="赛时">赛时</h2>
<p>分工是我看 ABCDE、杜大佬看 FGHIJK，发现还有人在一起 VP，看来这似乎是一场复现赛。</p>
<p>A 题面长的要死，只看懂了自走棋，先放放再说；</p>
<p>B 就是一个分类讨论题，随便写了一发发现没过样例，于是开始大力讨论所有情况，27 min 的时候交了一发，然后光荣 WA，稍微看了一下发现有个字母打错了，改了之后就 AC 了。。</p>
<p>看了看榜，B 确实是水题，然后就没看出什么有用信息了。</p>
<p>杜大佬先看了 G 题，写了个代码之后发现有问题，于是扔了，看有人过了 H 就去做 H 了，贡献一发罚时之后 AC 了。</p>
<p>做完 B 之后我看了看 C，数学题，不明所以，D，树上不知道啥玩意，E，不知道啥玩意的计数。</p>
<p>去看了 A，似乎是比较可做的一个模拟题，看了看之后发现，这 tm 不是廊桥分配加强版吗？？？？？</p>
<p>我要一雪前耻，写起了权值线段树。</p>
<p>不得不说这题细节还是很多的。。。</p>
<p>中途杜大佬似乎在做 I 题，来向我问一些数学问题，我不会，感到无比愧疚。。</p>
<p>接着写我的 A，然后交了几发，贡献了一波罚时，修了几个 bug 还是 AC 不了，我十分莫名其妙。。。</p>
<p>大概 1.5h 的时候，杜大佬对着样例猜了个 I 结论，交了一发，AC 了！！</p>
<p>我接着调我的 A 题，怀疑格式问题，把样例输出和我的输出用 diff 看了一下，没啥问题啊，我只是多了行末空格和文末回车而已。</p>
<p>反正没啥事情干，就把多余的行末空格给改了，摆烂交了一发，也是在 1.5h 左右，居然 AC 了？？？？？？？</p>
<p>这评测有毒啊。。不管了，吃了 $3$ 发罚时可算是过了。。。</p>
<p>杜大佬去做 J 题了，我瞅了眼，好像是什么计数题，完全不懂。。。</p>
<p>我决定把数学题放一放，去看看 D，然后发现这玩意是个树上染色，想了想之后发现有一个看上去挺对的贪心，写了一发过了，好开心。</p>
<p>杜大佬给我看了看一个式子，说怎么快速枚举。。。</p>
<p>我和他想了想也没得出什么结果，最后还是只能暴力，感觉这暴力应该是能过的。</p>
<p>于是他开始写了，我没法帮他，试图推了推 C 题，不是很懂。。E 还是不会、F 据说是个大阴间题、K 看了看也有点莫名其妙。。</p>
<p>看了看榜，G 题似乎是个可做题，就去做了。</p>
<p>这期间（不到 3.5h 的时候）杜大佬把 J 一发过了！好耶！被杜大佬带飞了！</p>
<p>G 是个玩游戏题，手玩了一波样例感觉发现了些规律，然后感觉挺对的就开始写了，结果 WA 了 $4$ 发，最终在 3.5h 多的时候过了。</p>
<p>现在打算让杜大佬做 C 题，我去看看 K 题。。</p>
<p>不一会他就会了 C，被带飞了！！然后将近 4.5h 的时候一发过了 C，好耶！！！！</p>
<p>然而我的 K 还是无果，后来发现有一个在数据范围里的提示，这下似乎可做了一些。</p>
<p>后来和杜大佬一起在 E、K 之间横跳，也没想出来啥，摆烂了。</p>
<h2 id="赛后">赛后</h2>
<p>反正是有惊无险拿到了 rank1，主要 kh 他们队被 A 题困住了（因为那个行末空格），所以有点胜之不武。。。</p>
<p>但总之还是挺开心的，被带飞了，哈哈！</p>
<h2 id="总结">总结</h2>
<p>计数，数学，DP。。。</p>]]></content:encoded>
    </item>
    
    <item>
      <title>WC2022线上(摆烂)测试总结</title>
      <link>https://luoyisu.github.io/posts/wc2022/</link>
      <pubDate>Fri, 28 Jan 2022 18:18:45 +0000</pubDate>
      
      <guid>https://luoyisu.github.io/posts/wc2022/</guid>
      <description>&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;因为过于摆烂，所以记录一下警醒自己。&lt;/p&gt;</description>
      <content:encoded><![CDATA[<h2 id="前言">前言</h2>
<p>因为过于摆烂，所以记录一下警醒自己。</p>
<h2 id="赛时">赛时</h2>
<p>8:30 拿到了压缩包，发现有一个文件夹里有一堆东西，很明显是交互题了。</p>
<p>开题，发现 T1 奇妙构造，然后没大样例，没 spj，一看到括号就头大，跳了。</p>
<p>T2 明显数据结构题，有人说背景和坦克世界有关，是 lxl 出的，大概看了看就扔了。</p>
<p>对 T3 比较感兴趣，认真读了题，没啥想法，似乎需要确定一个很好的策略？（后来发现其实并不太对）</p>
<p>想了想也没想出来啥策略。。。。。</p>
<p>当时有两个很莫名其妙的想法：</p>
<ul>
<li>想办法多排除不合法的，最后在剩下的单词里随机一个；</li>
<li>直接在当前可能合法的字符串中找一个最有可能的返回。</li>
</ul>
<p>回去看 T2，好像是三道题里最正经的。</p>
<p>想了想发现我会莫队，好像能搞到 $O(n\sqrt n\log n)$​，一看数据范围，这能过几分全看常数啊。</p>
<p>其实这玩意要是想优化到 $O(n\sqrt n)$ 就是要把查询前驱后继的复杂度搞成 $O(1)$，然后前几天听过用链表+回滚莫队平衡复杂度的一道题，但我数据结构水平是真不行，想不出来怎么平衡复杂度。</p>
<p>写了个 set 做法，常数大到爆炸，$10^5$ 都过不去。</p>
<p>后来得知一个叫树状数组上二分的科技，然后写写写调调调卡卡卡，常数小了很多，在我的机子上跑 $10^5$ 需要 $3$ 秒，这下应该是有 $50$ 分了。。。</p>
<p>时间所剩无几，稍微想了想 T1，没啥收获，写了 $25$ 分暴力。。。</p>
<p>还剩一个小时，去肝 T3 吧。</p>
<p>想着先咸鱼一个纯随机选的算法，然后一直调到结束（？）</p>
<p>然后就很悲惨地结束了，到死都不知道怎么回事。</p>
<p>可能太着急了吧。。。。</p>
<h2 id="赛后">赛后</h2>
<p>听说 T3 乱搞能得很多很多分？</p>
<p>好吧，我没搞出来，也许应该多留点时间搞。。。</p>
<p>然后出分了：</p>
<p>$10+30+0=40$？？？？？</p>
<p>哦我 T1 数组开小了啊那没事了。</p>
<p>那 T2 是什么情况？？？？？？？？？</p>
<p>为什么我少了 $20$ 分？？？？？</p>
<p>罢了罢了，接着去搞 T3 了，真好玩.jpg。</p>
<h2 id="总结">总结</h2>
<p>遇到陌生的模型转化能力还是欠缺啊（T1），括号序列转化为二叉树我确实想不到。。。也许需要有意去想办法转化？</p>
<p>T2 其实没啥问题，已经尽最大努力了。</p>
<p>怎么说呢，对题目难度还是没把握，T3 这种乱搞题。。。还是太谨慎了？也许应该大胆一点。</p>
<p>真有点《遇到交互摆大烂》啊，明明我也做过好几道交互题来着。</p>
<p>但是我并不是胆大心细的人啊。。。</p>
<p>小错误犯了一堆，以后应该搞一个注意事项合集了。</p>]]></content:encoded>
    </item>
    
    <item>
      <title>220120摆烂模拟赛</title>
      <link>https://luoyisu.github.io/posts/220120-contest/</link>
      <pubDate>Thu, 20 Jan 2022 17:32:19 +0000</pubDate>
      
      <guid>https://luoyisu.github.io/posts/220120-contest/</guid>
      <description>&lt;p&gt;好久没写总结了，于是来写一发。&lt;/p&gt;
&lt;h2 id=&#34;概述&#34;&gt;概述&lt;/h2&gt;
&lt;p&gt;期望 $0+100+100=200$，实际 $0+0(100)+0=0(100)$。&lt;/p&gt;
&lt;p&gt;摆大烂，挂大分。&lt;/p&gt;
&lt;p&gt;还是太菜了，码力不够，思维也不够。&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>好久没写总结了，于是来写一发。</p>
<h2 id="概述">概述</h2>
<p>期望 $0+100+100=200$，实际 $0+0(100)+0=0(100)$。</p>
<p>摆大烂，挂大分。</p>
<p>还是太菜了，码力不够，思维也不够。</p>
<h2 id="赛时">赛时</h2>
<p>首先看到 T1 是一个期望什么玩意，直接不想看，跑了。（摆烂 x1）</p>
<p>然后看到 T2 是一个什么莫名其妙的像是计算几何的题，溜了。（摆烂 x2）</p>
<p>又发现 T3 是一个很怪的像是模拟题的鬼东西，不想看，再见。（摆烂 x3）</p>
<p>于是发现 T2 $n\leq8$，我当场选择用模拟退火摆烂。</p>
<p>开始码码码，大概过了一个小时才码完，但是因为没有大样例，没法调参。。。</p>
<p>后来手造数据试图调参。。。</p>
<p>然后想了想 T3 发现是大模拟+2-SAT，我直接码码码。</p>
<p>码到一半回去把退火完善了一下，改成随温度降低调整幅度减小，感觉稳多了。</p>
<p>然后一直在码 T3，其实也不是特别长，但我还是太菜了。。。</p>
<p>后来还有一个多小时的时候过了样例，我也不想管了，直接开摆。</p>
<p>然后不想看 T1 了，开摆！！</p>
<h2 id="赛后">赛后</h2>
<p>哈哈我爆零了。</p>
<p>哈哈我 T2 因为没有 <code>include &lt;ctime&gt;</code> CE了。</p>
<p>哈哈我 T3 不知道为什么 WA 了。</p>
<p>摆烂了。</p>
<p>讲评的时候发现 T1 确实不是那么难，也许自己在 DP 上还是较弱。</p>
<h2 id="总结">总结</h2>
<p>别摆烂了！！！</p>]]></content:encoded>
    </item>
    
    <item>
      <title>uoj55 紫荆花之恋</title>
      <link>https://luoyisu.github.io/posts/uoj55/</link>
      <pubDate>Mon, 17 Jan 2022 07:22:01 +0000</pubDate>
      
      <guid>https://luoyisu.github.io/posts/uoj55/</guid>
      <description>&lt;h2 id=&#34;description&#34;&gt;Description&lt;/h2&gt;
&lt;p&gt;有一棵初始为空的树，每次新给出一个点的父亲和它连向父亲边的权值以及这个点的权值，每次加点之后询问有多少点满足 $dis(i,j)\leq val_i+val_j$，强制在线。&lt;/p&gt;
&lt;p&gt;$n\leq10^5$。&lt;/p&gt;</description>
      <content:encoded><![CDATA[<h2 id="description">Description</h2>
<p>有一棵初始为空的树，每次新给出一个点的父亲和它连向父亲边的权值以及这个点的权值，每次加点之后询问有多少点满足 $dis(i,j)\leq val_i+val_j$，强制在线。</p>
<p>$n\leq10^5$。</p>
<h2 id="solution">Solution</h2>
<p>如果树是静态的，那么这是个点分治裸题：把条件拆成 $dis(i,root)-val_i\leq -dis(root, j)+val_j$，用平衡树维护即可。</p>
<p>现在我们动态加儿子，可以尝试用点分树维护。当一个点分树上一个子树的大小过于不平衡直接重构这个点分树即可。</p>
<p>复杂度 $O(n\log^3n)$。</p>
<p>听起来很简单是吧，实际上写起来还是有点复杂的。</p>
<p>按照常规套路，在每个点维护两棵平衡树，分别代表这个点在点分树上子树内所有点在原树上到该点的信息、这个点在点分树上子树内所有点在原树上到原树上该点父亲的信息，然后查询的时候减一下去掉重复统计的部分。</p>
<p>重构怎么办呢？</p>
<p>感觉上我们需要把整个子树都重建一遍，别的还好说，但我们要重构的这棵树的根到他父亲的信息似乎不是很好维护，然后有一个 trick，直接把原来的平衡树挪到新根上就好了！</p>
<p>平衡树显然需要写一个垃圾回收。</p>
<h2 id="code">Code</h2>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdlib&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;set&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cerr</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1e5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">dep</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">struct</span> <span style="color:#3f6e75">edge</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">y</span>, <span style="color:#000">w</span>;
</span></span><span style="display:flex;"><span>};
</span></span><span style="display:flex;"><span><span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">vector</span><span style="color:#000">&lt;</span><span style="color:#000">edge</span><span style="color:#000">&gt;</span> <span style="color:#000">e</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">namespace</span> <span style="color:#000">tree</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">father</span>[<span style="color:#000">maxn</span>][<span style="color:#1c01ce">20</span>], <span style="color:#000">dis_rt</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">add</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>, <span style="color:#a90d91">int</span> <span style="color:#000">w</span>) { <span style="color:#000">e</span>[<span style="color:#000">x</span>].<span style="color:#000">push_back</span>({<span style="color:#000">y</span>, <span style="color:#000">w</span>}), <span style="color:#000">e</span>[<span style="color:#000">y</span>].<span style="color:#000">push_back</span>({<span style="color:#000">x</span>, <span style="color:#000">w</span>}); }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">void</span> <span style="color:#000">add_node</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">fa</span>, <span style="color:#a90d91">int</span> <span style="color:#000">w</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">father</span>[<span style="color:#000">x</span>][<span style="color:#1c01ce">0</span>] <span style="color:#000">=</span> <span style="color:#000">fa</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">fa</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">add</span>(<span style="color:#000">x</span>, <span style="color:#000">fa</span>, <span style="color:#000">w</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">dep</span>[<span style="color:#000">x</span>] <span style="color:#000">=</span> <span style="color:#000">dep</span>[<span style="color:#000">fa</span>] <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">dis_rt</span>[<span style="color:#000">x</span>] <span style="color:#000">=</span> <span style="color:#000">dis_rt</span>[<span style="color:#000">fa</span>] <span style="color:#000">+</span> <span style="color:#000">w</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#1c01ce">18</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">father</span>[<span style="color:#000">x</span>][<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">father</span>[<span style="color:#000">father</span>[<span style="color:#000">x</span>][<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>]][<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>];
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">lca</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">dep</span>[<span style="color:#000">x</span>] <span style="color:#000">&lt;</span> <span style="color:#000">dep</span>[<span style="color:#000">y</span>])
</span></span><span style="display:flex;"><span>            <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">swap</span>(<span style="color:#000">x</span>, <span style="color:#000">y</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">d</span> <span style="color:#000">=</span> <span style="color:#000">dep</span>[<span style="color:#000">x</span>] <span style="color:#000">-</span> <span style="color:#000">dep</span>[<span style="color:#000">y</span>];
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">d</span>; <span style="color:#000">d</span> <span style="color:#000">&gt;&gt;=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">d</span> <span style="color:#000">&amp;</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">father</span>[<span style="color:#000">x</span>][<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">x</span> <span style="color:#000">==</span> <span style="color:#000">y</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">return</span> <span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">18</span>; <span style="color:#000">i</span> <span style="color:#000">&gt;=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">father</span>[<span style="color:#000">x</span>][<span style="color:#000">i</span>] <span style="color:#000">!=</span> <span style="color:#000">father</span>[<span style="color:#000">y</span>][<span style="color:#000">i</span>])
</span></span><span style="display:flex;"><span>                <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">father</span>[<span style="color:#000">x</span>][<span style="color:#000">i</span>], <span style="color:#000">y</span> <span style="color:#000">=</span> <span style="color:#000">father</span>[<span style="color:#000">y</span>][<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#000">father</span>[<span style="color:#000">x</span>][<span style="color:#1c01ce">0</span>];
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">dis</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>) { <span style="color:#a90d91">return</span> <span style="color:#000">dis_rt</span>[<span style="color:#000">x</span>] <span style="color:#000">+</span> <span style="color:#000">dis_rt</span>[<span style="color:#000">y</span>] <span style="color:#000">-</span> <span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">dis_rt</span>[<span style="color:#000">lca</span>(<span style="color:#000">x</span>, <span style="color:#000">y</span>)]; }
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">tree</span><span style="color:#000">::</span><span style="color:#000">dis</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">namespace</span> <span style="color:#000">Treap</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">top</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">struct</span> <span style="color:#3f6e75">Node</span>
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">val</span>, <span style="color:#000">siz</span>, <span style="color:#000">rnd</span>, <span style="color:#000">num</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">Node</span> <span style="color:#000">*</span><span style="color:#000">son</span>[<span style="color:#1c01ce">2</span>];
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">push_up</span>()
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">siz</span> <span style="color:#000">=</span> <span style="color:#000">num</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">son</span>[<span style="color:#1c01ce">0</span>])
</span></span><span style="display:flex;"><span>                <span style="color:#000">siz</span> <span style="color:#000">+=</span> <span style="color:#000">son</span>[<span style="color:#1c01ce">0</span>]<span style="color:#000">-&gt;</span><span style="color:#000">siz</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">son</span>[<span style="color:#1c01ce">1</span>])
</span></span><span style="display:flex;"><span>                <span style="color:#000">siz</span> <span style="color:#000">+=</span> <span style="color:#000">son</span>[<span style="color:#1c01ce">1</span>]<span style="color:#000">-&gt;</span><span style="color:#000">siz</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    } <span style="color:#000">a</span>[<span style="color:#000">maxn</span> <span style="color:#000">*</span> <span style="color:#1c01ce">100</span>], <span style="color:#000">*</span><span style="color:#000">bin</span>[<span style="color:#000">maxn</span> <span style="color:#000">*</span> <span style="color:#1c01ce">100</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#000">Node</span> <span style="color:#000">*</span><span style="color:#000">new_node</span>(<span style="color:#a90d91">int</span> <span style="color:#000">val</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">Node</span> <span style="color:#000">*</span><span style="color:#000">res</span> <span style="color:#000">=</span> <span style="color:#000">bin</span>[<span style="color:#000">--</span><span style="color:#000">top</span>];
</span></span><span style="display:flex;"><span>        <span style="color:#000">res</span><span style="color:#000">-&gt;</span><span style="color:#000">son</span>[<span style="color:#1c01ce">0</span>] <span style="color:#000">=</span> <span style="color:#000">res</span><span style="color:#000">-&gt;</span><span style="color:#000">son</span>[<span style="color:#1c01ce">1</span>] <span style="color:#000">=</span> <span style="color:#a90d91">nullptr</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">res</span><span style="color:#000">-&gt;</span><span style="color:#000">siz</span> <span style="color:#000">=</span> <span style="color:#000">res</span><span style="color:#000">-&gt;</span><span style="color:#000">num</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">res</span><span style="color:#000">-&gt;</span><span style="color:#000">val</span> <span style="color:#000">=</span> <span style="color:#000">val</span>, <span style="color:#000">res</span><span style="color:#000">-&gt;</span><span style="color:#000">rnd</span> <span style="color:#000">=</span> <span style="color:#000">rand</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#000">res</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">del_node</span>(<span style="color:#000">Node</span> <span style="color:#000">*</span><span style="color:#000">p</span>) { <span style="color:#000">bin</span>[<span style="color:#000">top</span><span style="color:#000">++</span>] <span style="color:#000">=</span> <span style="color:#000">p</span>; }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">rotate</span>(<span style="color:#000">Node</span> <span style="color:#000">*&amp;</span><span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">d</span>) <span style="color:#177500">// 0:right 1:left
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">Node</span> <span style="color:#000">*</span><span style="color:#000">t</span> <span style="color:#000">=</span> <span style="color:#000">x</span><span style="color:#000">-&gt;</span><span style="color:#000">son</span>[<span style="color:#000">d</span>];
</span></span><span style="display:flex;"><span>        <span style="color:#000">x</span><span style="color:#000">-&gt;</span><span style="color:#000">son</span>[<span style="color:#000">d</span>] <span style="color:#000">=</span> <span style="color:#000">t</span><span style="color:#000">-&gt;</span><span style="color:#000">son</span>[<span style="color:#000">d</span> <span style="color:#000">^</span> <span style="color:#1c01ce">1</span>], <span style="color:#000">t</span><span style="color:#000">-&gt;</span><span style="color:#000">son</span>[<span style="color:#000">d</span> <span style="color:#000">^</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">=</span> <span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">x</span><span style="color:#000">-&gt;</span><span style="color:#000">push_up</span>(), <span style="color:#000">t</span><span style="color:#000">-&gt;</span><span style="color:#000">push_up</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">t</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">void</span> <span style="color:#000">insert</span>(<span style="color:#000">Node</span> <span style="color:#000">*&amp;</span><span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">val</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">!</span><span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">new_node</span>(<span style="color:#000">val</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">return</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#000">x</span><span style="color:#000">-&gt;</span><span style="color:#000">siz</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">x</span><span style="color:#000">-&gt;</span><span style="color:#000">val</span> <span style="color:#000">==</span> <span style="color:#000">val</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">x</span><span style="color:#000">-&gt;</span><span style="color:#000">num</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">return</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">d</span> <span style="color:#000">=</span> <span style="color:#000">val</span> <span style="color:#000">&gt;</span> <span style="color:#000">x</span><span style="color:#000">-&gt;</span><span style="color:#000">val</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">insert</span>(<span style="color:#000">x</span><span style="color:#000">-&gt;</span><span style="color:#000">son</span>[<span style="color:#000">d</span>], <span style="color:#000">val</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">x</span><span style="color:#000">-&gt;</span><span style="color:#000">son</span>[<span style="color:#000">d</span>]<span style="color:#000">-&gt;</span><span style="color:#000">rnd</span> <span style="color:#000">&lt;</span> <span style="color:#000">x</span><span style="color:#000">-&gt;</span><span style="color:#000">rnd</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">rotate</span>(<span style="color:#000">x</span>, <span style="color:#000">d</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">void</span> <span style="color:#000">remove</span>(<span style="color:#000">Node</span> <span style="color:#000">*&amp;</span><span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">!</span><span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">return</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">remove</span>(<span style="color:#000">x</span><span style="color:#000">-&gt;</span><span style="color:#000">son</span>[<span style="color:#1c01ce">0</span>]), <span style="color:#000">remove</span>(<span style="color:#000">x</span><span style="color:#000">-&gt;</span><span style="color:#000">son</span>[<span style="color:#1c01ce">1</span>]);
</span></span><span style="display:flex;"><span>        <span style="color:#000">del_node</span>(<span style="color:#000">x</span>), <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#a90d91">nullptr</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">rank</span>(<span style="color:#000">Node</span> <span style="color:#000">*</span><span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">k</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">!</span><span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">return</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">k</span> <span style="color:#000">&lt;</span> <span style="color:#000">x</span><span style="color:#000">-&gt;</span><span style="color:#000">val</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">return</span> <span style="color:#000">rank</span>(<span style="color:#000">x</span><span style="color:#000">-&gt;</span><span style="color:#000">son</span>[<span style="color:#1c01ce">0</span>], <span style="color:#000">k</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">return</span> <span style="color:#000">rank</span>(<span style="color:#000">x</span><span style="color:#000">-&gt;</span><span style="color:#000">son</span>[<span style="color:#1c01ce">1</span>], <span style="color:#000">k</span>) <span style="color:#000">+</span> <span style="color:#000">x</span><span style="color:#000">-&gt;</span><span style="color:#000">num</span> <span style="color:#000">+</span> (<span style="color:#000">x</span><span style="color:#000">-&gt;</span><span style="color:#000">son</span>[<span style="color:#1c01ce">0</span>] <span style="color:#000">?</span> <span style="color:#000">x</span><span style="color:#000">-&gt;</span><span style="color:#000">son</span>[<span style="color:#1c01ce">0</span>]<span style="color:#000">-&gt;</span><span style="color:#000">siz</span> : <span style="color:#1c01ce">0</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">struct</span> <span style="color:#3f6e75">init</span>
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">init</span>()
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">maxn</span> <span style="color:#000">*</span> <span style="color:#1c01ce">100</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">bin</span>[<span style="color:#000">top</span><span style="color:#000">++</span>] <span style="color:#000">=</span> <span style="color:#000">&amp;</span><span style="color:#000">a</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    } <span style="color:#000">init_</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span><span style="color:#000">Treap</span><span style="color:#000">::</span><span style="color:#000">Node</span> <span style="color:#000">*</span><span style="color:#000">fa</span>[<span style="color:#000">maxn</span>], <span style="color:#000">*</span><span style="color:#000">self</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">Treap</span><span style="color:#000">::</span><span style="color:#000">insert</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">Treap</span><span style="color:#000">::</span><span style="color:#000">rank</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">Treap</span><span style="color:#000">::</span><span style="color:#000">remove</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">val</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">father</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">namespace</span> <span style="color:#000">divide</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">set</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">son</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">time</span>, <span style="color:#000">is</span>[<span style="color:#000">maxn</span>], <span style="color:#000">tot</span>, <span style="color:#000">all</span>, <span style="color:#000">siz</span>[<span style="color:#000">maxn</span>], <span style="color:#000">root</span>, <span style="color:#000">mx</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">vis</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">void</span> <span style="color:#000">remove</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">is</span>[<span style="color:#000">x</span>] <span style="color:#000">=</span> <span style="color:#000">time</span>, <span style="color:#000">tot</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">remove</span>(<span style="color:#000">self</span>[<span style="color:#000">x</span>]);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">auto</span> <span style="color:#000">i</span> : <span style="color:#000">son</span>[<span style="color:#000">x</span>])
</span></span><span style="display:flex;"><span>            <span style="color:#000">remove</span>(<span style="color:#000">i</span>), <span style="color:#000">remove</span>(<span style="color:#000">fa</span>[<span style="color:#000">i</span>]);
</span></span><span style="display:flex;"><span>        <span style="color:#000">son</span>[<span style="color:#000">x</span>].<span style="color:#000">clear</span>();
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">void</span> <span style="color:#000">get_siz</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">fa</span>, <span style="color:#a90d91">int</span> <span style="color:#000">dep</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">siz</span>[<span style="color:#000">x</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">mx</span>[<span style="color:#000">x</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">auto</span> <span style="color:#000">v</span> : <span style="color:#000">e</span>[<span style="color:#000">x</span>])
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">is</span>[<span style="color:#000">v</span>.<span style="color:#000">y</span>] <span style="color:#000">==</span> <span style="color:#000">time</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">vis</span>[<span style="color:#000">v</span>.<span style="color:#000">y</span>] <span style="color:#000">!=</span> <span style="color:#000">time</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">v</span>.<span style="color:#000">y</span> <span style="color:#000">!=</span> <span style="color:#000">fa</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">get_siz</span>(<span style="color:#000">v</span>.<span style="color:#000">y</span>, <span style="color:#000">x</span>, <span style="color:#000">dep</span> <span style="color:#000">+</span> <span style="color:#000">v</span>.<span style="color:#000">w</span>), <span style="color:#000">siz</span>[<span style="color:#000">x</span>] <span style="color:#000">+=</span> <span style="color:#000">siz</span>[<span style="color:#000">v</span>.<span style="color:#000">y</span>], <span style="color:#000">mx</span>[<span style="color:#000">x</span>] <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">max</span>(<span style="color:#000">mx</span>[<span style="color:#000">x</span>], <span style="color:#000">siz</span>[<span style="color:#000">v</span>.<span style="color:#000">y</span>]);
</span></span><span style="display:flex;"><span>        <span style="color:#000">mx</span>[<span style="color:#000">x</span>] <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">max</span>(<span style="color:#000">mx</span>[<span style="color:#000">x</span>], <span style="color:#000">all</span> <span style="color:#000">-</span> <span style="color:#000">siz</span>[<span style="color:#000">x</span>]);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">mx</span>[<span style="color:#000">x</span>] <span style="color:#000">&lt;</span> <span style="color:#000">mx</span>[<span style="color:#000">root</span>])
</span></span><span style="display:flex;"><span>            <span style="color:#000">root</span> <span style="color:#000">=</span> <span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">void</span> <span style="color:#000">dfs</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">fa</span>, <span style="color:#a90d91">int</span> <span style="color:#000">dep</span>, <span style="color:#000">Treap</span><span style="color:#000">::</span><span style="color:#000">Node</span> <span style="color:#000">*&amp;</span><span style="color:#000">p</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">insert</span>(<span style="color:#000">p</span>, <span style="color:#000">dep</span> <span style="color:#000">-</span> <span style="color:#000">val</span>[<span style="color:#000">x</span>]);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">auto</span> <span style="color:#000">v</span> : <span style="color:#000">e</span>[<span style="color:#000">x</span>])
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">is</span>[<span style="color:#000">v</span>.<span style="color:#000">y</span>] <span style="color:#000">!=</span> <span style="color:#000">time</span> <span style="color:#000">||</span> <span style="color:#000">v</span>.<span style="color:#000">y</span> <span style="color:#000">==</span> <span style="color:#000">fa</span> <span style="color:#000">||</span> <span style="color:#000">vis</span>[<span style="color:#000">v</span>.<span style="color:#000">y</span>] <span style="color:#000">==</span> <span style="color:#000">time</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">continue</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>                <span style="color:#000">dfs</span>(<span style="color:#000">v</span>.<span style="color:#000">y</span>, <span style="color:#000">x</span>, <span style="color:#000">dep</span> <span style="color:#000">+</span> <span style="color:#000">v</span>.<span style="color:#000">w</span>, <span style="color:#000">p</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">void</span> <span style="color:#000">solve</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">vis</span>[<span style="color:#000">x</span>] <span style="color:#000">=</span> <span style="color:#000">time</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">dfs</span>(<span style="color:#000">x</span>, <span style="color:#1c01ce">0</span>, <span style="color:#1c01ce">0</span>, <span style="color:#000">self</span>[<span style="color:#000">x</span>]);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">auto</span> <span style="color:#000">v</span> : <span style="color:#000">e</span>[<span style="color:#000">x</span>])
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">is</span>[<span style="color:#000">v</span>.<span style="color:#000">y</span>] <span style="color:#000">!=</span> <span style="color:#000">time</span> <span style="color:#000">||</span> <span style="color:#000">vis</span>[<span style="color:#000">v</span>.<span style="color:#000">y</span>] <span style="color:#000">==</span> <span style="color:#000">time</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">continue</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">root</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>, <span style="color:#000">mx</span>[<span style="color:#000">root</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">30</span>, <span style="color:#000">all</span> <span style="color:#000">=</span> <span style="color:#000">siz</span>[<span style="color:#000">v</span>.<span style="color:#000">y</span>];
</span></span><span style="display:flex;"><span>            <span style="color:#000">get_siz</span>(<span style="color:#000">v</span>.<span style="color:#000">y</span>, <span style="color:#000">x</span>, <span style="color:#1c01ce">0</span>), <span style="color:#000">get_siz</span>(<span style="color:#000">root</span>, <span style="color:#000">x</span>, <span style="color:#1c01ce">0</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#000">dfs</span>(<span style="color:#000">v</span>.<span style="color:#000">y</span>, <span style="color:#1c01ce">0</span>, <span style="color:#000">v</span>.<span style="color:#000">w</span>, <span style="color:#000">fa</span>[<span style="color:#000">root</span>]), <span style="color:#000">father</span>[<span style="color:#000">root</span>] <span style="color:#000">=</span> <span style="color:#000">x</span>, <span style="color:#000">son</span>[<span style="color:#000">x</span>].<span style="color:#000">insert</span>(<span style="color:#000">root</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#000">solve</span>(<span style="color:#000">root</span>);
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">void</span> <span style="color:#000">rebuild</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">time</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">tot</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">f</span> <span style="color:#000">=</span> <span style="color:#000">father</span>[<span style="color:#000">x</span>];
</span></span><span style="display:flex;"><span>        <span style="color:#000">son</span>[<span style="color:#000">f</span>].<span style="color:#000">erase</span>(<span style="color:#000">x</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">Treap</span><span style="color:#000">::</span><span style="color:#000">Node</span> <span style="color:#000">*</span><span style="color:#000">tmp</span> <span style="color:#000">=</span> <span style="color:#000">fa</span>[<span style="color:#000">x</span>];
</span></span><span style="display:flex;"><span>        <span style="color:#000">fa</span>[<span style="color:#000">x</span>] <span style="color:#000">=</span> <span style="color:#a90d91">nullptr</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">remove</span>(<span style="color:#000">x</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">root</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>, <span style="color:#000">mx</span>[<span style="color:#000">root</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">30</span>, <span style="color:#000">all</span> <span style="color:#000">=</span> <span style="color:#000">tot</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">get_siz</span>(<span style="color:#000">x</span>, <span style="color:#1c01ce">0</span>, <span style="color:#1c01ce">0</span>), <span style="color:#000">get_siz</span>(<span style="color:#000">root</span>, <span style="color:#1c01ce">0</span>, <span style="color:#1c01ce">0</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">father</span>[<span style="color:#000">root</span>] <span style="color:#000">=</span> <span style="color:#000">f</span>, <span style="color:#000">son</span>[<span style="color:#000">f</span>].<span style="color:#000">insert</span>(<span style="color:#000">root</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">fa</span>[<span style="color:#000">root</span>] <span style="color:#000">=</span> <span style="color:#000">tmp</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">solve</span>(<span style="color:#000">root</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">add</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">f</span>, <span style="color:#a90d91">int</span> <span style="color:#000">w</span>, <span style="color:#a90d91">int</span> <span style="color:#000">vall</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">tree</span><span style="color:#000">::</span><span style="color:#000">add_node</span>(<span style="color:#000">x</span>, <span style="color:#000">f</span>, <span style="color:#000">w</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">val</span>[<span style="color:#000">x</span>] <span style="color:#000">=</span> <span style="color:#000">vall</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">divide</span><span style="color:#000">::</span><span style="color:#000">son</span>[<span style="color:#000">father</span>[<span style="color:#000">x</span>] <span style="color:#000">=</span> <span style="color:#000">f</span>].<span style="color:#000">insert</span>(<span style="color:#000">x</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">res</span> <span style="color:#000">=</span> <span style="color:#000">rank</span>(<span style="color:#000">self</span>[<span style="color:#000">x</span>], <span style="color:#000">vall</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">insert</span>(<span style="color:#000">self</span>[<span style="color:#000">x</span>], <span style="color:#000">-</span><span style="color:#000">vall</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#000">x</span>; <span style="color:#000">father</span>[<span style="color:#000">i</span>]; <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#000">father</span>[<span style="color:#000">i</span>])
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">f</span> <span style="color:#000">=</span> <span style="color:#000">father</span>[<span style="color:#000">i</span>], <span style="color:#000">w</span> <span style="color:#000">=</span> <span style="color:#000">dis</span>(<span style="color:#000">x</span>, <span style="color:#000">f</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">res</span> <span style="color:#000">+=</span> <span style="color:#000">rank</span>(<span style="color:#000">self</span>[<span style="color:#000">f</span>], <span style="color:#000">vall</span> <span style="color:#000">-</span> <span style="color:#000">w</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">res</span> <span style="color:#000">-=</span> <span style="color:#000">rank</span>(<span style="color:#000">fa</span>[<span style="color:#000">i</span>], <span style="color:#000">vall</span> <span style="color:#000">-</span> <span style="color:#000">w</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">insert</span>(<span style="color:#000">fa</span>[<span style="color:#000">i</span>], <span style="color:#000">w</span> <span style="color:#000">-</span> <span style="color:#000">vall</span>), <span style="color:#000">insert</span>(<span style="color:#000">self</span>[<span style="color:#000">f</span>], <span style="color:#000">w</span> <span style="color:#000">-</span> <span style="color:#000">vall</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">flag</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#000">x</span>; <span style="color:#000">father</span>[<span style="color:#000">i</span>]; <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#000">father</span>[<span style="color:#000">i</span>])
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">self</span>[<span style="color:#000">i</span>]<span style="color:#000">-&gt;</span><span style="color:#000">siz</span> <span style="color:#000">&gt;</span> <span style="color:#000">self</span>[<span style="color:#000">father</span>[<span style="color:#000">i</span>]]<span style="color:#000">-&gt;</span><span style="color:#000">siz</span> <span style="color:#000">*</span> <span style="color:#1c01ce">0.8</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">flag</span> <span style="color:#000">=</span> <span style="color:#000">father</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">flag</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">divide</span><span style="color:#000">::</span><span style="color:#000">rebuild</span>(<span style="color:#000">flag</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#000">res</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">u</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">scanf</span>(<span style="color:#c41a16">&#34;%d&#34;</span>, <span style="color:#000">&amp;</span><span style="color:#000">u</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">scanf</span>(<span style="color:#c41a16">&#34;%d&#34;</span>, <span style="color:#000">&amp;</span><span style="color:#000">n</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">a</span>, <span style="color:#000">c</span>, <span style="color:#000">r</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">scanf</span>(<span style="color:#c41a16">&#34;%d%d%d&#34;</span>, <span style="color:#000">&amp;</span><span style="color:#000">a</span>, <span style="color:#000">&amp;</span><span style="color:#000">c</span>, <span style="color:#000">&amp;</span><span style="color:#000">r</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">a</span> <span style="color:#000">=</span> <span style="color:#000">a</span> <span style="color:#000">^</span> (<span style="color:#000">ans</span> <span style="color:#000">%</span> <span style="color:#1c01ce">1000000000</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">printf</span>(<span style="color:#c41a16">&#34;%lld</span><span style="color:#c41a16">\\</span><span style="color:#c41a16">n&#34;</span>, <span style="color:#000">ans</span> <span style="color:#000">+=</span> <span style="color:#000">add</span>(<span style="color:#000">i</span>, <span style="color:#000">a</span>, <span style="color:#000">c</span>, <span style="color:#000">r</span>));
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div>]]></content:encoded>
    </item>
    
    <item>
      <title>后缀数组学习笔记</title>
      <link>https://luoyisu.github.io/posts/suffix-array/</link>
      <pubDate>Tue, 11 Jan 2022 22:06:21 +0000</pubDate>
      
      <guid>https://luoyisu.github.io/posts/suffix-array/</guid>
      <description>&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;不能完全不管字符串，就硬着头皮学一学。&lt;/p&gt;
&lt;p&gt;完全未完工。&lt;/p&gt;</description>
      <content:encoded><![CDATA[<h2 id="前言">前言</h2>
<p>不能完全不管字符串，就硬着头皮学一学。</p>
<p>完全未完工。</p>
<h2 id="后缀数组">后缀数组</h2>
<p>后缀数组主要指的是两个数组：</p>
<p>$sa_i$ 表示排名第 $i$ 小的后缀的起始位置；</p>
<p>$rk_i$ 表示从 $i$ 开始的后缀的排名。</p>
<p>这里的后缀大小比较的是字典序。</p>
<p>说白了以上两个数组的意思分别是 kth 和 rank。</p>
<p>很显然 $sa_{rk_i}=rk_{sa_i}=i$</p>
<p>建议好好记住这个定义，否则以后可能绕来绕去就糊涂了。</p>
<h2 id="后缀数组求法">后缀数组求法</h2>
<p>不讲线性求法了（我也不会），我们来说一说常见好写的倍增法。</p>
<p>我们不是要求 $sa$ 吗，显然有 $sa$ 数组中两个下标  $i&lt;j$ 的条件是 $rk_{sa_i}&lt;rk_{sa_j}$。</p>
<p>假设我们对从每个字符开始长度为 $w$ 的串排好序了。</p>
<p>然后我们试图得到长度为 $2w$ 的 $sa$ 数组。</p>
<p>我们只需要把 $sa$ 数组以 $rk_{i}$ 为第一关键字，$rk_{i+w}$ 为第二关键字排序就行了。得出 $sa$ 数组之后再更新一下 $rk$ 数组即可。</p>
<p>听起来很简单啊，算一下复杂度，如果用快速排序，时间复杂度是 $O(n\log^2n)$ 的。</p>
<p>但是！如果我们用基数排序而不是快速排序，时间复杂度会优化到 $O(n\log n)$。</p>
<p>这个基数排序就是万恶之源了。</p>
<p>啥是基数排序呢？就是对于多关键字的排序，先对第二关键字稳定排序，再对第一关键字稳定排序，就能对整个序列稳定排序。</p>
<p>然后如果对每个关键字排序时使用计数排序，复杂度是 $O(n)$，那么在求 SA 的时候排序复杂度也就是 $O(n)$ 了。</p>
<p>然后就是比较绕的地方了，如果头脑很困不清醒（比如我）可能就会被绕进去。</p>
<p>计数排序的原理说白了也很简单：算出比每个值小（或者说优先级更高）的值有几个，然后把这个值放到正确的位置里。</p>
<p>在这里我们需要计数的是 $rk$ 的值。</p>
<p>emmmm好像没什么可以说的了，该看代码理解了。</p>
<p>借用 <a href="https://oi-wiki.org/string/sa/#onlogn"><strong>OI Wiki</strong></a> 上的一份代码：</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#a90d91">namespace</span> <span style="color:#000">std</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">N</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1000010</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">char</span> <span style="color:#000">s</span>[<span style="color:#000">N</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">n</span>, <span style="color:#000">sa</span>[<span style="color:#000">N</span>], <span style="color:#000">rk</span>[<span style="color:#000">N</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">1</span>], <span style="color:#000">oldrk</span>[<span style="color:#000">N</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">1</span>], <span style="color:#000">id</span>[<span style="color:#000">N</span>], <span style="color:#000">cnt</span>[<span style="color:#000">N</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>() {
</span></span><span style="display:flex;"><span>  <span style="color:#a90d91">int</span> <span style="color:#000">i</span>, <span style="color:#000">m</span>, <span style="color:#000">p</span>, <span style="color:#000">w</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  <span style="color:#000">scanf</span>(<span style="color:#c41a16">&#34;%s&#34;</span>, <span style="color:#000">s</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>  <span style="color:#000">n</span> <span style="color:#000">=</span> <span style="color:#000">strlen</span>(<span style="color:#000">s</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>  <span style="color:#000">m</span> <span style="color:#000">=</span> <span style="color:#000">max</span>(<span style="color:#000">n</span>, <span style="color:#1c01ce">300</span>);
</span></span><span style="display:flex;"><span>  <span style="color:#a90d91">for</span> (<span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">++</span><span style="color:#000">i</span>) <span style="color:#000">++</span><span style="color:#000">cnt</span>[<span style="color:#000">rk</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">s</span>[<span style="color:#000">i</span>]];
</span></span><span style="display:flex;"><span>  <span style="color:#a90d91">for</span> (<span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">++</span><span style="color:#000">i</span>) <span style="color:#000">cnt</span>[<span style="color:#000">i</span>] <span style="color:#000">+=</span> <span style="color:#000">cnt</span>[<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>];
</span></span><span style="display:flex;"><span>  <span style="color:#a90d91">for</span> (<span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span> <span style="color:#000">&gt;=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">--</span><span style="color:#000">i</span>) <span style="color:#000">sa</span>[<span style="color:#000">cnt</span>[<span style="color:#000">rk</span>[<span style="color:#000">i</span>]]<span style="color:#000">--</span>] <span style="color:#000">=</span> <span style="color:#000">i</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  <span style="color:#a90d91">for</span> (<span style="color:#000">w</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">w</span> <span style="color:#000">&lt;</span> <span style="color:#000">n</span>; <span style="color:#000">w</span> <span style="color:#000">&lt;&lt;=</span> <span style="color:#1c01ce">1</span>) {
</span></span><span style="display:flex;"><span>    <span style="color:#000">memset</span>(<span style="color:#000">cnt</span>, <span style="color:#1c01ce">0</span>, <span style="color:#a90d91">sizeof</span>(<span style="color:#000">cnt</span>));
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">++</span><span style="color:#000">i</span>) <span style="color:#000">id</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">sa</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">++</span><span style="color:#000">i</span>) <span style="color:#000">++</span><span style="color:#000">cnt</span>[<span style="color:#000">rk</span>[<span style="color:#000">id</span>[<span style="color:#000">i</span>] <span style="color:#000">+</span> <span style="color:#000">w</span>]];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">++</span><span style="color:#000">i</span>) <span style="color:#000">cnt</span>[<span style="color:#000">i</span>] <span style="color:#000">+=</span> <span style="color:#000">cnt</span>[<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span> <span style="color:#000">&gt;=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">--</span><span style="color:#000">i</span>) <span style="color:#000">sa</span>[<span style="color:#000">cnt</span>[<span style="color:#000">rk</span>[<span style="color:#000">id</span>[<span style="color:#000">i</span>] <span style="color:#000">+</span> <span style="color:#000">w</span>]]<span style="color:#000">--</span>] <span style="color:#000">=</span> <span style="color:#000">id</span>[<span style="color:#000">i</span>]; <span style="color:#177500">// 对第二关键字进行计数排序
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>    <span style="color:#000">memset</span>(<span style="color:#000">cnt</span>, <span style="color:#1c01ce">0</span>, <span style="color:#a90d91">sizeof</span>(<span style="color:#000">cnt</span>));
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">++</span><span style="color:#000">i</span>) <span style="color:#000">id</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">sa</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">++</span><span style="color:#000">i</span>) <span style="color:#000">++</span><span style="color:#000">cnt</span>[<span style="color:#000">rk</span>[<span style="color:#000">id</span>[<span style="color:#000">i</span>]]];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">++</span><span style="color:#000">i</span>) <span style="color:#000">cnt</span>[<span style="color:#000">i</span>] <span style="color:#000">+=</span> <span style="color:#000">cnt</span>[<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span> <span style="color:#000">&gt;=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">--</span><span style="color:#000">i</span>) <span style="color:#000">sa</span>[<span style="color:#000">cnt</span>[<span style="color:#000">rk</span>[<span style="color:#000">id</span>[<span style="color:#000">i</span>]]]<span style="color:#000">--</span>] <span style="color:#000">=</span> <span style="color:#000">id</span>[<span style="color:#000">i</span>]; <span style="color:#177500">// 对第一关键字进行计数排序
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>    <span style="color:#000">memcpy</span>(<span style="color:#000">oldrk</span>, <span style="color:#000">rk</span>, <span style="color:#a90d91">sizeof</span>(<span style="color:#000">rk</span>));
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#000">p</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>, <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">++</span><span style="color:#000">i</span>) { <span style="color:#177500">// 更新 rk 数组时需要注意：完全相同的串排名也应该一样。
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>      <span style="color:#a90d91">if</span> (<span style="color:#000">oldrk</span>[<span style="color:#000">sa</span>[<span style="color:#000">i</span>]] <span style="color:#000">==</span> <span style="color:#000">oldrk</span>[<span style="color:#000">sa</span>[<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>]] <span style="color:#000">&amp;&amp;</span>
</span></span><span style="display:flex;"><span>          <span style="color:#000">oldrk</span>[<span style="color:#000">sa</span>[<span style="color:#000">i</span>] <span style="color:#000">+</span> <span style="color:#000">w</span>] <span style="color:#000">==</span> <span style="color:#000">oldrk</span>[<span style="color:#000">sa</span>[<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">+</span> <span style="color:#000">w</span>]) {
</span></span><span style="display:flex;"><span>        <span style="color:#000">rk</span>[<span style="color:#000">sa</span>[<span style="color:#000">i</span>]] <span style="color:#000">=</span> <span style="color:#000">p</span>;
</span></span><span style="display:flex;"><span>      } <span style="color:#a90d91">else</span> {
</span></span><span style="display:flex;"><span>        <span style="color:#000">rk</span>[<span style="color:#000">sa</span>[<span style="color:#000">i</span>]] <span style="color:#000">=</span> <span style="color:#000">++</span><span style="color:#000">p</span>;
</span></span><span style="display:flex;"><span>      }
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>  }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  <span style="color:#a90d91">for</span> (<span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">++</span><span style="color:#000">i</span>) <span style="color:#000">printf</span>(<span style="color:#c41a16">&#34;%d &#34;</span>, <span style="color:#000">sa</span>[<span style="color:#000">i</span>]);
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  <span style="color:#a90d91">return</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><p>然后上面的代码常数是很大的。</p>
<p>有以下的常数优化：</p>
<ul>
<li>第二关键字无需计数排序，只需把超过范围的放到前面，剩下的按照原先顺序填进去即可。</li>
<li>优化值域：每次计数排序的值域可以设为每一次更新 $rk$ 时不同元素的个数。</li>
<li>用一个数组存下来 $rk_{id_i}$：减少不连续内存访问（我的盲区）。</li>
<li>用函数 cmp 来计算是否重复：减少不连续内存访问（我的盲区）。</li>
<li>若排名都不相同可直接生成后缀数组：如果 $rk$ 的值域已经达到了 $[1,n]$，那么已经排好序，无需接着生成数组。</li>
</ul>
<p>下面是我写的优化过常数的代码：</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cerr</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1e6</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">char</span> <span style="color:#000">s</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">n</span>, <span style="color:#000">p</span>, <span style="color:#000">sa</span>[<span style="color:#000">maxn</span>], <span style="color:#000">rk</span>[<span style="color:#000">maxn</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">1</span>], <span style="color:#000">tmp</span>[<span style="color:#000">maxn</span>], <span style="color:#000">cnt</span>[<span style="color:#000">maxn</span>], <span style="color:#000">oldrk</span>[<span style="color:#000">maxn</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">1</span>], <span style="color:#000">val</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">bool</span> <span style="color:#000">equ</span>(<span style="color:#a90d91">int</span> <span style="color:#000">i</span>, <span style="color:#a90d91">int</span> <span style="color:#000">j</span>, <span style="color:#a90d91">int</span> <span style="color:#000">dep</span>) { <span style="color:#a90d91">return</span> <span style="color:#000">oldrk</span>[<span style="color:#000">i</span>] <span style="color:#000">==</span> <span style="color:#000">oldrk</span>[<span style="color:#000">j</span>] <span style="color:#000">&amp;&amp;</span> <span style="color:#000">oldrk</span>[<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#000">dep</span>] <span style="color:#000">==</span> <span style="color:#000">oldrk</span>[<span style="color:#000">j</span> <span style="color:#000">+</span> <span style="color:#000">dep</span>]; }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">scanf</span>(<span style="color:#c41a16">&#34;%s&#34;</span>, <span style="color:#000">s</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">n</span> <span style="color:#000">=</span> <span style="color:#000">strlen</span>(<span style="color:#000">s</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">m</span> <span style="color:#000">=</span> <span style="color:#1c01ce">300</span>, <span style="color:#000">p</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cnt</span>[<span style="color:#000">rk</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">s</span>[<span style="color:#000">i</span>]]<span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cnt</span>[<span style="color:#000">i</span>] <span style="color:#000">+=</span> <span style="color:#000">cnt</span>[<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span> <span style="color:#000">&gt;=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">sa</span>[<span style="color:#000">cnt</span>[<span style="color:#000">rk</span>[<span style="color:#000">i</span>]]<span style="color:#000">--</span>] <span style="color:#000">=</span> <span style="color:#000">i</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">dep</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">dep</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">dep</span> <span style="color:#000">&lt;&lt;=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">m</span> <span style="color:#000">=</span> <span style="color:#000">p</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">p</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#000">n</span> <span style="color:#000">-</span> <span style="color:#000">dep</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>) <span style="color:#177500">// 把超过去的放到前面
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>            <span style="color:#000">val</span>[<span style="color:#000">++</span><span style="color:#000">p</span>] <span style="color:#000">=</span> <span style="color:#000">i</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>) <span style="color:#177500">// 剩下的按照原顺序填进去
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>            <span style="color:#a90d91">if</span> (<span style="color:#000">sa</span>[<span style="color:#000">i</span>] <span style="color:#000">&gt;</span> <span style="color:#000">dep</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">val</span>[<span style="color:#000">++</span><span style="color:#000">p</span>] <span style="color:#000">=</span> <span style="color:#000">sa</span>[<span style="color:#000">i</span>] <span style="color:#000">-</span> <span style="color:#000">dep</span>;
</span></span><span style="display:flex;"><span>       	<span style="color:#177500">// val 是按照第二关键字排序后的 sa 数组的值
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>        <span style="color:#000">memset</span>(<span style="color:#000">cnt</span>, <span style="color:#1c01ce">0</span>, <span style="color:#a90d91">sizeof</span>(<span style="color:#000">cnt</span>));
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">cnt</span>[<span style="color:#000">tmp</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">rk</span>[<span style="color:#000">val</span>[<span style="color:#000">i</span>]]]<span style="color:#000">++</span>; <span style="color:#177500">// tmp 是常数优化用的
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">cnt</span>[<span style="color:#000">i</span>] <span style="color:#000">+=</span> <span style="color:#000">cnt</span>[<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>]; <span style="color:#177500">// 对计数排序用的数组求前缀和来得到元素的位置
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span> <span style="color:#000">&gt;=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">sa</span>[<span style="color:#000">cnt</span>[<span style="color:#000">tmp</span>[<span style="color:#000">i</span>]]<span style="color:#000">--</span>] <span style="color:#000">=</span> <span style="color:#000">val</span>[<span style="color:#000">i</span>]; <span style="color:#177500">// 对于排序前数组的每个值分配一个新位置
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>        <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">swap</span>(<span style="color:#000">rk</span>, <span style="color:#000">oldrk</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">p</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">rk</span>[<span style="color:#000">sa</span>[<span style="color:#000">i</span>]] <span style="color:#000">=</span> <span style="color:#000">equ</span>(<span style="color:#000">sa</span>[<span style="color:#000">i</span>], <span style="color:#000">sa</span>[<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>], <span style="color:#000">dep</span>) <span style="color:#000">?</span> <span style="color:#000">p</span> : <span style="color:#000">++</span><span style="color:#000">p</span>; <span style="color:#177500">// 更新 rk 数组
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>        <span style="color:#a90d91">if</span> (<span style="color:#000">p</span> <span style="color:#000">==</span> <span style="color:#000">n</span>) <span style="color:#177500">// 最后一个优化
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>            <span style="color:#a90d91">break</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">printf</span>(<span style="color:#c41a16">&#34;%d &#34;</span>, <span style="color:#000">sa</span>[<span style="color:#000">i</span>]);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="应用">应用</h2>
<p>咕咕咕</p>]]></content:encoded>
    </item>
    
    <item>
      <title>loj3050 「十二省联考 2019」 骗分过样例</title>
      <link>https://luoyisu.github.io/posts/loj3050/</link>
      <pubDate>Mon, 10 Jan 2022 21:14:13 +0000</pubDate>
      
      <guid>https://luoyisu.github.io/posts/loj3050/</guid>
      <description>&lt;h2 id=&#34;description&#34;&gt;Description&lt;/h2&gt;
&lt;p&gt;给出一些测试点的输入文件和输出文件以及每个测试点要实现的功能编号，你需要写一个程序通过这些给出的测试点。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://loj.ac/p/3050&#34;&gt;链接&lt;/a&gt;，这个题在 loj 上体验很好，洛谷上虽然也有这个题但容易被卡常。&lt;/p&gt;</description>
      <content:encoded><![CDATA[<h2 id="description">Description</h2>
<p>给出一些测试点的输入文件和输出文件以及每个测试点要实现的功能编号，你需要写一个程序通过这些给出的测试点。</p>
<p><a href="https://loj.ac/p/3050">链接</a>，这个题在 loj 上体验很好，洛谷上虽然也有这个题但容易被卡常。</p>
<h2 id="solution">Solution</h2>
<p>很明显：功能开头是 $1$ 还是 $2$ 区别很大，我们分开来看。</p>
<h3 id="input17">input1~7</h3>
<h4 id="input13">input1~3</h4>
<p>这三个点都是 $\text{1\\_998244353}$，我们看一下数据。</p>
<p>input：<code>0 1 2 3</code></p>
<p>output：<code>1 19 361 6859</code></p>
<p>很明显是要求 $19^n$。</p>
<p>发现肯定有一个模数，那很容易想到就是 $998244353$​。</p>
<p>写一个快速幂，这三个点就能过了。</p>
<p>注意第三个点指数很大，根据欧拉定理，我们只需要在读入的时候对 $998244352$ 取模即可。</p>
<h4 id="input4">input4</h4>
<p>这个点是 $1?$。</p>
<p>看一下比较小的数据，发现还是求的 $19^n$，而模数不一样了，联想到由 $998244353$ 变成了 $?$，这个点看起来是让我们确定模数。</p>
<p>找到最大的数，发现是 $10^6$ 级别的，且不超过 $2\times10^6$，那我们可以尝试枚举这个模数，判断一下 $19^{627811703016764290815178977207148434322}$ 是否等于 $642666$ 即可。</p>
<p>写了一个 python 代码跑：</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#a90d91">def</span> <span style="color:#000">qpow</span>(<span style="color:#000">a</span>, <span style="color:#000">x</span>, <span style="color:#000">p</span>):
</span></span><span style="display:flex;"><span>    <span style="color:#000">res</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> <span style="color:#000">x</span> <span style="color:#000">&gt;</span> <span style="color:#1c01ce">0</span>:
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> <span style="color:#000">x</span> <span style="color:#000">%</span> <span style="color:#1c01ce">2</span> <span style="color:#000">==</span> <span style="color:#1c01ce">1</span>:
</span></span><span style="display:flex;"><span>            <span style="color:#000">res</span> <span style="color:#000">=</span> <span style="color:#000">res</span> <span style="color:#000">*</span> <span style="color:#000">a</span> <span style="color:#000">%</span> <span style="color:#000">p</span>
</span></span><span style="display:flex;"><span>        <span style="color:#000">x</span> <span style="color:#000">&gt;&gt;=</span> <span style="color:#1c01ce">1</span>
</span></span><span style="display:flex;"><span>        <span style="color:#000">a</span> <span style="color:#000">=</span> <span style="color:#000">a</span> <span style="color:#000">*</span> <span style="color:#000">a</span> <span style="color:#000">%</span> <span style="color:#000">p</span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#000">res</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">for</span> <span style="color:#000">i</span> <span style="color:#000">in</span> <span style="color:#a90d91">range</span>(<span style="color:#1c01ce">10</span> <span style="color:#000">**</span> <span style="color:#1c01ce">6</span>, <span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#1c01ce">10</span> <span style="color:#000">**</span> <span style="color:#1c01ce">6</span>):
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> <span style="color:#000">qpow</span>(<span style="color:#1c01ce">19</span>, <span style="color:#1c01ce">627811703016764290815178977207148434322</span>, <span style="color:#000">i</span>) <span style="color:#000">==</span> <span style="color:#1c01ce">642666</span>:
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">print</span>(<span style="color:#c41a16">&#39;ans&#39;</span>, <span style="color:#000">i</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">break</span>
</span></span><span style="display:flex;"><span>    <span style="color:#177500">#print(&#39;check&#39;, i)</span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> <span style="color:#000">i</span> <span style="color:#000">%</span> <span style="color:#1c01ce">10000</span> <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>:
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">print</span>(<span style="color:#000">i</span>)
</span></span></code></pre></div><p>能找到一个模数是 $1145141$，当看到 $114514$ 我们就知道应该是找对了。</p>
<p>模数找到了，这个点还有一个问题：指数太大。</p>
<p>我们看一下 $1145141$ 这个数，写一个判断素数的程序，发现是个质数，且和 $19$ 互质，那么根据欧拉定理，我们只需要在读入的时候对 $1145141-1$ 取模即可。</p>
<p>这个点也就很愉快地搞定了。</p>
<h4 id="input5">input5</h4>
<p>实际上这个点可能是整道题最难的一个点了。</p>
<p>这个点是 $1?+$。</p>
<p>联系上一个点，看一下数据，发现似乎还是让我们确定模数，但模数似乎很大很大，最大的答案达到了 $5211500658258874318$，枚举肯定是不行了。</p>
<p>我们想一想怎么样能确定模数。。。</p>
<p>可以想到一个方法：找到两个相邻的指数，根据答案来确定质数。如果不懂就接着往下看。</p>
<p>我们打一个表：</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;bits/stdc++.h&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#a90d91">namespace</span> <span style="color:#000">std</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">typedef</span> <span style="color:#000">__int128_t</span> <span style="color:#000">lll</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000">lll</span> <span style="color:#000">read</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">lll</span> <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>, <span style="color:#000">f</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">char</span> <span style="color:#000">ch</span> <span style="color:#000">=</span> <span style="color:#000">getchar</span>();
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (; <span style="color:#000">!</span><span style="color:#000">isdigit</span>(<span style="color:#000">ch</span>); <span style="color:#000">ch</span> <span style="color:#000">=</span> <span style="color:#000">getchar</span>())
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">ch</span> <span style="color:#000">==</span> <span style="color:#2300ce">&#39;-&#39;</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">f</span> <span style="color:#000">=</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (; <span style="color:#000">isdigit</span>(<span style="color:#000">ch</span>); <span style="color:#000">ch</span> <span style="color:#000">=</span> <span style="color:#000">getchar</span>())
</span></span><span style="display:flex;"><span>        <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">x</span> <span style="color:#000">*</span> <span style="color:#1c01ce">10</span> <span style="color:#000">+</span> <span style="color:#000">ch</span> <span style="color:#000">-</span> <span style="color:#2300ce">&#39;0&#39;</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#000">x</span> <span style="color:#000">*</span> <span style="color:#000">f</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">write</span>(<span style="color:#000">lll</span> <span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">x</span> <span style="color:#000">&gt;</span> <span style="color:#1c01ce">9</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">write</span>(<span style="color:#000">x</span> <span style="color:#000">/</span> <span style="color:#1c01ce">10</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">putchar</span>(<span style="color:#000">x</span> <span style="color:#000">%</span> <span style="color:#1c01ce">10</span> <span style="color:#000">+</span> <span style="color:#2300ce">&#39;0&#39;</span>);
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">space</span>() { <span style="color:#000">putchar</span>(<span style="color:#2300ce">&#39; &#39;</span>); }
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">endln</span>() { <span style="color:#000">putchar</span>(<span style="color:#000">&#39;\\</span><span style="color:#000">n</span><span style="color:#000">&#39;</span>); }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">n</span> <span style="color:#000">=</span> <span style="color:#1c01ce">10000</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1e4</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000">pair</span><span style="color:#000">&lt;</span><span style="color:#000">lll</span>, <span style="color:#000">lll</span><span style="color:#000">&gt;</span> <span style="color:#000">a</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#000">lll</span> <span style="color:#000">myabs</span>(<span style="color:#000">lll</span> <span style="color:#000">x</span>) { <span style="color:#a90d91">return</span> <span style="color:#000">x</span> <span style="color:#000">&lt;</span> <span style="color:#1c01ce">0</span> <span style="color:#000">?</span> <span style="color:#000">-</span><span style="color:#000">x</span> : <span style="color:#000">x</span>; }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">lll</span> <span style="color:#000">res</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;        
</span></span><span style="display:flex;"><span>    <span style="color:#000">freopen</span>(<span style="color:#c41a16">&#34;tmp5.in&#34;</span>, <span style="color:#c41a16">&#34;r&#34;</span>, <span style="color:#000">stdin</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">first</span> <span style="color:#000">=</span> <span style="color:#000">read</span>();
</span></span><span style="display:flex;"><span>    <span style="color:#000">freopen</span>(<span style="color:#c41a16">&#34;software5.ans&#34;</span>, <span style="color:#c41a16">&#34;r&#34;</span>, <span style="color:#000">stdin</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">second</span> <span style="color:#000">=</span> <span style="color:#000">read</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#177500">//if (myabs(a[i].first - a[i].second) &lt; 10000000000)
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>        <span style="color:#177500">//    write(a[i].first), putchar(&#39; &#39;), write(a[i].second), putchar(&#39;\\n&#39;);
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">sort</span>(<span style="color:#000">a</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">a</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">+</span> <span style="color:#000">n</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">first</span> <span style="color:#000">-</span> <span style="color:#000">a</span>[<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>].<span style="color:#000">first</span> <span style="color:#000">&lt;</span> <span style="color:#1c01ce">5</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">write</span>(<span style="color:#000">a</span>[<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>].<span style="color:#000">first</span>), <span style="color:#000">space</span>(), <span style="color:#000">write</span>(<span style="color:#000">a</span>[<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>].<span style="color:#000">second</span>), <span style="color:#000">space</span>(), <span style="color:#000">write</span>(<span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">first</span>), <span style="color:#000">space</span>(), <span style="color:#000">write</span>(<span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">second</span>), <span style="color:#000">endln</span>();
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#177500">/*
</span></span></span><span style="display:flex;"><span><span style="color:#177500">
</span></span></span><span style="display:flex;"><span><span style="color:#177500">5211500658258874318
</span></span></span><span style="display:flex;"><span><span style="color:#177500">
</span></span></span><span style="display:flex;"><span><span style="color:#177500">*/</span>
</span></span></code></pre></div><p>发现有这么一组数据：</p>
<pre tabindex="0"><code>264708066 1996649514996338529
264708068 1589589654696467295
</code></pre><p>也就是说，设 $1996649514996338529=a,1589589654696467295=b$，有 $19\times19a\equiv b\pmod p$。</p>
<p>那么 $p\mid19\times19a-b=719200885258981741674$​，又由于 $p&gt;5211500658258874318$​​，所以我们只需要枚举一个小于等于 $138$ 的约数就行。</p>
<p>然后拿 python 一算，好家伙，$138$ 正好是一个约数，我们把 $719200885258981741674/138=5211600617818708273$ 这个数放进我们的程序里试一下，它居然过了，真好。</p>
<p>那么这个点也就过了。</p>
<p>以上五个点可以写成一个函数：传入模数，求 $19^n\pmod p$。</p>
<h4 id="input67">input6~7</h4>
<p>这两个点给出了模数 $998244353$，但特殊之处在于这个 $\text{wa}$，看一下数据发现出现了负数，再看看题目上的提示，很明显是溢出导致的。</p>
<p>具体是哪里溢出了呢？</p>
<p>首先肯定不是快速幂，你可以试一试，也可以用这个思路去想：每个人的快速幂写法会有差异，不能用这个出题。</p>
<p>那就只剩下暴力一个个乘上去了。。。</p>
<p>试一下，发现貌似是对的。</p>
<p>也就是说在 <code>res = res * 19 % mod</code> 这一步中没开 <code>long long</code> 导致溢出了。</p>
<p>这玩意肯定没法用快速幂算，但是考虑到一个事情：这个溢出相当于对 $2^{32}$ 取模，那么就会产生循环节（因为这个数不是质数，欧拉函数不是它减去 $1$）。</p>
<p>我们可以用 <code>map</code> 来判断循环节，反正循环节应该不是很长：</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#a90d91">typedef</span> <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">ll</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">typedef</span> <span style="color:#000">__int128_t</span> <span style="color:#000">lll</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">typedef</span> <span style="color:#a90d91">unsigned</span> <span style="color:#a90d91">int</span> <span style="color:#000">ui</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">typedef</span> <span style="color:#a90d91">unsigned</span> <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">ull</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">n</span> <span style="color:#000">=</span> <span style="color:#1c01ce">10000</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1e4</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">mod</span> <span style="color:#000">=</span> <span style="color:#1c01ce">998244353</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000">pair</span><span style="color:#000">&lt;</span><span style="color:#000">lll</span>, <span style="color:#000">lll</span><span style="color:#000">&gt;</span> <span style="color:#000">a</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#000">lll</span> <span style="color:#000">myabs</span>(<span style="color:#000">lll</span> <span style="color:#000">x</span>) { <span style="color:#a90d91">return</span> <span style="color:#000">x</span> <span style="color:#000">&lt;</span> <span style="color:#1c01ce">0</span> <span style="color:#000">?</span> <span style="color:#000">-</span><span style="color:#000">x</span> : <span style="color:#000">x</span>; }
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">int</span> <span style="color:#000">errmul</span>(<span style="color:#a90d91">int</span> <span style="color:#000">a</span>, <span style="color:#a90d91">int</span> <span style="color:#000">b</span>) { <span style="color:#a90d91">return</span> (<span style="color:#a90d91">int</span>)((<span style="color:#000">ui</span>)<span style="color:#000">a</span> <span style="color:#000">*</span> (<span style="color:#000">ui</span>)<span style="color:#000">b</span>); }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000">map</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span>, <span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">mp</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">now</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">mp</span>[<span style="color:#1c01ce">0</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; ; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">now</span> <span style="color:#000">=</span> <span style="color:#000">errmul</span>(<span style="color:#000">now</span>, <span style="color:#1c01ce">19</span>) <span style="color:#000">%</span> <span style="color:#000">mod</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">mp</span>.<span style="color:#000">count</span>(<span style="color:#000">now</span>))
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">i</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">mp</span>[<span style="color:#000">now</span>] <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#000">mp</span>[<span style="color:#000">now</span>] <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">now</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">return</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#000">mp</span>[<span style="color:#000">now</span>] <span style="color:#000">=</span> <span style="color:#000">i</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><p>然后找到循环节开始位置是 $55245$，长度是 $45699$。</p>
<p>对于这两个点，直接暴力找循环节，对于一个询问，直接小学数学取个模就行。</p>
<p>那么这前 $7$ 个点就过了，$41$ 分到手。</p>
<h3 id="input816">input8~16</h3>
<p>这些点都有一个共同特征：给一个区间，问区间内所有数的一些性质。</p>
<p>分开来看三种功能：</p>
<h4 id="input810">input8~10</h4>
<p>这三个点的关键信息是 $\text{p}$，看一下小数据：</p>
<p>input：<code>2 10</code></p>
<p>output：<code>pp.p.p...</code></p>
<p>很明显了吧，是求区间内所有质数。</p>
<p>发现数是非常大的，但区间不大，只有 $10^6$ 级别。</p>
<p>那我们直接对每个区间内的所有数进行 Miller-Rabin 素性测试就行了。</p>
<p>我一般找 $10$ 个随机数测试，但本机速度有点慢，跑不过去，于是进行了一波卡常：不使用随机数，而是用固定的数来测试（因为这样可以减少测试次数）。</p>
<p>试了试发现好像只用 $2,3$​ 检测就能过这三个点，那就这样吧。</p>
<p>后来我又试了试随机数的判定，不知道为什么，在 loj 跑 $10$ 个随机数仍然飞快（第 $10$ 个点 232ms），但在洛谷跑 $5$ 个随机数就很勉强（第 $10$ 个点 1.39s），所以还是建议大家去 loj 做，避免卡常（）</p>
<h4 id="input1113">input11~13</h4>
<p>关键信息是 $\text{u}$，这是啥呢？</p>
<p>看一看答案，发现只有三种：负号、正号、零。</p>
<p>这。。再看看小数据联想一下，应该是莫比乌斯函数。</p>
<p>和上一个功能一样，数非常大，区间不大。</p>
<p>有一个比较经典的题是区间筛素数，使用的方法是先筛出平方根范围内的素数，然后再筛那个区间里的素数。</p>
<p>我们可以尝试类似的思路。</p>
<p>先筛出 $(10^{18})^{1/3}=10^6$ 范围内的素数以及莫比乌斯函数，用这些数去筛指定区间内的莫比乌斯函数，即让每个数都除掉他们在 $[1,10^6]$ 范围内的质因子，同时更新莫比乌斯函数。</p>
<p>这样剩下的数有一些很好的性质：要么是素数，要么是两个大于 $10^6$ 素数的积。</p>
<p>那么接下来的事情就比较明了了：</p>
<ul>
<li>用 Miller-Rabin 先判断剩下的数是不是素数，如果是，那么把答案取相反数；</li>
<li>如果不是素数，我们判断这个数是不是平方数，如果是，答案变为 $0$；</li>
<li>如果都不是，那么就是由两个不同素数乘起来得到的，这样答案不变。</li>
</ul>
<p>写出来之后在我的机子上又跑不过去了，想办法剪剪枝卡常：</p>
<ul>
<li>多筛一些质数，能减少 Miller-Rabin 的执行次数；</li>
<li>很显然，如果答案已经是 $0$，不用管；</li>
<li>如果剩下的数是 $1$，不用管；</li>
</ul>
<p>折腾完之后在我的机子上看起来速度还行，loj 上飞快。</p>
<p>这三个点也就过了。</p>
<h4 id="input1416">input14~16</h4>
<p>关键信息是 $\text{g}$，有了刚刚的经验，这个东西应该也是一个数学符号。</p>
<p>想一想再看看数据能发现是判断一个数是否是指定数的原根。</p>
<p>首先有<strong>原根判定定理</strong>：设 $m \geqslant 3, \gcd(a,m)=1$​，则 $a$​ 是模 $m$​ 的原根的充要条件是，对于 $\varphi(m)$​ 的每个素因数 $p$​，都有 $a^{\frac{\varphi(m)}{p}}\not\equiv 1\pmod m$​。</p>
<p>对于 input14，模数全部是 $998244353$​，$\varphi(998244353)=998244352$ 质因子只有 $2,7,17$，区间也不大，直接暴力判断即可。</p>
<p>对于 input15，有一个模数是 $13123111$，$\varphi(13123111)=13123110=2\times3\times5\times7\times11\times13\times19\times23$，区间还贼大，暴力判断看上去不太行。</p>
<p>得请出另一个结论了：若 $\gcd\big(k,\varphi(m)\big)=1$，则有：$\delta_m(g^k)=\varphi(m)$，即 $g^k$ 也是模 $m$ 的原根。</p>
<p>用这个就可以筛原根了。</p>
<p>接着是最后一个点 input16，这个点有一个 $10^9\sim2\times10^9$ 的质数作为模数需要我们确定，我们使用 input14 的思路暴力枚举这个质数，然后暴力分解质因数来判断原根情况和原来是否一致即可。我这里只检验了前 $49$ 位。</p>
<p>看起来很暴力，但因为素数并不是特别多而且很容易检测出问题，实际代码跑起来是很快的。</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cctype&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cmath&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;map&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;string&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cerr</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">typedef</span> <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">ll</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">typedef</span> <span style="color:#000">__int128_t</span> <span style="color:#000">lll</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">typedef</span> <span style="color:#a90d91">unsigned</span> <span style="color:#a90d91">int</span> <span style="color:#000">ui</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">typedef</span> <span style="color:#a90d91">unsigned</span> <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">ull</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000">ll</span> <span style="color:#000">qpow</span>(<span style="color:#000">ll</span> <span style="color:#000">a</span>, <span style="color:#000">ll</span> <span style="color:#000">x</span>, <span style="color:#000">ll</span> <span style="color:#000">p</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">ll</span> <span style="color:#000">res</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (; <span style="color:#000">x</span>; <span style="color:#000">x</span> <span style="color:#000">&gt;&gt;=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">a</span> <span style="color:#000">=</span> (<span style="color:#000">lll</span>)<span style="color:#000">a</span> <span style="color:#000">*</span> <span style="color:#000">a</span> <span style="color:#000">%</span> <span style="color:#000">p</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">x</span> <span style="color:#000">&amp;</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">res</span> <span style="color:#000">=</span> (<span style="color:#000">lll</span>)<span style="color:#000">res</span> <span style="color:#000">*</span> <span style="color:#000">a</span> <span style="color:#000">%</span> <span style="color:#000">p</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#000">res</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">bool</span> <span style="color:#000">MR</span>(<span style="color:#000">ll</span> <span style="color:#000">n</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">n</span> <span style="color:#000">&lt;</span> <span style="color:#1c01ce">3</span> <span style="color:#000">||</span> <span style="color:#000">n</span> <span style="color:#000">%</span> <span style="color:#1c01ce">2</span> <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#000">n</span> <span style="color:#000">==</span> <span style="color:#1c01ce">2</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">n</span> <span style="color:#000">==</span> <span style="color:#1c01ce">3</span> <span style="color:#000">||</span> <span style="color:#000">n</span> <span style="color:#000">==</span> <span style="color:#1c01ce">5</span> <span style="color:#000">||</span> <span style="color:#000">n</span> <span style="color:#000">==</span> <span style="color:#1c01ce">7</span> <span style="color:#000">||</span> <span style="color:#000">n</span> <span style="color:#000">==</span> <span style="color:#1c01ce">11</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">n</span> <span style="color:#000">%</span> <span style="color:#1c01ce">3</span> <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#000">n</span> <span style="color:#000">==</span> <span style="color:#1c01ce">3</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">ll</span> <span style="color:#000">a</span> <span style="color:#000">=</span> <span style="color:#000">n</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">b</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> (<span style="color:#000">a</span> <span style="color:#000">%</span> <span style="color:#1c01ce">2</span> <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">a</span> <span style="color:#000">&gt;&gt;=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">b</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>, <span style="color:#000">j</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#1c01ce">5</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">ll</span> <span style="color:#000">c</span> <span style="color:#000">=</span> <span style="color:#000">rand</span>() <span style="color:#000">%</span> (<span style="color:#000">n</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>) <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">ll</span> <span style="color:#000">v</span> <span style="color:#000">=</span> <span style="color:#000">qpow</span>(<span style="color:#000">c</span>, <span style="color:#000">a</span>, <span style="color:#000">n</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">v</span> <span style="color:#000">==</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">continue</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;</span> <span style="color:#000">b</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">v</span> <span style="color:#000">==</span> <span style="color:#000">n</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">break</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">v</span> <span style="color:#000">=</span> (<span style="color:#000">lll</span>)<span style="color:#000">v</span> <span style="color:#000">*</span> <span style="color:#000">v</span> <span style="color:#000">%</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">j</span> <span style="color:#000">&gt;=</span> <span style="color:#000">b</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">return</span> <span style="color:#a90d91">false</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#a90d91">true</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">char</span> <span style="color:#000">s</span>[<span style="color:#1c01ce">100</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">vector</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">a</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">n</span>, <span style="color:#000">m</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">check</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">a</span>.<span style="color:#000">clear</span>();
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">t</span> <span style="color:#000">=</span> <span style="color:#000">x</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2</span>; <span style="color:#000">i</span> <span style="color:#000">*</span> <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">t</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">t</span> <span style="color:#000">%</span> <span style="color:#000">i</span> <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">a</span>.<span style="color:#000">push_back</span>(<span style="color:#000">i</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">while</span> (<span style="color:#000">t</span> <span style="color:#000">%</span> <span style="color:#000">i</span> <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">t</span> <span style="color:#000">/=</span> <span style="color:#000">i</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">q</span> <span style="color:#000">=</span> <span style="color:#000">x</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#1c01ce">49</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">now</span> <span style="color:#000">=</span> <span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#000">n</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">ok</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> : <span style="color:#000">a</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">qpow</span>(<span style="color:#000">now</span>, <span style="color:#000">q</span> <span style="color:#000">/</span> <span style="color:#000">j</span>, <span style="color:#000">x</span>) <span style="color:#000">==</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>            {
</span></span><span style="display:flex;"><span>                <span style="color:#000">ok</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">break</span>;
</span></span><span style="display:flex;"><span>            }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">ok</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">s</span>[<span style="color:#000">i</span>] <span style="color:#000">==</span> <span style="color:#2300ce">&#39;.&#39;</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">return</span> <span style="color:#a90d91">false</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span> <span style="color:#a90d91">if</span> (<span style="color:#000">!</span><span style="color:#000">ok</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">s</span>[<span style="color:#000">i</span>] <span style="color:#000">==</span> <span style="color:#2300ce">&#39;g&#39;</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">return</span> <span style="color:#a90d91">false</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#a90d91">true</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">l</span>, <span style="color:#000">r</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">l</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">r</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">freopen</span>(<span style="color:#c41a16">&#34;in.in&#34;</span>, <span style="color:#c41a16">&#34;r&#34;</span>, <span style="color:#000">stdin</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">m</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> (<span style="color:#000">s</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#000">l</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">r</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">!</span><span style="color:#000">MR</span>(<span style="color:#000">i</span>))
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">continue</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">flag</span> <span style="color:#000">=</span> <span style="color:#000">check</span>(<span style="color:#000">i</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">flag</span> <span style="color:#000">==</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">i</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><p>我这里采用 $10$ 个程序并行的方式进行计算，效率很高，我刚开始第六个程序，第一个程序就跑完了。</p>
<p>找出来合法的数只有一个：$1515343657$。质因数分解一下 $1515343656$，发现质因子是 $2,3,4003,15773$，区间不大，直接用 input14 的方法暴力判断即可。</p>
<p>这样这道题就做完了。</p>
<h2 id="code">Code</h2>
<p>完全没压行，所以很长。</p>
<p>明明实际上挺码农的但写起来不感觉码农，也说明这道题挺有意思的。</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cctype&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cmath&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;map&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;string&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cerr</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">typedef</span> <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">ll</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">typedef</span> <span style="color:#000">__int128_t</span> <span style="color:#000">lll</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">typedef</span> <span style="color:#a90d91">unsigned</span> <span style="color:#a90d91">int</span> <span style="color:#000">ui</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">typedef</span> <span style="color:#a90d91">unsigned</span> <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">ull</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">namespace</span> <span style="color:#000">IO</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">mxsiz</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">20</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">char</span> <span style="color:#000">inbuf</span>[<span style="color:#000">mxsiz</span>], <span style="color:#000">*</span><span style="color:#000">p1</span>, <span style="color:#000">*</span><span style="color:#000">p2</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">char</span> <span style="color:#000">outbuf</span>[<span style="color:#000">mxsiz</span>], <span style="color:#000">*</span><span style="color:#000">op</span> <span style="color:#000">=</span> <span style="color:#000">outbuf</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">struct</span> <span style="color:#3f6e75">endio</span>
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">endio</span>(){};
</span></span><span style="display:flex;"><span>        <span style="color:#000">~</span><span style="color:#000">endio</span>() { <span style="color:#000">fwrite</span>(<span style="color:#000">outbuf</span>, <span style="color:#1c01ce">1</span>, <span style="color:#000">op</span> <span style="color:#000">-</span> <span style="color:#000">outbuf</span>, <span style="color:#000">stdout</span>); }
</span></span><span style="display:flex;"><span>    } <span style="color:#000">useless_var</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">char</span> <span style="color:#000">gc</span>() { <span style="color:#a90d91">return</span> <span style="color:#000">p1</span> <span style="color:#000">==</span> <span style="color:#000">p2</span> <span style="color:#000">&amp;&amp;</span> (<span style="color:#000">p2</span> <span style="color:#000">=</span> (<span style="color:#000">p1</span> <span style="color:#000">=</span> <span style="color:#000">inbuf</span>) <span style="color:#000">+</span> <span style="color:#000">fread</span>(<span style="color:#000">inbuf</span>, <span style="color:#1c01ce">1</span>, <span style="color:#000">mxsiz</span>, <span style="color:#000">stdin</span>), <span style="color:#000">p1</span> <span style="color:#000">==</span> <span style="color:#000">p2</span>) <span style="color:#000">?</span> <span style="color:#000">EOF</span> : <span style="color:#000">*</span><span style="color:#000">p1</span><span style="color:#000">++</span>; }
</span></span><span style="display:flex;"><span><span style="color:#633820">#define isdigit(x) (x &gt;= &#39;0&#39; &amp;&amp; x &lt;= &#39;9&#39;)
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span>    <span style="color:#a90d91">inline</span> <span style="color:#000">ll</span> <span style="color:#000">read</span>()
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">ll</span> <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>, <span style="color:#000">f</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">char</span> <span style="color:#000">ch</span> <span style="color:#000">=</span> <span style="color:#000">gc</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (; <span style="color:#000">!</span><span style="color:#000">isdigit</span>(<span style="color:#000">ch</span>); <span style="color:#000">ch</span> <span style="color:#000">=</span> <span style="color:#000">gc</span>())
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">ch</span> <span style="color:#000">==</span> <span style="color:#2300ce">&#39;-&#39;</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">f</span> <span style="color:#000">=</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (; <span style="color:#000">isdigit</span>(<span style="color:#000">ch</span>); <span style="color:#000">ch</span> <span style="color:#000">=</span> <span style="color:#000">gc</span>())
</span></span><span style="display:flex;"><span>            <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">x</span> <span style="color:#000">*</span> <span style="color:#1c01ce">10</span> <span style="color:#000">+</span> <span style="color:#000">ch</span> <span style="color:#000">-</span> <span style="color:#2300ce">&#39;0&#39;</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#000">x</span> <span style="color:#000">*</span> <span style="color:#000">f</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">read_mod</span>(<span style="color:#a90d91">int</span> <span style="color:#000">p</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>, <span style="color:#000">f</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">char</span> <span style="color:#000">ch</span> <span style="color:#000">=</span> <span style="color:#000">gc</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (; <span style="color:#000">!</span><span style="color:#000">isdigit</span>(<span style="color:#000">ch</span>); <span style="color:#000">ch</span> <span style="color:#000">=</span> <span style="color:#000">gc</span>())
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">ch</span> <span style="color:#000">==</span> <span style="color:#2300ce">&#39;-&#39;</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">f</span> <span style="color:#000">=</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (; <span style="color:#000">isdigit</span>(<span style="color:#000">ch</span>); <span style="color:#000">ch</span> <span style="color:#000">=</span> <span style="color:#000">gc</span>())
</span></span><span style="display:flex;"><span>            <span style="color:#000">x</span> <span style="color:#000">=</span> (<span style="color:#000">lll</span>)<span style="color:#000">x</span> <span style="color:#000">*</span> <span style="color:#1c01ce">10</span> <span style="color:#000">%</span> <span style="color:#000">p</span> <span style="color:#000">+</span> <span style="color:#000">ch</span> <span style="color:#000">-</span> <span style="color:#2300ce">&#39;0&#39;</span>, <span style="color:#000">x</span> <span style="color:#000">%=</span> <span style="color:#000">p</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#000">x</span> <span style="color:#000">*</span> <span style="color:#000">f</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span><span style="color:#633820">#undef isdigit
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">push</span>(<span style="color:#a90d91">char</span> <span style="color:#000">ch</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">op</span> <span style="color:#000">-</span> <span style="color:#000">outbuf</span> <span style="color:#000">==</span> <span style="color:#000">mxsiz</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">fwrite</span>(<span style="color:#000">outbuf</span>, <span style="color:#1c01ce">1</span>, <span style="color:#000">mxsiz</span>, <span style="color:#000">stdout</span>), <span style="color:#000">op</span> <span style="color:#000">=</span> <span style="color:#000">outbuf</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">*</span><span style="color:#000">op</span><span style="color:#000">++</span> <span style="color:#000">=</span> <span style="color:#000">ch</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">template</span> <span style="color:#000">&lt;</span><span style="color:#a90d91">typename</span> <span style="color:#000">T</span><span style="color:#000">&gt;</span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">work_wt</span>(<span style="color:#000">T</span> <span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">x</span> <span style="color:#000">&gt;</span> <span style="color:#1c01ce">9</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">work_wt</span>(<span style="color:#000">x</span> <span style="color:#000">/</span> <span style="color:#1c01ce">10</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">push</span>(<span style="color:#000">x</span> <span style="color:#000">%</span> <span style="color:#1c01ce">10</span> <span style="color:#000">+</span> <span style="color:#2300ce">&#39;0&#39;</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">template</span> <span style="color:#000">&lt;</span><span style="color:#a90d91">typename</span> <span style="color:#000">T</span><span style="color:#000">&gt;</span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">write</span>(<span style="color:#000">T</span> <span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">x</span> <span style="color:#000">&lt;</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">-</span><span style="color:#000">x</span>, <span style="color:#000">push</span>(<span style="color:#2300ce">&#39;-&#39;</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">work_wt</span>(<span style="color:#000">x</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">endln</span>() { <span style="color:#000">push</span>(<span style="color:#000">&#39;\\</span><span style="color:#000">n</span><span style="color:#000">&#39;</span>); }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">space</span>() { <span style="color:#000">push</span>(<span style="color:#2300ce">&#39; &#39;</span>); }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">template</span> <span style="color:#000">&lt;</span><span style="color:#a90d91">typename</span> <span style="color:#000">T</span><span style="color:#000">&gt;</span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">writeln</span>(<span style="color:#000">T</span> <span style="color:#000">x</span>) { <span style="color:#000">write</span>(<span style="color:#000">x</span>), <span style="color:#000">endln</span>(); }
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#a90d91">namespace</span> <span style="color:#000">IO</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000">ll</span> <span style="color:#000">qpow</span>(<span style="color:#000">ll</span> <span style="color:#000">a</span>, <span style="color:#000">ll</span> <span style="color:#000">x</span>, <span style="color:#000">ll</span> <span style="color:#000">p</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">ll</span> <span style="color:#000">res</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (; <span style="color:#000">x</span>; <span style="color:#000">x</span> <span style="color:#000">&gt;&gt;=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">a</span> <span style="color:#000">=</span> (<span style="color:#000">lll</span>)<span style="color:#000">a</span> <span style="color:#000">*</span> <span style="color:#000">a</span> <span style="color:#000">%</span> <span style="color:#000">p</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">x</span> <span style="color:#000">&amp;</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">res</span> <span style="color:#000">=</span> (<span style="color:#000">lll</span>)<span style="color:#000">res</span> <span style="color:#000">*</span> <span style="color:#000">a</span> <span style="color:#000">%</span> <span style="color:#000">p</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#000">res</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">namespace</span> <span style="color:#000">task1</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">void</span> <span style="color:#000">solve</span>(<span style="color:#a90d91">const</span> <span style="color:#000">ll</span> <span style="color:#000">mod</span> <span style="color:#000">=</span> <span style="color:#1c01ce">998244353</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">n</span> <span style="color:#000">=</span> <span style="color:#000">read</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">write</span>(<span style="color:#000">qpow</span>(<span style="color:#1c01ce">19</span>, <span style="color:#000">read_mod</span>(<span style="color:#000">mod</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>), <span style="color:#000">mod</span>)), <span style="color:#000">endln</span>();
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">map</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span>, <span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">mp</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">int</span> <span style="color:#000">errmul</span>(<span style="color:#a90d91">int</span> <span style="color:#000">a</span>, <span style="color:#a90d91">int</span> <span style="color:#000">b</span>) { <span style="color:#a90d91">return</span> (<span style="color:#a90d91">int</span>)((<span style="color:#000">ui</span>)<span style="color:#000">a</span> <span style="color:#000">*</span> (<span style="color:#000">ui</span>)<span style="color:#000">b</span>); }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">void</span> <span style="color:#000">solve2</span>()
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">begin</span> <span style="color:#000">=</span> <span style="color:#1c01ce">55245</span>, <span style="color:#000">round</span> <span style="color:#000">=</span> <span style="color:#1c01ce">45699</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">mod</span> <span style="color:#000">=</span> <span style="color:#1c01ce">998244353</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">mp</span>[<span style="color:#1c01ce">0</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">now</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">begin</span> <span style="color:#000">+</span> <span style="color:#000">round</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">now</span> <span style="color:#000">=</span> <span style="color:#000">errmul</span>(<span style="color:#000">now</span>, <span style="color:#1c01ce">19</span>) <span style="color:#000">%</span> <span style="color:#000">mod</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">mp</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">now</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#000">n</span> <span style="color:#000">=</span> <span style="color:#000">read</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">ll</span> <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">read</span>();
</span></span><span style="display:flex;"><span>            <span style="color:#000">write</span>(<span style="color:#000">x</span> <span style="color:#000">&lt;=</span> <span style="color:#000">begin</span> <span style="color:#000">?</span> <span style="color:#000">mp</span>[<span style="color:#000">x</span>] <span style="color:#000">:</span> <span style="color:#000">mp</span>[(<span style="color:#000">x</span> <span style="color:#000">-</span> <span style="color:#000">begin</span>) <span style="color:#000">%</span> <span style="color:#000">round</span> <span style="color:#000">+</span> <span style="color:#000">begin</span>]);
</span></span><span style="display:flex;"><span>            <span style="color:#000">endln</span>();
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">bool</span> <span style="color:#000">MR</span>(<span style="color:#000">ll</span> <span style="color:#000">n</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">n</span> <span style="color:#000">&lt;</span> <span style="color:#1c01ce">3</span> <span style="color:#000">||</span> <span style="color:#000">n</span> <span style="color:#000">%</span> <span style="color:#1c01ce">2</span> <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#000">n</span> <span style="color:#000">==</span> <span style="color:#1c01ce">2</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">n</span> <span style="color:#000">==</span> <span style="color:#1c01ce">3</span> <span style="color:#000">||</span> <span style="color:#000">n</span> <span style="color:#000">==</span> <span style="color:#1c01ce">5</span> <span style="color:#000">||</span> <span style="color:#000">n</span> <span style="color:#000">==</span> <span style="color:#1c01ce">7</span> <span style="color:#000">||</span> <span style="color:#000">n</span> <span style="color:#000">==</span> <span style="color:#1c01ce">11</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">ll</span> <span style="color:#000">a</span> <span style="color:#000">=</span> <span style="color:#000">n</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">b</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> (<span style="color:#000">a</span> <span style="color:#000">%</span> <span style="color:#1c01ce">2</span> <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">a</span> <span style="color:#000">&gt;&gt;=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">b</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>, <span style="color:#000">j</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#1c01ce">2</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">ll</span> <span style="color:#000">c</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">i</span> <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">c</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span> <span style="color:#a90d91">if</span> (<span style="color:#000">i</span> <span style="color:#000">==</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">c</span> <span style="color:#000">=</span> <span style="color:#1c01ce">3</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">ll</span> <span style="color:#000">v</span> <span style="color:#000">=</span> <span style="color:#000">qpow</span>(<span style="color:#000">c</span>, <span style="color:#000">a</span>, <span style="color:#000">n</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">v</span> <span style="color:#000">==</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">continue</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;</span> <span style="color:#000">b</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">v</span> <span style="color:#000">==</span> <span style="color:#000">n</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">break</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">v</span> <span style="color:#000">=</span> (<span style="color:#000">lll</span>)<span style="color:#000">v</span> <span style="color:#000">*</span> <span style="color:#000">v</span> <span style="color:#000">%</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">j</span> <span style="color:#000">&gt;=</span> <span style="color:#000">b</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">return</span> <span style="color:#a90d91">false</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#a90d91">true</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">namespace</span> <span style="color:#000">task2</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">void</span> <span style="color:#000">solve</span>()
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">n</span> <span style="color:#000">=</span> <span style="color:#000">read</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">while</span> (<span style="color:#000">n</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">ll</span> <span style="color:#000">l</span> <span style="color:#000">=</span> <span style="color:#000">read</span>(), <span style="color:#000">r</span> <span style="color:#000">=</span> <span style="color:#000">read</span>();
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#000">ll</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#000">l</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">r</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">push</span>(<span style="color:#000">MR</span>(<span style="color:#000">i</span>) <span style="color:#000">?</span> <span style="color:#2300ce">&#39;p&#39;</span> <span style="color:#000">:</span> <span style="color:#2300ce">&#39;.&#39;</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#000">endln</span>();
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">namespace</span> <span style="color:#000">task3</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">5e6</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">mu</span>[<span style="color:#000">maxn</span>], <span style="color:#000">pri</span>[<span style="color:#000">maxn</span>], <span style="color:#000">vis</span>[<span style="color:#000">maxn</span>], <span style="color:#000">tot</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">void</span> <span style="color:#000">init</span>(<span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">n</span> <span style="color:#000">=</span> <span style="color:#1c01ce">5e6</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">mu</span>[<span style="color:#1c01ce">1</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">!</span><span style="color:#000">vis</span>[<span style="color:#000">i</span>])
</span></span><span style="display:flex;"><span>                <span style="color:#000">pri</span>[<span style="color:#000">++</span><span style="color:#000">tot</span>] <span style="color:#000">=</span> <span style="color:#000">i</span>, <span style="color:#000">mu</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;=</span> <span style="color:#000">tot</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">i</span> <span style="color:#000">*</span> <span style="color:#000">pri</span>[<span style="color:#000">j</span>] <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            {
</span></span><span style="display:flex;"><span>                <span style="color:#000">vis</span>[<span style="color:#000">i</span> <span style="color:#000">*</span> <span style="color:#000">pri</span>[<span style="color:#000">j</span>]] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">if</span> (<span style="color:#000">i</span> <span style="color:#000">%</span> <span style="color:#000">pri</span>[<span style="color:#000">j</span>] <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>                {
</span></span><span style="display:flex;"><span>                    <span style="color:#000">mu</span>[<span style="color:#000">i</span> <span style="color:#000">*</span> <span style="color:#000">pri</span>[<span style="color:#000">j</span>]] <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>                    <span style="color:#a90d91">break</span>;
</span></span><span style="display:flex;"><span>                }
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>                    <span style="color:#000">mu</span>[<span style="color:#000">i</span> <span style="color:#000">*</span> <span style="color:#000">pri</span>[<span style="color:#000">j</span>]] <span style="color:#000">=</span> <span style="color:#000">-</span><span style="color:#000">mu</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>            }
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">ans</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#000">ll</span> <span style="color:#000">now</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">bool</span> <span style="color:#000">check</span>(<span style="color:#000">ll</span> <span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">ll</span> <span style="color:#000">p</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">sqrt</span>(<span style="color:#000">x</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#000">p</span> <span style="color:#000">*</span> <span style="color:#000">p</span> <span style="color:#000">==</span> <span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">void</span> <span style="color:#000">work</span>(<span style="color:#000">ll</span> <span style="color:#000">x</span>, <span style="color:#000">ll</span> <span style="color:#000">y</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">y</span> <span style="color:#000">&lt;=</span> <span style="color:#1c01ce">5e6</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#000">x</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">y</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">if</span> (<span style="color:#000">mu</span>[<span style="color:#000">i</span>] <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>                    <span style="color:#000">push</span>(<span style="color:#2300ce">&#39;0&#39;</span>);
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">else</span> <span style="color:#a90d91">if</span> (<span style="color:#000">mu</span>[<span style="color:#000">i</span>] <span style="color:#000">==</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>                    <span style="color:#000">push</span>(<span style="color:#2300ce">&#39;+&#39;</span>);
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">else</span> <span style="color:#a90d91">if</span> (<span style="color:#000">mu</span>[<span style="color:#000">i</span>] <span style="color:#000">==</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>                    <span style="color:#000">push</span>(<span style="color:#2300ce">&#39;-&#39;</span>);
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">y</span> <span style="color:#000">-</span> <span style="color:#000">x</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">now</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">memset</span>(<span style="color:#000">ans</span>, <span style="color:#1c01ce">1</span>, <span style="color:#a90d91">sizeof</span>(<span style="color:#000">ans</span>));
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">tot</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            {
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">int</span> <span style="color:#000">p</span> <span style="color:#000">=</span> <span style="color:#000">pri</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>                <span style="color:#000">ll</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1ll</span> <span style="color:#000">*</span> <span style="color:#000">x</span> <span style="color:#000">/</span> <span style="color:#000">p</span>;
</span></span><span style="display:flex;"><span>                <span style="color:#000">ll</span> <span style="color:#000">pos</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1ll</span> <span style="color:#000">*</span> <span style="color:#000">j</span> <span style="color:#000">*</span> <span style="color:#000">p</span>;
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">while</span> (<span style="color:#000">pos</span> <span style="color:#000">&lt;</span> <span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>                    <span style="color:#000">pos</span> <span style="color:#000">+=</span> <span style="color:#000">p</span>;
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">while</span> (<span style="color:#000">pos</span> <span style="color:#000">&lt;=</span> <span style="color:#000">y</span>)
</span></span><span style="display:flex;"><span>                {
</span></span><span style="display:flex;"><span>                    <span style="color:#a90d91">int</span> <span style="color:#000">rp</span> <span style="color:#000">=</span> <span style="color:#000">pos</span> <span style="color:#000">-</span> <span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>                    <span style="color:#a90d91">int</span> <span style="color:#000">cnt</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>                    <span style="color:#a90d91">while</span> (<span style="color:#000">now</span>[<span style="color:#000">rp</span>] <span style="color:#000">%</span> <span style="color:#000">p</span> <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>                        <span style="color:#000">now</span>[<span style="color:#000">rp</span>] <span style="color:#000">/=</span> <span style="color:#000">p</span>, <span style="color:#000">cnt</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>                    <span style="color:#a90d91">if</span> (<span style="color:#000">cnt</span> <span style="color:#000">&gt;</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>                        <span style="color:#000">ans</span>[<span style="color:#000">rp</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>                    <span style="color:#a90d91">else</span> <span style="color:#a90d91">if</span> (<span style="color:#000">ans</span>[<span style="color:#000">rp</span>] <span style="color:#000">&gt;</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>                        <span style="color:#000">ans</span>[<span style="color:#000">rp</span>] <span style="color:#000">=</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>                    <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>                        <span style="color:#000">ans</span>[<span style="color:#000">rp</span>] <span style="color:#000">*=</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>                    <span style="color:#000">pos</span> <span style="color:#000">+=</span> <span style="color:#000">p</span>;
</span></span><span style="display:flex;"><span>                }
</span></span><span style="display:flex;"><span>            }
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">y</span> <span style="color:#000">-</span> <span style="color:#000">x</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            {
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">if</span> (<span style="color:#000">ans</span>[<span style="color:#000">i</span>] <span style="color:#000">==</span> <span style="color:#1c01ce">0</span> <span style="color:#000">||</span> <span style="color:#000">now</span>[<span style="color:#000">i</span>] <span style="color:#000">==</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>                    <span style="color:#a90d91">continue</span>;
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">if</span> (<span style="color:#000">MR</span>(<span style="color:#000">now</span>[<span style="color:#000">i</span>]))
</span></span><span style="display:flex;"><span>                    <span style="color:#000">ans</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">ans</span>[<span style="color:#000">i</span>] <span style="color:#000">&gt;</span> <span style="color:#1c01ce">2</span> <span style="color:#000">?</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span> <span style="color:#000">:</span> <span style="color:#000">ans</span>[<span style="color:#000">i</span>] <span style="color:#000">*</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">else</span> <span style="color:#a90d91">if</span> (<span style="color:#000">now</span>[<span style="color:#000">i</span>] <span style="color:#000">!=</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">check</span>(<span style="color:#000">now</span>[<span style="color:#000">i</span>]))
</span></span><span style="display:flex;"><span>                    <span style="color:#000">ans</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">else</span> <span style="color:#a90d91">if</span> (<span style="color:#000">ans</span>[<span style="color:#000">i</span>] <span style="color:#000">&gt;</span> <span style="color:#1c01ce">2</span>)
</span></span><span style="display:flex;"><span>                    <span style="color:#000">ans</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>            }
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">y</span> <span style="color:#000">-</span> <span style="color:#000">x</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">if</span> (<span style="color:#000">ans</span>[<span style="color:#000">i</span>] <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>                    <span style="color:#000">push</span>(<span style="color:#2300ce">&#39;0&#39;</span>);
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">else</span> <span style="color:#a90d91">if</span> (<span style="color:#000">ans</span>[<span style="color:#000">i</span>] <span style="color:#000">==</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>                    <span style="color:#000">push</span>(<span style="color:#2300ce">&#39;+&#39;</span>);
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">else</span> <span style="color:#a90d91">if</span> (<span style="color:#000">ans</span>[<span style="color:#000">i</span>] <span style="color:#000">==</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>                    <span style="color:#000">push</span>(<span style="color:#2300ce">&#39;-&#39;</span>);
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">void</span> <span style="color:#000">solve</span>()
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">init</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">n</span> <span style="color:#000">=</span> <span style="color:#000">read</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#000">ll</span> <span style="color:#000">x</span>, <span style="color:#000">y</span>, <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">read</span>(), <span style="color:#000">y</span> <span style="color:#000">=</span> <span style="color:#000">read</span>(), <span style="color:#000">work</span>(<span style="color:#000">x</span>, <span style="color:#000">y</span>), <span style="color:#000">endln</span>();
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">string</span> <span style="color:#000">s</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">namespace</span> <span style="color:#000">task4</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1.4e7</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">bool</span> <span style="color:#000">ans</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">void</span> <span style="color:#000">BF</span>(<span style="color:#a90d91">int</span> <span style="color:#000">l</span>, <span style="color:#a90d91">int</span> <span style="color:#000">r</span>, <span style="color:#a90d91">int</span> <span style="color:#000">p</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">q</span> <span style="color:#000">=</span> <span style="color:#000">p</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#000">l</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">r</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">qpow</span>(<span style="color:#000">i</span>, <span style="color:#000">q</span> <span style="color:#000">/</span> <span style="color:#1c01ce">2</span>, <span style="color:#000">p</span>) <span style="color:#000">==</span> <span style="color:#1c01ce">1</span> <span style="color:#000">||</span> <span style="color:#000">qpow</span>(<span style="color:#000">i</span>, <span style="color:#000">q</span> <span style="color:#000">/</span> <span style="color:#1c01ce">7</span>, <span style="color:#000">p</span>) <span style="color:#000">==</span> <span style="color:#1c01ce">1</span> <span style="color:#000">||</span> <span style="color:#000">qpow</span>(<span style="color:#000">i</span>, <span style="color:#000">q</span> <span style="color:#000">/</span> <span style="color:#1c01ce">17</span>, <span style="color:#000">p</span>) <span style="color:#000">==</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">ans</span>[<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#000">l</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>                <span style="color:#000">ans</span>[<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#000">l</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">r</span> <span style="color:#000">-</span> <span style="color:#000">l</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">push</span>(<span style="color:#000">ans</span>[<span style="color:#000">i</span>] <span style="color:#000">?</span> <span style="color:#2300ce">&#39;g&#39;</span> <span style="color:#000">:</span> <span style="color:#2300ce">&#39;.&#39;</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">endln</span>();
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">void</span> <span style="color:#000">BF2</span>(<span style="color:#a90d91">int</span> <span style="color:#000">l</span>, <span style="color:#a90d91">int</span> <span style="color:#000">r</span>, <span style="color:#a90d91">int</span> <span style="color:#000">p</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">q</span> <span style="color:#000">=</span> <span style="color:#000">p</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#000">l</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">r</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">qpow</span>(<span style="color:#000">i</span>, <span style="color:#000">q</span> <span style="color:#000">/</span> <span style="color:#1c01ce">2</span>, <span style="color:#000">p</span>) <span style="color:#000">==</span> <span style="color:#1c01ce">1</span> <span style="color:#000">||</span> <span style="color:#000">qpow</span>(<span style="color:#000">i</span>, <span style="color:#000">q</span> <span style="color:#000">/</span> <span style="color:#1c01ce">3</span>, <span style="color:#000">p</span>) <span style="color:#000">==</span> <span style="color:#1c01ce">1</span> <span style="color:#000">||</span> <span style="color:#000">qpow</span>(<span style="color:#000">i</span>, <span style="color:#000">q</span> <span style="color:#000">/</span> <span style="color:#1c01ce">4003</span>, <span style="color:#000">p</span>) <span style="color:#000">==</span> <span style="color:#1c01ce">1</span> 
</span></span><span style="display:flex;"><span>                <span style="color:#000">||</span> <span style="color:#000">qpow</span>(<span style="color:#000">i</span>, <span style="color:#000">q</span> <span style="color:#000">/</span> <span style="color:#1c01ce">15773</span>, <span style="color:#000">p</span>) <span style="color:#000">==</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">ans</span>[<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#000">l</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>                <span style="color:#000">ans</span>[<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#000">l</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">r</span> <span style="color:#000">-</span> <span style="color:#000">l</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">push</span>(<span style="color:#000">ans</span>[<span style="color:#000">i</span>] <span style="color:#000">?</span> <span style="color:#2300ce">&#39;g&#39;</span> <span style="color:#000">:</span> <span style="color:#2300ce">&#39;.&#39;</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">endln</span>();
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">g</span> <span style="color:#000">=</span> <span style="color:#1c01ce">6</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">int</span> <span style="color:#000">gcd</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>) { <span style="color:#a90d91">return</span> <span style="color:#000">y</span> <span style="color:#000">==</span> <span style="color:#1c01ce">0</span> <span style="color:#000">?</span> <span style="color:#000">x</span> : <span style="color:#000">gcd</span>(<span style="color:#000">y</span>, <span style="color:#000">x</span> <span style="color:#000">%</span> <span style="color:#000">y</span>); }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">void</span> <span style="color:#000">qwq</span>(<span style="color:#a90d91">int</span> <span style="color:#000">l</span>, <span style="color:#a90d91">int</span> <span style="color:#000">r</span>, <span style="color:#a90d91">int</span> <span style="color:#000">p</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">q</span> <span style="color:#000">=</span> <span style="color:#000">p</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">now</span> <span style="color:#000">=</span> <span style="color:#000">g</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">r</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">gcd</span>(<span style="color:#000">i</span>, <span style="color:#000">q</span>) <span style="color:#000">==</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>            {
</span></span><span style="display:flex;"><span>                <span style="color:#000">ans</span>[<span style="color:#000">now</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>            }
</span></span><span style="display:flex;"><span>            <span style="color:#000">now</span> <span style="color:#000">=</span> <span style="color:#000">now</span> <span style="color:#000">*</span> <span style="color:#000">g</span> <span style="color:#000">%</span> <span style="color:#000">p</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#000">l</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">r</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">push</span>(<span style="color:#000">ans</span>[<span style="color:#000">i</span>] <span style="color:#000">?</span> <span style="color:#2300ce">&#39;g&#39;</span> <span style="color:#000">:</span> <span style="color:#2300ce">&#39;.&#39;</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">endln</span>();
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">void</span> <span style="color:#000">work</span>(<span style="color:#a90d91">int</span> <span style="color:#000">l</span>, <span style="color:#a90d91">int</span> <span style="color:#000">r</span>, <span style="color:#a90d91">int</span> <span style="color:#000">p</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">p</span> <span style="color:#000">==</span> <span style="color:#1c01ce">998244353</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">BF</span>(<span style="color:#000">l</span>, <span style="color:#000">r</span>, <span style="color:#000">p</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span> <span style="color:#a90d91">if</span> (<span style="color:#000">p</span> <span style="color:#000">==</span> <span style="color:#1c01ce">1515343657</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">BF2</span>(<span style="color:#000">l</span>, <span style="color:#000">r</span>, <span style="color:#1c01ce">1515343657</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>            <span style="color:#000">qwq</span>(<span style="color:#000">l</span>, <span style="color:#000">r</span>, <span style="color:#000">p</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">void</span> <span style="color:#000">solve</span>(<span style="color:#a90d91">int</span> <span style="color:#000">flag</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">n</span> <span style="color:#000">=</span> <span style="color:#000">read</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">int</span> <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">read</span>(), <span style="color:#000">y</span> <span style="color:#000">=</span> <span style="color:#000">read</span>();
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">flag</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">i</span> <span style="color:#000">==</span> <span style="color:#000">n</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">work</span>(<span style="color:#000">x</span>, <span style="color:#000">y</span>, <span style="color:#1c01ce">1515343657</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>                <span style="color:#000">work</span>(<span style="color:#000">x</span>, <span style="color:#000">y</span>, <span style="color:#000">read</span>());
</span></span><span style="display:flex;"><span>            <span style="color:#000">memset</span>(<span style="color:#000">ans</span>, <span style="color:#1c01ce">0</span>, <span style="color:#a90d91">sizeof</span>(<span style="color:#000">ans</span>));
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">s</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">s</span> <span style="color:#000">==</span> <span style="color:#c41a16">&#34;1_998244353&#34;</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">task1</span><span style="color:#000">::</span><span style="color:#000">solve</span>();
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">else</span> <span style="color:#a90d91">if</span> (<span style="color:#000">s</span> <span style="color:#000">==</span> <span style="color:#c41a16">&#34;1?&#34;</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">task1</span><span style="color:#000">::</span><span style="color:#000">solve</span>(<span style="color:#1c01ce">1145141</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">else</span> <span style="color:#a90d91">if</span> (<span style="color:#000">s</span> <span style="color:#000">==</span> <span style="color:#c41a16">&#34;1?+&#34;</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">task1</span><span style="color:#000">::</span><span style="color:#000">solve</span>(<span style="color:#1c01ce">5211600617818708273</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">else</span> <span style="color:#a90d91">if</span> (<span style="color:#000">s</span> <span style="color:#000">==</span> <span style="color:#c41a16">&#34;1wa_998244353&#34;</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">task1</span><span style="color:#000">::</span><span style="color:#000">solve2</span>();
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">else</span> <span style="color:#a90d91">if</span> (<span style="color:#000">s</span> <span style="color:#000">==</span> <span style="color:#c41a16">&#34;2p&#34;</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">task2</span><span style="color:#000">::</span><span style="color:#000">solve</span>();
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">else</span> <span style="color:#a90d91">if</span> (<span style="color:#000">s</span> <span style="color:#000">==</span> <span style="color:#c41a16">&#34;2u&#34;</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">task3</span><span style="color:#000">::</span><span style="color:#000">solve</span>();
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">else</span> <span style="color:#a90d91">if</span> (<span style="color:#000">s</span> <span style="color:#000">==</span> <span style="color:#c41a16">&#34;2g&#34;</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">task4</span><span style="color:#000">::</span><span style="color:#000">solve</span>();
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">else</span> <span style="color:#a90d91">if</span> (<span style="color:#000">s</span> <span style="color:#000">==</span> <span style="color:#c41a16">&#34;2g?&#34;</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">task4</span><span style="color:#000">::</span><span style="color:#000">solve</span>(<span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div>]]></content:encoded>
    </item>
    
    <item>
      <title>luogu1829 Crash的数字表格 / JZPTAB</title>
      <link>https://luoyisu.github.io/posts/luogu1829/</link>
      <pubDate>Wed, 05 Jan 2022 19:20:38 +0000</pubDate>
      
      <guid>https://luoyisu.github.io/posts/luogu1829/</guid>
      <description>&lt;h2 id=&#34;description&#34;&gt;Description&lt;/h2&gt;
&lt;p&gt;求
$$
\sum\limits_{i=1}^n\sum\limits_{j=1}^m\operatorname{lcm}(i,j)
$$
$n,m\leq10^7$​。&lt;/p&gt;</description>
      <content:encoded><![CDATA[<h2 id="description">Description</h2>
<p>求
$$
\sum\limits_{i=1}^n\sum\limits_{j=1}^m\operatorname{lcm}(i,j)
$$
$n,m\leq10^7$​。</p>
<h2 id="solution">Solution</h2>
<p>这道题算是一道比较有代表性的题目了，综合了各种 trick。</p>
<p>trick1：lcm 转化为 gcd：
$$
\sum\limits_{i=1}^n\sum\limits_{j=1}^m\operatorname{lcm}(i,j)=\sum\limits_{i=1}^n\sum\limits_{j=1}^m\frac{i\times j}{\gcd(i,j)}
$$
trick2：枚举分母：
$$
ans=\sum\limits_{d=1}^{\min(n,m)}\sum\limits_{i=1}^n\sum\limits_{j=1}^m\frac{i\times j}{d}[\gcd(i,j)=d]
$$
trick3：把 $[\gcd(i,j)=d]$​​ 转化为 $[\gcd(\dfrac{i}{d},\dfrac{j}{d})=1]$​​，同时改变枚举的 $i,j$​（$i$ 变为 $i/d$，$j$ 同理）。
$$
\begin{aligned}
ans&amp;=\sum\limits_{d=1}^{\min(n,m)}d\sum\limits_{i=1}^n\sum\limits_{j=1}^m\frac{i\times j}{d\times d}[\gcd(\frac{i}{d},\frac{j}{d})=1]\\
&amp;=\sum\limits_{d=1}^{\min(n,m)}d\sum\limits_{i=1}^{\lfloor \frac{n}{d}\rfloor}\sum\limits_{j=1}^{\lfloor\frac{m}{d}\rfloor}i\times j[\gcd(i,j)=1]
\end{aligned}
$$
trick4：$[n=1]$ 用一个结论转化为莫比乌斯函数的形式：$\sum_{d\mid n}\mu(d)=[n=1]$​（证明不讲了）。
$$
ans=\sum\limits_{d=1}^{\min(n,m)}d\sum\limits_{i=1}^{\lfloor\frac{n}{d}\rfloor}\sum\limits_{j=1}^{\lfloor\frac{m}{d}\rfloor}i\times j\sum\limits_{k\mid\gcd(i,j)}\mu(k)
$$
trick5：优先枚举因数，然后把枚举因数转化成枚举倍数放到后面的限制条件里。
$$
\begin{aligned}
ans&amp;=\sum\limits_{d=1}^{\min(n,m)}d\sum\limits_{k\mid\gcd(i,j)}\mu(k)\sum\limits_{i=1}^{\lfloor\frac{n}{d}\rfloor}\sum\limits_{j=1}^{\lfloor\frac{m}{d}\rfloor}i\times j\\
&amp;=\sum\limits_{d=1}^{\min(n,m)}d\sum\limits_{k=1}^{\lfloor\min(n,m)/d\rfloor}\mu(k)\sum\limits_{i=1,k\mid i}^{\lfloor\frac{n}{d}\rfloor}\sum\limits_{j=1,k\mid j}^{\lfloor\frac{m}{d}\rfloor}i\times j
\end{aligned}
$$
trick6：$1\sim n$​ 中 $x$​ 的倍数有 $\lfloor\dfrac{n}{x}\rfloor$​ 个，那么有 $\sum_{i=1,x\mid i}^nt=\sum_{i=1}^{\lfloor n/x\rfloor}tx$​​​（不一定完全一样，但可以用这个方法化简）。​
$$
\begin{aligned}
ans&amp;=\sum\limits_{d=1}^{\min(n,m)}d\sum\limits_{k=1}^{\lfloor\min(n,m)/d\rfloor}\mu(k)\times k^2\sum\limits_{i=1,k\mid i}^{\lfloor\frac{n}{d}\rfloor}\sum\limits_{j=1,k\mid j}^{\lfloor\frac{m}{d}\rfloor}\frac{i\times j}{k\times k}\\
&amp;=\sum\limits_{d=1}^{\min(n,m)}d\sum\limits_{k=1}^{\lfloor\min(n,m)/d\rfloor}\mu(k)\times k^2\sum\limits_{i=1}^{\lfloor\frac{n}{dk}\rfloor}i\sum\limits_{j=1}^{\lfloor\frac{m}{dk}\rfloor}j
\end{aligned}
$$
到这一步，$k^2$ 后面的两个东西是等差数列求和的形式，可以 $O(1)$ 得出，然后看到除法+下取整，而且 $\mu(k)\times k^2$ 的前缀和可以预处理得出，那么这玩意就是个数论分块：</p>
<p>设
$$
sum(n)=\sum\limits_{i=1}^ni
$$
$$
f(x,y)=\sum\limits_{k=1}^{\lfloor\min(n,m)\rfloor}\mu(k)\times k^2\times sum(\lfloor\frac{n}{k}\rfloor)\times sum(\lfloor\frac{m}{k}\rfloor)
$$
那么
$$
ans=\sum\limits_{d=1}^{\min(n,m)}d\times f(\lfloor\frac{n}{d}\rfloor,\lfloor\frac{m}{d}\rfloor)
$$
诶，这又是个数论分块的形式？？？</p>
<p>那这就做完了。</p>
<p>时间复杂度似乎应该是 $O(n^{0.75}+n)$​​​​（后面是预处理的复杂度）。</p>
<p>不过我们的式子是可以接着往下推的，还有 trick 可以讲。</p>
<p>可以发现我们上面的式子中有 $k,d,dk$ 三个未知数，我们可以枚举其中一个来消去一个未知数。</p>
<p>trick7：枚举一个未知数来达到减小未知数的目的（这个好像比较灵活，我讲不太明白）。</p>
<p>设 $s=dk$。
$$
ans=\sum\limits_{d=1}^{\min(n,m)}d\sum\limits_{s=1,d\mid s}^{\min(n,m)}\mu(\frac{s}{d})\times(\frac{s}{d})^2\times sum(\frac{n}{s})\times sum(\frac{m}{s})
$$
trick8：这个算是很通用的 trick 了，换枚举顺序，同时换枚举的限制，让式子更舒服（？）。
$$
\begin{aligned}
ans&amp;=\sum\limits_{s=1}^{\min(n,m)}sum(\frac{n}{s})\times sum(\frac{m}{s})\sum\limits_{d=1,d\mid s}d\times\mu(\frac{s}{d})\times(\frac{s}{d})^2\\
&amp;=\sum\limits_{s=1}^{\min(n,m)}s\times sum(\frac{n}{s})\times sum(\frac{m}{s})\sum\limits_{d=1,d\mid s}\mu(\frac{s}{d})\times\frac{s}{d}
\end{aligned}
$$
trick9：当枚举的是所有因数的时候，枚举 $\dfrac{n}{d}$ 和 $d$ 是一样的。
$$
ans=\sum\limits_{s=1}^{\min(n,m)}s\times sum(\frac{n}{s})\times sum(\frac{m}{s})\sum\limits_{d=1,d\mid s}\mu(d)\times d
$$
后面的求和似乎是个积性函数，可以筛出来然后求前缀和。然后同样整除分块。</p>
<h2 id="code">Code</h2>
<p>写的是两个整除分块的做法。</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1e7</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>, <span style="color:#000">mod</span> <span style="color:#000">=</span> <span style="color:#1c01ce">20101009</span>, <span style="color:#000">inv_2</span> <span style="color:#000">=</span> <span style="color:#1c01ce">10050505</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">typedef</span> <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">ll</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">upd</span>(<span style="color:#000">ll</span> <span style="color:#000">&amp;</span><span style="color:#000">x</span>, <span style="color:#000">ll</span> <span style="color:#000">y</span>) { <span style="color:#000">x</span> <span style="color:#000">+=</span> <span style="color:#000">y</span>, <span style="color:#000">x</span> <span style="color:#000">%=</span> <span style="color:#000">mod</span>; }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">pri</span>[<span style="color:#000">maxn</span>], <span style="color:#000">mu</span>[<span style="color:#000">maxn</span>], <span style="color:#000">tot</span>, <span style="color:#000">vis</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#000">ll</span> <span style="color:#000">f</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">init</span>(<span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">n</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1e7</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">mu</span>[<span style="color:#1c01ce">1</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">!</span><span style="color:#000">vis</span>[<span style="color:#000">i</span>])
</span></span><span style="display:flex;"><span>            <span style="color:#000">pri</span>[<span style="color:#000">++</span><span style="color:#000">tot</span>] <span style="color:#000">=</span> <span style="color:#000">i</span>, <span style="color:#000">mu</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;=</span> <span style="color:#000">tot</span> <span style="color:#000">&amp;&amp;</span> (<span style="color:#000">ll</span>)<span style="color:#000">i</span> <span style="color:#000">*</span> <span style="color:#000">pri</span>[<span style="color:#000">j</span>] <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">vis</span>[<span style="color:#000">pri</span>[<span style="color:#000">j</span>] <span style="color:#000">*</span> <span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">i</span> <span style="color:#000">%</span> <span style="color:#000">pri</span>[<span style="color:#000">j</span>] <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>            {
</span></span><span style="display:flex;"><span>                <span style="color:#000">mu</span>[<span style="color:#000">i</span> <span style="color:#000">*</span> <span style="color:#000">pri</span>[<span style="color:#000">j</span>]] <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">break</span>;
</span></span><span style="display:flex;"><span>            }
</span></span><span style="display:flex;"><span>            <span style="color:#000">mu</span>[<span style="color:#000">i</span> <span style="color:#000">*</span> <span style="color:#000">pri</span>[<span style="color:#000">j</span>]] <span style="color:#000">=</span> <span style="color:#000">-</span><span style="color:#000">mu</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">f</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">f</span>[<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>], <span style="color:#000">upd</span>(<span style="color:#000">f</span>[<span style="color:#000">i</span>], <span style="color:#1c01ce">1ll</span> <span style="color:#000">*</span> <span style="color:#000">i</span> <span style="color:#000">*</span> <span style="color:#000">i</span> <span style="color:#000">%</span> <span style="color:#000">mod</span> <span style="color:#000">*</span> (<span style="color:#000">mu</span>[<span style="color:#000">i</span>] <span style="color:#000">+</span> <span style="color:#000">mod</span>) <span style="color:#000">%</span> <span style="color:#000">mod</span>);
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000">ll</span> <span style="color:#000">S</span>(<span style="color:#000">ll</span> <span style="color:#000">x</span>) { <span style="color:#a90d91">return</span> <span style="color:#000">x</span> <span style="color:#000">*</span> (<span style="color:#000">x</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>) <span style="color:#000">/</span> <span style="color:#1c01ce">2</span> <span style="color:#000">%</span> <span style="color:#000">mod</span>; }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000">ll</span> <span style="color:#000">solve</span>(<span style="color:#a90d91">int</span> <span style="color:#000">n</span>, <span style="color:#a90d91">int</span> <span style="color:#000">m</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">ll</span> <span style="color:#000">res</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">j</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">min</span>(<span style="color:#000">n</span>, <span style="color:#000">m</span>); <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#000">j</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">min</span>(<span style="color:#000">n</span> <span style="color:#000">/</span> (<span style="color:#000">n</span> <span style="color:#000">/</span> <span style="color:#000">i</span>), <span style="color:#000">m</span> <span style="color:#000">/</span> (<span style="color:#000">m</span> <span style="color:#000">/</span> <span style="color:#000">i</span>));
</span></span><span style="display:flex;"><span>        <span style="color:#000">upd</span>(<span style="color:#000">res</span>, (<span style="color:#000">f</span>[<span style="color:#000">j</span>] <span style="color:#000">-</span> <span style="color:#000">f</span>[<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">+</span> <span style="color:#000">mod</span>) <span style="color:#000">%</span> <span style="color:#000">mod</span> <span style="color:#000">*</span> <span style="color:#000">S</span>(<span style="color:#000">n</span> <span style="color:#000">/</span> <span style="color:#000">i</span>) <span style="color:#000">%</span> <span style="color:#000">mod</span> <span style="color:#000">*</span> <span style="color:#000">S</span>(<span style="color:#000">m</span> <span style="color:#000">/</span> <span style="color:#000">i</span>) <span style="color:#000">%</span> <span style="color:#000">mod</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#000">res</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">n</span>, <span style="color:#000">m</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">m</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">ll</span> <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">init</span>();
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">j</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">min</span>(<span style="color:#000">n</span>, <span style="color:#000">m</span>); <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#000">j</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">min</span>(<span style="color:#000">n</span> <span style="color:#000">/</span> (<span style="color:#000">n</span> <span style="color:#000">/</span> <span style="color:#000">i</span>), <span style="color:#000">m</span> <span style="color:#000">/</span> (<span style="color:#000">m</span> <span style="color:#000">/</span> <span style="color:#000">i</span>));
</span></span><span style="display:flex;"><span>        <span style="color:#000">upd</span>(<span style="color:#000">ans</span>, <span style="color:#000">solve</span>(<span style="color:#000">n</span> <span style="color:#000">/</span> <span style="color:#000">i</span>, <span style="color:#000">m</span> <span style="color:#000">/</span> <span style="color:#000">i</span>) <span style="color:#000">*</span> (<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#000">j</span>) <span style="color:#000">%</span> <span style="color:#000">mod</span> <span style="color:#000">*</span> <span style="color:#000">inv_2</span> <span style="color:#000">%</span> <span style="color:#000">mod</span> <span style="color:#000">*</span> (<span style="color:#000">j</span> <span style="color:#000">-</span> <span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>) <span style="color:#000">%</span> <span style="color:#000">mod</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">ans</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div>]]></content:encoded>
    </item>
    
    <item>
      <title>Codeforces Round 646 (Div. 2)</title>
      <link>https://luoyisu.github.io/posts/cf-contest1363/</link>
      <pubDate>Fri, 31 Dec 2021 09:46:26 +0000</pubDate>
      
      <guid>https://luoyisu.github.io/posts/cf-contest1363/</guid>
      <description>&lt;h2 id=&#34;概述&#34;&gt;概述&lt;/h2&gt;
&lt;p&gt;不是特别难，F 倒不简单。&lt;/p&gt;</description>
      <content:encoded><![CDATA[<h2 id="概述">概述</h2>
<p>不是特别难，F 倒不简单。</p>
<h2 id="ahttpscodeforcescontest1363problema"><a href="https://codeforc.es/contest/1363/problem/A">A</a></h2>
<h3 id="description">Description</h3>
<p>给出一个 $n$ 项的数列，要求选出 $x$ 个数（不要求连续），使这 $x$ 个数的和为奇数。判断这是否可能。</p>
<h3 id="solution">Solution</h3>
<p>这显然是 奇数+奇数=偶数 和 奇数+偶数=奇数 这两个结论的简单运用</p>
<p>首先先选一个奇数，如果还要选奇数个数那么必须选一个偶数。</p>
<p>然后尽可能选看最后够不够即可。</p>
<h3 id="code">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cctype&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1100</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">cnt1</span>, <span style="color:#000">cnt2</span>, <span style="color:#000">n</span>, <span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">T</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">T</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> (<span style="color:#000">T</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">cnt1</span> <span style="color:#000">=</span> <span style="color:#000">cnt2</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">x</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">x</span>, (<span style="color:#000">x</span> <span style="color:#000">%</span> <span style="color:#1c01ce">2</span> <span style="color:#000">==</span> <span style="color:#1c01ce">0</span> <span style="color:#000">?</span> <span style="color:#000">cnt1</span> : <span style="color:#000">cnt2</span>)<span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">cnt2</span> <span style="color:#000">&lt;</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">puts</span>(<span style="color:#c41a16">&#34;No&#34;</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">continue</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#000">x</span><span style="color:#000">--</span>, <span style="color:#000">cnt2</span><span style="color:#000">--</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">cnt1</span> <span style="color:#000">&gt;=</span> <span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">puts</span>(<span style="color:#c41a16">&#34;Yes&#34;</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">continue</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">x</span> <span style="color:#000">%</span> <span style="color:#1c01ce">2</span> <span style="color:#000">==</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">cnt1</span> <span style="color:#000">&lt;</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>            {
</span></span><span style="display:flex;"><span>                <span style="color:#000">puts</span>(<span style="color:#c41a16">&#34;No&#34;</span>);
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">continue</span>;
</span></span><span style="display:flex;"><span>            }
</span></span><span style="display:flex;"><span>            <span style="color:#000">cnt1</span><span style="color:#000">--</span>, <span style="color:#000">x</span><span style="color:#000">--</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#000">x</span> <span style="color:#000">-=</span> <span style="color:#000">cnt2</span> <span style="color:#000">/</span> <span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#1c01ce">2</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">x</span> <span style="color:#000">-=</span> <span style="color:#000">cnt1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">puts</span>(<span style="color:#000">x</span> <span style="color:#000">&gt;</span> <span style="color:#1c01ce">0</span> <span style="color:#000">?</span> <span style="color:#c41a16">&#34;No&#34;</span> <span style="color:#000">:</span> <span style="color:#c41a16">&#34;Yes&#34;</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="bhttpscodeforcescontest1363problemb"><a href="https://codeforc.es/contest/1363/problem/B">B</a></h2>
<h3 id="description-1">Description</h3>
<p>对于一个 $01$ 字符串，如果这个字符串没有子序列（可以不连续）是 $101$ 或 $010$，那么它是好的。</p>
<p>给定一个 $01$ 字符串 $s$。你可以选择一些位置，并翻转该位置的数 —— $0$ 变 $1$，$1$ 变 $0$。</p>
<p>你需要求出，至少要选择多少个位置翻转，才能使这个字符串变成好的。</p>
<h3 id="solution-1">Solution</h3>
<p>看一下这个要求，显然符合条件的字符串只有 ：<code>00000</code>、<code>11111</code>，<code>111000</code>、<code>000111</code> 这四种形式。</p>
<p>做个前缀和看看具体改成哪种即可。</p>
<h3 id="code-1">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1100</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">sum0</span>[<span style="color:#000">maxn</span>], <span style="color:#000">sum1</span>[<span style="color:#000">maxn</span>], <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">char</span> <span style="color:#000">s</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">q</span>(<span style="color:#a90d91">int</span> <span style="color:#000">l</span>, <span style="color:#a90d91">int</span> <span style="color:#000">r</span>) { <span style="color:#a90d91">return</span> <span style="color:#000">l</span> <span style="color:#000">&gt;</span> <span style="color:#000">r</span> <span style="color:#000">?</span> <span style="color:#1c01ce">0</span> <span style="color:#000">:</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">min</span>(<span style="color:#000">sum0</span>[<span style="color:#000">r</span>] <span style="color:#000">-</span> <span style="color:#000">sum0</span>[<span style="color:#000">l</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>], <span style="color:#000">sum1</span>[<span style="color:#000">r</span>] <span style="color:#000">-</span> <span style="color:#000">sum1</span>[<span style="color:#000">l</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>]); }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">T</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">T</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> (<span style="color:#000">T</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> (<span style="color:#000">s</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">n</span> <span style="color:#000">=</span> <span style="color:#000">strlen</span>(<span style="color:#000">s</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">sum0</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">sum0</span>[<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>], <span style="color:#000">sum1</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">sum1</span>[<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>], (<span style="color:#000">s</span>[<span style="color:#000">i</span>] <span style="color:#000">-</span> <span style="color:#2300ce">&#39;0&#39;</span> <span style="color:#000">?</span> <span style="color:#000">sum1</span>[<span style="color:#000">i</span>] <span style="color:#000">:</span> <span style="color:#000">sum0</span>[<span style="color:#000">i</span>])<span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">30</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">min</span>(<span style="color:#000">ans</span>, <span style="color:#000">q</span>(<span style="color:#1c01ce">1</span>, <span style="color:#000">i</span>) <span style="color:#000">+</span> <span style="color:#000">q</span>(<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">n</span>));
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">ans</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="chttpscodeforcescontest1363problemc"><a href="https://codeforc.es/contest/1363/problem/C">C</a></h2>
<h3 id="description-2">Description</h3>
<p>给定 $n$ 个节点的无根树。</p>
<p>两名选手轮流操作，每次可以选择一个叶节点并删除它以及所有和它相连的边。叶节点指度数不超过 $1$ 的节点。删除节点 $x$ 的选手胜利。</p>
<p>你需要判断先手是否有必胜策略。具体来讲，如果先手有必胜策略，输出 <code>Ayush</code>，否则输出 <code>Ashish</code>。</p>
<h3 id="solution-2">Solution</h3>
<p>首先，当 $x$ 的度数小于等于 $1$ 时，先手必胜。</p>
<p>而如果度数比 $1$ 大，比如是 $2$，那么先手一定会最后删掉与 $x$ 相邻的点，换成后手也同理。</p>
<p>所以我们直接看 $n$ 的奇偶性就能知道轮流删之后谁能删掉 $x$。</p>
<p>具体地：偶数先手赢，奇数后手赢。</p>
<h3 id="code-2">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1100</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">deg</span>[<span style="color:#000">maxn</span>], <span style="color:#000">n</span>, <span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">T</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">T</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> (<span style="color:#000">T</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">memset</span>(<span style="color:#000">deg</span>, <span style="color:#1c01ce">0</span>, <span style="color:#a90d91">sizeof</span>(<span style="color:#000">deg</span>));
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">x</span>, <span style="color:#000">y</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">x</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">y</span>, <span style="color:#000">deg</span>[<span style="color:#000">x</span>]<span style="color:#000">++</span>, <span style="color:#000">deg</span>[<span style="color:#000">y</span>]<span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">deg</span>[<span style="color:#000">x</span>] <span style="color:#000">&lt;=</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">puts</span>(<span style="color:#c41a16">&#34;Ayush&#34;</span>);
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span> <span style="color:#a90d91">if</span> (<span style="color:#000">n</span> <span style="color:#000">%</span> <span style="color:#1c01ce">2</span> <span style="color:#000">==</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">puts</span>(<span style="color:#c41a16">&#34;Ashish&#34;</span>);
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">puts</span>(<span style="color:#c41a16">&#34;Ayush&#34;</span>);
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="dhttpscodeforcescontest1363problemd"><a href="https://codeforc.es/contest/1363/problem/D">D</a></h2>
<h3 id="description-3">Description</h3>
<p>这是一道<strong>交互题</strong>。</p>
<p>给定长为 $n$ 的数组 $a=[a_1,a_2,&hellip;,a_n]$ 和 $k$ 个互不相交的子集 $S_1,S_2,&hellip;,S_k$，这些子集中的元素都是 $[1,n]$ 之间的正整数。这些子集两两的交集为空。</p>
<p>你可以进行最多 $12$ 次询问。每次询问你可以给出 $c$ 个互不相同且在 $[1,n]$ 之间的正整数 $v_1,v_2,&hellip;,v_c$，然后你会得到 $\max\{v_i\}$。</p>
<p>对于每个子集 $S_i$，你需要求出 $P_i=\max\limits_{j \notin S_i} a_j$。</p>
<p>$2 \leq n \leq 1000,1 \leq a_i,k \leq n,1 \leq c&lt; n$。​​</p>
<h3 id="solution-3">Solution</h3>
<p>看到 $12$ 次询问，显然我们需要询问 $\log n$ 次。可以向二分的思路上靠。</p>
<p>注意到子集无交，那么有一个重要的结论：除了包含数组中最大数的集合，其他集合的答案一定是这个最大的数。</p>
<p>我们可以通过 $1$ 次询问得到最大的数，再通过 $\log_2n$ 次询问找到这个最大的数的位置。</p>
<p>最后再通过一次询问得到这个包含最大数的答案即可，正好 $12$ 次。</p>
<h3 id="code-3">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1100</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">n</span>, <span style="color:#000">k</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">vector</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">a</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">ans</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">char</span> <span style="color:#000">s</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">ask</span>(<span style="color:#a90d91">int</span> <span style="color:#000">l</span>, <span style="color:#a90d91">int</span> <span style="color:#000">r</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34;?&#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">r</span> <span style="color:#000">-</span> <span style="color:#000">l</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#000">l</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">r</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">i</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">clear</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">k</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">clear</span>();
</span></span><span style="display:flex;"><span>    <span style="color:#000">memset</span>(<span style="color:#000">ans</span>, <span style="color:#1c01ce">0</span>, <span style="color:#a90d91">sizeof</span>(<span style="color:#000">ans</span>));
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">ios</span><span style="color:#000">::</span><span style="color:#000">sync_with_stdio</span>(<span style="color:#a90d91">false</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">T</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">T</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> (<span style="color:#000">T</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">k</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">x</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">k</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">int</span> <span style="color:#000">c</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">c</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">while</span> (<span style="color:#000">c</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">x</span>, <span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">push_back</span>(<span style="color:#000">x</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">sort</span>(<span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">begin</span>(), <span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">end</span>());  
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">mx</span> <span style="color:#000">=</span> <span style="color:#000">ask</span>(<span style="color:#1c01ce">1</span>, <span style="color:#000">n</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">l</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">r</span> <span style="color:#000">=</span> <span style="color:#000">n</span>, <span style="color:#000">pos</span> <span style="color:#000">=</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">while</span> (<span style="color:#000">l</span> <span style="color:#000">&lt;=</span> <span style="color:#000">r</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">int</span> <span style="color:#000">mid</span> <span style="color:#000">=</span> (<span style="color:#000">l</span> <span style="color:#000">+</span> <span style="color:#000">r</span>) <span style="color:#000">/</span> <span style="color:#1c01ce">2</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">ask</span>(<span style="color:#1c01ce">1</span>, <span style="color:#000">mid</span>) <span style="color:#000">==</span> <span style="color:#000">mx</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">pos</span> <span style="color:#000">=</span> <span style="color:#000">mid</span>, <span style="color:#000">r</span> <span style="color:#000">=</span> <span style="color:#000">mid</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>                <span style="color:#000">l</span> <span style="color:#000">=</span> <span style="color:#000">mid</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#177500">//cout &lt;&lt; pos &lt;&lt; endl;
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">k</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">auto</span> <span style="color:#000">p</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">lower_bound</span>(<span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">begin</span>(), <span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">end</span>(), <span style="color:#000">pos</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">p</span> <span style="color:#000">==</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">end</span>() <span style="color:#000">||</span> <span style="color:#000">*</span><span style="color:#000">p</span> <span style="color:#000">!=</span> <span style="color:#000">pos</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">ans</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">mx</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>            {
</span></span><span style="display:flex;"><span>                <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34;?&#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">n</span> <span style="color:#000">-</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">size</span>() <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span>;
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                {
</span></span><span style="display:flex;"><span>                    <span style="color:#a90d91">auto</span> <span style="color:#000">p</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">lower_bound</span>(<span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">begin</span>(), <span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">end</span>(), <span style="color:#000">j</span>);
</span></span><span style="display:flex;"><span>                    <span style="color:#a90d91">if</span> (<span style="color:#000">p</span> <span style="color:#000">==</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">end</span>() <span style="color:#000">||</span> <span style="color:#000">*</span><span style="color:#000">p</span> <span style="color:#000">!=</span> <span style="color:#000">j</span>)
</span></span><span style="display:flex;"><span>                        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">j</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span>;
</span></span><span style="display:flex;"><span>                }
</span></span><span style="display:flex;"><span>                <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>                <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">ans</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>            }
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34;!&#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">k</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">ans</span>[<span style="color:#000">i</span>] <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">s</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">clear</span>();
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="ehttpscodeforcescontest1363probleme"><a href="https://codeforc.es/contest/1363/problem/E">E</a></h2>
<h3 id="description-4">Description</h3>
<p>给定 $n$​ 个节点标号为 $1$​ 到 $n$​ 的树，且 $1$​ 为树根，每个节点上有三个数字 $a_i,b_i,c_i$​。$a_i$​ 表示修改代价。$b_i,c_i$​ 的值为 $0$​ 或 $1$​ ， $b_i$​为初始值，$c_i$​为目标值。</p>
<p>每次可以选择以节点 $u$​ 为根节点的子树，去把该子树的所有结点从初始值修改成目标值。修改方法为：可以选择该子树中任意 $k$​ 个节点进行交换初始值，使之与该节点的目标值相等，代价为 $k\times a_u$​。</p>
<p>判断能否把左右点从初始值变为目标值，并输出最小的代价。</p>
<h3 id="solution-4">Solution</h3>
<p>很水的一个题。</p>
<p>对于一个点，在哪里交换是一样的，区别只有代价。</p>
<p>那么我们显然应该用这个点到根路径上所有点代价的最小值去修改它。</p>
<p>直接把代价下放然后取最小值即可，这样我们就可以非常贪心，如果能改直接在深度大的点改即可。</p>
<p>具体到一个子树需要修改几次呢？</p>
<p>随便写个 DP：$f(i,0/1)$ 表示以 $i$ 为根子树内还有多少个初始值为 $0/1$ 的点未被修改。</p>
<p>然后对于一个子树我们能修改的就是 $\min(f(i,0),f(i,1))$ 个点，算一下代价然后修改 $f$ 数组即可。</p>
<h3 id="code-4">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2e5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">typedef</span> <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">ll</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">a</span>[<span style="color:#000">maxn</span>], <span style="color:#000">b</span>[<span style="color:#000">maxn</span>], <span style="color:#000">c</span>[<span style="color:#000">maxn</span>], <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span><span style="color:#000">ll</span> <span style="color:#000">ans</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">f</span>[<span style="color:#000">maxn</span>][<span style="color:#1c01ce">2</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">vector</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">e</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">add</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>) { <span style="color:#000">e</span>[<span style="color:#000">x</span>].<span style="color:#000">push_back</span>(<span style="color:#000">y</span>), <span style="color:#000">e</span>[<span style="color:#000">y</span>].<span style="color:#000">push_back</span>(<span style="color:#000">x</span>); }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">dfs</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">fa</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">a</span>[<span style="color:#000">x</span>] <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">min</span>(<span style="color:#000">a</span>[<span style="color:#000">x</span>], <span style="color:#000">a</span>[<span style="color:#000">fa</span>]);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">b</span>[<span style="color:#000">x</span>] <span style="color:#000">!=</span> <span style="color:#000">c</span>[<span style="color:#000">x</span>])
</span></span><span style="display:flex;"><span>        <span style="color:#000">f</span>[<span style="color:#000">x</span>][<span style="color:#000">b</span>[<span style="color:#000">x</span>] <span style="color:#000">==</span> <span style="color:#1c01ce">1</span>]<span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">v</span> : <span style="color:#000">e</span>[<span style="color:#000">x</span>])
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">v</span> <span style="color:#000">!=</span> <span style="color:#000">fa</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">dfs</span>(<span style="color:#000">v</span>, <span style="color:#000">x</span>), <span style="color:#000">f</span>[<span style="color:#000">x</span>][<span style="color:#1c01ce">0</span>] <span style="color:#000">+=</span> <span style="color:#000">f</span>[<span style="color:#000">v</span>][<span style="color:#1c01ce">0</span>], <span style="color:#000">f</span>[<span style="color:#000">x</span>][<span style="color:#1c01ce">1</span>] <span style="color:#000">+=</span> <span style="color:#000">f</span>[<span style="color:#000">v</span>][<span style="color:#1c01ce">1</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">need</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">min</span>(<span style="color:#000">f</span>[<span style="color:#000">x</span>][<span style="color:#1c01ce">0</span>], <span style="color:#000">f</span>[<span style="color:#000">x</span>][<span style="color:#1c01ce">1</span>]);
</span></span><span style="display:flex;"><span>    <span style="color:#000">ans</span> <span style="color:#000">+=</span> <span style="color:#1c01ce">1ll</span> <span style="color:#000">*</span> <span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">need</span> <span style="color:#000">*</span> <span style="color:#000">a</span>[<span style="color:#000">x</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#000">f</span>[<span style="color:#000">x</span>][<span style="color:#1c01ce">0</span>] <span style="color:#000">-=</span> <span style="color:#000">need</span>, <span style="color:#000">f</span>[<span style="color:#000">x</span>][<span style="color:#1c01ce">1</span>] <span style="color:#000">-=</span> <span style="color:#000">need</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">ios</span><span style="color:#000">::</span><span style="color:#000">sync_with_stdio</span>(<span style="color:#a90d91">false</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>] <span style="color:#000">&gt;&gt;</span> <span style="color:#000">b</span>[<span style="color:#000">i</span>] <span style="color:#000">&gt;&gt;</span> <span style="color:#000">c</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">x</span>, <span style="color:#000">y</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">x</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">y</span>, <span style="color:#000">add</span>(<span style="color:#000">x</span>, <span style="color:#000">y</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">a</span>[<span style="color:#1c01ce">0</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">30</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">dfs</span>(<span style="color:#1c01ce">1</span>, <span style="color:#1c01ce">0</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">f</span>[<span style="color:#1c01ce">1</span>][<span style="color:#1c01ce">0</span>] <span style="color:#000">!=</span> <span style="color:#1c01ce">0</span> <span style="color:#000">||</span> <span style="color:#000">f</span>[<span style="color:#1c01ce">1</span>][<span style="color:#1c01ce">1</span>] <span style="color:#000">!=</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">ans</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="fhttpscodeforcescontest1363problemf"><a href="https://codeforc.es/contest/1363/problem/F">F</a></h2>
<h3 id="description-5">Description</h3>
<p>给定两个长度为 $n$ 的字符串 $s$，$t$。定义一次操作为选择 $s$ 的一个子串 $s_{l, l +1, \dots, r}$，然后将之修改为 $s_{r, l, l + 1, l + 2, \dots, r - 1 }$。请求助使 $s$ 与 $t$ 相等的最小操作次数。无解输出 $-1$。</p>
<p>多组数据，$\sum n \leq 2000$，$s, t$ 中只有小写字母。</p>
<h3 id="solution-5">Solution</h3>
<p>这个操作的实质就是把一个字符提到前面去。</p>
<p>首先如果有一种字符出现次数不同就一定无解，否则一定能构造出一组解。</p>
<p>可以想到一个 DP：$f_{i,j}$​ 表示 $s$​ 匹配到第 $i$​ 位，$t$​ 匹配到第 $j$​ 位的最小操作次数，这里限制 $j\geq i$​。</p>
<p>为什么 $j$​ 可以比 $i$​ 大呢？意思就是在匹配时我们可以把 $s$ 串中后面的移到前面来。</p>
<p>转移有三种情况：</p>
<ul>
<li>
<p>当 $s_i=t_j$，$f_{i,j}=f_{i-1,j-1}$，很显然；</p>
</li>
<li>
<p>当出现次数允许（即 $i$ 后面有多的 $t_j$），我们可以从后面拿一个字符过来，即 $f_{i,j}=f_{i,j-1}$。这个东西看着很不对，但我们还有下面的转移：</p>
</li>
<li>
<p>$f_{i,j}=f_{i-1,j}+1$。这个就是我们之前拿的字符，现在计算代价。</p>
</li>
</ul>
<p>好像很不对，但其实是对的：假如根本没拿过来，那就不会被转移到。</p>
<h3 id="code-5">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2010</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">char</span> <span style="color:#000">s</span>[<span style="color:#000">maxn</span>], <span style="color:#000">t</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">f</span>[<span style="color:#000">maxn</span>][<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">sum1</span>[<span style="color:#000">maxn</span>][<span style="color:#1c01ce">30</span>], <span style="color:#000">sum2</span>[<span style="color:#000">maxn</span>][<span style="color:#1c01ce">30</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">updmi</span>(<span style="color:#a90d91">int</span> <span style="color:#000">&amp;</span><span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>) { <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">min</span>(<span style="color:#000">x</span>, <span style="color:#000">y</span>); }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">bool</span> <span style="color:#000">check</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#1c01ce">26</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">sum1</span>[<span style="color:#000">n</span>][<span style="color:#000">i</span>] <span style="color:#000">!=</span> <span style="color:#000">sum2</span>[<span style="color:#000">n</span>][<span style="color:#000">i</span>])
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">return</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">ios</span><span style="color:#000">::</span><span style="color:#000">sync_with_stdio</span>(<span style="color:#a90d91">false</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">T</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">T</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> (<span style="color:#000">T</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> (<span style="color:#000">s</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>) <span style="color:#000">&gt;&gt;</span> (<span style="color:#000">t</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">memset</span>(<span style="color:#000">sum1</span>, <span style="color:#1c01ce">0</span>, <span style="color:#a90d91">sizeof</span>(<span style="color:#000">sum1</span>)), <span style="color:#000">memset</span>(<span style="color:#000">sum2</span>, <span style="color:#1c01ce">0</span>, <span style="color:#a90d91">sizeof</span>(<span style="color:#000">sum2</span>));
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">sum1</span>[<span style="color:#000">i</span>][<span style="color:#000">s</span>[<span style="color:#000">i</span>] <span style="color:#000">-</span> <span style="color:#2300ce">&#39;a&#39;</span>]<span style="color:#000">++</span>, <span style="color:#000">sum2</span>[<span style="color:#000">i</span>][<span style="color:#000">t</span>[<span style="color:#000">i</span>] <span style="color:#000">-</span> <span style="color:#2300ce">&#39;a&#39;</span>]<span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;</span> <span style="color:#1c01ce">26</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">sum1</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>] <span style="color:#000">+=</span> <span style="color:#000">sum1</span>[<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>][<span style="color:#000">j</span>], <span style="color:#000">sum2</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>] <span style="color:#000">+=</span> <span style="color:#000">sum2</span>[<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>][<span style="color:#000">j</span>];
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">check</span>() <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">continue</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">f</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">25</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">f</span>[<span style="color:#1c01ce">0</span>][<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#000">i</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            {
</span></span><span style="display:flex;"><span>                <span style="color:#000">f</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>] <span style="color:#000">=</span> <span style="color:#000">f</span>[<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>][<span style="color:#000">j</span>] <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">if</span> (<span style="color:#000">s</span>[<span style="color:#000">i</span>] <span style="color:#000">==</span> <span style="color:#000">t</span>[<span style="color:#000">j</span>])
</span></span><span style="display:flex;"><span>                    <span style="color:#000">updmi</span>(<span style="color:#000">f</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>], <span style="color:#000">f</span>[<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>][<span style="color:#000">j</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>]);
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">if</span> (<span style="color:#000">sum1</span>[<span style="color:#000">i</span>][<span style="color:#000">t</span>[<span style="color:#000">j</span>] <span style="color:#000">-</span> <span style="color:#2300ce">&#39;a&#39;</span>] <span style="color:#000">&lt;</span> <span style="color:#000">sum2</span>[<span style="color:#000">j</span>][<span style="color:#000">t</span>[<span style="color:#000">j</span>] <span style="color:#000">-</span> <span style="color:#2300ce">&#39;a&#39;</span>])
</span></span><span style="display:flex;"><span>                    <span style="color:#000">updmi</span>(<span style="color:#000">f</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>], <span style="color:#000">f</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>]);
</span></span><span style="display:flex;"><span>            }
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">f</span>[<span style="color:#000">n</span>][<span style="color:#000">n</span>] <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div>]]></content:encoded>
    </item>
    
    <item>
      <title>Codeforces Round 337 (Div. 2)</title>
      <link>https://luoyisu.github.io/posts/cf-contest610/</link>
      <pubDate>Tue, 28 Dec 2021 13:32:13 +0000</pubDate>
      
      <guid>https://luoyisu.github.io/posts/cf-contest610/</guid>
      <description>&lt;h2 id=&#34;概述&#34;&gt;概述&lt;/h2&gt;
&lt;p&gt;虽说是 Div2，但也不是特别简单，E 还是不太裸的。。&lt;/p&gt;</description>
      <content:encoded><![CDATA[<h2 id="概述">概述</h2>
<p>虽说是 Div2，但也不是特别简单，E 还是不太裸的。。</p>
<h2 id="ahttpscodeforcescontest610problema"><a href="https://codeforc.es/contest/610/problem/A">A</a></h2>
<h3 id="description">Description</h3>
<p>Pasha 有一个正整数长度的木棍 $n$​。他想要完成三次切割以获得四个部分。每个部分必须有一些正整数长度，这些长度的总和显然是 $n$。</p>
<p>Pasha 喜欢长方形但讨厌正方形，所以他想知道，有多少种方法可以将棍子分成四个部分，这样就可以用这些部分形成一个矩形，但不可能形成正方形。</p>
<p>你的任务是帮助 Pasha 并计算这些方式的数量。</p>
<h3 id="solution">Solution</h3>
<p>看代码。</p>
<h3 id="code">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> (<span style="color:#000">n</span> <span style="color:#000">%</span> <span style="color:#1c01ce">2</span> <span style="color:#000">?</span> <span style="color:#1c01ce">0</span> <span style="color:#000">:</span> (<span style="color:#000">n</span> <span style="color:#000">/</span> <span style="color:#1c01ce">2</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>) <span style="color:#000">/</span> <span style="color:#1c01ce">2</span>) <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="bhttpscodeforcescontest610problemb"><a href="https://codeforc.es/contest/610/problem/B">B</a></h2>
<h3 id="description-1">Description</h3>
<p>Vika 有 $n$ 桶油漆，第 $i$ 桶有 $a_i$ 升油漆。</p>
<p>Vika 有一张无限长的长方形纸条，她将长方形纸条分成了无限个正方形，她将按照以下规则对正方形涂色。</p>
<ul>
<li>涂一个正方形需要 $1$ 升油漆。</li>
<li>第一个正方形可以用第任意第 $i$ 桶油漆。</li>
<li>若第 $k$ 个正方形用了第 $x$ 桶油漆，则第 $k+1$ 个正方形将用第 $x+1$ 桶油漆，若 $x=n$，则第 $k+1$ 个正方形将用第 $1$ 桶油漆。若 $a_x = 0$ 则停止涂色。</li>
</ul>
<p>求 Vika 最多可以涂多少个正方形。</p>
<h3 id="solution-1">Solution</h3>
<p>设最小的元素是 $x$，很显然答案的下界是 $nx$。</p>
<p>把所有元素都减去 $x$ 之后，我们需要找到一段所有元素都大于零的最长连续段，把这部分也加进答案里即可。</p>
<p>这个最长连续段要么就是连续的一段，要么是头尾相接的一段，都模拟一下就好了。</p>
<h3 id="code-1">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2e5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">a</span>[<span style="color:#000">maxn</span>], <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">pos</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">a</span>[<span style="color:#1c01ce">0</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">2e9</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">a</span>[<span style="color:#000">i</span>] <span style="color:#000">&lt;=</span> <span style="color:#000">a</span>[<span style="color:#000">pos</span>])
</span></span><span style="display:flex;"><span>            <span style="color:#000">pos</span> <span style="color:#000">=</span> <span style="color:#000">i</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">lpos</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">a</span>[<span style="color:#000">i</span>] <span style="color:#000">==</span> <span style="color:#000">a</span>[<span style="color:#000">pos</span>])
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">lpos</span> <span style="color:#000">=</span> <span style="color:#000">i</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">break</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">lst</span> <span style="color:#000">=</span> <span style="color:#000">lpos</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">sum</span> <span style="color:#000">=</span> <span style="color:#000">lpos</span> <span style="color:#000">+</span> <span style="color:#000">n</span> <span style="color:#000">-</span> <span style="color:#000">pos</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#000">lpos</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">a</span>[<span style="color:#000">i</span>] <span style="color:#000">!=</span> <span style="color:#000">a</span>[<span style="color:#000">pos</span>])
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">continue</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">sum</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">max</span>(<span style="color:#000">sum</span>, <span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#000">lst</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>);  
</span></span><span style="display:flex;"><span>        <span style="color:#000">lst</span> <span style="color:#000">=</span> <span style="color:#000">i</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> (<span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span>)<span style="color:#000">a</span>[<span style="color:#000">pos</span>] <span style="color:#000">*</span> <span style="color:#000">n</span> <span style="color:#000">+</span> <span style="color:#000">sum</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="chttpscodeforcescontest610problemc"><a href="https://codeforc.es/contest/610/problem/C">C</a></h2>
<h3 id="description-2">Description</h3>
<p>给定 $k$，求 $2^k$ 个 $2^k$ 维向量满足每个向量的坐标表示中任意一维都为 $1$ 或 $-1$，且这些向量两两点积为 $0$。</p>
<p>$0\leq k\leq 9$。</p>
<h3 id="solution-2">Solution</h3>
<p>这个题一看就比较找规律，再联想分治&hellip;</p>
<p>先构造一个如下的矩阵（$1$ 表示 $1$，$0$ 表示 $-1$）。</p>
<pre tabindex="0"><code>11
10
</code></pre><p>这是 $k=1$ 的情况，很显然满足要求。</p>
<p>怎么从它扩展到 $k=2$ 呢？可以构造一个如下的矩阵：</p>
<pre tabindex="0"><code>1111
1010
1100
1001
</code></pre><p>就是把 $k=1$​ 的矩阵在四个地方复制一份，再把右下角的矩阵取反就行。</p>
<p>然后重复以上操作就构造完了。</p>
<p>证明一下：首先左半部分在原来两个矩阵内部内积是 $0$，取反之后仍然在内部内积是 $0$，而两个矩阵相同的行内积在右面正好会抵消，于是这么构造就是对的。</p>
<h3 id="code-2">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">a</span>[<span style="color:#000">maxn</span>][<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">solve</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>, <span style="color:#a90d91">int</span> <span style="color:#000">len</span>, <span style="color:#a90d91">int</span> <span style="color:#000">opt</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">len</span> <span style="color:#000">==</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">a</span>[<span style="color:#000">x</span>][<span style="color:#000">y</span>] <span style="color:#000">=</span> <span style="color:#000">opt</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">p</span> <span style="color:#000">=</span> <span style="color:#000">len</span> <span style="color:#000">/</span> <span style="color:#1c01ce">2</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">solve</span>(<span style="color:#000">x</span>, <span style="color:#000">y</span>, <span style="color:#000">p</span>, <span style="color:#000">opt</span>), <span style="color:#000">solve</span>(<span style="color:#000">x</span>, <span style="color:#000">y</span> <span style="color:#000">+</span> <span style="color:#000">p</span>, <span style="color:#000">p</span>, <span style="color:#000">opt</span>), <span style="color:#000">solve</span>(<span style="color:#000">x</span> <span style="color:#000">+</span> <span style="color:#000">p</span>, <span style="color:#000">y</span>, <span style="color:#000">p</span>, <span style="color:#000">opt</span>), <span style="color:#000">solve</span>(<span style="color:#000">x</span> <span style="color:#000">+</span> <span style="color:#000">p</span>, <span style="color:#000">y</span> <span style="color:#000">+</span> <span style="color:#000">p</span>, <span style="color:#000">p</span>, <span style="color:#000">opt</span> <span style="color:#000">^</span> <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">k</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">k</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">solve</span>(<span style="color:#1c01ce">1</span>, <span style="color:#1c01ce">1</span>, <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">k</span>, <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> (<span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">k</span>); <span style="color:#000">i</span><span style="color:#000">++</span>, <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;=</span> (<span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">k</span>); <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> (<span style="color:#000">a</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>] <span style="color:#000">?</span> <span style="color:#2300ce">&#39;+&#39;</span> <span style="color:#000">:</span> <span style="color:#2300ce">&#39;*&#39;</span>);  
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="dhttpscodeforcescontest610problemd"><a href="https://codeforc.es/contest/610/problem/D">D</a></h2>
<h3 id="description-3">Description</h3>
<p>有一个网格，给出 $n$ 条线段，每条线段覆盖一些网格，问被覆盖的网格的面积并是多少。</p>
<p>$n\leq10000$。</p>
<h3 id="solution-3">Solution</h3>
<p>太扫描线了！！！</p>
<p>把题目的网格图转成平面直角坐标系，线段转成点，然后扫描线即可。</p>
<h3 id="code-3">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cmath&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;utility&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2e5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">typedef</span> <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">ll</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">struct</span> <span style="color:#3f6e75">node</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">x1</span>, <span style="color:#000">x2</span>, <span style="color:#000">y</span>, <span style="color:#000">opt</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">bool</span> <span style="color:#a90d91">operator</span><span style="color:#000">&lt;</span>(<span style="color:#a90d91">const</span> <span style="color:#000">node</span> <span style="color:#000">&amp;</span><span style="color:#000">b</span>) <span style="color:#a90d91">const</span> { <span style="color:#a90d91">return</span> <span style="color:#000">y</span> <span style="color:#000">&lt;</span> <span style="color:#000">b</span>.<span style="color:#000">y</span>; }
</span></span><span style="display:flex;"><span>} <span style="color:#000">a</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">p</span>[<span style="color:#000">maxn</span>], <span style="color:#000">tot</span>, <span style="color:#000">n</span>, <span style="color:#000">cnt</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">struct</span> <span style="color:#3f6e75">Tree</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">struct</span> <span style="color:#3f6e75">Node</span>
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">l</span>, <span style="color:#000">r</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">ll</span> <span style="color:#000">sum</span>, <span style="color:#000">lzy</span>;
</span></span><span style="display:flex;"><span>    } <span style="color:#000">t</span>[<span style="color:#000">maxn</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">3</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">int</span> <span style="color:#000">ls</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>) { <span style="color:#a90d91">return</span> <span style="color:#000">x</span> <span style="color:#000">*</span> <span style="color:#1c01ce">2</span>; }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">int</span> <span style="color:#000">rs</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>) { <span style="color:#a90d91">return</span> <span style="color:#000">x</span> <span style="color:#000">*</span> <span style="color:#1c01ce">2</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>; }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">push_up</span>(<span style="color:#a90d91">int</span> <span style="color:#000">k</span>) { <span style="color:#000">t</span>[<span style="color:#000">k</span>].<span style="color:#000">sum</span> <span style="color:#000">=</span> <span style="color:#000">t</span>[<span style="color:#000">k</span>].<span style="color:#000">lzy</span> <span style="color:#000">&gt;</span> <span style="color:#1c01ce">0</span> <span style="color:#000">?</span> <span style="color:#000">p</span>[<span style="color:#000">t</span>[<span style="color:#000">k</span>].<span style="color:#000">r</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">-</span> <span style="color:#000">p</span>[<span style="color:#000">t</span>[<span style="color:#000">k</span>].<span style="color:#000">l</span>] <span style="color:#000">:</span> <span style="color:#000">t</span>[<span style="color:#000">ls</span>(<span style="color:#000">k</span>)].<span style="color:#000">sum</span> <span style="color:#000">+</span> <span style="color:#000">t</span>[<span style="color:#000">rs</span>(<span style="color:#000">k</span>)].<span style="color:#000">sum</span>; }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">void</span> <span style="color:#000">build</span>(<span style="color:#a90d91">int</span> <span style="color:#000">l</span>, <span style="color:#a90d91">int</span> <span style="color:#000">r</span>, <span style="color:#a90d91">int</span> <span style="color:#000">k</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">t</span>[<span style="color:#000">k</span>].<span style="color:#000">l</span> <span style="color:#000">=</span> <span style="color:#000">l</span>, <span style="color:#000">t</span>[<span style="color:#000">k</span>].<span style="color:#000">r</span> <span style="color:#000">=</span> <span style="color:#000">r</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">l</span> <span style="color:#000">==</span> <span style="color:#000">r</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">t</span>[<span style="color:#000">k</span>].<span style="color:#000">sum</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">return</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">mid</span> <span style="color:#000">=</span> (<span style="color:#000">l</span> <span style="color:#000">+</span> <span style="color:#000">r</span>) <span style="color:#000">/</span> <span style="color:#1c01ce">2</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">build</span>(<span style="color:#000">l</span>, <span style="color:#000">mid</span>, <span style="color:#000">ls</span>(<span style="color:#000">k</span>)), <span style="color:#000">build</span>(<span style="color:#000">mid</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">r</span>, <span style="color:#000">rs</span>(<span style="color:#000">k</span>));
</span></span><span style="display:flex;"><span>        <span style="color:#000">push_up</span>(<span style="color:#000">k</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">void</span> <span style="color:#000">modify</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>, <span style="color:#a90d91">int</span> <span style="color:#000">v</span>, <span style="color:#a90d91">int</span> <span style="color:#000">k</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">p</span>[<span style="color:#000">t</span>[<span style="color:#000">k</span>].<span style="color:#000">r</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">&lt;=</span> <span style="color:#000">x</span> <span style="color:#000">||</span> <span style="color:#000">p</span>[<span style="color:#000">t</span>[<span style="color:#000">k</span>].<span style="color:#000">l</span>] <span style="color:#000">&gt;=</span> <span style="color:#000">y</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">return</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">p</span>[<span style="color:#000">t</span>[<span style="color:#000">k</span>].<span style="color:#000">r</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">&lt;=</span> <span style="color:#000">y</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">p</span>[<span style="color:#000">t</span>[<span style="color:#000">k</span>].<span style="color:#000">l</span>] <span style="color:#000">&gt;=</span> <span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">t</span>[<span style="color:#000">k</span>].<span style="color:#000">lzy</span> <span style="color:#000">+=</span> <span style="color:#000">v</span>, <span style="color:#000">push_up</span>(<span style="color:#000">k</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">return</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">mid</span> <span style="color:#000">=</span> <span style="color:#000">floor</span>((<span style="color:#000">x</span> <span style="color:#000">+</span> <span style="color:#000">y</span>) <span style="color:#000">/</span> <span style="color:#1c01ce">2.0</span>); <span style="color:#177500">// 注意，坐标有负数，需要向下取整而不是向零取整
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>        <span style="color:#a90d91">if</span> (<span style="color:#000">x</span> <span style="color:#000">&lt;=</span> <span style="color:#000">mid</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">modify</span>(<span style="color:#000">x</span>, <span style="color:#000">y</span>, <span style="color:#000">v</span>, <span style="color:#000">ls</span>(<span style="color:#000">k</span>));
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">y</span> <span style="color:#000">&gt;</span> <span style="color:#000">mid</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">modify</span>(<span style="color:#000">x</span>, <span style="color:#000">y</span>, <span style="color:#000">v</span>, <span style="color:#000">rs</span>(<span style="color:#000">k</span>));
</span></span><span style="display:flex;"><span>        <span style="color:#000">push_up</span>(<span style="color:#000">k</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>} <span style="color:#000">t</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">signed</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">ios</span><span style="color:#000">::</span><span style="color:#000">sync_with_stdio</span>(<span style="color:#a90d91">false</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">x1</span>, <span style="color:#000">x2</span>, <span style="color:#000">y1</span>, <span style="color:#000">y2</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">x1</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">y1</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">x2</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">y2</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">y1</span> <span style="color:#000">==</span> <span style="color:#000">y2</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">x1</span> <span style="color:#000">&gt;</span> <span style="color:#000">x2</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">swap</span>(<span style="color:#000">x1</span>, <span style="color:#000">x2</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#000">x2</span><span style="color:#000">++</span>, <span style="color:#000">y2</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">a</span>[<span style="color:#000">++</span><span style="color:#000">tot</span>] <span style="color:#000">=</span> {<span style="color:#000">x1</span>, <span style="color:#000">x2</span>, <span style="color:#000">y1</span>, <span style="color:#1c01ce">1</span>}, <span style="color:#000">a</span>[<span style="color:#000">++</span><span style="color:#000">tot</span>] <span style="color:#000">=</span> {<span style="color:#000">x1</span>, <span style="color:#000">x2</span>, <span style="color:#000">y2</span>, <span style="color:#000">-</span><span style="color:#1c01ce">1</span>};
</span></span><span style="display:flex;"><span>            <span style="color:#000">p</span>[<span style="color:#000">++</span><span style="color:#000">cnt</span>] <span style="color:#000">=</span> <span style="color:#000">x1</span>, <span style="color:#000">p</span>[<span style="color:#000">++</span><span style="color:#000">cnt</span>] <span style="color:#000">=</span> <span style="color:#000">x2</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">y1</span> <span style="color:#000">&gt;</span> <span style="color:#000">y2</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">swap</span>(<span style="color:#000">y1</span>, <span style="color:#000">y2</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#000">x2</span><span style="color:#000">++</span>, <span style="color:#000">y2</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">a</span>[<span style="color:#000">++</span><span style="color:#000">tot</span>] <span style="color:#000">=</span> {<span style="color:#000">x1</span>, <span style="color:#000">x2</span>, <span style="color:#000">y1</span>, <span style="color:#1c01ce">1</span>}, <span style="color:#000">a</span>[<span style="color:#000">++</span><span style="color:#000">tot</span>] <span style="color:#000">=</span> {<span style="color:#000">x1</span>, <span style="color:#000">x2</span>, <span style="color:#000">y2</span>, <span style="color:#000">-</span><span style="color:#1c01ce">1</span>};
</span></span><span style="display:flex;"><span>            <span style="color:#000">p</span>[<span style="color:#000">++</span><span style="color:#000">cnt</span>] <span style="color:#000">=</span> <span style="color:#000">x1</span>, <span style="color:#000">p</span>[<span style="color:#000">++</span><span style="color:#000">cnt</span>] <span style="color:#000">=</span> <span style="color:#000">x2</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">sort</span>(<span style="color:#000">p</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">p</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">+</span> <span style="color:#000">cnt</span>), <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">sort</span>(<span style="color:#000">a</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">a</span> <span style="color:#000">+</span> <span style="color:#000">tot</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">cnt</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">unique</span>(<span style="color:#000">p</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">p</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">+</span> <span style="color:#000">cnt</span>) <span style="color:#000">-</span> <span style="color:#000">p</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">t</span>.<span style="color:#000">build</span>(<span style="color:#1c01ce">1</span>, <span style="color:#000">cnt</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>, <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">ll</span> <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>, <span style="color:#000">lst</span> <span style="color:#000">=</span> <span style="color:#000">a</span>[<span style="color:#1c01ce">1</span>].<span style="color:#000">y</span>; 
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">tot</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">ans</span> <span style="color:#000">+=</span> (<span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">y</span> <span style="color:#000">-</span> <span style="color:#000">lst</span>) <span style="color:#000">*</span> <span style="color:#000">t</span>.<span style="color:#000">t</span>[<span style="color:#1c01ce">1</span>].<span style="color:#000">sum</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">t</span>.<span style="color:#000">modify</span>(<span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">x1</span>, <span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">x2</span>, <span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">opt</span>, <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">lst</span> <span style="color:#000">=</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">y</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">ans</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="ehttpscodeforcescontest610probleme"><a href="https://codeforc.es/contest/610/problem/E">E</a></h2>
<h3 id="description-4">Description</h3>
<p>给定一个长度为 $n$​​（$n&lt;200000$​）的字符串 $s$，有两种指令：</p>
<ol>
<li>
<p>将区间 $[L,R]$​ 内的字符变为 $ch$；</p>
</li>
<li>
<p>给定长度为 $k$​​​​​（$1\leq k\leq10$​​​​）的字符串排列 $t$​​​，向 $s$​​ 串中添加字符，使得 $s$​ 以 $t$ 为模式循环，求最少的循环次数。</p>
</li>
</ol>
<p>最多 $20000$ 条指令。</p>
<p>字符集大小为 $k$。</p>
<h3 id="solution-4">Solution</h3>
<p>首先有一个结论：当两个相邻字符在字符串排列中前后顺序相同，这两个一定在同一个循环节内（因为不在的话会导致循环节增加一个）。</p>
<p>这样对于一次询问，一个很暴力的想法是：把字符串遍历一遍，看相邻字符在排列中的顺序。</p>
<p>注意到 $k$ 很小，我们尝试把询问的复杂度降到和 $k$ 有关。</p>
<p>发现我们只需要相邻字符的信息，而且这个信息是个数，那我们可以直接把每两种字符的相邻次数存下来询问时 $O(k^2)$ 枚举一遍字符集，把顺序不同的加进答案即可。</p>
<p>询问解决了，下一步是修改。</p>
<p>我们需要区间赋值，整体查询，且维护信息可以合并，那直接选择线段树，每个结点维护这段区间中上文的数组，以及最左元素、最右元素方便合并。</p>
<p>时间复杂度 $O(nk^2+mk^2\log n)$。</p>
<h3 id="code-4">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cmath&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;utility&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2e5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>, <span style="color:#000">maxk</span> <span style="color:#000">=</span> <span style="color:#1c01ce">11</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">char</span> <span style="color:#000">s</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">n</span>, <span style="color:#000">m</span>, <span style="color:#000">k</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">struct</span> <span style="color:#3f6e75">Tree</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">static</span> <span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#000">::</span><span style="color:#000">maxn</span> <span style="color:#000">*</span> <span style="color:#1c01ce">4</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">cnt</span>[<span style="color:#000">maxn</span>][<span style="color:#000">maxk</span>][<span style="color:#000">maxk</span>], <span style="color:#000">lch</span>[<span style="color:#000">maxn</span>], <span style="color:#000">rch</span>[<span style="color:#000">maxn</span>], <span style="color:#000">lzy</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">int</span> <span style="color:#000">ls</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>) { <span style="color:#a90d91">return</span> <span style="color:#000">x</span> <span style="color:#000">*</span> <span style="color:#1c01ce">2</span>; }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">int</span> <span style="color:#000">rs</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>) { <span style="color:#a90d91">return</span> <span style="color:#000">x</span> <span style="color:#000">*</span> <span style="color:#1c01ce">2</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>; }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">void</span> <span style="color:#000">push_up</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">k</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;</span> <span style="color:#000">k</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">cnt</span>[<span style="color:#000">x</span>][<span style="color:#000">i</span>][<span style="color:#000">j</span>] <span style="color:#000">=</span> <span style="color:#000">cnt</span>[<span style="color:#000">ls</span>(<span style="color:#000">x</span>)][<span style="color:#000">i</span>][<span style="color:#000">j</span>] <span style="color:#000">+</span> <span style="color:#000">cnt</span>[<span style="color:#000">rs</span>(<span style="color:#000">x</span>)][<span style="color:#000">i</span>][<span style="color:#000">j</span>];
</span></span><span style="display:flex;"><span>        <span style="color:#000">cnt</span>[<span style="color:#000">x</span>][<span style="color:#000">rch</span>[<span style="color:#000">ls</span>(<span style="color:#000">x</span>)]][<span style="color:#000">lch</span>[<span style="color:#000">rs</span>(<span style="color:#000">x</span>)]]<span style="color:#000">++</span>, <span style="color:#000">lch</span>[<span style="color:#000">x</span>] <span style="color:#000">=</span> <span style="color:#000">lch</span>[<span style="color:#000">ls</span>(<span style="color:#000">x</span>)], <span style="color:#000">rch</span>[<span style="color:#000">x</span>] <span style="color:#000">=</span> <span style="color:#000">rch</span>[<span style="color:#000">rs</span>(<span style="color:#000">x</span>)];
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">void</span> <span style="color:#000">access</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">ch</span>, <span style="color:#a90d91">int</span> <span style="color:#000">len</span>) { <span style="color:#000">memset</span>(<span style="color:#000">cnt</span>[<span style="color:#000">x</span>], <span style="color:#1c01ce">0</span>, <span style="color:#a90d91">sizeof</span>(<span style="color:#000">cnt</span>[<span style="color:#000">x</span>])), <span style="color:#000">cnt</span>[<span style="color:#000">x</span>][<span style="color:#000">ch</span>][<span style="color:#000">ch</span>] <span style="color:#000">=</span> <span style="color:#000">len</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">lch</span>[<span style="color:#000">x</span>] <span style="color:#000">=</span> <span style="color:#000">rch</span>[<span style="color:#000">x</span>] <span style="color:#000">=</span> <span style="color:#000">lzy</span>[<span style="color:#000">x</span>] <span style="color:#000">=</span> <span style="color:#000">ch</span>; }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">void</span> <span style="color:#000">push_down</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">l</span>, <span style="color:#a90d91">int</span> <span style="color:#000">r</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">lzy</span>[<span style="color:#000">x</span>] <span style="color:#000">==</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">return</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">mid</span> <span style="color:#000">=</span> (<span style="color:#000">l</span> <span style="color:#000">+</span> <span style="color:#000">r</span>) <span style="color:#000">/</span> <span style="color:#1c01ce">2</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">access</span>(<span style="color:#000">ls</span>(<span style="color:#000">x</span>), <span style="color:#000">lzy</span>[<span style="color:#000">x</span>], <span style="color:#000">mid</span> <span style="color:#000">-</span> <span style="color:#000">l</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>), <span style="color:#000">access</span>(<span style="color:#000">rs</span>(<span style="color:#000">x</span>), <span style="color:#000">lzy</span>[<span style="color:#000">x</span>], <span style="color:#000">r</span> <span style="color:#000">-</span> <span style="color:#000">mid</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">lzy</span>[<span style="color:#000">x</span>] <span style="color:#000">=</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">void</span> <span style="color:#000">build</span>(<span style="color:#a90d91">int</span> <span style="color:#000">l</span>, <span style="color:#a90d91">int</span> <span style="color:#000">r</span>, <span style="color:#a90d91">int</span> <span style="color:#000">k</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">l</span> <span style="color:#000">==</span> <span style="color:#000">r</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">lch</span>[<span style="color:#000">k</span>] <span style="color:#000">=</span> <span style="color:#000">rch</span>[<span style="color:#000">k</span>] <span style="color:#000">=</span> <span style="color:#000">s</span>[<span style="color:#000">l</span>] <span style="color:#000">-</span> <span style="color:#2300ce">&#39;a&#39;</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">return</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">mid</span> <span style="color:#000">=</span> (<span style="color:#000">l</span> <span style="color:#000">+</span> <span style="color:#000">r</span>) <span style="color:#000">/</span> <span style="color:#1c01ce">2</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">build</span>(<span style="color:#000">l</span>, <span style="color:#000">mid</span>, <span style="color:#000">ls</span>(<span style="color:#000">k</span>)), <span style="color:#000">build</span>(<span style="color:#000">mid</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">r</span>, <span style="color:#000">rs</span>(<span style="color:#000">k</span>));
</span></span><span style="display:flex;"><span>        <span style="color:#000">push_up</span>(<span style="color:#000">k</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">void</span> <span style="color:#000">modify</span>(<span style="color:#a90d91">int</span> <span style="color:#000">l</span>, <span style="color:#a90d91">int</span> <span style="color:#000">r</span>, <span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>, <span style="color:#a90d91">int</span> <span style="color:#000">v</span>, <span style="color:#a90d91">int</span> <span style="color:#000">k</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">l</span> <span style="color:#000">&gt;=</span> <span style="color:#000">x</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">r</span> <span style="color:#000">&lt;=</span> <span style="color:#000">y</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">access</span>(<span style="color:#000">k</span>, <span style="color:#000">v</span>, <span style="color:#000">r</span> <span style="color:#000">-</span> <span style="color:#000">l</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">return</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">mid</span> <span style="color:#000">=</span> (<span style="color:#000">l</span> <span style="color:#000">+</span> <span style="color:#000">r</span>) <span style="color:#000">/</span> <span style="color:#1c01ce">2</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">push_down</span>(<span style="color:#000">k</span>, <span style="color:#000">l</span>, <span style="color:#000">r</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">x</span> <span style="color:#000">&lt;=</span> <span style="color:#000">mid</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">modify</span>(<span style="color:#000">l</span>, <span style="color:#000">mid</span>, <span style="color:#000">x</span>, <span style="color:#000">y</span>, <span style="color:#000">v</span>, <span style="color:#000">ls</span>(<span style="color:#000">k</span>));
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">y</span> <span style="color:#000">&gt;</span> <span style="color:#000">mid</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">modify</span>(<span style="color:#000">mid</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">r</span>, <span style="color:#000">x</span>, <span style="color:#000">y</span>, <span style="color:#000">v</span>, <span style="color:#000">rs</span>(<span style="color:#000">k</span>));
</span></span><span style="display:flex;"><span>        <span style="color:#000">push_up</span>(<span style="color:#000">k</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">Tree</span>() { <span style="color:#000">memset</span>(<span style="color:#000">lzy</span>, <span style="color:#000">-</span><span style="color:#1c01ce">1</span>, <span style="color:#a90d91">sizeof</span>(<span style="color:#000">lzy</span>)); }
</span></span><span style="display:flex;"><span>} <span style="color:#000">t</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">pos</span>[<span style="color:#000">maxk</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">ios</span><span style="color:#000">::</span><span style="color:#000">sync_with_stdio</span>(<span style="color:#a90d91">false</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">m</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">k</span> <span style="color:#000">&gt;&gt;</span> (<span style="color:#000">s</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">t</span>.<span style="color:#000">build</span>(<span style="color:#1c01ce">1</span>, <span style="color:#000">n</span>, <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">opt</span>, <span style="color:#000">x</span>, <span style="color:#000">y</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">char</span> <span style="color:#000">ch</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> (<span style="color:#000">m</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">opt</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">opt</span> <span style="color:#000">==</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">x</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">y</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">ch</span>, <span style="color:#000">t</span>.<span style="color:#000">modify</span>(<span style="color:#1c01ce">1</span>, <span style="color:#000">n</span>, <span style="color:#000">x</span>, <span style="color:#000">y</span>, <span style="color:#000">ch</span> <span style="color:#000">-</span> <span style="color:#2300ce">&#39;a&#39;</span>, <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> (<span style="color:#000">s</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">k</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">pos</span>[<span style="color:#000">s</span>[<span style="color:#000">i</span>] <span style="color:#000">-</span> <span style="color:#2300ce">&#39;a&#39;</span>] <span style="color:#000">=</span> <span style="color:#000">i</span>;
</span></span><span style="display:flex;"><span>              
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">k</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;</span> <span style="color:#000">k</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                    <span style="color:#a90d91">if</span> (<span style="color:#000">pos</span>[<span style="color:#000">i</span>] <span style="color:#000">&gt;=</span> <span style="color:#000">pos</span>[<span style="color:#000">j</span>])
</span></span><span style="display:flex;"><span>                        <span style="color:#000">ans</span> <span style="color:#000">+=</span> <span style="color:#000">t</span>.<span style="color:#000">cnt</span>[<span style="color:#1c01ce">1</span>][<span style="color:#000">i</span>][<span style="color:#000">j</span>];
</span></span><span style="display:flex;"><span>            <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">ans</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div>]]></content:encoded>
    </item>
    
    <item>
      <title>Codeforces Round 544 (Div. 3)</title>
      <link>https://luoyisu.github.io/posts/cf-contest1133/</link>
      <pubDate>Mon, 27 Dec 2021 09:19:11 +0000</pubDate>
      
      <guid>https://luoyisu.github.io/posts/cf-contest1133/</guid>
      <description>&lt;h2 id=&#34;概述&#34;&gt;概述&lt;/h2&gt;
&lt;p&gt;很水的一场比赛，快来做前几场比赛的小清新题！！&lt;/p&gt;</description>
      <content:encoded><![CDATA[<h2 id="概述">概述</h2>
<p>很水的一场比赛，快来做前几场比赛的小清新题！！</p>
<h2 id="ahttpscodeforcescontest1133problema"><a href="https://codeforc.es/contest/1133/problem/A">A</a></h2>
<h3 id="description">Description</h3>
<p>给出两个时间，求它们中点时间。</p>
<h3 id="solution">Solution</h3>
<p>把小时和分钟转化成分钟再取中点，再转化回去即可。</p>
<h3 id="code">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;string&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cctype&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cerr</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">char</span> <span style="color:#000">a</span>[<span style="color:#000">maxn</span>], <span style="color:#000">b</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">change</span>(<span style="color:#a90d91">char</span> <span style="color:#000">*</span><span style="color:#000">a</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">h</span> <span style="color:#000">=</span> (<span style="color:#000">a</span>[<span style="color:#1c01ce">0</span>] <span style="color:#000">-</span> <span style="color:#2300ce">&#39;0&#39;</span>) <span style="color:#000">*</span> <span style="color:#1c01ce">10</span> <span style="color:#000">+</span> <span style="color:#000">a</span>[<span style="color:#1c01ce">1</span>] <span style="color:#000">-</span> <span style="color:#2300ce">&#39;0&#39;</span>, <span style="color:#000">m</span> <span style="color:#000">=</span> (<span style="color:#000">a</span>[<span style="color:#1c01ce">3</span>] <span style="color:#000">-</span> <span style="color:#2300ce">&#39;0&#39;</span>) <span style="color:#000">*</span> <span style="color:#1c01ce">10</span> <span style="color:#000">+</span> <span style="color:#000">a</span>[<span style="color:#1c01ce">4</span>] <span style="color:#000">-</span> <span style="color:#2300ce">&#39;0&#39;</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#000">h</span> <span style="color:#000">*</span> <span style="color:#1c01ce">60</span> <span style="color:#000">+</span> <span style="color:#000">m</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">string</span> <span style="color:#000">enchange</span>(<span style="color:#a90d91">int</span> <span style="color:#000">mid</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">string</span> <span style="color:#000">s</span> <span style="color:#000">=</span> <span style="color:#c41a16">&#34;     &#34;</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">h</span> <span style="color:#000">=</span> <span style="color:#000">mid</span> <span style="color:#000">/</span> <span style="color:#1c01ce">60</span>, <span style="color:#000">m</span> <span style="color:#000">=</span> <span style="color:#000">mid</span> <span style="color:#000">%</span> <span style="color:#1c01ce">60</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">s</span>[<span style="color:#1c01ce">0</span>] <span style="color:#000">=</span> <span style="color:#000">h</span> <span style="color:#000">/</span> <span style="color:#1c01ce">10</span> <span style="color:#000">+</span> <span style="color:#2300ce">&#39;0&#39;</span>, <span style="color:#000">s</span>[<span style="color:#1c01ce">1</span>] <span style="color:#000">=</span> <span style="color:#000">h</span> <span style="color:#000">%</span> <span style="color:#1c01ce">10</span> <span style="color:#000">+</span> <span style="color:#2300ce">&#39;0&#39;</span>, <span style="color:#000">s</span>[<span style="color:#1c01ce">2</span>] <span style="color:#000">=</span> <span style="color:#2300ce">&#39;:&#39;</span>, <span style="color:#000">s</span>[<span style="color:#1c01ce">3</span>] <span style="color:#000">=</span> <span style="color:#000">m</span> <span style="color:#000">/</span> <span style="color:#1c01ce">10</span> <span style="color:#000">+</span> <span style="color:#2300ce">&#39;0&#39;</span>, <span style="color:#000">s</span>[<span style="color:#1c01ce">4</span>] <span style="color:#000">=</span> <span style="color:#000">m</span> <span style="color:#000">%</span> <span style="color:#1c01ce">10</span> <span style="color:#000">+</span> <span style="color:#2300ce">&#39;0&#39;</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#000">s</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">a</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">b</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">p</span> <span style="color:#000">=</span> <span style="color:#000">change</span>(<span style="color:#000">a</span>), <span style="color:#000">q</span> <span style="color:#000">=</span> <span style="color:#000">change</span>(<span style="color:#000">b</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">mid</span> <span style="color:#000">=</span> (<span style="color:#000">p</span> <span style="color:#000">+</span> <span style="color:#000">q</span>) <span style="color:#000">/</span> <span style="color:#1c01ce">2</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">enchange</span>(<span style="color:#000">mid</span>) <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="bhttpscodeforcescontest1133problemb"><a href="https://codeforc.es/contest/1133/problem/B">B</a></h2>
<h3 id="description-1">Description</h3>
<p>从 $n$​ 个数中每次选两个数，这两个数的和必须为 $k$ 的倍数。问最多能选出多少个数满足条件。</p>
<h3 id="solution-1">Solution</h3>
<p>显然加入一个数模 $k$ 是 $x$，那么他只能和模 $k$ 是 $k-x$​ 的数配对。</p>
<p>开一个桶记录一下每种余数的个数然后统计答案即可。</p>
<h3 id="code-1">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cctype&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cerr</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2e5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">a</span>[<span style="color:#000">maxn</span>], <span style="color:#000">b</span>[<span style="color:#000">maxn</span>], <span style="color:#000">k</span>, <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">ios</span><span style="color:#000">::</span><span style="color:#000">sync_with_stdio</span>(<span style="color:#a90d91">false</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">k</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">x</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">x</span>, <span style="color:#000">b</span>[<span style="color:#000">x</span> <span style="color:#000">%</span> <span style="color:#000">k</span>]<span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#000">b</span>[<span style="color:#1c01ce">0</span>] <span style="color:#000">/</span> <span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#1c01ce">2</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">k</span> <span style="color:#000">/</span> <span style="color:#1c01ce">2</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">ans</span> <span style="color:#000">+=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">min</span>(<span style="color:#000">b</span>[<span style="color:#000">i</span>], <span style="color:#000">b</span>[<span style="color:#000">k</span> <span style="color:#000">-</span> <span style="color:#000">i</span>]) <span style="color:#000">*</span> <span style="color:#1c01ce">2</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">k</span> <span style="color:#000">%</span> <span style="color:#1c01ce">2</span> <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">ans</span> <span style="color:#000">+=</span> <span style="color:#000">b</span>[<span style="color:#000">k</span> <span style="color:#000">/</span> <span style="color:#1c01ce">2</span>] <span style="color:#000">/</span> <span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#1c01ce">2</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>        <span style="color:#000">ans</span> <span style="color:#000">+=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">min</span>(<span style="color:#000">b</span>[<span style="color:#000">k</span> <span style="color:#000">/</span> <span style="color:#1c01ce">2</span>], <span style="color:#000">b</span>[<span style="color:#000">k</span> <span style="color:#000">/</span> <span style="color:#1c01ce">2</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>]) <span style="color:#000">*</span> <span style="color:#1c01ce">2</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">ans</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="chttpscodeforcescontest1133problemc"><a href="https://codeforc.es/contest/1133/problem/C">C</a></h2>
<h3 id="description-2">Description</h3>
<p>给 $n$​​​​ 个数，让你找出 $m$​​​ 个数，使得这 $m$​​ 个数中的最大值减去最小值不大于 $5$​，求最大的 $m$。</p>
<h3 id="solution-2">Solution</h3>
<p>排序 + 双指针，太水了我都不知道该说什么。</p>
<h3 id="code-2">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cctype&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cerr</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2e5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">a</span>[<span style="color:#000">maxn</span>], <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">sort</span>(<span style="color:#000">a</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">a</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">+</span> <span style="color:#000">n</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">l</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">r</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> (<span style="color:#000">l</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">while</span> (<span style="color:#000">r</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">a</span>[<span style="color:#000">r</span>] <span style="color:#000">-</span> <span style="color:#000">a</span>[<span style="color:#000">l</span>] <span style="color:#000">&lt;=</span> <span style="color:#1c01ce">5</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">r</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">max</span>(<span style="color:#000">ans</span>, <span style="color:#000">r</span> <span style="color:#000">-</span> <span style="color:#000">l</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">l</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">ans</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="dhttpscodeforcescontest1133problemd"><a href="https://codeforc.es/contest/1133/problem/D">D</a></h2>
<h3 id="description-3">Description</h3>
<p>给出两个长度为 $n$ 的数组 $a,b$。</p>
<p>你想要创建一个长度为 $n$​​ 的数组 $c$​​，且 $c_i=d\times a_i+b_i,i\in[1, n]$​​，要求你给 $d$​  赋值，使得数组 $c$​​ 中的 $0$​​ 的个数最多并输出最多的 $0$​​ 的个数。</p>
<h3 id="solution-3">Solution</h3>
<p>$$
c_i=d\times a_i+b_i\Rightarrow d=\frac{-b_i}{a_i}
$$</p>
<p>可以算出来让每个数变成 $0$​ 的 $d$​ 是多少，然后看看出现次数最多是多少。</p>
<p>为了避免浮点误差，我们把分子分母约分一下然后放进 map 里。</p>
<p>特判一下本来就是 $0$ 的情况。</p>
<h3 id="code-3">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cctype&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;map&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;utility&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cerr</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">gcd</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>) { <span style="color:#a90d91">return</span> <span style="color:#000">y</span> <span style="color:#000">==</span> <span style="color:#1c01ce">0</span> <span style="color:#000">?</span> <span style="color:#000">x</span> : <span style="color:#000">gcd</span>(<span style="color:#000">y</span>, <span style="color:#000">x</span> <span style="color:#000">%</span> <span style="color:#000">y</span>); }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">typedef</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">pair</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span>, <span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">pii</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1e6</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">map</span><span style="color:#000">&lt;</span><span style="color:#000">pii</span>, <span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">mp</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">a</span>[<span style="color:#000">maxn</span>], <span style="color:#000">b</span>[<span style="color:#000">maxn</span>], <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">ans</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">b</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">a</span>[<span style="color:#000">i</span>] <span style="color:#000">&lt;</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">a</span>[<span style="color:#000">i</span>] <span style="color:#000">*=</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span>, <span style="color:#000">b</span>[<span style="color:#000">i</span>] <span style="color:#000">*=</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span> <span style="color:#a90d91">if</span> (<span style="color:#000">a</span>[<span style="color:#000">i</span>] <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">ans</span> <span style="color:#000">+=</span> <span style="color:#000">b</span>[<span style="color:#000">i</span>] <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">a</span>[<span style="color:#000">i</span>] <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">continue</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">d</span> <span style="color:#000">=</span> <span style="color:#000">gcd</span>(<span style="color:#000">a</span>[<span style="color:#000">i</span>], <span style="color:#000">b</span>[<span style="color:#000">i</span>] <span style="color:#000">&lt;</span> <span style="color:#1c01ce">0</span> <span style="color:#000">?</span> <span style="color:#000">-</span><span style="color:#000">b</span>[<span style="color:#000">i</span>] <span style="color:#000">:</span> <span style="color:#000">b</span>[<span style="color:#000">i</span>]);
</span></span><span style="display:flex;"><span>        <span style="color:#000">a</span>[<span style="color:#000">i</span>] <span style="color:#000">/=</span> <span style="color:#000">d</span>, <span style="color:#000">b</span>[<span style="color:#000">i</span>] <span style="color:#000">/=</span> <span style="color:#000">d</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">mp</span>[<span style="color:#000">pii</span>(<span style="color:#000">a</span>[<span style="color:#000">i</span>], <span style="color:#000">b</span>[<span style="color:#000">i</span>])]<span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">cnt</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">auto</span> <span style="color:#000">k</span> : <span style="color:#000">mp</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">cnt</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">max</span>(<span style="color:#000">cnt</span>, <span style="color:#000">k</span>.<span style="color:#000">second</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">ans</span> <span style="color:#000">+</span> <span style="color:#000">cnt</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="ehttpscodeforcescontest1133probleme"><a href="https://codeforc.es/contest/1133/problem/E">E</a></h2>
<h3 id="description-4">Description</h3>
<p>您是本地大学的教练，有 $n$ ​位选手在你这里学习，并且已知第 $i$ ​位的能力值为 $a_i$​。</p>
<p>现在您需要挑选出若干位选手组成至多 $k$ ​支队伍。众所周知，参赛的人数越多，你的大学获胜的概率越大。所以，你需要使得你选出的至多$k$​支（至少$1$​支）<strong>非空</strong>队伍的<strong>总人数</strong>最多。但是，你知道<strong>每支</strong>队伍中队员们的实力应当<em>差不多</em>，这意味着对于<strong>任意</strong>一支队伍，不应当存在两名实力值相差超过 $5$ ​​的选手。所有的队伍都是相互独立的（这意味着我们不考虑来自两只不同队伍的选手的实力值差距）。</p>
<p>可能有的选手不属于任何一支队伍。</p>
<p>您的任务是求出满足以上要求的至多 $k$​（至少 $1$​​）支<strong>非空</strong>队伍的<strong>总人数</strong>。</p>
<p>$n,k\leq5000$。</p>
<h3 id="solution-4">Solution</h3>
<p>数据范围告诉我们要 DP。</p>
<p>我们把实力值排个序，显然如果选了一个人，把和他实力值相差小于 $5$ 的人全选上是最优的。</p>
<p>预处理一个 $lst_i$ 表示第 $i$ 个人，上一个实力值比他小超过 $5$ 的人的位置。</p>
<p>设 $f(i,j)$ 表示前 $i$ 个人，已经组了 $j$​​ 个队伍的参赛总人数。</p>
<p>然后考虑这个人选不选，有：
$$
f(i,j)=\max(f(i-1,j),f(lst_i,j-1)+i-lst_i)
$$
前面是不选，后面是选。</p>
<p>直接转移即可，时间复杂度 $O(nk)$。</p>
<h3 id="code-4">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cctype&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cerr</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">5010</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">lst</span>[<span style="color:#000">maxn</span>], <span style="color:#000">f</span>[<span style="color:#000">maxn</span>][<span style="color:#000">maxn</span>], <span style="color:#000">a</span>[<span style="color:#000">maxn</span>], <span style="color:#000">n</span>, <span style="color:#000">k</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">ios</span><span style="color:#000">::</span><span style="color:#000">sync_with_stdio</span>(<span style="color:#a90d91">false</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">k</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">sort</span>(<span style="color:#000">a</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">a</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">+</span> <span style="color:#000">n</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">pos</span> <span style="color:#000">=</span> <span style="color:#000">i</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">while</span> (<span style="color:#000">pos</span> <span style="color:#000">&gt;=</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>] <span style="color:#000">-</span> <span style="color:#000">a</span>[<span style="color:#000">pos</span>] <span style="color:#000">&lt;=</span> <span style="color:#1c01ce">5</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">pos</span><span style="color:#000">--</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">lst</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">pos</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;=</span> <span style="color:#000">k</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">f</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>] <span style="color:#000">=</span> <span style="color:#000">f</span>[<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>][<span style="color:#000">j</span>];
</span></span><span style="display:flex;"><span>            <span style="color:#000">f</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>] <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">max</span>(<span style="color:#000">f</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>], <span style="color:#000">f</span>[<span style="color:#000">lst</span>[<span style="color:#000">i</span>]][<span style="color:#000">j</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">+</span> <span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#000">lst</span>[<span style="color:#000">i</span>]);
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">f</span>[<span style="color:#000">n</span>][<span style="color:#000">k</span>] <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="f1httpscodeforcescontest1133problemf1"><a href="https://codeforc.es/contest/1133/problem/F1">F1</a></h2>
<h3 id="description-5">Description</h3>
<p>给出了一个由 $n$​ 个顶点和 $m$ 条边组成的无向无权连通图。它保证在给定的图中没有自环或重边。</p>
<p>你的任务是找到这个图的一棵生成树，使得树上点的最大度数尽可能地大。</p>
<h3 id="solution-5">Solution</h3>
<p>很显然我们可以构造出一棵以原图中度数最大的点为根，包括其在原图上所有相邻结点的树。</p>
<p>BFS 构造一下就行。</p>
<h3 id="code-5">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;queue&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cctype&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cerr</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2e5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">n</span>, <span style="color:#000">m</span>, <span style="color:#000">d</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">vector</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">e</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">add</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>) { <span style="color:#000">e</span>[<span style="color:#000">x</span>].<span style="color:#000">push_back</span>(<span style="color:#000">y</span>), <span style="color:#000">e</span>[<span style="color:#000">y</span>].<span style="color:#000">push_back</span>(<span style="color:#000">x</span>); }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">cnt</span>, <span style="color:#000">vis</span>[<span style="color:#000">maxn</span>], <span style="color:#000">vis2</span>[<span style="color:#000">maxn</span>], <span style="color:#000">used</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">bfs</span>(<span style="color:#a90d91">int</span> <span style="color:#000">s</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">queue</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">q</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">vis2</span>[<span style="color:#000">s</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">q</span>.<span style="color:#000">push</span>(<span style="color:#000">s</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> (<span style="color:#000">!</span><span style="color:#000">q</span>.<span style="color:#000">empty</span>())
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">q</span>.<span style="color:#000">front</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#000">q</span>.<span style="color:#000">pop</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">v</span> : <span style="color:#000">e</span>[<span style="color:#000">x</span>])
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">!</span><span style="color:#000">vis2</span>[<span style="color:#000">v</span>])
</span></span><span style="display:flex;"><span>                <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">x</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">v</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>, <span style="color:#000">q</span>.<span style="color:#000">push</span>(<span style="color:#000">v</span>), <span style="color:#000">vis2</span>[<span style="color:#000">v</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">m</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>, <span style="color:#000">x</span>, <span style="color:#000">y</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">m</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">x</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">y</span>, <span style="color:#000">add</span>(<span style="color:#000">x</span>, <span style="color:#000">y</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">s</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">e</span>[<span style="color:#000">i</span>].<span style="color:#000">size</span>() <span style="color:#000">&gt;</span> <span style="color:#000">e</span>[<span style="color:#000">s</span>].<span style="color:#000">size</span>())
</span></span><span style="display:flex;"><span>            <span style="color:#000">s</span> <span style="color:#000">=</span> <span style="color:#000">i</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">bfs</span>(<span style="color:#000">s</span>);
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="f2httpscodeforcescontest1133problemf2"><a href="https://codeforc.es/contest/1133/problem/F2">F2</a></h2>
<h3 id="description-6">Description</h3>
<p>给你一个图，让你构造出一个编号为 $1$ 的点的度数为 $D$​ ​的树</p>
<p>（保证没有自环和重边）</p>
<h3 id="solution-6">Solution</h3>
<p>我们设这棵树以 $1$ 为根。</p>
<p>一开始想的是假如 $1$ 的一个子树内有一条边连向另一个子树，那么这条边就可以删掉。</p>
<p>感觉很点双啊。。。。。。</p>
<p>后来转念一想，都点双了，我们直接把 $1$ 号点删掉然后看有几个联通块不就能得到能删掉几条边了吗？。。。</p>
<p>这样就能判断出来有解的条件：</p>
<ul>
<li>点 $1$ 的度数不小于 $D$；</li>
<li>删掉 $1$ 之后连通块个数不大于 $D$​。</li>
</ul>
<p>可以 DFS 找连通块，用和 F1 类似的 BFS 做法输出答案。</p>
<h3 id="code-6">Code</h3>
<p>很丑。</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;queue&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cctype&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cerr</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2e5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">n</span>, <span style="color:#000">m</span>, <span style="color:#000">d</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">vector</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">e</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">add</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>) { <span style="color:#000">e</span>[<span style="color:#000">x</span>].<span style="color:#000">push_back</span>(<span style="color:#000">y</span>), <span style="color:#000">e</span>[<span style="color:#000">y</span>].<span style="color:#000">push_back</span>(<span style="color:#000">x</span>); }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">cnt</span>, <span style="color:#000">vis</span>[<span style="color:#000">maxn</span>], <span style="color:#000">vis2</span>[<span style="color:#000">maxn</span>], <span style="color:#000">used</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">dfs</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">p</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">vis</span>[<span style="color:#000">x</span>] <span style="color:#000">=</span> <span style="color:#000">p</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">v</span> : <span style="color:#000">e</span>[<span style="color:#000">x</span>])
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">v</span> <span style="color:#000">!=</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">!</span><span style="color:#000">vis</span>[<span style="color:#000">v</span>])
</span></span><span style="display:flex;"><span>            <span style="color:#000">dfs</span>(<span style="color:#000">v</span>, <span style="color:#000">p</span>);
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">bfs</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">queue</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">q</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">vis2</span>[<span style="color:#1c01ce">1</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">tot</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> (<span style="color:#a90d91">int</span>)<span style="color:#000">e</span>[<span style="color:#1c01ce">1</span>].<span style="color:#000">size</span>(); <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">!</span><span style="color:#000">used</span>[<span style="color:#000">vis</span>[<span style="color:#000">e</span>[<span style="color:#1c01ce">1</span>][<span style="color:#000">i</span>]]])
</span></span><span style="display:flex;"><span>            <span style="color:#000">q</span>.<span style="color:#000">push</span>(<span style="color:#000">e</span>[<span style="color:#1c01ce">1</span>][<span style="color:#000">i</span>]), <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">e</span>[<span style="color:#1c01ce">1</span>][<span style="color:#000">i</span>] <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>, <span style="color:#000">vis2</span>[<span style="color:#000">e</span>[<span style="color:#1c01ce">1</span>][<span style="color:#000">i</span>]] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">used</span>[<span style="color:#000">vis</span>[<span style="color:#000">e</span>[<span style="color:#1c01ce">1</span>][<span style="color:#000">i</span>]]] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">tot</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">v</span> : <span style="color:#000">e</span>[<span style="color:#1c01ce">1</span>])
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">!</span><span style="color:#000">vis2</span>[<span style="color:#000">v</span>])
</span></span><span style="display:flex;"><span>            <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">v</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>, <span style="color:#000">vis2</span>[<span style="color:#000">v</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">tot</span><span style="color:#000">++</span>, <span style="color:#000">q</span>.<span style="color:#000">push</span>(<span style="color:#000">v</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">tot</span> <span style="color:#000">==</span> <span style="color:#000">d</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">break</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> (<span style="color:#000">!</span><span style="color:#000">q</span>.<span style="color:#000">empty</span>())
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">q</span>.<span style="color:#000">front</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#000">q</span>.<span style="color:#000">pop</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">v</span> : <span style="color:#000">e</span>[<span style="color:#000">x</span>])
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">!</span><span style="color:#000">vis2</span>[<span style="color:#000">v</span>])
</span></span><span style="display:flex;"><span>                <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">x</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">v</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>, <span style="color:#000">q</span>.<span style="color:#000">push</span>(<span style="color:#000">v</span>), <span style="color:#000">vis2</span>[<span style="color:#000">v</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">m</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">d</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>, <span style="color:#000">x</span>, <span style="color:#000">y</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">m</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">x</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">y</span>, <span style="color:#000">add</span>(<span style="color:#000">x</span>, <span style="color:#000">y</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">!</span><span style="color:#000">vis</span>[<span style="color:#000">i</span>])
</span></span><span style="display:flex;"><span>            <span style="color:#000">dfs</span>(<span style="color:#000">i</span>, <span style="color:#000">++</span><span style="color:#000">cnt</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> ((<span style="color:#a90d91">int</span>)<span style="color:#000">e</span>[<span style="color:#1c01ce">1</span>].<span style="color:#000">size</span>() <span style="color:#000">&lt;</span> <span style="color:#000">d</span> <span style="color:#000">||</span> <span style="color:#000">cnt</span> <span style="color:#000">&gt;</span> <span style="color:#000">d</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">puts</span>(<span style="color:#c41a16">&#34;NO&#34;</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#177500">//for (int i = 1; i &lt;= n; i++)
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>    <span style="color:#177500">//    cout &lt;&lt; vis[i] &lt;&lt; &#34; &#34;;
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>    <span style="color:#177500">//cout &lt;&lt; endl;
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>    <span style="color:#000">puts</span>(<span style="color:#c41a16">&#34;YES&#34;</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">bfs</span>();
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div>]]></content:encoded>
    </item>
    
    <item>
      <title>Codeforces Testing Round 5</title>
      <link>https://luoyisu.github.io/posts/cf-contest267/</link>
      <pubDate>Sat, 25 Dec 2021 11:22:20 +0000</pubDate>
      
      <guid>https://luoyisu.github.io/posts/cf-contest267/</guid>
      <description>&lt;h2 id=&#34;概述&#34;&gt;概述&lt;/h2&gt;
&lt;p&gt;C 可以一做。&lt;/p&gt;
&lt;p&gt;别问为什么就三道题。&lt;/p&gt;</description>
      <content:encoded><![CDATA[<h2 id="概述">概述</h2>
<p>C 可以一做。</p>
<p>别问为什么就三道题。</p>
<h2 id="ahttpscodeforcescontest267problema"><a href="https://codeforc.es/contest/267/problem/A">A</a></h2>
<h3 id="description">Description</h3>
<p>给定两个数，每次用大数减去小数的差代替这个数，并称为一次操作。问有一个数为 $0$ 的时候一共有多少次操作。</p>
<p>输入：第一行是一个正整数 $n$，表示数据的组数。接下来 $n$ 行，每行两个正整数 $a_i$ 和 $b_i$ 表示给定的两数。</p>
<p>$a_i,b_i\leq10^9$。</p>
<h3 id="solution">Solution</h3>
<p>发现这就是一个辗转相减求最大公约数的流程，显然暴力不行。</p>
<p>但我们在普通辗转相除求最大公约数的时候统计一下答案就行。</p>
<p>属实是考验了对基础算法的理解。</p>
<h3 id="code">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">gcd</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">y</span> <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">ans</span> <span style="color:#000">+=</span> <span style="color:#000">x</span> <span style="color:#000">/</span> <span style="color:#000">y</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#000">gcd</span>(<span style="color:#000">y</span>, <span style="color:#000">x</span> <span style="color:#000">%</span> <span style="color:#000">y</span>);
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">T</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">T</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> (<span style="color:#000">T</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">a</span>, <span style="color:#000">b</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">a</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">b</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">a</span> <span style="color:#000">&lt;</span> <span style="color:#000">b</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">swap</span>(<span style="color:#000">a</span>, <span style="color:#000">b</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">gcd</span>(<span style="color:#000">a</span>, <span style="color:#000">b</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">ans</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="bhttpscodeforcescontest267problemb"><a href="https://codeforc.es/contest/267/problem/B">B</a></h2>
<h3 id="description-1">Description</h3>
<p>给定 $n$ 和 $n$ 个二元组 $(a_i,b_i)$ 。</p>
<p>你可以任意排列这几个二元组，也可以任意更换一个二元组之间的两个元素的顺序。</p>
<p>是否存在一种解，使得任意相邻的两个二元组中，相邻的两个元素相等。</p>
<p>输出其排列顺序，并输出其是否需要改变两个元素的顺序。</p>
<h3 id="solution-1">Solution</h3>
<p>这个东西一看就非常欧拉路，我们把二元组的两个数之间连一个双向边，然后找欧拉路即可。</p>
<p>最后输出边的方案。</p>
<h3 id="code-1">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;stack&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cctype&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cerr</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">110</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">struct</span> <span style="color:#3f6e75">edge</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">y</span>, <span style="color:#000">i</span>, <span style="color:#000">pos</span>;
</span></span><span style="display:flex;"><span>};
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">vector</span><span style="color:#000">&lt;</span><span style="color:#000">edge</span><span style="color:#000">&gt;</span> <span style="color:#000">e</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">add</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>, <span style="color:#a90d91">int</span> <span style="color:#000">i</span>) { <span style="color:#000">e</span>[<span style="color:#000">x</span>].<span style="color:#000">push_back</span>({<span style="color:#000">y</span>, <span style="color:#000">i</span>, <span style="color:#1c01ce">1</span>}), <span style="color:#000">e</span>[<span style="color:#000">y</span>].<span style="color:#000">push_back</span>({<span style="color:#000">x</span>, <span style="color:#000">i</span>, <span style="color:#1c01ce">0</span>}); }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">stack</span><span style="color:#000">&lt;</span><span style="color:#000">edge</span><span style="color:#000">&gt;</span> <span style="color:#000">ans</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">vis</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">dfs</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">edge</span> <span style="color:#000">i</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> (<span style="color:#000">e</span>[<span style="color:#000">x</span>].<span style="color:#000">size</span>())
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">y</span> <span style="color:#000">=</span> <span style="color:#000">e</span>[<span style="color:#000">x</span>].<span style="color:#000">back</span>().<span style="color:#000">y</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#000">e</span>[<span style="color:#000">x</span>].<span style="color:#000">back</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#000">e</span>[<span style="color:#000">x</span>].<span style="color:#000">pop_back</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">vis</span>[<span style="color:#000">i</span>.<span style="color:#000">i</span>])
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">continue</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">vis</span>[<span style="color:#000">i</span>.<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">dfs</span>(<span style="color:#000">y</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">ans</span>.<span style="color:#000">push</span>(<span style="color:#000">i</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">deg</span>[<span style="color:#000">maxn</span>], <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">ios</span><span style="color:#000">::</span><span style="color:#000">sync_with_stdio</span>(<span style="color:#a90d91">false</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">mx</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">s</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">x</span>, <span style="color:#000">y</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">x</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">y</span>, <span style="color:#000">add</span>(<span style="color:#000">x</span>, <span style="color:#000">y</span>, <span style="color:#000">i</span>), <span style="color:#000">deg</span>[<span style="color:#000">x</span>]<span style="color:#000">++</span>, <span style="color:#000">deg</span>[<span style="color:#000">y</span>]<span style="color:#000">++</span>, <span style="color:#000">s</span> <span style="color:#000">=</span> <span style="color:#000">y</span>, <span style="color:#000">mx</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">max</span>(<span style="color:#000">mx</span>, <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">max</span>(<span style="color:#000">x</span>, <span style="color:#000">y</span>));
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">flag</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">mx</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">deg</span>[<span style="color:#000">i</span>] <span style="color:#000">&amp;</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">s</span> <span style="color:#000">=</span> <span style="color:#000">i</span>, <span style="color:#000">flag</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">flag</span> <span style="color:#000">!=</span> <span style="color:#1c01ce">0</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">flag</span> <span style="color:#000">!=</span> <span style="color:#1c01ce">2</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">puts</span>(<span style="color:#c41a16">&#34;No solution&#34;</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">dfs</span>(<span style="color:#000">s</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> ((<span style="color:#a90d91">int</span>)<span style="color:#000">ans</span>.<span style="color:#000">size</span>() <span style="color:#000">!=</span> <span style="color:#000">n</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">puts</span>(<span style="color:#c41a16">&#34;No solution&#34;</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> (<span style="color:#000">!</span><span style="color:#000">ans</span>.<span style="color:#000">empty</span>())
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">auto</span> <span style="color:#000">p</span> <span style="color:#000">=</span> <span style="color:#000">ans</span>.<span style="color:#000">top</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#000">ans</span>.<span style="color:#000">pop</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">p</span>.<span style="color:#000">i</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span> <span style="color:#000">&lt;&lt;</span> (<span style="color:#000">p</span>.<span style="color:#000">pos</span> <span style="color:#000">?</span> <span style="color:#2300ce">&#39;+&#39;</span> <span style="color:#000">:</span> <span style="color:#2300ce">&#39;-&#39;</span>) <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="chttpscodeforcescontest267problemc"><a href="https://codeforc.es/contest/267/problem/C">C</a></h2>
<h3 id="description-2">Description</h3>
<p>给定一张 $n$ 点 $m$ 边的无向的网络流，源点为 $1$，汇点为 $n$。</p>
<p>第 $i$ 条边用<strong>有序</strong>数对 $(a_i,b_i) (a_i\not= b_i)$ 和容量值 $c_i$ 描述，表示连接 $a_i$ 与 $b_i$，容量为 $c_i$。</p>
<p>你应当给这条边赋一个实数流量 $x_i$，满足 $|x_i|\le c_i$，如果是正的表示从 $a_i$ 流向 $b_i$ 大小为 $x_i$，否则表示从 $b_i$ 流向 $a_i$ 大小为 $-x_i$。</p>
<p>你构造的流需要满足：</p>
<ul>
<li>
<p>流守恒。即对所有不为 $1$ 或 $n$ 的点 $u$，进入 $u$ 的流等于从 $u$ 出去的流。</p>
</li>
<li>
<p>对任意两个连通的节点 $x,y$，从 $x$ 到 $y$ 的所有路径 $x_i$（流量）的和都是相等的。</p>
</li>
</ul>
<p>现在请输出最大流（可以理解为 $\sum_v x_{1,v}$），并构造一个方案。</p>
<p>$1\leq n\leq100,1\leq m\leq5000$。</p>
<h3 id="solution-2">Solution</h3>
<p>这个题看上去挺莫名其妙的。把样例二画出来：</p>
<p><a href="https://imgtu.com/i/TU3Hl6">
  <img loading="lazy" src="https://s4.ax1x.com/2021/12/25/TU3Hl6.png" alt="sample"  /></a></p>
<p>看看这个图，和红的数字，似乎能发现什么东西&hellip;</p>
<p>我们给每个点一个高度（即图中红色的数字）。</p>
<p>根据第二个要求，任意两点之间，不管怎么走，高度的差值是一定的，而相邻两点高度差值就是这条边的流量。</p>
<p>再仔细想一想，在这道题中，图的形态固定，每条边的流量应该是有一个固定的比例的。</p>
<p>根据第一个要求：每个点出的流量和入的流量相等。</p>
<p>设 $out(i)$ 表示 $i$ 连向的点，$in(i)$ 表示连向 $i$ 的点，可以列出来一个方程：$\sum (h_i-h_{in(i)})=\sum(h_{out(i)}-h_i)$。</p>
<p>那么总共有 $n-2$ 个方程。</p>
<p>因为我们实际上是想要求流量，那么源点和汇点高度具体的值是无所谓的，减一下都会按照比例消掉。</p>
<p>我们自己设一下源点和汇点高度。</p>
<p>这样总共就有 $n$ 个方程，我们就可以解出来所有点的高度。（高斯消元）</p>
<p>很显然，如果我们把所有点高度都按照一定比例缩放，这两个限制仍然是成立的。</p>
<p>我们找到能缩放的最大比例，然后进行缩放，就得到了最大流（即和汇点相连的边的流量之和）和每条边的流量。</p>
<p>重边是不用特殊处理的。</p>
<p>复杂度是高斯消元的 $O(n^3)$。</p>
<h3 id="code-2">Code</h3>
<p>注意除以 $0$。</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cmath&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cctype&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cerr</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">110</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">double</span> <span style="color:#000">eps</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1e-8</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">e</span>[<span style="color:#000">maxn</span>][<span style="color:#000">maxn</span>], <span style="color:#000">n</span>, <span style="color:#000">m</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">double</span> <span style="color:#000">change</span>(<span style="color:#a90d91">double</span> <span style="color:#000">x</span>) { <span style="color:#a90d91">return</span> <span style="color:#000">x</span> <span style="color:#000">&lt;</span> <span style="color:#000">eps</span> <span style="color:#000">?</span> <span style="color:#000">eps</span> : <span style="color:#000">x</span>; }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">double</span> <span style="color:#000">a</span>[<span style="color:#000">maxn</span>][<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">double</span> <span style="color:#000">root</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">guass</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">i</span> <span style="color:#000">==</span> <span style="color:#000">j</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">continue</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">fabs</span>(<span style="color:#000">a</span>[<span style="color:#000">i</span>][<span style="color:#000">i</span>]) <span style="color:#000">&lt;</span> <span style="color:#000">eps</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">continue</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">double</span> <span style="color:#000">d</span> <span style="color:#000">=</span> <span style="color:#000">a</span>[<span style="color:#000">j</span>][<span style="color:#000">i</span>] <span style="color:#000">/</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>][<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">k</span> <span style="color:#000">=</span> <span style="color:#000">i</span>; <span style="color:#000">k</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">k</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">a</span>[<span style="color:#000">j</span>][<span style="color:#000">k</span>] <span style="color:#000">-=</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>][<span style="color:#000">k</span>] <span style="color:#000">*</span> <span style="color:#000">d</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">fabs</span>(<span style="color:#000">a</span>[<span style="color:#000">i</span>][<span style="color:#000">i</span>]) <span style="color:#000">&gt;</span> <span style="color:#000">eps</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">root</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>][<span style="color:#000">n</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">/</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>][<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">struct</span> <span style="color:#3f6e75">edge</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#000">y</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">double</span> <span style="color:#000">cap</span>;
</span></span><span style="display:flex;"><span>};
</span></span><span style="display:flex;"><span><span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">vector</span><span style="color:#000">&lt;</span><span style="color:#000">edge</span><span style="color:#000">&gt;</span> <span style="color:#000">edges</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">add</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>, <span style="color:#a90d91">double</span> <span style="color:#000">cap</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">edges</span>.<span style="color:#000">push_back</span>({<span style="color:#000">x</span>, <span style="color:#000">y</span>, <span style="color:#000">cap</span>});
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">x</span> <span style="color:#000">!=</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">x</span> <span style="color:#000">&lt;</span> <span style="color:#000">n</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">a</span>[<span style="color:#000">x</span>][<span style="color:#000">x</span>]<span style="color:#000">--</span>, <span style="color:#000">a</span>[<span style="color:#000">x</span>][<span style="color:#000">y</span>]<span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">y</span> <span style="color:#000">!=</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">y</span> <span style="color:#000">&lt;</span> <span style="color:#000">n</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">a</span>[<span style="color:#000">y</span>][<span style="color:#000">y</span>]<span style="color:#000">--</span>, <span style="color:#000">a</span>[<span style="color:#000">y</span>][<span style="color:#000">x</span>]<span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>    
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">m</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">double</span> <span style="color:#000">c</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">x</span>, <span style="color:#000">y</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">x</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">y</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">c</span>, <span style="color:#000">add</span>(<span style="color:#000">x</span>, <span style="color:#000">y</span>, <span style="color:#000">c</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">a</span>[<span style="color:#1c01ce">1</span>][<span style="color:#000">n</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">a</span>[<span style="color:#000">n</span>][<span style="color:#000">n</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">=</span> <span style="color:#000">n</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">a</span>[<span style="color:#1c01ce">1</span>][<span style="color:#1c01ce">1</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">a</span>[<span style="color:#000">n</span>][<span style="color:#000">n</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">guass</span>();
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">double</span> <span style="color:#000">mul</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1e18</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">flag</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">auto</span> <span style="color:#000">k</span> : <span style="color:#000">edges</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">fabs</span>(<span style="color:#000">root</span>[<span style="color:#000">k</span>.<span style="color:#000">y</span>] <span style="color:#000">-</span> <span style="color:#000">root</span>[<span style="color:#000">k</span>.<span style="color:#000">x</span>]) <span style="color:#000">&lt;</span> <span style="color:#000">eps</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">continue</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">mul</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">min</span>(<span style="color:#000">mul</span>, <span style="color:#1c01ce">1.0</span> <span style="color:#000">*</span> <span style="color:#000">k</span>.<span style="color:#000">cap</span> <span style="color:#000">/</span> <span style="color:#000">fabs</span>(<span style="color:#000">root</span>[<span style="color:#000">k</span>.<span style="color:#000">y</span>] <span style="color:#000">-</span> <span style="color:#000">root</span>[<span style="color:#000">k</span>.<span style="color:#000">x</span>])), <span style="color:#000">flag</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">!</span><span style="color:#000">flag</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">mul</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">root</span>[<span style="color:#000">i</span>] <span style="color:#000">*=</span> <span style="color:#000">mul</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">double</span> <span style="color:#000">sum</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">auto</span> <span style="color:#000">k</span> : <span style="color:#000">edges</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">k</span>.<span style="color:#000">x</span> <span style="color:#000">==</span> <span style="color:#000">n</span> <span style="color:#000">||</span> <span style="color:#000">k</span>.<span style="color:#000">y</span> <span style="color:#000">==</span> <span style="color:#000">n</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">sum</span> <span style="color:#000">+=</span> <span style="color:#000">fabs</span>(<span style="color:#000">root</span>[<span style="color:#000">k</span>.<span style="color:#000">y</span>] <span style="color:#000">-</span> <span style="color:#000">root</span>[<span style="color:#000">k</span>.<span style="color:#000">x</span>]);
</span></span><span style="display:flex;"><span>    <span style="color:#000">printf</span>(<span style="color:#c41a16">&#34;%lf</span><span style="color:#c41a16">\\</span><span style="color:#c41a16">n&#34;</span>, <span style="color:#000">sum</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">auto</span> <span style="color:#000">k</span> : <span style="color:#000">edges</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">printf</span>(<span style="color:#c41a16">&#34;%lf</span><span style="color:#c41a16">\\</span><span style="color:#c41a16">n&#34;</span>, <span style="color:#000">root</span>[<span style="color:#000">k</span>.<span style="color:#000">y</span>] <span style="color:#000">-</span> <span style="color:#000">root</span>[<span style="color:#000">k</span>.<span style="color:#000">x</span>]);
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div>]]></content:encoded>
    </item>
    
    <item>
      <title>Codeforces Round 214 (Div. 2)</title>
      <link>https://luoyisu.github.io/posts/cf-contest366/</link>
      <pubDate>Fri, 24 Dec 2021 10:36:36 +0000</pubDate>
      
      <guid>https://luoyisu.github.io/posts/cf-contest366/</guid>
      <description>&lt;h2 id=&#34;概述&#34;&gt;概述&lt;/h2&gt;
&lt;p&gt;没啥难题，也没有什么特别推荐的题。（快来做前几天的题！！）&lt;/p&gt;</description>
      <content:encoded><![CDATA[<h2 id="概述">概述</h2>
<p>没啥难题，也没有什么特别推荐的题。（快来做前几天的题！！）</p>
<h2 id="ahttpscodeforcescontest366problema"><a href="https://codeforc.es/contest/366/problem/A">A</a></h2>
<h3 id="description">Description</h3>
<p>有四个房间，每个房间有两个守卫，每个守卫可以用不小于一给定价钱的巧克力或果汁贿赂。</p>
<p>现在你有 $n$ 元要恰好花完，要贿赂一个房间里的两个守卫，问怎么分配钱。</p>
<h3 id="solution">Solution</h3>
<p>关键在于读懂英文题面，转化成上面的意思，然后就做完了。</p>
<h3 id="code">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cctype&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cerr</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">a</span>, <span style="color:#000">b</span>, <span style="color:#000">c</span>, <span style="color:#000">d</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">a</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">b</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">c</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">d</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">min</span>(<span style="color:#000">a</span>, <span style="color:#000">b</span>), <span style="color:#000">y</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">min</span>(<span style="color:#000">c</span>, <span style="color:#000">d</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">x</span> <span style="color:#000">+</span> <span style="color:#000">y</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">i</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">x</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">n</span> <span style="color:#000">-</span> <span style="color:#000">x</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">return</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="bhttpscodeforcescontest366problemb"><a href="https://codeforc.es/contest/366/problem/B">B</a></h2>
<h3 id="description-1">Description</h3>
<p>有 $n$ 个任务，你每次可以做连续的 $k$ 个，做完这 $k$ 个之后会接着做连续的 $k$ 个任务。一直做到不能做结束。你每次开始做任务时会得到一个对应的怒气值，而连续做的任务不会得到怒气值。</p>
<p>问从哪个任务开始做得到怒气值最小。（建议看英文题面）</p>
<h3 id="solution-1">Solution</h3>
<p>发现从第 $i$ 个任务开始做，就会得到任务 $i,i+k,i+2k&hellip;$ 的怒气值。也就是说任务被分成了 $k$ 组。</p>
<p>没啥可说的，直接预处理每组任务怒气值然后输出最小值就可以了。</p>
<h3 id="code-1">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cctype&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cerr</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1e5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">a</span>[<span style="color:#000">maxn</span>], <span style="color:#000">n</span>, <span style="color:#000">k</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">sum</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">k</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">k</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#000">i</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">j</span> <span style="color:#000">+=</span> <span style="color:#000">k</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">sum</span>[<span style="color:#000">i</span>] <span style="color:#000">+=</span> <span style="color:#000">a</span>[<span style="color:#000">j</span>];
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">sum</span>[<span style="color:#1c01ce">0</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">30</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">k</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">sum</span>[<span style="color:#000">i</span>] <span style="color:#000">&lt;</span> <span style="color:#000">sum</span>[<span style="color:#000">ans</span>])
</span></span><span style="display:flex;"><span>            <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#000">i</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">ans</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="chttpscodeforcescontest366problemc"><a href="https://codeforc.es/contest/366/problem/C">C</a></h2>
<h3 id="description-2">Description</h3>
<p>有 $n$ 个水果，每个水果有两个属性：美味值 $a$ 和卡路里值 $b$ 。现在选用若干个（至少 $1$ 个）水果制作一份特殊的沙拉，沙拉的美味值为所选的水果的美味值的和，沙拉的卡路里值为所选水果的卡路里值的和。沙拉的美味值恰好是卡路里值的 $k$ 倍。请计算该沙拉美味值最大为多少。</p>
<p>$n,a_i,b_i\leq100,k\leq10$</p>
<h3 id="solution-2">Solution</h3>
<p>把卡路里值乘一下 $k$，问题转化为美味值和卡路里相等。</p>
<p>这个东西就非常背包。</p>
<p>随便乱写一个 DP：$f(i,j,k)$ 表示前 $i$ 个水果，美味值和为 $j$，卡路里和为 $k$ 的最大美味值。然后 $f(i,j,k)=\max(f(i-1,j,k),f(i-1,j-a_i,k-b_i)+a_i)$。这玩意稍微算一下就知道过不去。</p>
<p>因为转移已经是 $O(1)$ 的了，只能从状态入手。发现 $j,k$ 的转移都只和 $i$ 有关，可以搞成一维（类似emiya家今天的饭）：$f(i,d)$ 表示前 $i$ 个水果，卡路里与美味值差为 $d$ 的最大美味值。然后 $f(i,d)=\max(f(i-1,d),f(i-1,d-(b_i-a_i))$。</p>
<p>这样就解决了。</p>
<h3 id="code-2">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cctype&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cerr</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">110</span>, <span style="color:#000">maxm</span> <span style="color:#000">=</span> <span style="color:#1c01ce">3e5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">f</span>[<span style="color:#000">maxm</span>], <span style="color:#000">a</span>[<span style="color:#000">maxn</span>], <span style="color:#000">b</span>[<span style="color:#000">maxn</span>], <span style="color:#000">n</span>, <span style="color:#000">k</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">k</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">b</span>[<span style="color:#000">i</span>], <span style="color:#000">b</span>[<span style="color:#000">i</span>] <span style="color:#000">*=</span> <span style="color:#000">k</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">M</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1e5</span>, <span style="color:#000">D</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2e5</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">memset</span>(<span style="color:#000">f</span>, <span style="color:#000">-</span><span style="color:#1c01ce">1</span>, <span style="color:#a90d91">sizeof</span>(<span style="color:#000">f</span>));
</span></span><span style="display:flex;"><span>    <span style="color:#000">f</span>[<span style="color:#000">D</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">d</span> <span style="color:#000">=</span> <span style="color:#000">b</span>[<span style="color:#000">i</span>] <span style="color:#000">-</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">d</span> <span style="color:#000">&gt;</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#000">-</span><span style="color:#000">M</span>; <span style="color:#000">j</span> <span style="color:#000">+</span> <span style="color:#000">d</span> <span style="color:#000">&lt;=</span> <span style="color:#000">M</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            {
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">if</span> (<span style="color:#000">f</span>[<span style="color:#000">j</span> <span style="color:#000">+</span> <span style="color:#000">D</span> <span style="color:#000">+</span> <span style="color:#000">d</span>] <span style="color:#000">!=</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>                    <span style="color:#000">f</span>[<span style="color:#000">j</span> <span style="color:#000">+</span> <span style="color:#000">D</span>] <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">max</span>(<span style="color:#000">f</span>[<span style="color:#000">j</span> <span style="color:#000">+</span> <span style="color:#000">D</span>], <span style="color:#000">f</span>[<span style="color:#000">j</span> <span style="color:#000">+</span> <span style="color:#000">d</span> <span style="color:#000">+</span> <span style="color:#000">D</span>] <span style="color:#000">+</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>]);
</span></span><span style="display:flex;"><span>            }
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#000">M</span>; <span style="color:#000">j</span> <span style="color:#000">+</span> <span style="color:#000">d</span> <span style="color:#000">&gt;=</span> <span style="color:#000">-</span><span style="color:#000">M</span>; <span style="color:#000">j</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">if</span> (<span style="color:#000">f</span>[<span style="color:#000">j</span> <span style="color:#000">+</span> <span style="color:#000">D</span> <span style="color:#000">+</span> <span style="color:#000">d</span>] <span style="color:#000">!=</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>                    <span style="color:#000">f</span>[<span style="color:#000">j</span> <span style="color:#000">+</span> <span style="color:#000">D</span>] <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">max</span>(<span style="color:#000">f</span>[<span style="color:#000">j</span> <span style="color:#000">+</span> <span style="color:#000">D</span>], <span style="color:#000">f</span>[<span style="color:#000">j</span> <span style="color:#000">+</span> <span style="color:#000">d</span> <span style="color:#000">+</span> <span style="color:#000">D</span>] <span style="color:#000">+</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>]);
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> (<span style="color:#000">f</span>[<span style="color:#000">D</span>] <span style="color:#000">==</span> <span style="color:#1c01ce">0</span> <span style="color:#000">?</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span> <span style="color:#000">:</span> <span style="color:#000">f</span>[<span style="color:#000">D</span>]) <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="dhttpscodeforcescontest366problemd"><a href="https://codeforc.es/contest/366/problem/D">D</a></h2>
<h3 id="description-3">Description</h3>
<p>给出一个 $n$ 个点，$m$ 条边的无向图，每条边有区间 $\left[l_i,r_i\right]$，求从 $1$ 到 $n$ 路径组成的边集，使该边集中所有区间的交内的正整数元素个数最多。</p>
<p>$2\leq n\leq10^3,0\leq m\leq3\times10^3$。</p>
<h3 id="solution-3">Solution</h3>
<p>数据范围这么小，我们直接枚举。</p>
<p>考虑枚举一个区间的左端点，然后二分找最大的右端点，再 check 一下图是否联通即可。</p>
<p>时间复杂度 $O(mn\log m)$。</p>
<h3 id="code-3">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cctype&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cerr</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">3e3</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">struct</span> <span style="color:#3f6e75">UFS</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">father</span>[<span style="color:#000">maxn</span>], <span style="color:#000">siz</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">void</span> <span style="color:#000">init</span>(<span style="color:#a90d91">int</span> <span style="color:#000">n</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1e3</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">father</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">i</span>, <span style="color:#000">siz</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">find</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>) { <span style="color:#a90d91">return</span> <span style="color:#000">x</span> <span style="color:#000">==</span> <span style="color:#000">father</span>[<span style="color:#000">x</span>] <span style="color:#000">?</span> <span style="color:#000">x</span> : <span style="color:#000">father</span>[<span style="color:#000">x</span>] <span style="color:#000">=</span> <span style="color:#000">find</span>(<span style="color:#000">father</span>[<span style="color:#000">x</span>]); }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">void</span> <span style="color:#000">uni</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">xx</span> <span style="color:#000">=</span> <span style="color:#000">find</span>(<span style="color:#000">x</span>), <span style="color:#000">yy</span> <span style="color:#000">=</span> <span style="color:#000">find</span>(<span style="color:#000">y</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">siz</span>[<span style="color:#000">xx</span>] <span style="color:#000">&gt;</span> <span style="color:#000">siz</span>[<span style="color:#000">yy</span>])
</span></span><span style="display:flex;"><span>            <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">swap</span>(<span style="color:#000">xx</span>, <span style="color:#000">yy</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">father</span>[<span style="color:#000">xx</span>] <span style="color:#000">=</span> <span style="color:#000">find</span>(<span style="color:#000">yy</span>), <span style="color:#000">siz</span>[<span style="color:#000">yy</span>] <span style="color:#000">+=</span> <span style="color:#000">siz</span>[<span style="color:#000">xx</span>];
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">bool</span> <span style="color:#000">ask</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>) { <span style="color:#a90d91">return</span> <span style="color:#000">find</span>(<span style="color:#000">x</span>) <span style="color:#000">==</span> <span style="color:#000">find</span>(<span style="color:#000">y</span>); }
</span></span><span style="display:flex;"><span>} <span style="color:#000">ufs</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">struct</span> <span style="color:#3f6e75">edge</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#000">y</span>, <span style="color:#000">l</span>, <span style="color:#000">r</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">bool</span> <span style="color:#a90d91">operator</span><span style="color:#000">&lt;</span>(<span style="color:#a90d91">const</span> <span style="color:#000">edge</span> <span style="color:#000">&amp;</span><span style="color:#000">b</span>) <span style="color:#a90d91">const</span> { <span style="color:#a90d91">return</span> <span style="color:#000">r</span> <span style="color:#000">&lt;</span> <span style="color:#000">b</span>.<span style="color:#000">r</span>; }
</span></span><span style="display:flex;"><span>} <span style="color:#000">e</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">n</span>, <span style="color:#000">m</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">bool</span> <span style="color:#000">check</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">ufs</span>.<span style="color:#000">init</span>(<span style="color:#000">n</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">e</span>[<span style="color:#000">i</span>].<span style="color:#000">l</span> <span style="color:#000">&lt;=</span> <span style="color:#000">x</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">e</span>[<span style="color:#000">i</span>].<span style="color:#000">r</span> <span style="color:#000">&gt;=</span> <span style="color:#000">y</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">ufs</span>.<span style="color:#000">uni</span>(<span style="color:#000">e</span>[<span style="color:#000">i</span>].<span style="color:#000">x</span>, <span style="color:#000">e</span>[<span style="color:#000">i</span>].<span style="color:#000">y</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#000">ufs</span>.<span style="color:#000">ask</span>(<span style="color:#1c01ce">1</span>, <span style="color:#000">n</span>);
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">solve</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">l</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">r</span> <span style="color:#000">=</span> <span style="color:#000">m</span>, <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> (<span style="color:#000">l</span> <span style="color:#000">&lt;=</span> <span style="color:#000">r</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">mid</span> <span style="color:#000">=</span> (<span style="color:#000">l</span> <span style="color:#000">+</span> <span style="color:#000">r</span>) <span style="color:#000">/</span> <span style="color:#1c01ce">2</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">check</span>(<span style="color:#000">x</span>, <span style="color:#000">e</span>[<span style="color:#000">mid</span>].<span style="color:#000">r</span>))
</span></span><span style="display:flex;"><span>            <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#000">mid</span>, <span style="color:#000">l</span> <span style="color:#000">=</span> <span style="color:#000">mid</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>            <span style="color:#000">r</span> <span style="color:#000">=</span> <span style="color:#000">mid</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#177500">//cout &lt;&lt; x &lt;&lt; &#34; &#34; &lt;&lt; e[ans].r &lt;&lt; endl;
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>    <span style="color:#a90d91">return</span> <span style="color:#000">e</span>[<span style="color:#000">ans</span>].<span style="color:#000">r</span> <span style="color:#000">-</span> <span style="color:#000">x</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">scanf</span>(<span style="color:#c41a16">&#34;%d%d&#34;</span>, <span style="color:#000">&amp;</span><span style="color:#000">n</span>, <span style="color:#000">&amp;</span><span style="color:#000">m</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">scanf</span>(<span style="color:#c41a16">&#34;%d%d%d%d&#34;</span>, <span style="color:#000">&amp;</span><span style="color:#000">e</span>[<span style="color:#000">i</span>].<span style="color:#000">x</span>, <span style="color:#000">&amp;</span><span style="color:#000">e</span>[<span style="color:#000">i</span>].<span style="color:#000">y</span>, <span style="color:#000">&amp;</span><span style="color:#000">e</span>[<span style="color:#000">i</span>].<span style="color:#000">l</span>, <span style="color:#000">&amp;</span><span style="color:#000">e</span>[<span style="color:#000">i</span>].<span style="color:#000">r</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">sort</span>(<span style="color:#000">e</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">e</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">+</span> <span style="color:#000">m</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">max</span>(<span style="color:#000">solve</span>(<span style="color:#000">e</span>[<span style="color:#000">i</span>].<span style="color:#000">l</span>), <span style="color:#000">ans</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> (<span style="color:#000">ans</span> <span style="color:#000">==</span> <span style="color:#1c01ce">0</span> <span style="color:#000">?</span> <span style="color:#c41a16">&#34;Nice work, Dima!&#34;</span> <span style="color:#000">:</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">to_string</span>(<span style="color:#000">ans</span>)) <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="ehttpscodeforcescontest366probleme"><a href="https://codeforc.es/contest/366/problem/E">E</a></h2>
<h3 id="description-4">Description</h3>
<p>给你一个 $n\times m$ 矩阵。矩阵中有 $k$ 种元素。给你一个序列，你要将序列中的每一个元素转化为矩阵上的对应数字的坐标，并使得相邻元素表示的坐标的曼哈顿距离中的最大值最大，求出这个最大值。（建议看原题面）。</p>
<p>$n,m\leq2000$。$k\leq9$。</p>
<h3 id="solution-4">Solution</h3>
<p>我们考虑算出每两种元素之间最大曼哈顿距离。</p>
<p>有一个比较套路的做法：把曼哈顿距离展开：
$$
dis=\begin{cases}(x_1+y_1)-(x_2+y_2)\\(x_1-y_1)-(x_2-y_2)\\-(x_1-y_1)+(x_2-y_2)\\-(x_1+y_1)+(x_2+y_2)\end{cases}
$$
也就是说最大曼哈顿距离一定是这四种中的一个，我们对每个颜色维护 $x_1+y_1,x_1-y_1$ 的最大值和最小值然后在上面四种情况里取最大值即可。</p>
<h3 id="code-4">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;queue&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cctype&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cerr</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2010</span>;
</span></span><span style="display:flex;"><span><span style="color:#177500">//const int dx[] = {0, 0, 1, -1};
</span></span></span><span style="display:flex;"><span><span style="color:#177500">//const int dy[] = {1, -1, 0, 0};
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">ans</span>[<span style="color:#1c01ce">10</span>][<span style="color:#1c01ce">10</span>], <span style="color:#000">a</span>[<span style="color:#000">maxn</span>][<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">mxadd</span>[<span style="color:#1c01ce">10</span>], <span style="color:#000">miadd</span>[<span style="color:#1c01ce">10</span>], <span style="color:#000">mxmus</span>[<span style="color:#1c01ce">10</span>], <span style="color:#000">mimus</span>[<span style="color:#1c01ce">10</span>], <span style="color:#000">q</span>[<span style="color:#000">maxn</span>], <span style="color:#000">n</span>, <span style="color:#000">m</span>, <span style="color:#000">k</span>, <span style="color:#000">s</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">upd</span>(<span style="color:#a90d91">int</span> <span style="color:#000">&amp;</span><span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>) { <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">max</span>(<span style="color:#000">x</span>, <span style="color:#000">y</span>); }
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">upd2</span>(<span style="color:#a90d91">int</span> <span style="color:#000">&amp;</span><span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>) { <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">min</span>(<span style="color:#000">x</span>, <span style="color:#000">y</span>); }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">struct</span> <span style="color:#3f6e75">point</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#000">y</span>;
</span></span><span style="display:flex;"><span>};
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">scanf</span>(<span style="color:#c41a16">&#34;%d%d%d%d&#34;</span>, <span style="color:#000">&amp;</span><span style="color:#000">n</span>, <span style="color:#000">&amp;</span><span style="color:#000">m</span>, <span style="color:#000">&amp;</span><span style="color:#000">k</span>, <span style="color:#000">&amp;</span><span style="color:#000">s</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">scanf</span>(<span style="color:#c41a16">&#34;%d&#34;</span>, <span style="color:#000">&amp;</span><span style="color:#000">a</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>]);
</span></span><span style="display:flex;"><span>    <span style="color:#000">memset</span>(<span style="color:#000">mimus</span>, <span style="color:#1c01ce">1</span>, <span style="color:#a90d91">sizeof</span>(<span style="color:#000">mimus</span>)), <span style="color:#000">memset</span>(<span style="color:#000">miadd</span>, <span style="color:#1c01ce">1</span>, <span style="color:#a90d91">sizeof</span>(<span style="color:#000">miadd</span>));
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">upd</span>(<span style="color:#000">mxadd</span>[<span style="color:#000">a</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>]], <span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#000">j</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#000">upd2</span>(<span style="color:#000">miadd</span>[<span style="color:#000">a</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>]], <span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#000">j</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#000">upd</span>(<span style="color:#000">mxmus</span>[<span style="color:#000">a</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>]], <span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#000">j</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#000">upd2</span>(<span style="color:#000">mimus</span>[<span style="color:#000">a</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>]], <span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#000">j</span>);
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">k</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;=</span> <span style="color:#000">k</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">ans</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>] <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">max</span>(<span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">max</span>(<span style="color:#000">abs</span>(<span style="color:#000">mxadd</span>[<span style="color:#000">i</span>] <span style="color:#000">-</span> <span style="color:#000">miadd</span>[<span style="color:#000">j</span>]), <span style="color:#000">abs</span>(<span style="color:#000">mxadd</span>[<span style="color:#000">j</span>] <span style="color:#000">-</span> <span style="color:#000">miadd</span>[<span style="color:#000">i</span>])), 
</span></span><span style="display:flex;"><span>                    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">max</span>(<span style="color:#000">abs</span>(<span style="color:#000">mxmus</span>[<span style="color:#000">i</span>] <span style="color:#000">-</span> <span style="color:#000">mimus</span>[<span style="color:#000">j</span>]), <span style="color:#000">abs</span>(<span style="color:#000">mxmus</span>[<span style="color:#000">j</span>] <span style="color:#000">-</span> <span style="color:#000">mimus</span>[<span style="color:#000">i</span>])));
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">res</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">s</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">scanf</span>(<span style="color:#c41a16">&#34;%d&#34;</span>, <span style="color:#000">&amp;</span><span style="color:#000">q</span>[<span style="color:#000">i</span>]);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">s</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">res</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">max</span>(<span style="color:#000">res</span>, <span style="color:#000">ans</span>[<span style="color:#000">q</span>[<span style="color:#000">i</span>]][<span style="color:#000">q</span>[<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>]]);
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">res</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div>]]></content:encoded>
    </item>
    
    <item>
      <title>Codeforces Round 668 (Div. 1&amp;2)</title>
      <link>https://luoyisu.github.io/posts/cf-contest1404/</link>
      <pubDate>Thu, 23 Dec 2021 21:15:48 +0000</pubDate>
      
      <guid>https://luoyisu.github.io/posts/cf-contest1404/</guid>
      <description>&lt;h2 id=&#34;概述&#34;&gt;概述&lt;/h2&gt;
&lt;p&gt;不简单，但也不算特别难。&lt;/p&gt;
&lt;p&gt;Div1 的 BCDE 都值得一做。&lt;/p&gt;
&lt;p&gt;因为写得比较着急，可能有各种疏漏，见谅。&lt;/p&gt;</description>
      <content:encoded><![CDATA[<h2 id="概述">概述</h2>
<p>不简单，但也不算特别难。</p>
<p>Div1 的 BCDE 都值得一做。</p>
<p>因为写得比较着急，可能有各种疏漏，见谅。</p>
<h2 id="div2-ahttpscodeforcescomcontest1405problema"><a href="https://codeforces.com/contest/1405/problem/A">Div2 A</a></h2>
<h3 id="description">Description</h3>
<p>对于一个长度为 $n$ 的排列 $p$，定义其 <strong>fingerprint</strong> $F(p)$ 为 $p$ 中相邻元素和排序后得到的数组。更形式化地，</p>
<p>$$F(p)=\text{sort}([p_1+p_2,p_2+p_3,\cdots,p_{n-1}+p_n])$$​。</p>
<p>给定一个长度为 $n$ 的排列 $p$，你需要找到一个与 $p$​ 不同但 fingerprint 相同的排列。</p>
<h3 id="solution">Solution</h3>
<p>没啥可说的，看一看这个定义，因为是排列，直接倒序输出即可。</p>
<h3 id="code">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cctype&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cerr</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">T</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">T</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> (<span style="color:#000">T</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">vector</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">a</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">x</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">x</span>, <span style="color:#000">a</span>.<span style="color:#000">push_back</span>(<span style="color:#000">x</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">reverse</span>(<span style="color:#000">a</span>.<span style="color:#000">begin</span>(), <span style="color:#000">a</span>.<span style="color:#000">end</span>());
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">u</span> : <span style="color:#000">a</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">u</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="div2-bhttpscodeforcescomcontest1405problemb"><a href="https://codeforces.com/contest/1405/problem/B">Div2 B</a></h2>
<h3 id="description-1">Description</h3>
<p>给定一个序列 $a[1]-a[n]$​，满足 $\sum_{i=1}^{n}a[i]=0$​。</p>
<p>每次可以选两个数 $i$​，$j$​，使 $a[i]$ ​变为 $a[i]-1$​， $a[j]$ ​变为 $a[j]+1$​。</p>
<p>当 $i&lt;j$ ​​使操作无花费，否则操作花费 $1$​​。</p>
<p>求使所有数都变为 $0$ ​所需的最小花费。</p>
<h3 id="solution-1">Solution</h3>
<p>显然我们需要尽可能进行无花费的操作。</p>
<p>尽可能让前面的数减小，后面的数增加，但是要是已经是负的了，那么就需要花费代价。</p>
<p>想一想再玩一玩样例，发现答案是最小前缀和的相反数（感性理解）。</p>
<h3 id="code-1">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cctype&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cmath&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cerr</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1e5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">a</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">sum</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">T</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">T</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> (<span style="color:#000">T</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1ll</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">60</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>], <span style="color:#000">sum</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">sum</span>[<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">+</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>], <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">min</span>(<span style="color:#000">ans</span>, <span style="color:#000">sum</span>[<span style="color:#000">i</span>]);
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">abs</span>(<span style="color:#000">ans</span>) <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="ahttpscodeforcescomcontest1404problema"><a href="https://codeforces.com/contest/1404/problem/A">A</a></h2>
<h3 id="description-2">Description</h3>
<p>给定一个二进制字符串 由 <code>0,1,?</code> 组成。</p>
<p><code>?</code> 可以是 <code>1</code> 或者 <code>0</code>，由你自由选择。</p>
<p>问你是否能构造出一个字符串，使得这个字符串每个长度为 $k$ 的子串中 <code>0</code> 和 <code>1</code> 的个数相等。</p>
<h3 id="solution-2">Solution</h3>
<p>不会做就找规律（）</p>
<p>看样例发现这个东西很循环，往这个方面想一想就能想到：第 $s_i=s_{i+k}$。很显然不证明了。</p>
<p>那么整个字符串就被分成了 $k$ 组，把已经确定的组都确定好，如果组内有矛盾显然无解。接着只检查 $s_1\sim s_k$​ 合不合法即可。</p>
<h3 id="code-2">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cctype&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cmath&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cerr</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">3e5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">a</span>[<span style="color:#000">maxn</span>], <span style="color:#000">n</span>, <span style="color:#000">k</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">char</span> <span style="color:#000">s</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">bool</span> <span style="color:#000">solve</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">k</span> <span style="color:#000">&gt;&gt;</span> (<span style="color:#000">s</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">a</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">s</span>[<span style="color:#000">i</span>] <span style="color:#000">==</span> <span style="color:#2300ce">&#39;?&#39;</span> <span style="color:#000">?</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span> <span style="color:#000">:</span> <span style="color:#000">s</span>[<span style="color:#000">i</span>] <span style="color:#000">-</span> <span style="color:#2300ce">&#39;0&#39;</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">k</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">p</span> <span style="color:#000">=</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#000">k</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">j</span> <span style="color:#000">+=</span> <span style="color:#000">k</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">a</span>[<span style="color:#000">j</span>] <span style="color:#000">!=</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">p</span> <span style="color:#000">=</span> <span style="color:#000">a</span>[<span style="color:#000">j</span>];
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#000">i</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">j</span> <span style="color:#000">+=</span> <span style="color:#000">k</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">a</span>[<span style="color:#000">j</span>] <span style="color:#000">!=</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">a</span>[<span style="color:#000">j</span>] <span style="color:#000">!=</span> <span style="color:#000">p</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">return</span> <span style="color:#a90d91">false</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">a</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">p</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">cnt1</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>, <span style="color:#000">cnt2</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">k</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">a</span>[<span style="color:#000">i</span>] <span style="color:#000">==</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">cnt1</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span> <span style="color:#a90d91">if</span> (<span style="color:#000">a</span>[<span style="color:#000">i</span>] <span style="color:#000">==</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">cnt2</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">cnt1</span> <span style="color:#000">&lt;=</span> <span style="color:#000">k</span> <span style="color:#000">/</span> <span style="color:#1c01ce">2</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">cnt1</span> <span style="color:#000">+</span> <span style="color:#000">cnt2</span> <span style="color:#000">&gt;=</span> <span style="color:#000">k</span> <span style="color:#000">/</span> <span style="color:#1c01ce">2</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#a90d91">true</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#a90d91">false</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">T</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">T</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> (<span style="color:#000">T</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">puts</span>(<span style="color:#000">solve</span>() <span style="color:#000">?</span> <span style="color:#c41a16">&#34;YES&#34;</span> <span style="color:#000">:</span> <span style="color:#c41a16">&#34;NO&#34;</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="bhttpscodeforcescomcontest1404problemb"><a href="https://codeforces.com/contest/1404/problem/B">B</a></h2>
<h3 id="description-3">Description</h3>
<p>有一棵 $n$ 个点的树， Alice 和 Bob 初始在这棵树上的节点 $a$, $b$。</p>
<p>他们可以在树上轮流移动一段距离不超过 $da$ 和 $db$ 的路径。</p>
<p>路径长度的定义是两点之间树上简单路径的边数。</p>
<p>如果 Alice 能在 $10^{100}$​ 次内追到 Bob ，那么则算 Alice 赢，否则算 Bob 赢。</p>
<p>Alice 先走。</p>
<h3 id="solution-3">Solution</h3>
<p>看起来是个结论题，实际上也确实是。</p>
<p>想一想加画一画能想到 Alice 获胜有以下三种情况。否则输。</p>
<ul>
<li>$dis(a,b)\leq da$，一步就抓到了；</li>
<li>$2da\geq db$，可以一步一步逼近 Bob 胜利；</li>
<li>Alice 走到一个能控制树上所有点的点，这样 Bob 不管怎么走都会输。这个时候需要满足 $2da\geq d$，$d$ 是树的直径。</li>
</ul>
<p>第一种情况很显然，第二种情况也挺显然：不管 Bob 怎么走，Alice 一定能拉近距离。</p>
<p>第三种情况是很极限的情况，Bob 最远也只能走直径长度的路径，如果 Alice 能占据直径中点那自然必胜（建议画图理解）。</p>
<h3 id="code-3">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cctype&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cerr</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1e5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">n</span>, <span style="color:#000">a</span>, <span style="color:#000">da</span>, <span style="color:#000">b</span>, <span style="color:#000">db</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">vector</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">e</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">add</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>) { <span style="color:#000">e</span>[<span style="color:#000">x</span>].<span style="color:#000">push_back</span>(<span style="color:#000">y</span>), <span style="color:#000">e</span>[<span style="color:#000">y</span>].<span style="color:#000">push_back</span>(<span style="color:#000">x</span>); }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">clear</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">e</span>[<span style="color:#000">i</span>].<span style="color:#000">clear</span>();
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">dep</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">dfs</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">fa</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">dep</span>[<span style="color:#000">x</span>] <span style="color:#000">=</span> <span style="color:#000">dep</span>[<span style="color:#000">fa</span>] <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">v</span> : <span style="color:#000">e</span>[<span style="color:#000">x</span>])
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">v</span> <span style="color:#000">!=</span> <span style="color:#000">fa</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">dfs</span>(<span style="color:#000">v</span>, <span style="color:#000">x</span>);
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">bool</span> <span style="color:#000">solve</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">dep</span>[<span style="color:#1c01ce">0</span>] <span style="color:#000">=</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span>, <span style="color:#000">dfs</span>(<span style="color:#000">b</span>, <span style="color:#1c01ce">0</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">rt</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">dis</span> <span style="color:#000">=</span> <span style="color:#000">dep</span>[<span style="color:#000">a</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">dis</span> <span style="color:#000">&lt;=</span> <span style="color:#000">da</span> <span style="color:#000">||</span> <span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">da</span> <span style="color:#000">&gt;=</span> <span style="color:#000">db</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#a90d91">true</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">dep</span>[<span style="color:#000">i</span>] <span style="color:#000">&gt;</span> <span style="color:#000">dep</span>[<span style="color:#000">rt</span>])
</span></span><span style="display:flex;"><span>            <span style="color:#000">rt</span> <span style="color:#000">=</span> <span style="color:#000">i</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">dfs</span>(<span style="color:#000">rt</span>, <span style="color:#1c01ce">0</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">dep</span>[<span style="color:#000">i</span>] <span style="color:#000">&gt;</span> <span style="color:#000">dep</span>[<span style="color:#000">rt</span>])
</span></span><span style="display:flex;"><span>            <span style="color:#000">rt</span> <span style="color:#000">=</span> <span style="color:#000">i</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">d</span> <span style="color:#000">=</span> <span style="color:#000">dep</span>[<span style="color:#000">rt</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#177500">//cout &lt;&lt; d &lt;&lt; endl;
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>    <span style="color:#a90d91">if</span> (<span style="color:#000">da</span> <span style="color:#000">+</span> <span style="color:#000">da</span> <span style="color:#000">&gt;=</span> <span style="color:#000">d</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#a90d91">true</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#a90d91">false</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">ios</span><span style="color:#000">::</span><span style="color:#000">sync_with_stdio</span>(<span style="color:#a90d91">false</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">T</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">T</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> (<span style="color:#000">T</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">a</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">b</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">da</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">db</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">x</span>, <span style="color:#000">y</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">x</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">y</span>, <span style="color:#000">add</span>(<span style="color:#000">x</span>, <span style="color:#000">y</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">puts</span>(<span style="color:#000">solve</span>() <span style="color:#000">?</span> <span style="color:#c41a16">&#34;Alice&#34;</span> <span style="color:#000">:</span> <span style="color:#c41a16">&#34;Bob&#34;</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">clear</span>();
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="chttpscodeforcescomcontest1404problemc"><a href="https://codeforces.com/contest/1404/problem/C">C</a></h2>
<h3 id="description-4">Description</h3>
<p>给定一个含有 $n$​ 个正整数的序列 $a$​ ，对于一次操作，你可以任选一个位置 $i$​ 且满足 $a_i=i$​ ,那么就可以移除这个元素，并将后面所有的元素向前移动一位。</p>
<p>对于每个相互独立的询问 $x,y$ 需要你求出在前 $x$ 个元素以及后 $y$ 个元素不能被移除的情况下，最多可以进行几次操作。</p>
<p>$n,q \leq 3\times 10^5$。</p>
<h3 id="solution-4">Solution</h3>
<p>能想到能删除几个点和删除的顺序是没什么关系的，只要一个数前面能被删除的数足够多那么他就可以被删除（因为先删后面的不影响前面的）。</p>
<p>考虑到这一点，我们直接让 $a_i=i-a_i$，每次删除一个数相当于区间减 $1$ 。显然负数永远都消不掉。</p>
<p>这种奇怪的东西我们尝试把它离线下来。</p>
<p>然后就不会了，我数据结构太差了qwq，直接看题解。。。</p>
<p>要求解答案，我们需要尝试维护 $f_i$ 表示从 $i$ 开始能删掉几个数。</p>
<p>我们把询问按照右端点排序，考虑加进去一个数之后对上面这个东西的贡献。</p>
<p>显然 $f_i$ 是单调不增的，也就是说，对于前一部分，会使 $f_i$ 增加 $1$，后面不变。</p>
<p>或者换个说法：$f_k\geq q_r&gt;f_{k+1}$。</p>
<p>区间加 $1$，单点查询，选择树状数组。</p>
<p>实际上只需要记录操作次数即可。</p>
<p>至于怎么找这个 $k$​，树状数组上二分即可。</p>
<p>有时间会写个线段树版，树状数组上二分还是很难受的。</p>
<h3 id="code-4">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cctype&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cerr</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">3e5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">int</span> <span style="color:#000">lowbit</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>) { <span style="color:#a90d91">return</span> <span style="color:#000">x</span> <span style="color:#000">&amp;</span> <span style="color:#000">-</span><span style="color:#000">x</span>; }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">n</span>, <span style="color:#000">a</span>[<span style="color:#000">maxn</span>], <span style="color:#000">t</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">modify</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">v</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (; <span style="color:#000">x</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">x</span> <span style="color:#000">+=</span> <span style="color:#000">lowbit</span>(<span style="color:#000">x</span>))
</span></span><span style="display:flex;"><span>        <span style="color:#000">t</span>[<span style="color:#000">x</span>] <span style="color:#000">+=</span> <span style="color:#000">v</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">query</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">res</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (; <span style="color:#000">x</span>; <span style="color:#000">x</span> <span style="color:#000">-=</span> <span style="color:#000">lowbit</span>(<span style="color:#000">x</span>))
</span></span><span style="display:flex;"><span>        <span style="color:#000">res</span> <span style="color:#000">+=</span> <span style="color:#000">t</span>[<span style="color:#000">x</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#000">res</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">kth</span>(<span style="color:#a90d91">int</span> <span style="color:#000">k</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">res</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">18</span>; <span style="color:#000">i</span>; <span style="color:#000">i</span> <span style="color:#000">&gt;&gt;=</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">res</span> <span style="color:#000">+</span> <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">k</span> <span style="color:#000">-</span> <span style="color:#000">t</span>[<span style="color:#000">res</span> <span style="color:#000">+</span> <span style="color:#000">i</span>] <span style="color:#000">&gt;</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">res</span> <span style="color:#000">+=</span> <span style="color:#000">i</span>, <span style="color:#000">k</span> <span style="color:#000">-=</span> <span style="color:#000">t</span>[<span style="color:#000">res</span>];
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#000">res</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">struct</span> <span style="color:#3f6e75">Q</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">l</span>, <span style="color:#000">r</span>, <span style="color:#000">ans</span>, <span style="color:#000">id</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">bool</span> <span style="color:#a90d91">operator</span><span style="color:#000">&lt;</span>(<span style="color:#a90d91">const</span> <span style="color:#000">Q</span> <span style="color:#000">&amp;</span><span style="color:#000">b</span>) <span style="color:#a90d91">const</span> { <span style="color:#a90d91">return</span> <span style="color:#000">r</span> <span style="color:#000">&lt;</span> <span style="color:#000">b</span>.<span style="color:#000">r</span>; }
</span></span><span style="display:flex;"><span>} <span style="color:#000">q</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">bool</span> <span style="color:#000">cmp</span>(<span style="color:#a90d91">const</span> <span style="color:#000">Q</span> <span style="color:#000">&amp;</span><span style="color:#000">a</span>, <span style="color:#a90d91">const</span> <span style="color:#000">Q</span> <span style="color:#000">&amp;</span><span style="color:#000">b</span>) { <span style="color:#a90d91">return</span> <span style="color:#000">a</span>.<span style="color:#000">id</span> <span style="color:#000">&lt;</span> <span style="color:#000">b</span>.<span style="color:#000">id</span>; }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">m</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">scanf</span>(<span style="color:#c41a16">&#34;%d%d&#34;</span>, <span style="color:#000">&amp;</span><span style="color:#000">n</span>, <span style="color:#000">&amp;</span><span style="color:#000">m</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">scanf</span>(<span style="color:#c41a16">&#34;%d&#34;</span>, <span style="color:#000">&amp;</span><span style="color:#000">a</span>[<span style="color:#000">i</span>]), <span style="color:#000">a</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">l</span>, <span style="color:#000">r</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">scanf</span>(<span style="color:#c41a16">&#34;%d%d&#34;</span>, <span style="color:#000">&amp;</span><span style="color:#000">l</span>, <span style="color:#000">&amp;</span><span style="color:#000">r</span>), <span style="color:#000">q</span>[<span style="color:#000">i</span>].<span style="color:#000">id</span> <span style="color:#000">=</span> <span style="color:#000">i</span>, <span style="color:#000">q</span>[<span style="color:#000">i</span>].<span style="color:#000">l</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span> <span style="color:#000">+</span> <span style="color:#000">l</span>, <span style="color:#000">q</span>[<span style="color:#000">i</span>].<span style="color:#000">r</span> <span style="color:#000">=</span> <span style="color:#000">n</span> <span style="color:#000">-</span> <span style="color:#000">r</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">sort</span>(<span style="color:#000">q</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">q</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">+</span> <span style="color:#000">m</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">now</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">while</span> (<span style="color:#000">now</span> <span style="color:#000">&lt;=</span> <span style="color:#000">q</span>[<span style="color:#000">i</span>].<span style="color:#000">r</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">int</span> <span style="color:#000">pos</span> <span style="color:#000">=</span> <span style="color:#000">a</span>[<span style="color:#000">now</span>] <span style="color:#000">&lt;</span> <span style="color:#1c01ce">0</span> <span style="color:#000">?</span> <span style="color:#1c01ce">1</span> <span style="color:#000">:</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">min</span>(<span style="color:#000">kth</span>(<span style="color:#000">now</span> <span style="color:#000">-</span> <span style="color:#000">a</span>[<span style="color:#000">now</span>]), <span style="color:#000">now</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#000">modify</span>(<span style="color:#000">pos</span>, <span style="color:#1c01ce">1</span>), <span style="color:#000">now</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#000">q</span>[<span style="color:#000">i</span>].<span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#000">q</span>[<span style="color:#000">i</span>].<span style="color:#000">r</span> <span style="color:#000">-</span> <span style="color:#000">query</span>(<span style="color:#000">q</span>[<span style="color:#000">i</span>].<span style="color:#000">l</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">sort</span>(<span style="color:#000">q</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">q</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">+</span> <span style="color:#000">m</span>, <span style="color:#000">cmp</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">printf</span>(<span style="color:#c41a16">&#34;%d</span><span style="color:#c41a16">\\</span><span style="color:#c41a16">n&#34;</span>, <span style="color:#000">q</span>[<span style="color:#000">i</span>].<span style="color:#000">ans</span>);
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="dhttpscodeforcescomcontest1404problemd"><a href="https://codeforces.com/contest/1404/problem/D">D</a></h2>
<h3 id="description-5">Description</h3>
<p><strong>这是一道交互题</strong></p>
<p>给定 $2n$ 个数 $1,2\sim 2n$，A 和 B 进行交互，如下规则：</p>
<ul>
<li>A 需要将元素分成 $n$ 组 $\mathbf{pair}$（二元组）</li>
<li>B 从每组 $\mathbf{pair}$ 中选择一个元素，如果权值和是 $2n$ 的倍数那么 B 胜，否则 A 胜。</li>
</ul>
<p>你需要选择 A/B 中的一者扮演角色，并取得胜利。</p>
<p>$n\le 5\times 10^5$​。</p>
<h3 id="solution-5">Solution</h3>
<p>观察样例 + 手算，发现当 $n$ 是偶数的时候，A 可以胜利：排一个 $(1,1+n),(2,2+n)&hellip;$  即可。</p>
<p>简易证明：取出来 $n$ 个数的和在模 $n$ 意义下是 $n(n-1)/2$，设 $n=2m$，则和为 $m(2m-1)$，这玩意是必然没法被 $2m$ 整除的，也就是说在和在模 $n$ 意义下都没法是 $0$，那 $2n$ 就更不行了。</p>
<p>然后盲猜：当 $n$ 是奇数，B 胜利。</p>
<p>有了刚刚的偶数，我们可以考虑试图取在模 $n$ 意义下是 $0,1,2,&hellip;,n-1$​ 的数，这些数加在一起一定是 $2n$ 的倍数。</p>
<p>稍微证明一下为什么一定能取到：因为模 $n$ 相同的一个数有两个，取了一个就必然不会取另一个，我们把 $i,i+n$ 连起来，表示只选其中一个。</p>
<p>同一组的两个数也不能同时选，我们也连起来。</p>
<p>这样每个点的度数就是 $2$，也就是说连出了一堆环，且 $i,i+n$​​ 在一个环里且相邻。这样就能得出一定能取到了（好像不太严谨，感性理解吧）。</p>
<p>选一个就不能选另一个，这是啥？无疑是二分图染色。</p>
<p>我们对每个环二分图染色就能得到结果了。</p>
<h3 id="code-5">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cctype&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;utility&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cerr</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">end</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1e6</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">typedef</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">pair</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span>, <span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">pii</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">used</span>[<span style="color:#000">maxn</span>], <span style="color:#000">must</span>[<span style="color:#000">maxn</span>], <span style="color:#000">vis</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">vector</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">e</span>[<span style="color:#000">maxn</span>], <span style="color:#000">ans</span>[<span style="color:#1c01ce">2</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">add</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>) { <span style="color:#000">e</span>[<span style="color:#000">x</span>].<span style="color:#000">push_back</span>(<span style="color:#000">y</span>), <span style="color:#000">e</span>[<span style="color:#000">y</span>].<span style="color:#000">push_back</span>(<span style="color:#000">x</span>); }
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">lst</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">dfs</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">d</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">ans</span>[<span style="color:#000">d</span>].<span style="color:#000">push_back</span>(<span style="color:#000">x</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">vis</span>[<span style="color:#000">x</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">v</span> : <span style="color:#000">e</span>[<span style="color:#000">x</span>])
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">!</span><span style="color:#000">vis</span>[<span style="color:#000">v</span>])
</span></span><span style="display:flex;"><span>            <span style="color:#000">dfs</span>(<span style="color:#000">v</span>, <span style="color:#000">d</span> <span style="color:#000">^</span> <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">ios</span><span style="color:#000">::</span><span style="color:#000">sync_with_stdio</span>(<span style="color:#a90d91">false</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">n</span> <span style="color:#000">%</span> <span style="color:#1c01ce">2</span> <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34;First&#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">i</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">i</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">end</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34;Second&#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span> <span style="color:#000">*</span> <span style="color:#1c01ce">2</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">int</span> <span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">lst</span>[<span style="color:#000">x</span>])
</span></span><span style="display:flex;"><span>                <span style="color:#000">add</span>(<span style="color:#000">lst</span>[<span style="color:#000">x</span>], <span style="color:#000">i</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>                <span style="color:#000">lst</span>[<span style="color:#000">x</span>] <span style="color:#000">=</span> <span style="color:#000">i</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">add</span>(<span style="color:#000">i</span>, <span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#000">n</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">!</span><span style="color:#000">vis</span>[<span style="color:#000">i</span>])
</span></span><span style="display:flex;"><span>                <span style="color:#000">dfs</span>(<span style="color:#000">i</span>, <span style="color:#1c01ce">0</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">sum</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">k</span> : <span style="color:#000">ans</span>[<span style="color:#1c01ce">0</span>])
</span></span><span style="display:flex;"><span>            <span style="color:#000">sum</span> <span style="color:#000">+=</span> <span style="color:#000">k</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">sum</span> <span style="color:#000">%</span> (<span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">n</span>))
</span></span><span style="display:flex;"><span>            <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">swap</span>(<span style="color:#000">ans</span>[<span style="color:#1c01ce">0</span>], <span style="color:#000">ans</span>[<span style="color:#1c01ce">1</span>]);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">k</span> : <span style="color:#000">ans</span>[<span style="color:#1c01ce">0</span>])
</span></span><span style="display:flex;"><span>            <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">k</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">end</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="ehttpswwwluogucomcnproblemcf1404e"><a href="https://www.luogu.com.cn/problem/CF1404E">E</a></h2>
<h3 id="description-6">Description</h3>
<p>你有一个 $n\times m\space(1 \leq n, m\leq200)$​ 的格子纸，格子要么涂黑（<code>#</code>）要么涂白（<code>.</code>）。你需要用若干个 $1\times n$ ​和 $n\times 1$ ​的长方形去覆盖所有黑色格子，要求不能盖到白色格子上，不能盖到其他长方形上，不能出格子纸的边界，求最小用多少个长方形。</p>
<h3 id="solution-6">Solution</h3>
<p>遇事不决看样例。发现对于一个点，横着的边和竖着的边不能同时选。</p>
<p>选一个边就相当于少了一个矩形，那么我们就要尽可能多选边。</p>
<p>一个常规套路：把边看成点，那么有两种点，且选了一个就不能选另一个，这是啥？不还是二分图吗！</p>
<p>我们把与一个点相邻的相互垂直的边两两连起来。</p>
<p>因为要多选点，也就是说要求二分图最大点独立集，那么只要求最大匹配即可，最大点独立集的大小就是点数减去最大匹配。</p>
<p>就这么简单？确实就这么简单，但还有点小细节：假如一个黑色格子周围没有边，它应该被算进答案，但我们刚刚没算。</p>
<p>那就加上即可，或者直接懒一点：最终答案 = 黑格子数 - 边数 + 最大匹配。</p>
<h3 id="code-6">Code</h3>
<p>我这个代码感觉加边部分还是很清晰的。</p>
<p>我是用点编号来代替边的编号，很简单。</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cctype&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;queue&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cerr</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">100010</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">char</span> <span style="color:#000">str</span>[<span style="color:#1c01ce">210</span>][<span style="color:#1c01ce">210</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">struct</span> <span style="color:#3f6e75">edge</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#000">y</span>, <span style="color:#000">cap</span>, <span style="color:#000">flow</span>;
</span></span><span style="display:flex;"><span>};
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">struct</span> <span style="color:#3f6e75">Dinic</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">vector</span><span style="color:#000">&lt;</span><span style="color:#000">edge</span><span style="color:#000">&gt;</span> <span style="color:#000">edges</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">vector</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">e</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">add</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>, <span style="color:#a90d91">int</span> <span style="color:#000">cap</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#177500">//cout &lt;&lt; &#34;added: &#34; &lt;&lt; x &lt;&lt; &#34; &#34; &lt;&lt; y &lt;&lt; endl;
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>        <span style="color:#000">edges</span>.<span style="color:#000">push_back</span>({<span style="color:#000">x</span>, <span style="color:#000">y</span>, <span style="color:#000">cap</span>, <span style="color:#1c01ce">0</span>});
</span></span><span style="display:flex;"><span>        <span style="color:#000">edges</span>.<span style="color:#000">push_back</span>({<span style="color:#000">y</span>, <span style="color:#000">x</span>, <span style="color:#1c01ce">0</span>, <span style="color:#1c01ce">0</span>});
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">m</span> <span style="color:#000">=</span> <span style="color:#000">edges</span>.<span style="color:#000">size</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#000">e</span>[<span style="color:#000">x</span>].<span style="color:#000">push_back</span>(<span style="color:#000">m</span> <span style="color:#000">-</span> <span style="color:#1c01ce">2</span>), <span style="color:#000">e</span>[<span style="color:#000">y</span>].<span style="color:#000">push_back</span>(<span style="color:#000">m</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">dis</span>[<span style="color:#000">maxn</span>], <span style="color:#000">vis</span>[<span style="color:#000">maxn</span>], <span style="color:#000">cur</span>[<span style="color:#000">maxn</span>], <span style="color:#000">s</span>, <span style="color:#000">t</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">bool</span> <span style="color:#000">bfs</span>()
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">queue</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">q</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">memset</span>(<span style="color:#000">vis</span>, <span style="color:#1c01ce">0</span>, <span style="color:#a90d91">sizeof</span>(<span style="color:#000">vis</span>));
</span></span><span style="display:flex;"><span>        <span style="color:#000">q</span>.<span style="color:#000">push</span>(<span style="color:#000">s</span>), <span style="color:#000">vis</span>[<span style="color:#000">s</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">dis</span>[<span style="color:#000">s</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">while</span> (<span style="color:#000">!</span><span style="color:#000">q</span>.<span style="color:#000">empty</span>())
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">int</span> <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">q</span>.<span style="color:#000">front</span>();
</span></span><span style="display:flex;"><span>            <span style="color:#000">q</span>.<span style="color:#000">pop</span>();
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> : <span style="color:#000">e</span>[<span style="color:#000">x</span>])
</span></span><span style="display:flex;"><span>            {
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">auto</span> <span style="color:#000">&amp;</span><span style="color:#000">k</span> <span style="color:#000">=</span> <span style="color:#000">edges</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">if</span> (<span style="color:#000">!</span><span style="color:#000">vis</span>[<span style="color:#000">k</span>.<span style="color:#000">y</span>] <span style="color:#000">&amp;&amp;</span> <span style="color:#000">k</span>.<span style="color:#000">cap</span> <span style="color:#000">-</span> <span style="color:#000">k</span>.<span style="color:#000">flow</span> <span style="color:#000">&gt;</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>                    <span style="color:#000">dis</span>[<span style="color:#000">k</span>.<span style="color:#000">y</span>] <span style="color:#000">=</span> <span style="color:#000">dis</span>[<span style="color:#000">x</span>] <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">vis</span>[<span style="color:#000">k</span>.<span style="color:#000">y</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">q</span>.<span style="color:#000">push</span>(<span style="color:#000">k</span>.<span style="color:#000">y</span>);
</span></span><span style="display:flex;"><span>            }
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#000">vis</span>[<span style="color:#000">t</span>];
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">dfs</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">lim</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">x</span> <span style="color:#000">==</span> <span style="color:#000">t</span> <span style="color:#000">||</span> <span style="color:#000">lim</span> <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">return</span> <span style="color:#000">lim</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">res</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>, <span style="color:#000">f</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">&amp;</span><span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#000">cur</span>[<span style="color:#000">x</span>]; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> (<span style="color:#a90d91">int</span>)<span style="color:#000">e</span>[<span style="color:#000">x</span>].<span style="color:#000">size</span>(); <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">auto</span> <span style="color:#000">&amp;</span><span style="color:#000">k</span> <span style="color:#000">=</span> <span style="color:#000">edges</span>[<span style="color:#000">e</span>[<span style="color:#000">x</span>][<span style="color:#000">i</span>]];
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">dis</span>[<span style="color:#000">k</span>.<span style="color:#000">y</span>] <span style="color:#000">!=</span> <span style="color:#000">dis</span>[<span style="color:#000">x</span>] <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">||</span> (<span style="color:#000">f</span> <span style="color:#000">=</span> <span style="color:#000">dfs</span>(<span style="color:#000">k</span>.<span style="color:#000">y</span>, <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">min</span>(<span style="color:#000">lim</span>, <span style="color:#000">k</span>.<span style="color:#000">cap</span> <span style="color:#000">-</span> <span style="color:#000">k</span>.<span style="color:#000">flow</span>))) <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">continue</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">k</span>.<span style="color:#000">flow</span> <span style="color:#000">+=</span> <span style="color:#000">f</span>, <span style="color:#000">edges</span>[<span style="color:#000">e</span>[<span style="color:#000">x</span>][<span style="color:#000">i</span>] <span style="color:#000">^</span> <span style="color:#1c01ce">1</span>].<span style="color:#000">flow</span> <span style="color:#000">-=</span> <span style="color:#000">f</span>, <span style="color:#000">res</span> <span style="color:#000">+=</span> <span style="color:#000">f</span>, <span style="color:#000">lim</span> <span style="color:#000">-=</span> <span style="color:#000">f</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">lim</span> <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">break</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#000">res</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">dinic</span>(<span style="color:#a90d91">int</span> <span style="color:#000">s_</span>, <span style="color:#a90d91">int</span> <span style="color:#000">t_</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">s</span> <span style="color:#000">=</span> <span style="color:#000">s_</span>, <span style="color:#000">t</span> <span style="color:#000">=</span> <span style="color:#000">t_</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">while</span> (<span style="color:#000">bfs</span>())
</span></span><span style="display:flex;"><span>            <span style="color:#000">memset</span>(<span style="color:#000">cur</span>, <span style="color:#1c01ce">0</span>, <span style="color:#a90d91">sizeof</span>(<span style="color:#000">cur</span>)), <span style="color:#000">ans</span> <span style="color:#000">+=</span> <span style="color:#000">dfs</span>(<span style="color:#000">s</span>, <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">30</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#000">ans</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>} <span style="color:#000">G</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">n</span>, <span style="color:#000">m</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">int</span> <span style="color:#000">id</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>) { <span style="color:#a90d91">return</span> (<span style="color:#000">y</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>) <span style="color:#000">*</span> <span style="color:#000">n</span> <span style="color:#000">+</span> <span style="color:#000">x</span> <span style="color:#000">+</span> <span style="color:#000">n</span> <span style="color:#000">*</span> <span style="color:#000">m</span> <span style="color:#000">+</span> <span style="color:#1c01ce">2</span>; }
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">int</span> <span style="color:#000">id2</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>) { <span style="color:#a90d91">return</span> <span style="color:#000">m</span> <span style="color:#000">*</span> (<span style="color:#000">x</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>) <span style="color:#000">+</span> <span style="color:#000">y</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>; }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">scanf</span>(<span style="color:#c41a16">&#34;%d%d&#34;</span>, <span style="color:#000">&amp;</span><span style="color:#000">n</span>, <span style="color:#000">&amp;</span><span style="color:#000">m</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">scanf</span>(<span style="color:#c41a16">&#34;%s&#34;</span>, <span style="color:#000">str</span>[<span style="color:#000">i</span>] <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">s</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">t</span> <span style="color:#000">=</span> <span style="color:#000">n</span> <span style="color:#000">*</span> <span style="color:#000">m</span> <span style="color:#000">*</span> <span style="color:#1c01ce">2</span> <span style="color:#000">+</span> <span style="color:#1c01ce">3</span>, <span style="color:#000">tot</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>, <span style="color:#000">cnt_p</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">str</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>] <span style="color:#000">==</span> <span style="color:#2300ce">&#39;#&#39;</span>)
</span></span><span style="display:flex;"><span>            {
</span></span><span style="display:flex;"><span>                <span style="color:#000">cnt_p</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">if</span> (<span style="color:#000">str</span>[<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>][<span style="color:#000">j</span>] <span style="color:#000">==</span> <span style="color:#2300ce">&#39;#&#39;</span>)
</span></span><span style="display:flex;"><span>                    <span style="color:#000">tot</span><span style="color:#000">++</span>, <span style="color:#000">G</span>.<span style="color:#000">add</span>(<span style="color:#1c01ce">1</span>, <span style="color:#000">id2</span>(<span style="color:#000">i</span>, <span style="color:#000">j</span>), <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>            }
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;</span> <span style="color:#000">m</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">str</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>] <span style="color:#000">==</span> <span style="color:#2300ce">&#39;#&#39;</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">str</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">==</span> <span style="color:#2300ce">&#39;#&#39;</span>)
</span></span><span style="display:flex;"><span>            {
</span></span><span style="display:flex;"><span>                <span style="color:#177500">//cout &lt;&lt; &#34;cur: &#34; &lt;&lt; i &lt;&lt; &#34; &#34; &lt;&lt; j &lt;&lt; endl;
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>                <span style="color:#000">G</span>.<span style="color:#000">add</span>(<span style="color:#000">id</span>(<span style="color:#000">i</span>, <span style="color:#000">j</span>), <span style="color:#000">t</span>, <span style="color:#1c01ce">1</span>), <span style="color:#000">tot</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">if</span> (<span style="color:#000">i</span> <span style="color:#000">&gt;</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">str</span>[<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>][<span style="color:#000">j</span>] <span style="color:#000">==</span> <span style="color:#2300ce">&#39;#&#39;</span>)
</span></span><span style="display:flex;"><span>                    <span style="color:#000">G</span>.<span style="color:#000">add</span>(<span style="color:#000">id2</span>(<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">j</span>), <span style="color:#000">id</span>(<span style="color:#000">i</span>, <span style="color:#000">j</span>), <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">if</span> (<span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">n</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">str</span>[<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>][<span style="color:#000">j</span>] <span style="color:#000">==</span> <span style="color:#2300ce">&#39;#&#39;</span>)
</span></span><span style="display:flex;"><span>                    <span style="color:#000">G</span>.<span style="color:#000">add</span>(<span style="color:#000">id2</span>(<span style="color:#000">i</span>, <span style="color:#000">j</span>), <span style="color:#000">id</span>(<span style="color:#000">i</span>, <span style="color:#000">j</span>), <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">if</span> (<span style="color:#000">i</span> <span style="color:#000">&gt;</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">str</span>[<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>][<span style="color:#000">j</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">==</span> <span style="color:#2300ce">&#39;#&#39;</span>)
</span></span><span style="display:flex;"><span>                    <span style="color:#000">G</span>.<span style="color:#000">add</span>(<span style="color:#000">id2</span>(<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">j</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>), <span style="color:#000">id</span>(<span style="color:#000">i</span>, <span style="color:#000">j</span>), <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">if</span> (<span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">n</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">str</span>[<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>][<span style="color:#000">j</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">==</span> <span style="color:#2300ce">&#39;#&#39;</span>)
</span></span><span style="display:flex;"><span>                    <span style="color:#000">G</span>.<span style="color:#000">add</span>(<span style="color:#000">id2</span>(<span style="color:#000">i</span>, <span style="color:#000">j</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>), <span style="color:#000">id</span>(<span style="color:#000">i</span>, <span style="color:#000">j</span>), <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>            }
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">cnt_p</span> <span style="color:#000">-</span> (<span style="color:#000">tot</span> <span style="color:#000">-</span> <span style="color:#000">G</span>.<span style="color:#000">dinic</span>(<span style="color:#000">s</span>, <span style="color:#000">t</span>)) <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div>]]></content:encoded>
    </item>
    
    <item>
      <title>Codeforces Round 542 (Div. 1&amp;2)</title>
      <link>https://luoyisu.github.io/posts/cf-contest1129/</link>
      <pubDate>Tue, 21 Dec 2021 14:36:53 +0000</pubDate>
      
      <guid>https://luoyisu.github.io/posts/cf-contest1129/</guid>
      <description>&lt;h2 id=&#34;概述&#34;&gt;概述&lt;/h2&gt;
&lt;p&gt;Div1 的 B、C、D、E 都值得一做。&lt;/p&gt;</description>
      <content:encoded><![CDATA[<h2 id="概述">概述</h2>
<p>Div1 的 B、C、D、E 都值得一做。</p>
<h2 id="div2-ahttpscodeforcescontest1130problema"><a href="https://codeforc.es/contest/1130/problem/A">Div2 A</a></h2>
<h3 id="description">Description</h3>
<p>有一个长度为 $n$​ 的序列，你需要找到一个非零整数 $d$​ 满足：当所有数都除以 $d$​ 之后（可以为小数），正数的个数要大于 $\lceil\dfrac{n}{2}\rceil$​。</p>
<h3 id="solution">Solution</h3>
<p>当正数数量足够，$d=1$；当负数数量足够，$d=-1$，否则无解。</p>
<h3 id="code">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cctype&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cmath&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cerr</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">cnt</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>, <span style="color:#000">n</span>, <span style="color:#000">cnt2</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">x</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">x</span>, <span style="color:#000">cnt</span> <span style="color:#000">+=</span> <span style="color:#000">x</span> <span style="color:#000">&gt;</span> <span style="color:#1c01ce">0</span>, <span style="color:#000">cnt2</span> <span style="color:#000">+=</span> <span style="color:#000">x</span> <span style="color:#000">&lt;</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">p</span> <span style="color:#000">=</span> <span style="color:#000">ceil</span>(<span style="color:#1c01ce">1.0</span> <span style="color:#000">*</span> <span style="color:#000">n</span> <span style="color:#000">/</span> <span style="color:#1c01ce">2</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">cnt</span> <span style="color:#000">&gt;=</span> <span style="color:#000">p</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">puts</span>(<span style="color:#c41a16">&#34;1&#34;</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">else</span> <span style="color:#a90d91">if</span> (<span style="color:#000">cnt2</span> <span style="color:#000">&gt;=</span> <span style="color:#000">p</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">puts</span>(<span style="color:#c41a16">&#34;-1&#34;</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>        <span style="color:#000">puts</span>(<span style="color:#c41a16">&#34;0&#34;</span>);
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="div2-bhttpscodeforcescontest1130problemb"><a href="https://codeforc.es/contest/1130/problem/B">Div2 B</a></h2>
<h3 id="description-1">Description</h3>
<p>萨沙和迪玛要做两个 $N$​ 层蛋糕，已知一条街上的 $2n$ 个商店 $a_1,a_2&hellip;.a_{2n}$ ​每家只能提供一个 $a_i$ ​层蛋糕，蛋糕必须按照从 $1\sim n$（从小到大）的顺序购买。最初，萨沙和迪玛位于第一个（最左边）房子附近。输出他们在购买两个蛋糕时必须行走的最小距离。相邻两栋房子之间的距离正好是 $1$。​</p>
<h3 id="solution-1">Solution</h3>
<p>显然两个人并没有什么特殊要求，找距离和最小的走即可。</p>
<h3 id="code-1">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cmath&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cctype&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cerr</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2e5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">a</span>[<span style="color:#000">maxn</span>], <span style="color:#000">b</span>[<span style="color:#000">maxn</span>][<span style="color:#1c01ce">2</span>], <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">int</span> <span style="color:#000">dis</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>) { <span style="color:#a90d91">return</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">abs</span>(<span style="color:#000">x</span> <span style="color:#000">-</span> <span style="color:#000">y</span>); }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">b</span>[<span style="color:#000">a</span>[<span style="color:#000">i</span>]][<span style="color:#1c01ce">0</span>])
</span></span><span style="display:flex;"><span>            <span style="color:#000">b</span>[<span style="color:#000">a</span>[<span style="color:#000">i</span>]][<span style="color:#1c01ce">1</span>] <span style="color:#000">=</span> <span style="color:#000">i</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>            <span style="color:#000">b</span>[<span style="color:#000">a</span>[<span style="color:#000">i</span>]][<span style="color:#1c01ce">0</span>] <span style="color:#000">=</span> <span style="color:#000">i</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">nowa</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">nowb</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">b</span>[<span style="color:#000">i</span>][<span style="color:#1c01ce">0</span>], <span style="color:#000">y</span> <span style="color:#000">=</span> <span style="color:#000">b</span>[<span style="color:#000">i</span>][<span style="color:#1c01ce">1</span>];
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">dis</span>(<span style="color:#000">nowa</span>, <span style="color:#000">x</span>) <span style="color:#000">+</span> <span style="color:#000">dis</span>(<span style="color:#000">nowb</span>, <span style="color:#000">y</span>) <span style="color:#000">&lt;</span> <span style="color:#000">dis</span>(<span style="color:#000">nowa</span>, <span style="color:#000">y</span>) <span style="color:#000">+</span> <span style="color:#000">dis</span>(<span style="color:#000">nowb</span>, <span style="color:#000">x</span>))
</span></span><span style="display:flex;"><span>            <span style="color:#000">ans</span> <span style="color:#000">+=</span> <span style="color:#000">dis</span>(<span style="color:#000">nowa</span>, <span style="color:#000">x</span>) <span style="color:#000">+</span> <span style="color:#000">dis</span>(<span style="color:#000">nowb</span>, <span style="color:#000">y</span>), <span style="color:#000">nowa</span> <span style="color:#000">=</span> <span style="color:#000">x</span>, <span style="color:#000">nowb</span> <span style="color:#000">=</span> <span style="color:#000">y</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>            <span style="color:#000">ans</span> <span style="color:#000">+=</span> <span style="color:#000">dis</span>(<span style="color:#000">nowa</span>, <span style="color:#000">y</span>) <span style="color:#000">+</span> <span style="color:#000">dis</span>(<span style="color:#000">nowb</span>, <span style="color:#000">x</span>), <span style="color:#000">nowa</span> <span style="color:#000">=</span> <span style="color:#000">y</span>, <span style="color:#000">nowb</span> <span style="color:#000">=</span> <span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">ans</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="div2-chttpscodeforcescontest1130problemc"><a href="https://codeforc.es/contest/1130/problem/C">Div2 C</a></h2>
<h3 id="description-2">Description</h3>
<p>有一个 $n\times n$ 的网格，有一些部分是陆地，剩下的是海洋。海洋不能通行。一个人想从一个格子出发到另一个格子。</p>
<p>你可以造至多一个隧道连接两个格子，如果从 $(x_1,y_1)$ 连到 $(x_2,y_2)$，代价是 $(x_1-x_2)^2+(y_1-y_2)^2$。在陆地上行走没有代价。</p>
<p>问最小代价是多少。$n\leq50$。</p>
<h3 id="solution-2">Solution</h3>
<p>因为只能造一个隧道，我们只能在出发点所在陆地和终点所在陆地造一个隧道。</p>
<p>$n$ 这么小，直接最暴力的暴力即可，找到出发地所在联通块所有点和终点所在联通块所有点，直接暴力找最小代价即可。</p>
<p>时间复杂度 $O(n^4)$。</p>
<p>优化其实也可以，我们只求出来每个联通块最外圈的点，这样就是 $O(n^2)$ 的了。</p>
<h3 id="code-2">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cctype&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cerr</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">dx</span>[] <span style="color:#000">=</span> {<span style="color:#1c01ce">1</span>, <span style="color:#000">-</span><span style="color:#1c01ce">1</span>, <span style="color:#1c01ce">0</span>, <span style="color:#1c01ce">0</span>};
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">dy</span>[] <span style="color:#000">=</span> {<span style="color:#1c01ce">0</span>, <span style="color:#1c01ce">0</span>, <span style="color:#000">-</span><span style="color:#1c01ce">1</span>, <span style="color:#1c01ce">1</span>};
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">55</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">struct</span> <span style="color:#3f6e75">point</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#000">y</span>;
</span></span><span style="display:flex;"><span>} <span style="color:#000">s</span>, <span style="color:#000">t</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">char</span> <span style="color:#000">ss</span>[<span style="color:#000">maxn</span>][<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">a</span>[<span style="color:#000">maxn</span>][<span style="color:#000">maxn</span>], <span style="color:#000">vis</span>[<span style="color:#000">maxn</span>][<span style="color:#000">maxn</span>], <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">bool</span> <span style="color:#000">is_in</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>) { <span style="color:#a90d91">return</span> <span style="color:#000">x</span> <span style="color:#000">&gt;=</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">x</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">y</span> <span style="color:#000">&gt;=</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">y</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">dfs</span>(<span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">vector</span><span style="color:#000">&lt;</span><span style="color:#000">point</span><span style="color:#000">&gt;</span> <span style="color:#000">&amp;</span><span style="color:#000">p</span>, <span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">vis</span>[<span style="color:#000">x</span>][<span style="color:#000">y</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">p</span>.<span style="color:#000">push_back</span>({<span style="color:#000">x</span>, <span style="color:#000">y</span>});
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#1c01ce">4</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">nx</span> <span style="color:#000">=</span> <span style="color:#000">x</span> <span style="color:#000">+</span> <span style="color:#000">dx</span>[<span style="color:#000">i</span>], <span style="color:#000">ny</span> <span style="color:#000">=</span> <span style="color:#000">y</span> <span style="color:#000">+</span> <span style="color:#000">dy</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">is_in</span>(<span style="color:#000">nx</span>, <span style="color:#000">ny</span>) <span style="color:#000">&amp;&amp;</span> <span style="color:#000">!</span><span style="color:#000">vis</span>[<span style="color:#000">nx</span>][<span style="color:#000">ny</span>] <span style="color:#000">&amp;&amp;</span> <span style="color:#000">a</span>[<span style="color:#000">nx</span>][<span style="color:#000">ny</span>] <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">dfs</span>(<span style="color:#000">p</span>, <span style="color:#000">nx</span>, <span style="color:#000">ny</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">int</span> <span style="color:#000">pow_2</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>) { <span style="color:#a90d91">return</span> <span style="color:#000">x</span> <span style="color:#000">*</span> <span style="color:#000">x</span>; }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">s</span>.<span style="color:#000">x</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">s</span>.<span style="color:#000">y</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">t</span>.<span style="color:#000">x</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">t</span>.<span style="color:#000">y</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> (<span style="color:#000">ss</span>[<span style="color:#000">i</span>] <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">a</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>] <span style="color:#000">=</span> <span style="color:#000">ss</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>] <span style="color:#000">==</span> <span style="color:#2300ce">&#39;1&#39;</span> <span style="color:#000">?</span> <span style="color:#1c01ce">1</span> <span style="color:#000">:</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">vector</span><span style="color:#000">&lt;</span><span style="color:#000">point</span><span style="color:#000">&gt;</span> <span style="color:#000">p</span>, <span style="color:#000">q</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">dfs</span>(<span style="color:#000">p</span>, <span style="color:#000">s</span>.<span style="color:#000">x</span>, <span style="color:#000">s</span>.<span style="color:#000">y</span>), <span style="color:#000">memset</span>(<span style="color:#000">vis</span>, <span style="color:#1c01ce">0</span>, <span style="color:#a90d91">sizeof</span>(<span style="color:#000">vis</span>)), <span style="color:#000">dfs</span>(<span style="color:#000">q</span>, <span style="color:#000">t</span>.<span style="color:#000">x</span>, <span style="color:#000">t</span>.<span style="color:#000">y</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">30</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">auto</span> <span style="color:#000">k</span> : <span style="color:#000">p</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">auto</span> <span style="color:#000">f</span> : <span style="color:#000">q</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">min</span>(<span style="color:#000">ans</span>, <span style="color:#000">pow_2</span>(<span style="color:#000">k</span>.<span style="color:#000">x</span> <span style="color:#000">-</span> <span style="color:#000">f</span>.<span style="color:#000">x</span>) <span style="color:#000">+</span> <span style="color:#000">pow_2</span>(<span style="color:#000">k</span>.<span style="color:#000">y</span> <span style="color:#000">-</span> <span style="color:#000">f</span>.<span style="color:#000">y</span>));
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">ans</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="ahttpscodeforcescontest1129problema2"><a href="https://codeforc.es/contest/1129/problem/A2">A</a></h2>
<h3 id="description-3">Description</h3>
<p>有 $n$ 个站台和一个玩具火车，第 $i$ 个站台单向连向第 $i+1$ 个站台，特殊地，第 $n$ 个站台连向第 $1$ 个站台。</p>
<p>有 $m$ 个糖果，每个糖果初始在 $a_i$ 站台，要被送到 $b_i$​ 站台。</p>
<p>火车经过一个站台时，可以卸下任意数量糖果，但只能往火车上装一个糖果。</p>
<p>问从每个站台出发，把所有糖果运送到指定位置需要的时间。（经过一条边需要 $1$ 的时间）。</p>
<h3 id="solution-3">Solution</h3>
<p>一个站台里的糖果数决定了要经过这个站台的次数。</p>
<p>显然只有最后一次经过拿的糖果的目的地能影响时间，我们贪心地让这个时间最小。</p>
<p>预处理出从 $1$ 出发把每个车站的糖果的都送完的时间加上 $1$。</p>
<p>输出一个车站的答案后，只需要把这个车站的时间都加上 $n$ 并更新答案即可。</p>
<h3 id="code-3">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cctype&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cerr</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">5100</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">n</span>, <span style="color:#000">m</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">vector</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">all</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">ios</span><span style="color:#000">::</span><span style="color:#000">sync_with_stdio</span>(<span style="color:#a90d91">false</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">m</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">mx</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">x</span>, <span style="color:#000">y</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">x</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">y</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">all</span>[<span style="color:#000">x</span>].<span style="color:#000">push_back</span>(<span style="color:#000">y</span> <span style="color:#000">&lt;</span> <span style="color:#000">x</span> <span style="color:#000">?</span> <span style="color:#000">y</span> <span style="color:#000">+</span> <span style="color:#000">n</span> : <span style="color:#000">y</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">sort</span>(<span style="color:#000">all</span>[<span style="color:#000">i</span>].<span style="color:#000">begin</span>(), <span style="color:#000">all</span>[<span style="color:#000">i</span>].<span style="color:#000">end</span>(), <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">greater</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span><span style="color:#000">&gt;</span>());
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">now</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">auto</span> <span style="color:#000">&amp;</span><span style="color:#000">p</span> : <span style="color:#000">all</span>[<span style="color:#000">i</span>])
</span></span><span style="display:flex;"><span>            <span style="color:#000">p</span> <span style="color:#000">+=</span> <span style="color:#000">now</span>, <span style="color:#000">now</span> <span style="color:#000">+=</span> <span style="color:#000">n</span>, <span style="color:#000">mx</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">max</span>(<span style="color:#000">mx</span>, <span style="color:#000">p</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">mx</span> <span style="color:#000">-</span> <span style="color:#000">i</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">auto</span> <span style="color:#000">&amp;</span><span style="color:#000">p</span> : <span style="color:#000">all</span>[<span style="color:#000">i</span>])
</span></span><span style="display:flex;"><span>            <span style="color:#000">p</span> <span style="color:#000">+=</span> <span style="color:#000">n</span>, <span style="color:#000">mx</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">max</span>(<span style="color:#000">p</span>, <span style="color:#000">mx</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="bhttpscodeforcescontest1129problemb"><a href="https://codeforc.es/contest/1129/problem/B">B</a></h2>
<h3 id="description-4">Description</h3>
<p>给定一个序列 $a$，有 $n$ 个元素，编号从 $0$ 到 $n-1$。求 $\max\limits_{0 \leq l \leq r \leq n-1}(r-l+1)\times\sum\limits_{l\leq i\leq r}a_i$。</p>
<p>有一个错误算法：</p>
<pre tabindex="0"><code>```
function find_answer(n, a)
    # Assumes n is an integer between 1 and 2000, inclusive
    # Assumes a is a list containing n integers: a[0], a[1], ..., a[n-1]
    res = 0
    cur = 0
    k = -1
    for i = 0 to i = n-1
        cur = cur + a[i]
        if cur &lt; 0
            cur = 0
            k = i
        res = max(res, (i-k)*cur)
    return res
```
</code></pre><p>你需要构造一组数据，使这个标准答案减去错误算法得出的答案是 $k$。</p>
<p>$|a_i| \leq 10^6,n \leq 2000$。</p>
<h3 id="solution-4">Solution</h3>
<p>不难发现这个错误做法会在出现负数的时候出错，那么我们先安排一个 $-1$ 进去。</p>
<p>这时候错误做法的答案是 $(\sum a_i+1)(n-1)$，而正确答案是 $n\times\sum a_i$。</p>
<p>那么应该新加进去的数是 $k-\sum a_i+n$（这里的 $\sum a_i,n$ 都是加进去之前的）。</p>
<p>如果这个数比 $10^6$ 大我们就加进去 $10^6$，否则直接加该加的数即可。</p>
<h3 id="code-4">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cctype&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cerr</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">mx</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1e6</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">vector</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">ans</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">k</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">ans</span>.<span style="color:#000">push_back</span>(<span style="color:#000">-</span><span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">sum</span> <span style="color:#000">=</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span>, <span style="color:#000">n</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">k</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> (<span style="color:#000">sum</span> <span style="color:#000">-</span> <span style="color:#000">n</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;</span> <span style="color:#000">k</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">k</span> <span style="color:#000">-</span> <span style="color:#000">sum</span> <span style="color:#000">+</span> <span style="color:#000">n</span> <span style="color:#000">&lt;=</span> <span style="color:#000">mx</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">ans</span>.<span style="color:#000">push_back</span>(<span style="color:#000">k</span> <span style="color:#000">-</span> <span style="color:#000">sum</span> <span style="color:#000">+</span> <span style="color:#000">n</span>), <span style="color:#000">n</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>            <span style="color:#000">n</span><span style="color:#000">++</span>, <span style="color:#000">ans</span>.<span style="color:#000">push_back</span>(<span style="color:#000">mx</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">sum</span> <span style="color:#000">+=</span> <span style="color:#000">ans</span>.<span style="color:#000">back</span>();
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">ans</span>.<span style="color:#000">size</span>() <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">p</span> : <span style="color:#000">ans</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">p</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="chttpscodeforcescontest1129problemc"><a href="https://codeforc.es/contest/1129/problem/C">C</a></h2>
<h3 id="description-5">Description</h3>
<p>在摩尔斯电码（以下简称“摩码”）中，字母表中的一个字母被表示为一个长度为$1\sim4$的 <code>01</code> 串。长度为 $1\sim4$ 的 <code>01</code>串共有 $2^1+2^2+2^3+2^4=30$ 个，而字母只有 $26$ 个，所以有 $4$ 个 <code>01</code> 串不表示任何字母——<code>0011</code>、<code>0101</code>、<code>1110</code>、<code>1111</code>，其他 $26$ 个 <code>01</code> 串表示互不相同的 $26$ 个字母。
你有一个 <code>01</code> 串 $S$，初始为空。现在有 $m$ 次添加，每次往 $S$ 的末尾添加一个字符（<code>0</code> 或 <code>1</code>）。对于每一次添加，你都要回答目前的 $S$ 的所有非空子串用摩码所能表示的字母串的总数。由于答案可能巨大，你只需要输出答案模 $10^9+7$ 的结果。</p>
<p>$m\leq3000$。</p>
<h3 id="solution-5">Solution</h3>
<p>$m$ 很小，我们可以考虑用暴力一点的方法草过去这个题。</p>
<p>可以考虑对每个操作计算其对答案的贡献，那么我们就是要计算后缀对答案的贡献。</p>
<p>发现我们的字母串是本质不相同的，使用 Trie 树就可以维护之前的所有前缀。</p>
<p>进行一个操作时，我们在 Trie 树上的所有叶子节点下面都新开一个点，然后找它的 $4$ 个父亲（即枚举新后缀所在摩尔斯电码的长度），直接把方案数加上去就行。</p>
<p>复杂度 $O(m^2)$。</p>
<h3 id="code-5">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cctype&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cerr</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">3000</span> <span style="color:#000">*</span> <span style="color:#1c01ce">3000</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>, <span style="color:#000">mod</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1e9</span> <span style="color:#000">+</span> <span style="color:#1c01ce">7</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">typedef</span> <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">ll</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">upd</span>(<span style="color:#a90d91">int</span> <span style="color:#000">&amp;</span><span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>) { <span style="color:#000">x</span> <span style="color:#000">+=</span> <span style="color:#000">y</span> <span style="color:#000">%</span> <span style="color:#000">mod</span>, <span style="color:#000">x</span> <span style="color:#000">%=</span> <span style="color:#000">mod</span>; }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">struct</span> <span style="color:#3f6e75">Tree</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">ch</span>[<span style="color:#000">maxn</span>][<span style="color:#1c01ce">2</span>], <span style="color:#000">f</span>[<span style="color:#000">maxn</span>], <span style="color:#000">tot</span>, <span style="color:#000">father</span>[<span style="color:#000">maxn</span>], <span style="color:#000">a</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">void</span> <span style="color:#000">dp</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">p</span> <span style="color:#000">=</span> <span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">s</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#1c01ce">4</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">int</span> <span style="color:#000">fa</span> <span style="color:#000">=</span> <span style="color:#000">father</span>[<span style="color:#000">x</span>];
</span></span><span style="display:flex;"><span>            <span style="color:#177500">//cout &lt;&lt; x &lt;&lt; &#34; &#34; &lt;&lt; fa &lt;&lt; endl;
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>            <span style="color:#a90d91">int</span> <span style="color:#000">now</span> <span style="color:#000">=</span> <span style="color:#000">ch</span>[<span style="color:#000">fa</span>][<span style="color:#1c01ce">1</span>] <span style="color:#000">==</span> <span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">s</span> <span style="color:#000">+=</span> <span style="color:#000">now</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">i</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">fa</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">i</span> <span style="color:#000">==</span> <span style="color:#1c01ce">3</span> <span style="color:#000">&amp;&amp;</span> (<span style="color:#000">s</span> <span style="color:#000">==</span> <span style="color:#1c01ce">3</span> <span style="color:#000">||</span> <span style="color:#000">s</span> <span style="color:#000">==</span> <span style="color:#1c01ce">5</span> <span style="color:#000">||</span> <span style="color:#000">s</span> <span style="color:#000">==</span> <span style="color:#1c01ce">14</span> <span style="color:#000">||</span> <span style="color:#000">s</span> <span style="color:#000">==</span> <span style="color:#1c01ce">15</span>))
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">continue</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">upd</span>(<span style="color:#000">f</span>[<span style="color:#000">p</span>], <span style="color:#000">f</span>[<span style="color:#000">x</span>]);
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">x</span> <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">break</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#000">upd</span>(<span style="color:#000">ans</span>, <span style="color:#000">f</span>[<span style="color:#000">p</span>]);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">void</span> <span style="color:#000">insert</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">pos</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">a</span>[<span style="color:#000">pos</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">pos</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">int</span> <span style="color:#000">p</span> <span style="color:#000">=</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">!</span><span style="color:#000">ch</span>[<span style="color:#000">p</span>][<span style="color:#000">x</span>])
</span></span><span style="display:flex;"><span>                <span style="color:#000">ch</span>[<span style="color:#000">p</span>][<span style="color:#000">x</span>] <span style="color:#000">=</span> <span style="color:#000">++</span><span style="color:#000">tot</span>, <span style="color:#000">father</span>[<span style="color:#000">tot</span>] <span style="color:#000">=</span> <span style="color:#000">p</span>, <span style="color:#000">dp</span>(<span style="color:#000">tot</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#000">a</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">ch</span>[<span style="color:#000">p</span>][<span style="color:#000">x</span>];
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>} <span style="color:#000">t</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">m</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">m</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">t</span>.<span style="color:#000">f</span>[<span style="color:#1c01ce">0</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">t</span>.<span style="color:#000">insert</span>(<span style="color:#000">x</span>, <span style="color:#000">i</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">ans</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="dhttpscodeforcescontest1129problemd"><a href="https://codeforc.es/contest/1129/problem/D">D</a></h2>
<h3 id="description-6">Description</h3>
<p>给出一个长度为 $n$ 的序列，把它划分成若干段，使得每一段中出现过<strong>恰好</strong>一次的元素个数 $\le k$，求方案数对 $998244353$ 取模后的结果。</p>
<h3 id="solution-6">Solution</h3>
<p>不难想到一个  DP：$f(i)$ 表示前 $i$ 位的答案。$f(i) = \sum\limits_{0 \leq j &lt; i \wedge g(j+1, i) \leq k} f(j)$。其中 $g(i,j)$ 表示区间 $[i,j]$ 中出现过恰好一次的元素个数。</p>
<p>直接转移是 $O(n^2)$ 甚至 $O(n^3)$​ 的，想办法优化。</p>
<p>不会，下文包括代码全是抄题解。</p>
<p>因为恰好一次，我们想办法记录一个 $lst_i$​ 数组表示 $i$​ 上一次出现位置。</p>
<p>我们维护 $g_j=g(j+1,i)$</p>
<p>那么新加入 $a_i$​ 时，我们应该把 $[lst_{lst_{a_i}},lst_{a_i}-1)$​ 里的 $g$​​ 减一，把 $[lst_{a_i},i)$ 里的 $g$ 加上 $1$。</p>
<p>问题变成有一个序列，每个元素有一个权值和键值。我们每次将区间键值 $\pm1$，查询序列中键值 $\leq k$​ 的元素权值和。</p>
<p>对这种莫名其妙的维护我们可以尝试分块。</p>
<p>对序列进行分块，对每个块维护一个 $sum(i,j)$ 表示第 $i$ 个块中 $g_p\geq j$ 的 $f_p$ 之和。并维护一个 $all_i$ 表示块内所有 $f_p$​​​ 之和。</p>
<p>$lzy$ 是块上的加法懒标记。</p>
<p>查询直接遍历所有块把答案加进去即可（用 $all_i-sum(i,k-lzy_i+1)$ 就得到这个块的答案了）。</p>
<p>修改怎么办呢？对于整块，我们直接加懒标记。</p>
<p>对于散点，我们如果要把 $g_j$​​ 加上 $1$​​，那么就相当于把 $sum(i,g_j)$​​ 加上 $f_j$，反之同理。</p>
<p>这样查询和修改就是 $O(1)$​ 的。</p>
<p>时间复杂度 $O(nw+\dfrac{n^2}{w})\geq O(n\sqrt n)$。</p>
<h3 id="code-6">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cmath&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cctype&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cerr</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1e5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>, <span style="color:#000">mod</span> <span style="color:#000">=</span> <span style="color:#1c01ce">998244353</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">typedef</span> <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">ll</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">n</span>, <span style="color:#000">k</span>, <span style="color:#000">len</span>, <span style="color:#000">id</span>[<span style="color:#000">maxn</span>], <span style="color:#000">lst</span>[<span style="color:#000">maxn</span>], <span style="color:#000">tot</span>; 
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">f</span>[<span style="color:#000">maxn</span>], <span style="color:#000">sum</span>[<span style="color:#1c01ce">410</span>][<span style="color:#000">maxn</span>], <span style="color:#000">lzy</span>[<span style="color:#000">maxn</span>], <span style="color:#000">bl</span>[<span style="color:#000">maxn</span>], <span style="color:#000">cnt</span>[<span style="color:#000">maxn</span>], <span style="color:#000">br</span>[<span style="color:#000">maxn</span>], <span style="color:#000">all</span>[<span style="color:#000">maxn</span>], <span style="color:#000">a</span>[<span style="color:#000">maxn</span>], <span style="color:#000">llst</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">upd</span>(<span style="color:#a90d91">int</span> <span style="color:#000">&amp;</span><span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>) { <span style="color:#000">x</span> <span style="color:#000">+=</span> (<span style="color:#000">y</span> <span style="color:#000">+</span> <span style="color:#000">mod</span>) <span style="color:#000">%</span> <span style="color:#000">mod</span>, <span style="color:#000">x</span> <span style="color:#000">%=</span> <span style="color:#000">mod</span>; }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">add</span>(<span style="color:#a90d91">int</span> <span style="color:#000">l</span>, <span style="color:#a90d91">int</span> <span style="color:#000">r</span>, <span style="color:#a90d91">int</span> <span style="color:#000">v</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">l</span> <span style="color:#000">&gt;</span> <span style="color:#000">r</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">id</span>[<span style="color:#000">l</span>] <span style="color:#000">==</span> <span style="color:#000">id</span>[<span style="color:#000">r</span>])
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#000">l</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">r</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">v</span> <span style="color:#000">==</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">upd</span>(<span style="color:#000">sum</span>[<span style="color:#000">id</span>[<span style="color:#000">l</span>]][<span style="color:#000">++</span><span style="color:#000">cnt</span>[<span style="color:#000">i</span>]], <span style="color:#000">f</span>[<span style="color:#000">i</span>]);
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>                <span style="color:#000">upd</span>(<span style="color:#000">sum</span>[<span style="color:#000">id</span>[<span style="color:#000">l</span>]][<span style="color:#000">cnt</span>[<span style="color:#000">i</span>]<span style="color:#000">--</span>], <span style="color:#000">-</span><span style="color:#000">f</span>[<span style="color:#000">i</span>]);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#000">l</span>; <span style="color:#000">id</span>[<span style="color:#000">i</span>] <span style="color:#000">==</span> <span style="color:#000">id</span>[<span style="color:#000">l</span>]; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">v</span> <span style="color:#000">==</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">upd</span>(<span style="color:#000">sum</span>[<span style="color:#000">id</span>[<span style="color:#000">l</span>]][<span style="color:#000">++</span><span style="color:#000">cnt</span>[<span style="color:#000">i</span>]], <span style="color:#000">f</span>[<span style="color:#000">i</span>]);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>            <span style="color:#000">upd</span>(<span style="color:#000">sum</span>[<span style="color:#000">id</span>[<span style="color:#000">l</span>]][<span style="color:#000">cnt</span>[<span style="color:#000">i</span>]<span style="color:#000">--</span>], <span style="color:#000">-</span><span style="color:#000">f</span>[<span style="color:#000">i</span>]);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#000">r</span>; <span style="color:#000">id</span>[<span style="color:#000">i</span>] <span style="color:#000">==</span> <span style="color:#000">id</span>[<span style="color:#000">r</span>]; <span style="color:#000">i</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">v</span> <span style="color:#000">==</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">upd</span>(<span style="color:#000">sum</span>[<span style="color:#000">id</span>[<span style="color:#000">r</span>]][<span style="color:#000">++</span><span style="color:#000">cnt</span>[<span style="color:#000">i</span>]], <span style="color:#000">f</span>[<span style="color:#000">i</span>]);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>            <span style="color:#000">upd</span>(<span style="color:#000">sum</span>[<span style="color:#000">id</span>[<span style="color:#000">r</span>]][<span style="color:#000">cnt</span>[<span style="color:#000">i</span>]<span style="color:#000">--</span>], <span style="color:#000">-</span><span style="color:#000">f</span>[<span style="color:#000">i</span>]);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#000">id</span>[<span style="color:#000">l</span>] <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">id</span>[<span style="color:#000">r</span>]; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">lzy</span>[<span style="color:#000">i</span>] <span style="color:#000">+=</span> <span style="color:#000">v</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">work</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">res</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">tot</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">upd</span>(<span style="color:#000">res</span>, <span style="color:#000">all</span>[<span style="color:#000">i</span>]);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">k</span> <span style="color:#000">-</span> <span style="color:#000">lzy</span>[<span style="color:#000">i</span>] <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&gt;=</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">upd</span>(<span style="color:#000">res</span>, <span style="color:#000">-</span><span style="color:#000">sum</span>[<span style="color:#000">i</span>][<span style="color:#000">k</span> <span style="color:#000">-</span> <span style="color:#000">lzy</span>[<span style="color:#000">i</span>] <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>]);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>            <span style="color:#000">upd</span>(<span style="color:#000">res</span>, <span style="color:#000">-</span><span style="color:#000">all</span>[<span style="color:#000">i</span>]);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#000">res</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">ios</span><span style="color:#000">::</span><span style="color:#000">sync_with_stdio</span>(<span style="color:#a90d91">false</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">k</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">f</span>[<span style="color:#1c01ce">0</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">len</span> <span style="color:#000">=</span> <span style="color:#000">sqrt</span>(<span style="color:#000">n</span>), <span style="color:#000">tot</span> <span style="color:#000">=</span> <span style="color:#000">n</span> <span style="color:#000">/</span> <span style="color:#000">len</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">tot</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">bl</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> (<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>) <span style="color:#000">*</span> <span style="color:#000">len</span>, <span style="color:#000">br</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">min</span>(<span style="color:#000">i</span> <span style="color:#000">*</span> <span style="color:#000">len</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">n</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#000">bl</span>[<span style="color:#000">i</span>]; <span style="color:#000">j</span> <span style="color:#000">&lt;=</span> <span style="color:#000">br</span>[<span style="color:#000">i</span>]; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">id</span>[<span style="color:#000">j</span>] <span style="color:#000">=</span> <span style="color:#000">i</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">sum</span>[<span style="color:#1c01ce">1</span>][<span style="color:#1c01ce">0</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">all</span>[<span style="color:#1c01ce">1</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">add</span>(<span style="color:#000">llst</span>[<span style="color:#000">a</span>[<span style="color:#000">i</span>]], <span style="color:#000">lst</span>[<span style="color:#000">a</span>[<span style="color:#000">i</span>]] <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">-</span><span style="color:#1c01ce">1</span>), <span style="color:#000">add</span>(<span style="color:#000">lst</span>[<span style="color:#000">a</span>[<span style="color:#000">i</span>]], <span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>, <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">llst</span>[<span style="color:#000">a</span>[<span style="color:#000">i</span>]] <span style="color:#000">=</span> <span style="color:#000">lst</span>[<span style="color:#000">a</span>[<span style="color:#000">i</span>]], <span style="color:#000">lst</span>[<span style="color:#000">a</span>[<span style="color:#000">i</span>]] <span style="color:#000">=</span> <span style="color:#000">i</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">f</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">work</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#000">upd</span>(<span style="color:#000">sum</span>[<span style="color:#000">id</span>[<span style="color:#000">i</span>]][<span style="color:#1c01ce">0</span>], <span style="color:#000">f</span>[<span style="color:#000">i</span>]), <span style="color:#000">upd</span>(<span style="color:#000">all</span>[<span style="color:#000">id</span>[<span style="color:#000">i</span>]], <span style="color:#000">f</span>[<span style="color:#000">i</span>]);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">f</span>[<span style="color:#000">n</span>] <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="ehttpscodeforcescontest1129probleme"><a href="https://codeforc.es/contest/1129/problem/E">E</a></h2>
<h3 id="description-7">Description</h3>
<p><strong>这是一道交互题</strong>。</p>
<p>有一个 $n$ 个节点的树，你需要通过不超过 $11111$ 次询问得知树的形态。</p>
<p>询问方式为给出两个非空<strong>无交</strong>点集 $S$ ，$T$ 和一个点 $u$，可以得到满足 $s \in S , t \in T$ 且路径 $(s,t)$ 经过 $u$ 点的二元组 $(s,t)$ 的总数。</p>
<p>$n\leq500$。</p>
<h3 id="solution-7">Solution</h3>
<p>没什么头绪，看看我们能通过询问得到什么。</p>
<p>假设我们以 $1$ 为根，每次询问 $(\{1\},\{2,3,&hellip;,n\},i)$ 能得到以 $i$ 为根子树大小。</p>
<p>那么把子树大小按从小到大排序，一个点儿子必定在其左侧，现在我们把问题转化为找儿子了。</p>
<p>设现在还没有确定父亲的点集合为 $S$。</p>
<p>问一次 $(\{1\},S,i)$ 能得到点 $i$ 的儿子个数 $k$，我们接下来二分 $k$ 次，每次找到一个最小的 $p$，使询问 $(\{1\},\{S_1,S_2,&hellip;,S_p\},i)$ 的结果非零。</p>
<p>那么这个 $p$​ 就是一个儿子。我们把它删掉接着二分就找到了所有儿子。</p>
<p>找完之后把点 $i$ 加进集合里就行。</p>
<p>时间复杂度 $O(n^2\log n)$，询问次数大概是 $2n+2n\log_2n$。</p>
<h3 id="code-7">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cctype&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cerr</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">510</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">struct</span> <span style="color:#3f6e75">node</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">id</span>, <span style="color:#000">siz</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">bool</span> <span style="color:#a90d91">operator</span><span style="color:#000">&lt;</span>(<span style="color:#a90d91">const</span> <span style="color:#000">node</span> <span style="color:#000">&amp;</span><span style="color:#000">b</span>) <span style="color:#a90d91">const</span> { <span style="color:#a90d91">return</span> <span style="color:#000">siz</span> <span style="color:#000">&lt;</span> <span style="color:#000">b</span>.<span style="color:#000">siz</span>; }
</span></span><span style="display:flex;"><span>} <span style="color:#000">a</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">father</span>[<span style="color:#000">maxn</span>], <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">get_siz</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">a</span>[<span style="color:#1c01ce">1</span>].<span style="color:#000">id</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">a</span>[<span style="color:#1c01ce">1</span>].<span style="color:#000">siz</span> <span style="color:#000">=</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">n</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">i</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">i</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">siz</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">id</span> <span style="color:#000">=</span> <span style="color:#000">i</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">sort</span>(<span style="color:#000">a</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">a</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">+</span> <span style="color:#000">n</span>);
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">S</span>[<span style="color:#000">maxn</span>], <span style="color:#000">top</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">bool</span> <span style="color:#000">check</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">pos</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">x</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">x</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">a</span>[<span style="color:#000">S</span>[<span style="color:#000">i</span>]].<span style="color:#000">id</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">pos</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">res</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">res</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#000">res</span> <span style="color:#000">&gt;</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">solve</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#177500">//for (int i = 1; i &lt;= n; i++)
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>    <span style="color:#177500">//    cout &lt;&lt; a[i].id &lt;&lt; &#34; &#34; &lt;&lt; a[i].siz &lt;&lt; endl;
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">siz</span> <span style="color:#000">==</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">S</span>[<span style="color:#000">++</span><span style="color:#000">top</span>] <span style="color:#000">=</span> <span style="color:#000">i</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#177500">//cout &lt;&lt; a[i].id &lt;&lt; &#34; &#34; &lt;&lt; a[i].siz &lt;&lt; &#34;!!!\\n&#34;;
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>            <span style="color:#a90d91">int</span> <span style="color:#000">times</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">top</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">top</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">a</span>[<span style="color:#000">S</span>[<span style="color:#000">i</span>]].<span style="color:#000">id</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">id</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">times</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">while</span> (<span style="color:#000">times</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>            {
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">int</span> <span style="color:#000">l</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">r</span> <span style="color:#000">=</span> <span style="color:#000">top</span>, <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">while</span> (<span style="color:#000">l</span> <span style="color:#000">&lt;=</span> <span style="color:#000">r</span>)
</span></span><span style="display:flex;"><span>                {
</span></span><span style="display:flex;"><span>                    <span style="color:#a90d91">int</span> <span style="color:#000">mid</span> <span style="color:#000">=</span> (<span style="color:#000">l</span> <span style="color:#000">+</span> <span style="color:#000">r</span>) <span style="color:#000">/</span> <span style="color:#1c01ce">2</span>;
</span></span><span style="display:flex;"><span>                    <span style="color:#a90d91">if</span> (<span style="color:#000">check</span>(<span style="color:#000">mid</span>, <span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">id</span>))
</span></span><span style="display:flex;"><span>                        <span style="color:#000">r</span> <span style="color:#000">=</span> <span style="color:#000">mid</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#000">mid</span>;
</span></span><span style="display:flex;"><span>                    <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>                        <span style="color:#000">l</span> <span style="color:#000">=</span> <span style="color:#000">mid</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>                }
</span></span><span style="display:flex;"><span>                <span style="color:#000">father</span>[<span style="color:#000">a</span>[<span style="color:#000">S</span>[<span style="color:#000">ans</span>]].<span style="color:#000">id</span>] <span style="color:#000">=</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">id</span>;
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">int</span> <span style="color:#000">flag</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">top</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                {
</span></span><span style="display:flex;"><span>                    <span style="color:#a90d91">if</span> (<span style="color:#000">i</span> <span style="color:#000">==</span> <span style="color:#000">ans</span>)
</span></span><span style="display:flex;"><span>                        <span style="color:#000">flag</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>                    <span style="color:#a90d91">if</span> (<span style="color:#000">flag</span>)
</span></span><span style="display:flex;"><span>                        <span style="color:#000">S</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">S</span>[<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>];
</span></span><span style="display:flex;"><span>                }
</span></span><span style="display:flex;"><span>                <span style="color:#000">top</span><span style="color:#000">--</span>;
</span></span><span style="display:flex;"><span>            }
</span></span><span style="display:flex;"><span>            <span style="color:#000">S</span>[<span style="color:#000">++</span><span style="color:#000">top</span>] <span style="color:#000">=</span> <span style="color:#000">i</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">ios</span><span style="color:#000">::</span><span style="color:#000">sync_with_stdio</span>(<span style="color:#a90d91">false</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">get_siz</span>(), <span style="color:#000">solve</span>();
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34;ANSWER&#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">father</span>[<span style="color:#000">i</span>] <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">i</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div>]]></content:encoded>
    </item>
    
    <item>
      <title>Codeforces Round 345 (Div. 1&amp;2)</title>
      <link>https://luoyisu.github.io/posts/cf-contest650/</link>
      <pubDate>Mon, 20 Dec 2021 16:21:07 +0000</pubDate>
      
      <guid>https://luoyisu.github.io/posts/cf-contest650/</guid>
      <description>&lt;h2 id=&#34;概述&#34;&gt;概述&lt;/h2&gt;
&lt;p&gt;除了 Div2 的两道题，其他题都挺好的，建议做（）&lt;/p&gt;</description>
      <content:encoded><![CDATA[<h2 id="概述">概述</h2>
<p>除了 Div2 的两道题，其他题都挺好的，建议做（）</p>
<h2 id="div2-ahttpscodeforcescomcontest651problema"><a href="https://codeforces.com/contest/651/problem/A">Div2 A</a></h2>
<h3 id="description">Description</h3>
<p>有两个游戏机，当前电量分别为 $a,b$，你每秒可以给游戏机充 $1\%$ 电，另一个游戏机会损失 $2\%$ 电，问两个游戏机能同时工作的最长时间。</p>
<h3 id="solution">Solution</h3>
<p>选择电量较小的充电然后模拟。</p>
<h3 id="code">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cctype&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cerr</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">a</span>, <span style="color:#000">b</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">a</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">b</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">a</span> <span style="color:#000">==</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">b</span> <span style="color:#000">==</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">0</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> (<span style="color:#000">a</span> <span style="color:#000">&gt;</span> <span style="color:#1c01ce">0</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">b</span> <span style="color:#000">&gt;</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">a</span> <span style="color:#000">&gt;=</span> <span style="color:#000">b</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">b</span> <span style="color:#000">+=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">a</span> <span style="color:#000">-=</span> <span style="color:#1c01ce">2</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>            <span style="color:#000">a</span> <span style="color:#000">+=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">b</span> <span style="color:#000">-=</span> <span style="color:#1c01ce">2</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">ans</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">ans</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="div2-bhttpscodeforcescomcontest651problemb"><a href="https://codeforces.com/contest/651/problem/B">Div2 B</a></h2>
<h3 id="description-1">Description</h3>
<p>有 $n$ 幅画，每幅画有一个美丽值 $a_i$，你可以任意排列这些画。当一个人从一幅画走到一幅美丽值更高的画时，他的心情会增加 $1$。</p>
<p>求这个人从 $1$ 到 $n$ 依次经过这些画能得到的最高心情。</p>
<h3 id="solution-1">Solution</h3>
<p>我们贪心地找还没选过的美丽值最小的画，然后再选比它美丽值大的美丽值最小的画。用 <code>multiset</code> 实现。</p>
<h3 id="code-1">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cctype&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;set&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;queue&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cerr</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1e5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">multiset</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">S</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">n</span>, <span style="color:#000">a</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>], <span style="color:#000">S</span>.<span style="color:#000">insert</span>(<span style="color:#000">a</span>[<span style="color:#000">i</span>]);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">cnt</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> (<span style="color:#000">S</span>.<span style="color:#000">size</span>())
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">now</span> <span style="color:#000">=</span> <span style="color:#000">*</span><span style="color:#000">S</span>.<span style="color:#000">begin</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#000">S</span>.<span style="color:#000">erase</span>(<span style="color:#000">S</span>.<span style="color:#000">find</span>(<span style="color:#000">now</span>));
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">auto</span> <span style="color:#000">pos</span> <span style="color:#000">=</span> <span style="color:#000">S</span>.<span style="color:#000">lower_bound</span>(<span style="color:#000">now</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">while</span> (<span style="color:#000">pos</span> <span style="color:#000">!=</span> <span style="color:#000">S</span>.<span style="color:#000">end</span>())
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">cnt</span><span style="color:#000">++</span>, <span style="color:#000">S</span>.<span style="color:#000">erase</span>(<span style="color:#000">pos</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#000">now</span> <span style="color:#000">=</span> <span style="color:#000">*</span><span style="color:#000">pos</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">pos</span> <span style="color:#000">=</span> <span style="color:#000">S</span>.<span style="color:#000">lower_bound</span>(<span style="color:#000">now</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">cnt</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="ahttpscodeforcescomcontest650problema"><a href="https://codeforces.com/contest/650/problem/A">A</a></h2>
<h3 id="description-2">Description</h3>
<p>给出 $n$ 对坐标 $(x_i,y_i)$。求问曼哈顿距离和欧氏距离相等的坐标组 $(i,j)$（$1\leq i&lt;j\leq n$）有多少对？$1\leq n\leq 2\times 10^5,|x_i|,|y_i|\leq 10^9$。</p>
<h3 id="solution-2">Solution</h3>
<p>不难发现两个点满足题目条件当且仅当两个点横坐标相同或纵坐标相同。</p>
<p>容斥一下，答案等于横坐标相同的方案数 + 纵坐标相同的方案数 - 横纵坐标都相同的方案数。</p>
<h3 id="code-2">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cctype&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;utility&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;map&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cerr</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">typedef</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">pair</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span>, <span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">pii</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">map</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span>, <span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">mpx</span>, <span style="color:#000">mpy</span>;
</span></span><span style="display:flex;"><span><span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">map</span><span style="color:#000">&lt;</span><span style="color:#000">pii</span>, <span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">mp</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>, <span style="color:#000">x</span>, <span style="color:#000">y</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">x</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">y</span>, <span style="color:#000">mpx</span>[<span style="color:#000">x</span>]<span style="color:#000">++</span>, <span style="color:#000">mpy</span>[<span style="color:#000">y</span>]<span style="color:#000">++</span>, <span style="color:#000">mp</span>[<span style="color:#000">pii</span>(<span style="color:#000">x</span>, <span style="color:#000">y</span>)]<span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">auto</span> <span style="color:#000">k</span> : <span style="color:#000">mpx</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">ans</span> <span style="color:#000">+=</span> <span style="color:#1c01ce">1ll</span> <span style="color:#000">*</span> <span style="color:#000">k</span>.<span style="color:#000">second</span> <span style="color:#000">*</span> (<span style="color:#000">k</span>.<span style="color:#000">second</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>) <span style="color:#000">/</span> <span style="color:#1c01ce">2</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">auto</span> <span style="color:#000">k</span> : <span style="color:#000">mpy</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">ans</span> <span style="color:#000">+=</span> <span style="color:#1c01ce">1ll</span> <span style="color:#000">*</span> <span style="color:#000">k</span>.<span style="color:#000">second</span> <span style="color:#000">*</span> (<span style="color:#000">k</span>.<span style="color:#000">second</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>) <span style="color:#000">/</span> <span style="color:#1c01ce">2</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">auto</span> <span style="color:#000">k</span> : <span style="color:#000">mp</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">ans</span> <span style="color:#000">-=</span> <span style="color:#1c01ce">1ll</span> <span style="color:#000">*</span> <span style="color:#000">k</span>.<span style="color:#000">second</span> <span style="color:#000">*</span> (<span style="color:#000">k</span>.<span style="color:#000">second</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>) <span style="color:#000">/</span> <span style="color:#1c01ce">2</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">ans</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="bhttpscodeforcescomcontest650problemb"><a href="https://codeforces.com/contest/650/problem/B">B</a></h2>
<h3 id="description-3">Description</h3>
<p>从第一张照片开始看，可以向左翻或者向右翻，第 $1$​​​​​​ 张左边是第 $n$​​​​​ 张，第 $n$​​​​ 张右边是第一张，翻一次要 $a$​​​ 时间，照片有 <code>w</code> 和 <code>h</code> 两种摆放，<code>w</code> 的照片要耗费 $b$​​ 时间翻转，看一张照片要 $1$​ 个单位时间，一共有 $T$​ 个单位时间，问最多可以看多少张照片？</p>
<p>建议看原题面。</p>
<h3 id="solution-3">Solution</h3>
<p>把环变成链，然后双指针就行。</p>
<p>从 $l=2,r=n+1$ 开始移动指针。</p>
<p>判断是否合法就是长度不超过 $n$，且当前区域看照片的时间加上移动的保底时间（$r-l-1$​）和折返的时间。</p>
<p>建议多手玩。。。。</p>
<p>说起来轻巧，但细节真多啊啊啊啊啊。</p>
<h3 id="code-3">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cctype&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cerr</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1e6</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">n</span>, <span style="color:#000">a</span>, <span style="color:#000">b</span>, <span style="color:#000">t</span>, <span style="color:#000">p</span>[<span style="color:#000">maxn</span>], <span style="color:#000">ans</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">char</span> <span style="color:#000">s</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">ios</span><span style="color:#000">::</span><span style="color:#000">sync_with_stdio</span>(<span style="color:#a90d91">false</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">a</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">b</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">t</span> <span style="color:#000">&gt;&gt;</span> (<span style="color:#000">s</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">p</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span> <span style="color:#000">+</span> (<span style="color:#000">s</span>[<span style="color:#000">i</span>] <span style="color:#000">==</span> <span style="color:#2300ce">&#39;w&#39;</span> <span style="color:#000">?</span> <span style="color:#000">b</span> : <span style="color:#1c01ce">0</span>), <span style="color:#000">p</span>[<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#000">n</span>] <span style="color:#000">=</span> <span style="color:#000">p</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">l</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2</span>, <span style="color:#000">r</span> <span style="color:#000">=</span> <span style="color:#000">n</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">sum</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span> <span style="color:#000">+</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">sum</span> <span style="color:#000">+=</span> <span style="color:#000">p</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#177500">//for (int i = 1; i &lt;= 2 * n; i++)
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>    <span style="color:#177500">//    cout &lt;&lt; p[i] &lt;&lt; endl;
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>    <span style="color:#a90d91">while</span> (<span style="color:#000">l</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">r</span> <span style="color:#000">&lt;=</span> <span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">n</span>) 
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">sum</span> <span style="color:#000">+=</span> <span style="color:#000">p</span>[<span style="color:#000">r</span>], <span style="color:#000">r</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">while</span> (<span style="color:#000">r</span> <span style="color:#000">-</span> <span style="color:#000">l</span> <span style="color:#000">&gt;</span> <span style="color:#000">n</span> <span style="color:#000">||</span> <span style="color:#000">sum</span> <span style="color:#000">+</span> <span style="color:#000">a</span> <span style="color:#000">*</span> (<span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">min</span>(<span style="color:#000">r</span> <span style="color:#000">-</span> <span style="color:#000">n</span> <span style="color:#000">-</span> <span style="color:#1c01ce">2</span>, <span style="color:#000">n</span> <span style="color:#000">-</span> <span style="color:#000">l</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>) <span style="color:#000">+</span> <span style="color:#000">r</span> <span style="color:#000">-</span> <span style="color:#000">l</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>) <span style="color:#000">&gt;</span> <span style="color:#000">t</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">sum</span> <span style="color:#000">-=</span> <span style="color:#000">p</span>[<span style="color:#000">l</span>], <span style="color:#000">l</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">max</span>(<span style="color:#000">ans</span>, <span style="color:#000">r</span> <span style="color:#000">-</span> <span style="color:#000">l</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#177500">//cout &lt;&lt; l &lt;&lt; &#34; &#34; &lt;&lt; r &lt;&lt; &#34; &#34; &lt;&lt; sum &lt;&lt; endl;
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">ans</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="chttpscodeforcescomcontest650problemc"><a href="https://codeforces.com/contest/650/problem/C">C</a></h2>
<h3 id="description-4">Description</h3>
<p>给定一 $N\times M$​ 的表格 $a$，让你对其进行压缩，使得：</p>
<ul>
<li>每一行与每一列相对大小不变，即若 $a_{i,j}&lt;a_{i,k}$​，则压缩后的 $a_{i,j}&lt;a_{i,k}$​，对于小于及等于的情况和同列不同行的情况同理。</li>
<li>压缩后表格中的最大值尽量小。</li>
</ul>
<p>输出压缩后的表格。</p>
<p>$1\leq n,m$ 且 $nm\leq10^6$，$a_{i,j}\leq10^9$​。</p>
<h3 id="solution-4">Solution</h3>
<p>发现题目唯一限制就是大小关系，很容易想到差分约束，我们对每一行和每一列，从小的连向大的，最后求一下最长路。</p>
<p>对于相同的数，我们用一个并查集缩成一个点。</p>
<p>能发现这个图是一个 DAG，我们直接 BFS 求最长路就行。</p>
<p>可以建一个超级源点。</p>
<h3 id="code-4">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;queue&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cctype&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cerr</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1e6</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">n</span>, <span style="color:#000">m</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">int</span> <span style="color:#000">id</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>) { <span style="color:#a90d91">return</span> (<span style="color:#000">x</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>) <span style="color:#000">*</span> <span style="color:#000">m</span> <span style="color:#000">+</span> <span style="color:#000">y</span>; }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">struct</span> <span style="color:#3f6e75">node</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">id</span>, <span style="color:#000">val</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">bool</span> <span style="color:#a90d91">operator</span><span style="color:#000">&lt;</span>(<span style="color:#a90d91">const</span> <span style="color:#000">node</span> <span style="color:#000">&amp;</span><span style="color:#000">b</span>) <span style="color:#a90d91">const</span> { <span style="color:#a90d91">return</span> <span style="color:#000">val</span> <span style="color:#000">&lt;</span> <span style="color:#000">b</span>.<span style="color:#000">val</span>; }
</span></span><span style="display:flex;"><span>};
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">vector</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">e</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">vector</span><span style="color:#000">&lt;</span><span style="color:#000">node</span><span style="color:#000">&gt;</span> <span style="color:#000">line</span>[<span style="color:#000">maxn</span>], <span style="color:#000">row</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">add</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>) { <span style="color:#000">e</span>[<span style="color:#000">x</span>].<span style="color:#000">push_back</span>(<span style="color:#000">y</span>); }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">father</span>[<span style="color:#000">maxn</span>], <span style="color:#000">rd</span>[<span style="color:#000">maxn</span>], <span style="color:#000">f</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">find</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>) { <span style="color:#a90d91">return</span> <span style="color:#000">x</span> <span style="color:#000">==</span> <span style="color:#000">father</span>[<span style="color:#000">x</span>] <span style="color:#000">?</span> <span style="color:#000">x</span> : <span style="color:#000">father</span>[<span style="color:#000">x</span>] <span style="color:#000">=</span> <span style="color:#000">find</span>(<span style="color:#000">father</span>[<span style="color:#000">x</span>]); }
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">uni</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>) { <span style="color:#000">father</span>[<span style="color:#000">find</span>(<span style="color:#000">x</span>)] <span style="color:#000">=</span> <span style="color:#000">find</span>(<span style="color:#000">y</span>); }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">ios</span><span style="color:#000">::</span><span style="color:#000">sync_with_stdio</span>(<span style="color:#a90d91">false</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">m</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">x</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">father</span>[<span style="color:#000">id</span>(<span style="color:#000">i</span>, <span style="color:#000">j</span>)] <span style="color:#000">=</span> <span style="color:#000">id</span>(<span style="color:#000">i</span>, <span style="color:#000">j</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#000">line</span>[<span style="color:#000">i</span>].<span style="color:#000">push_back</span>({<span style="color:#000">id</span>(<span style="color:#000">i</span>, <span style="color:#000">j</span>), <span style="color:#000">x</span>});
</span></span><span style="display:flex;"><span>            <span style="color:#000">row</span>[<span style="color:#000">j</span>].<span style="color:#000">push_back</span>({<span style="color:#000">id</span>(<span style="color:#000">i</span>, <span style="color:#000">j</span>), <span style="color:#000">x</span>});
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">sort</span>(<span style="color:#000">line</span>[<span style="color:#000">i</span>].<span style="color:#000">begin</span>(), <span style="color:#000">line</span>[<span style="color:#000">i</span>].<span style="color:#000">end</span>());
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;</span> <span style="color:#000">m</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">line</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>].<span style="color:#000">val</span> <span style="color:#000">==</span> <span style="color:#000">line</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>].<span style="color:#000">val</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">uni</span>(<span style="color:#000">line</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>].<span style="color:#000">id</span>, <span style="color:#000">line</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>].<span style="color:#000">id</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">sort</span>(<span style="color:#000">row</span>[<span style="color:#000">i</span>].<span style="color:#000">begin</span>(), <span style="color:#000">row</span>[<span style="color:#000">i</span>].<span style="color:#000">end</span>());
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;</span> <span style="color:#000">n</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">row</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>].<span style="color:#000">val</span> <span style="color:#000">==</span> <span style="color:#000">row</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>].<span style="color:#000">val</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">uni</span>(<span style="color:#000">row</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>].<span style="color:#000">id</span>, <span style="color:#000">row</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>].<span style="color:#000">id</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span> <span style="color:#000">*</span> <span style="color:#000">m</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">find</span>(<span style="color:#000">i</span>) <span style="color:#000">==</span> <span style="color:#000">i</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">add</span>(<span style="color:#1c01ce">0</span>, <span style="color:#000">i</span>), <span style="color:#000">rd</span>[<span style="color:#000">i</span>]<span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;</span> <span style="color:#000">m</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">line</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>].<span style="color:#000">val</span> <span style="color:#000">!=</span> <span style="color:#000">line</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>].<span style="color:#000">val</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">add</span>(<span style="color:#000">find</span>(<span style="color:#000">line</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>].<span style="color:#000">id</span>), <span style="color:#000">find</span>(<span style="color:#000">line</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>].<span style="color:#000">id</span>)), <span style="color:#000">rd</span>[<span style="color:#000">find</span>(<span style="color:#000">line</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>].<span style="color:#000">id</span>)]<span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;</span> <span style="color:#000">n</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">row</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>].<span style="color:#000">val</span> <span style="color:#000">!=</span> <span style="color:#000">row</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>].<span style="color:#000">val</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">add</span>(<span style="color:#000">find</span>(<span style="color:#000">row</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>].<span style="color:#000">id</span>), <span style="color:#000">find</span>(<span style="color:#000">row</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>].<span style="color:#000">id</span>)), <span style="color:#000">rd</span>[<span style="color:#000">find</span>(<span style="color:#000">row</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>].<span style="color:#000">id</span>)]<span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">queue</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">q</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">q</span>.<span style="color:#000">push</span>(<span style="color:#1c01ce">0</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> (<span style="color:#000">!</span><span style="color:#000">q</span>.<span style="color:#000">empty</span>())
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">now</span> <span style="color:#000">=</span> <span style="color:#000">q</span>.<span style="color:#000">front</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#000">q</span>.<span style="color:#000">pop</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">v</span> : <span style="color:#000">e</span>[<span style="color:#000">now</span>])
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">f</span>[<span style="color:#000">v</span>] <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">max</span>(<span style="color:#000">f</span>[<span style="color:#000">v</span>], <span style="color:#000">f</span>[<span style="color:#000">now</span>] <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#000">rd</span>[<span style="color:#000">v</span>]<span style="color:#000">--</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">rd</span>[<span style="color:#000">v</span>] <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">q</span>.<span style="color:#000">push</span>(<span style="color:#000">v</span>);
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>, <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">f</span>[<span style="color:#000">find</span>(<span style="color:#000">id</span>(<span style="color:#000">i</span>, <span style="color:#000">j</span>))] <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="dhttpscodeforcescomcontest650problemd"><a href="https://codeforces.com/contest/650/problem/D">D</a></h2>
<h3 id="description-5">Description</h3>
<p>给定一个长度为 $n$ 的序列以及 $m$ 个操作，每个操作形如 $a_i~b_i$，表示将序列中第 $a_i$ 个数改为 $b_i$。</p>
<p>对于每个操作，求出序列的最长严格上升子序列长度。</p>
<p>注意：每个操作之间彼此独立。（即每次操作未进行时的序列是输入时的原序列，而不是上一次操作后得到的序列）</p>
<p>$1\leq n,m\leq4\times10^5$</p>
<h3 id="solution-5">Solution</h3>
<p>下文称“最长严格上升子序列”为 LIS。</p>
<p>询问每次独立。求出原序列的答案之后，可以发现，每次修改之后 LIS 的变化只有以下三种：</p>
<ol>
<li>修改之后就没法选了，LIS 长度减小 $1$，这时原 LIS 必定包括这个数；</li>
<li>原来 LIS 不包括这个数，改完之后就能包括了，LIS 长度增加 $1$​；</li>
<li>其他，LIS 不变。</li>
</ol>
<p>问题转化为修改一个数之后怎么快速求出包含这个数的 LIS 长度。</p>
<p>设 $f_i$ 为以 $i$ 结尾的 LIS 长度，$g_i$ 表示以 $i$ 开头的 LIS 长度。</p>
<p>首先求原序列，这个离散化之后用树状数组直接正着求 $f$​，倒着求 $g$​ 就可以。</p>
<p>原序列的答案就是 $ans=\max\{f_i+g_i-1\}$​。</p>
<p>设把一个数 $i$ 修改后新的 $f_i,g_i$ 为 $f_i&rsquo;,g_i&rsquo;$ 。我们可以把以上的三种情况合并成 $2$​ 种：</p>
<ul>
<li>原 LIS 包括这个数，新答案为 $\max(ans-1,f_i&rsquo;+g_i&rsquo;-1)$。</li>
<li>不包括，新答案为 $\max(ans,f_i&rsquo;+g_i&rsquo;-1)$​。</li>
</ul>
<p>所有询问的 $f_i&rsquo;,g_i&rsquo;$​​ 可以离线之后用一样的方法求出来。（想在线可以用主席树）</p>
<p>现在只剩一个问题了，怎么判断一个数是否在 LIS 中？</p>
<p>我们对 $f_i+g_i-1=ans$ 的 $f_i$ 都存起来，如果唯一就说明一定选了这个数。</p>
<h3 id="code-5">Code</h3>
<p>有点重工业。重复的事情干很多次。</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cctype&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cerr</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">8e5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">n</span>, <span style="color:#000">m</span>, <span style="color:#000">tot</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">pool</span>[<span style="color:#000">maxn</span>], <span style="color:#000">a</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">f</span>[<span style="color:#000">maxn</span>], <span style="color:#000">g</span>[<span style="color:#000">maxn</span>], <span style="color:#000">cnt</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">struct</span> <span style="color:#3f6e75">Q</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">id</span>, <span style="color:#000">val</span>, <span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">f</span>, <span style="color:#000">g</span>, <span style="color:#000">ans</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">bool</span> <span style="color:#a90d91">operator</span><span style="color:#000">&lt;</span>(<span style="color:#a90d91">const</span> <span style="color:#000">Q</span> <span style="color:#000">&amp;</span><span style="color:#000">b</span>) <span style="color:#a90d91">const</span> { <span style="color:#a90d91">return</span> <span style="color:#000">x</span> <span style="color:#000">==</span> <span style="color:#000">b</span>.<span style="color:#000">x</span> <span style="color:#000">?</span> <span style="color:#000">val</span> <span style="color:#000">&lt;</span> <span style="color:#000">b</span>.<span style="color:#000">val</span> : <span style="color:#000">x</span> <span style="color:#000">&lt;</span> <span style="color:#000">b</span>.<span style="color:#000">x</span>; }
</span></span><span style="display:flex;"><span>} <span style="color:#000">q</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">bool</span> <span style="color:#000">cmpid</span>(<span style="color:#a90d91">const</span> <span style="color:#000">Q</span> <span style="color:#000">&amp;</span><span style="color:#000">a</span>, <span style="color:#a90d91">const</span> <span style="color:#000">Q</span> <span style="color:#000">&amp;</span><span style="color:#000">b</span>) { <span style="color:#a90d91">return</span> <span style="color:#000">a</span>.<span style="color:#000">id</span> <span style="color:#000">&lt;</span> <span style="color:#000">b</span>.<span style="color:#000">id</span>; }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">int</span> <span style="color:#000">lowbit</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>) { <span style="color:#a90d91">return</span> <span style="color:#000">x</span> <span style="color:#000">&amp;</span> <span style="color:#000">-</span><span style="color:#000">x</span>; }
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">t</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">modify</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">v</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (; <span style="color:#000">x</span> <span style="color:#000">&lt;=</span> <span style="color:#000">tot</span>; <span style="color:#000">x</span> <span style="color:#000">+=</span> <span style="color:#000">lowbit</span>(<span style="color:#000">x</span>))
</span></span><span style="display:flex;"><span>        <span style="color:#000">t</span>[<span style="color:#000">x</span>] <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">max</span>(<span style="color:#000">t</span>[<span style="color:#000">x</span>], <span style="color:#000">v</span>);
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">query</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">res</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (; <span style="color:#000">x</span>; <span style="color:#000">x</span> <span style="color:#000">-=</span> <span style="color:#000">lowbit</span>(<span style="color:#000">x</span>))
</span></span><span style="display:flex;"><span>        <span style="color:#000">res</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">max</span>(<span style="color:#000">res</span>, <span style="color:#000">t</span>[<span style="color:#000">x</span>]);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#000">res</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">init</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">ios</span><span style="color:#000">::</span><span style="color:#000">sync_with_stdio</span>(<span style="color:#a90d91">false</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">m</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>], <span style="color:#000">pool</span>[<span style="color:#000">++</span><span style="color:#000">tot</span>] <span style="color:#000">=</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">q</span>[<span style="color:#000">i</span>].<span style="color:#000">x</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">q</span>[<span style="color:#000">i</span>].<span style="color:#000">val</span>, <span style="color:#000">q</span>[<span style="color:#000">i</span>].<span style="color:#000">id</span> <span style="color:#000">=</span> <span style="color:#000">i</span>, <span style="color:#000">pool</span>[<span style="color:#000">++</span><span style="color:#000">tot</span>] <span style="color:#000">=</span> <span style="color:#000">q</span>[<span style="color:#000">i</span>].<span style="color:#000">val</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">sort</span>(<span style="color:#000">pool</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">pool</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">+</span> <span style="color:#000">tot</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">tot</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">unique</span>(<span style="color:#000">pool</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">pool</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">+</span> <span style="color:#000">tot</span>) <span style="color:#000">-</span> <span style="color:#000">pool</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">a</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">lower_bound</span>(<span style="color:#000">pool</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">pool</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">+</span> <span style="color:#000">tot</span>, <span style="color:#000">a</span>[<span style="color:#000">i</span>]) <span style="color:#000">-</span> <span style="color:#000">pool</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">q</span>[<span style="color:#000">i</span>].<span style="color:#000">val</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">lower_bound</span>(<span style="color:#000">pool</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">pool</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">+</span> <span style="color:#000">tot</span>, <span style="color:#000">q</span>[<span style="color:#000">i</span>].<span style="color:#000">val</span>) <span style="color:#000">-</span> <span style="color:#000">pool</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">f</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">query</span>(<span style="color:#000">a</span>[<span style="color:#000">i</span>] <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>) <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">modify</span>(<span style="color:#000">a</span>[<span style="color:#000">i</span>], <span style="color:#000">f</span>[<span style="color:#000">i</span>]);
</span></span><span style="display:flex;"><span>    <span style="color:#000">memset</span>(<span style="color:#000">t</span>, <span style="color:#1c01ce">0</span>, <span style="color:#a90d91">sizeof</span>(<span style="color:#000">t</span>));
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span> <span style="color:#000">&gt;=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">g</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">query</span>(<span style="color:#000">tot</span> <span style="color:#000">-</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>]) <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">modify</span>(<span style="color:#000">tot</span> <span style="color:#000">-</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>] <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">g</span>[<span style="color:#000">i</span>]);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">max</span>(<span style="color:#000">ans</span>, <span style="color:#000">f</span>[<span style="color:#000">i</span>] <span style="color:#000">+</span> <span style="color:#000">g</span>[<span style="color:#000">i</span>] <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">f</span>[<span style="color:#000">i</span>] <span style="color:#000">+</span> <span style="color:#000">g</span>[<span style="color:#000">i</span>] <span style="color:#000">-</span> <span style="color:#1c01ce">1</span> <span style="color:#000">==</span> <span style="color:#000">ans</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">cnt</span>[<span style="color:#000">f</span>[<span style="color:#000">i</span>]]<span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>} 
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">init</span>();
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">sort</span>(<span style="color:#000">q</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">q</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">+</span> <span style="color:#000">m</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">now</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">memset</span>(<span style="color:#000">t</span>, <span style="color:#1c01ce">0</span>, <span style="color:#a90d91">sizeof</span>(<span style="color:#000">t</span>));
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">while</span> (<span style="color:#000">now</span> <span style="color:#000">&lt;</span> <span style="color:#000">q</span>[<span style="color:#000">i</span>].<span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">modify</span>(<span style="color:#000">a</span>[<span style="color:#000">now</span>], <span style="color:#000">f</span>[<span style="color:#000">now</span>]), <span style="color:#000">now</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">q</span>[<span style="color:#000">i</span>].<span style="color:#000">f</span> <span style="color:#000">=</span> <span style="color:#000">query</span>(<span style="color:#000">q</span>[<span style="color:#000">i</span>].<span style="color:#000">val</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>) <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">now</span> <span style="color:#000">=</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">memset</span>(<span style="color:#000">t</span>, <span style="color:#1c01ce">0</span>, <span style="color:#a90d91">sizeof</span>(<span style="color:#000">t</span>));
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#000">m</span>; <span style="color:#000">i</span> <span style="color:#000">&gt;=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">while</span> (<span style="color:#000">now</span> <span style="color:#000">&gt;</span> <span style="color:#000">q</span>[<span style="color:#000">i</span>].<span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">modify</span>(<span style="color:#000">tot</span> <span style="color:#000">-</span> <span style="color:#000">a</span>[<span style="color:#000">now</span>] <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">g</span>[<span style="color:#000">now</span>]), <span style="color:#000">now</span><span style="color:#000">--</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">q</span>[<span style="color:#000">i</span>].<span style="color:#000">g</span> <span style="color:#000">=</span> <span style="color:#000">query</span>(<span style="color:#000">tot</span> <span style="color:#000">-</span> <span style="color:#000">q</span>[<span style="color:#000">i</span>].<span style="color:#000">val</span>) <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#177500">//for (int i = 1; i &lt;= m; i++)
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>     <span style="color:#177500">//   cout &lt;&lt; q[i].x &lt;&lt; &#34; &#34; &lt;&lt; q[i].val &lt;&lt; &#34; &#34; &lt;&lt; q[i].f &lt;&lt; &#34; &#34; &lt;&lt; q[i].g &lt;&lt; endl;
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">f</span>[<span style="color:#000">q</span>[<span style="color:#000">i</span>].<span style="color:#000">x</span>] <span style="color:#000">+</span> <span style="color:#000">g</span>[<span style="color:#000">q</span>[<span style="color:#000">i</span>].<span style="color:#000">x</span>] <span style="color:#000">-</span> <span style="color:#1c01ce">1</span> <span style="color:#000">==</span> <span style="color:#000">ans</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">cnt</span>[<span style="color:#000">f</span>[<span style="color:#000">q</span>[<span style="color:#000">i</span>].<span style="color:#000">x</span>]] <span style="color:#000">==</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">q</span>[<span style="color:#000">i</span>].<span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">max</span>(<span style="color:#000">ans</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">q</span>[<span style="color:#000">i</span>].<span style="color:#000">f</span> <span style="color:#000">+</span> <span style="color:#000">q</span>[<span style="color:#000">i</span>].<span style="color:#000">g</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>            <span style="color:#000">q</span>[<span style="color:#000">i</span>].<span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">max</span>(<span style="color:#000">ans</span>, <span style="color:#000">q</span>[<span style="color:#000">i</span>].<span style="color:#000">f</span> <span style="color:#000">+</span> <span style="color:#000">q</span>[<span style="color:#000">i</span>].<span style="color:#000">g</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">sort</span>(<span style="color:#000">q</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">q</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">+</span> <span style="color:#000">m</span>, <span style="color:#000">cmpid</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">q</span>[<span style="color:#000">i</span>].<span style="color:#000">ans</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="ehttpscodeforcescomcontest650probleme"><a href="https://codeforces.com/contest/650/problem/E">E</a></h2>
<h3 id="description-6">Description</h3>
<p>给出两棵 $n$ 个节点的树，每次操作可以把第一棵树的一条边删掉然后连两个点，且必须满足每次操作完之后仍是一棵树。</p>
<p>问最少需要多少步操作才能把第一棵树变成第二棵树（是完全相同，并不是同构），并输出方案。</p>
<p>$n \leq 5\times 10^5$。</p>
<h3 id="solution-6">Solution</h3>
<p>同为 $3000+$ 分，这个题比前几天抄的一个 <a href="https://luoyisu.github.io/CF-contest1190/">重工业数学题CF1190F</a> 小清新多了。</p>
<p>显然原来就相同的边不会被删掉，这样就得到了答案的下界。</p>
<p>我们尝试构造一组达到下界的解。</p>
<p>先 DFS 两棵树。</p>
<p>用并查集把这些不用修改的边缩成一个点，每个集合代表元素就是这个集合在新树中深度最小的点。</p>
<p>然后从原树从底向上进行操作，找到不在同一个集合的两个点，断开原来的边，连上深度大的点在新树的父亲。</p>
<p>因为我们是从下到上操作，相当于每次操作时都是断开原树中叶子和它父亲的边，就能保证操作是合法的。</p>
<h3 id="code-6">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;set&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;utility&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;queue&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cctype&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cerr</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">5e5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">typedef</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">pair</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span>, <span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">pii</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">struct</span> <span style="color:#3f6e75">Graph</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">vector</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">e</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">add</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>) { <span style="color:#000">e</span>[<span style="color:#000">x</span>].<span style="color:#000">push_back</span>(<span style="color:#000">y</span>), <span style="color:#000">e</span>[<span style="color:#000">y</span>].<span style="color:#000">push_back</span>(<span style="color:#000">x</span>); }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">father</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">void</span> <span style="color:#000">dfs</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">fa</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">father</span>[<span style="color:#000">x</span>] <span style="color:#000">=</span> <span style="color:#000">fa</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">v</span> : <span style="color:#000">e</span>[<span style="color:#000">x</span>])
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">v</span> <span style="color:#000">!=</span> <span style="color:#000">fa</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">dfs</span>(<span style="color:#000">v</span>, <span style="color:#000">x</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">h</span>[<span style="color:#000">maxn</span>], <span style="color:#000">tot</span>, <span style="color:#000">vis</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">void</span> <span style="color:#000">bfs</span>()
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">queue</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">q</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">q</span>.<span style="color:#000">push</span>(<span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">h</span>[<span style="color:#000">++</span><span style="color:#000">tot</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">while</span> (<span style="color:#000">!</span><span style="color:#000">q</span>.<span style="color:#000">empty</span>())
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">int</span> <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">q</span>.<span style="color:#000">front</span>();
</span></span><span style="display:flex;"><span>            <span style="color:#000">vis</span>[<span style="color:#000">x</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">h</span>[<span style="color:#000">++</span><span style="color:#000">tot</span>] <span style="color:#000">=</span> <span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">q</span>.<span style="color:#000">pop</span>();
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">v</span> : <span style="color:#000">e</span>[<span style="color:#000">x</span>])
</span></span><span style="display:flex;"><span>               <span style="color:#a90d91">if</span> (<span style="color:#000">!</span><span style="color:#000">vis</span>[<span style="color:#000">v</span>])
</span></span><span style="display:flex;"><span>                   <span style="color:#000">q</span>.<span style="color:#000">push</span>(<span style="color:#000">v</span>);
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>} <span style="color:#000">g1</span>, <span style="color:#000">g2</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">father</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">find</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>) { <span style="color:#a90d91">return</span> <span style="color:#000">x</span> <span style="color:#000">==</span> <span style="color:#000">father</span>[<span style="color:#000">x</span>] <span style="color:#000">?</span> <span style="color:#000">x</span> : <span style="color:#000">father</span>[<span style="color:#000">x</span>] <span style="color:#000">=</span> <span style="color:#000">find</span>(<span style="color:#000">father</span>[<span style="color:#000">x</span>]); }
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">uni</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>) { <span style="color:#000">father</span>[<span style="color:#000">find</span>(<span style="color:#000">x</span>)] <span style="color:#000">=</span> <span style="color:#000">find</span>(<span style="color:#000">y</span>); }
</span></span><span style="display:flex;"><span><span style="color:#a90d91">bool</span> <span style="color:#000">ask</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>) { <span style="color:#a90d91">return</span> <span style="color:#000">find</span>(<span style="color:#000">x</span>) <span style="color:#000">==</span> <span style="color:#000">find</span>(<span style="color:#000">y</span>); }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">solve</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">fa</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">v</span> : <span style="color:#000">g1</span>.<span style="color:#000">e</span>[<span style="color:#000">x</span>])
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">v</span> <span style="color:#000">==</span> <span style="color:#000">fa</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">continue</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">solve</span>(<span style="color:#000">v</span>, <span style="color:#000">x</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">!</span><span style="color:#000">ask</span>(<span style="color:#000">v</span>, <span style="color:#000">x</span>))
</span></span><span style="display:flex;"><span>            <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">v</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">x</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">find</span>(<span style="color:#000">v</span>) <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">g2</span>.<span style="color:#000">father</span>[<span style="color:#000">find</span>(<span style="color:#000">v</span>)] <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">ios</span><span style="color:#000">::</span><span style="color:#000">sync_with_stdio</span>(<span style="color:#a90d91">false</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">x</span>, <span style="color:#000">y</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">x</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">y</span>, <span style="color:#000">g1</span>.<span style="color:#000">add</span>(<span style="color:#000">x</span>, <span style="color:#000">y</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">x</span>, <span style="color:#000">y</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">x</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">y</span>, <span style="color:#000">g2</span>.<span style="color:#000">add</span>(<span style="color:#000">x</span>, <span style="color:#000">y</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">g1</span>.<span style="color:#000">dfs</span>(<span style="color:#1c01ce">1</span>, <span style="color:#1c01ce">0</span>), <span style="color:#000">g2</span>.<span style="color:#000">dfs</span>(<span style="color:#1c01ce">1</span>, <span style="color:#1c01ce">0</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">father</span>[<span style="color:#1c01ce">1</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#000">n</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">f</span> <span style="color:#000">=</span> <span style="color:#000">g2</span>.<span style="color:#000">father</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">g1</span>.<span style="color:#000">father</span>[<span style="color:#000">i</span>] <span style="color:#000">==</span> <span style="color:#000">f</span> <span style="color:#000">||</span> <span style="color:#000">g1</span>.<span style="color:#000">father</span>[<span style="color:#000">f</span>] <span style="color:#000">==</span> <span style="color:#000">i</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">father</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">f</span>, <span style="color:#000">ans</span><span style="color:#000">--</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>            <span style="color:#000">father</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">i</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">ans</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">solve</span>(<span style="color:#1c01ce">1</span>, <span style="color:#1c01ce">0</span>);
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div>]]></content:encoded>
    </item>
    
    <item>
      <title>Codeforces Round 525 (Div. 2)</title>
      <link>https://luoyisu.github.io/posts/cf-contest1088/</link>
      <pubDate>Fri, 17 Dec 2021 16:02:24 +0000</pubDate>
      
      <guid>https://luoyisu.github.io/posts/cf-contest1088/</guid>
      <description>&lt;p&gt;还可以。&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>还可以。</p>
<h2 id="ahttpscodeforcescontest1088problema"><a href="https://codeforc.es/contest/1088/problem/A">A</a></h2>
<h3 id="description">Description</h3>
<p>有一个整数 $x$，找到一对满足以下条件的两个正整数 $a,b$：</p>
<ul>
<li>
<p>$1\leq a,b\leq x$；</p>
</li>
<li>
<p>$a$ 能被 $b$ 整除；</p>
</li>
<li>
<p>$ab&gt;x$；</p>
</li>
<li>
<p>$\dfrac{a}{b}&lt;x$。</p>
</li>
</ul>
<p>$x\leq100$。</p>
<h3 id="solution">Solution</h3>
<p>$x$ 很小，直接枚举 $a,b$。</p>
<h3 id="code">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">a</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">a</span> <span style="color:#000">&lt;=</span> <span style="color:#000">x</span>; <span style="color:#000">a</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">b</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">b</span> <span style="color:#000">&lt;=</span> <span style="color:#000">x</span>; <span style="color:#000">b</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">a</span> <span style="color:#000">%</span> <span style="color:#000">b</span> <span style="color:#000">==</span> <span style="color:#1c01ce">0</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">a</span> <span style="color:#000">*</span> <span style="color:#000">b</span> <span style="color:#000">&gt;</span> <span style="color:#000">x</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#1c01ce">1.0</span> <span style="color:#000">*</span> <span style="color:#000">a</span> <span style="color:#000">/</span> <span style="color:#000">b</span> <span style="color:#000">&lt;</span> <span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>            {
</span></span><span style="display:flex;"><span>                <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">a</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">b</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">return</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>            }
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="bhttpscodeforcescontest1088problemb"><a href="https://codeforc.es/contest/1088/problem/B">B</a></h2>
<h3 id="description-1">Description</h3>
<p>有一个数组 $a$​，和一个正整数 $k$，你需要重复一下操作 $k$ 次：找到最小的非零数，把其它的数都减去这个数，把这个数变为 $0$。输出每次操作找到的数。</p>
<h3 id="solution-1">Solution</h3>
<p>排序然后模拟。</p>
<h3 id="code-1">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1e5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">n</span>, <span style="color:#000">a</span>[<span style="color:#000">maxn</span>], <span style="color:#000">k</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">k</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">sort</span>(<span style="color:#000">a</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">a</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">+</span> <span style="color:#000">n</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">pos</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">lzy</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> (<span style="color:#000">k</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">now</span> <span style="color:#000">=</span> <span style="color:#000">pos</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">pos</span> <span style="color:#000">&gt;</span> <span style="color:#000">n</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">0</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">continue</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">while</span> (<span style="color:#000">pos</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">a</span>[<span style="color:#000">pos</span>] <span style="color:#000">==</span> <span style="color:#000">a</span>[<span style="color:#000">now</span>])
</span></span><span style="display:flex;"><span>            <span style="color:#000">pos</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">a</span>[<span style="color:#000">now</span>] <span style="color:#000">-</span> <span style="color:#000">lzy</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">lzy</span> <span style="color:#000">+=</span> <span style="color:#000">a</span>[<span style="color:#000">now</span>] <span style="color:#000">-</span> <span style="color:#000">lzy</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="chttpscodeforcescontest1088problemc"><a href="https://codeforc.es/contest/1088/problem/C">C</a></h2>
<h3 id="description-2">Description</h3>
<p>有一个长度为 $n$ 的数组 $\{a_i\}$，你可以对其进行一下两个操作之一：</p>
<ul>
<li>选一个下标 $i$ 和一个正整数 $x$，将这个数组以 $i$ 为结尾的前缀都加上 $x$；</li>
<li>选一个下标 $i$ 和一个正整数 $x$，将这个数组以 $i$ 为结尾的前缀都加对 $x$​ 取模。</li>
</ul>
<p>你需要在 $n+1$​ 个操作内把这个数组变成严格单调递增的，输出你的操作。、</p>
<p>$1\leq n\leq2000,0\leq a_i\leq10^5$，你选择的 $x$ 需要满足 $1\leq x\leq10^6$。</p>
<h3 id="solution-2">Solution</h3>
<p>发现 $n,a_i$ 都和 $x$ 差了很多，很容易想到构造一个 $1\sim n+1$ 的数组的方法：我们可以直接把整个数组都加上一个很大的数，设这个数是 $X$，那么接下来 $n$ 次操作依次取模即可。</p>
<p>具体地，第 $i$ 次第二个操作是把以 $i$ 为结尾的前缀对 $a_i+X-i$ 取模。</p>
<p>确定 $X$ 的值也很简单，$X=(a_i-i)_{max}$​。</p>
<h3 id="code-2">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2010</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">X</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1e6</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">a</span>[<span style="color:#000">maxn</span>], <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">ios</span><span style="color:#000">::</span><span style="color:#000">sync_with_stdio</span>(<span style="color:#a90d91">false</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">mx</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>], <span style="color:#000">mx</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">max</span>(<span style="color:#000">mx</span>, <span style="color:#000">a</span>[<span style="color:#000">i</span>] <span style="color:#000">-</span> <span style="color:#000">i</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">X</span> <span style="color:#000">-=</span> <span style="color:#000">mx</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">n</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">n</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">X</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">2</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">i</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>] <span style="color:#000">+</span> <span style="color:#000">X</span> <span style="color:#000">-</span> <span style="color:#000">i</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="dhttpscodeforcescontest1088problemd"><a href="https://codeforc.es/contest/1088/problem/D">D</a></h2>
<h3 id="description-3">Description</h3>
<p><strong>这是一道交互题。</strong></p>
<p>交互库选择了两个数 $(a,b)$​ 。每次询问一个二元组 $(c,d)$，返回 $a\oplus c$ 和 $b\oplus d$ 的大小关系。你需要在 $62$ 次询问内确定 $a,b$，保证 $0\leq a,b\leq2^{30}$。</p>
<h3 id="solution-3">Solution</h3>
<p>我们显然可以一位一位考虑，尝试在 $2$ 次操作之内得到一位的答案。</p>
<p>考虑我们能得到什么信息，显然一开始询问 $(0,0)$ 可以得到 $a,b$ 的大小关系，那么我们就从大小关系入手。</p>
<p>因为大小比较是从高到低比的，我们就从高到低确定每一位。</p>
<p>假设我们在第 $i$​​ 位，有 $a,b$​​ 中包括这一位以及比这一位低的数的大小关系 $flag$​，比第 $i$​ 位高的已经确定好的 $a,b$​ 。我们先问一遍 $c=a\oplus2^i,d=b\oplus2^i$​​​。如果得到的大小关系和 $flag$ 不一样，那么 $a,b$ 在这一位就不相等，根据原先的 $flag$ 就能确定这一个 $1$ 在 $a,b$​ 的哪个数上，然后再问一次更新 $flag$；如果相等就再问一次确定这一位是 $1$ 还是 $0$。</p>
<h3 id="code-3">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">flag</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">ask</span>(<span style="color:#a90d91">int</span> <span style="color:#000">a</span>, <span style="color:#a90d91">int</span> <span style="color:#000">b</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34;? &#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">a</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">b</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">x</span> <span style="color:#000">==</span> <span style="color:#000">-</span><span style="color:#1c01ce">2</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">exit</span>(<span style="color:#1c01ce">0</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">a</span>, <span style="color:#000">b</span>, <span style="color:#000">lsta</span>, <span style="color:#000">lstb</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">flag</span> <span style="color:#000">=</span> <span style="color:#000">ask</span>(<span style="color:#1c01ce">0</span>, <span style="color:#1c01ce">0</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">29</span>; <span style="color:#000">i</span> <span style="color:#000">&gt;=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">res</span> <span style="color:#000">=</span> <span style="color:#000">ask</span>(<span style="color:#000">a</span> <span style="color:#000">^</span> (<span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">i</span>), <span style="color:#000">b</span> <span style="color:#000">^</span> (<span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">i</span>));
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">res</span> <span style="color:#000">!=</span> <span style="color:#000">flag</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">flag</span> <span style="color:#000">==</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">b</span> <span style="color:#000">^=</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">i</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>                <span style="color:#000">a</span> <span style="color:#000">^=</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">i</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">flag</span> <span style="color:#000">=</span> <span style="color:#000">ask</span>(<span style="color:#000">a</span>, <span style="color:#000">b</span>);
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">int</span> <span style="color:#000">p</span> <span style="color:#000">=</span> <span style="color:#000">ask</span>(<span style="color:#000">a</span> <span style="color:#000">^</span> (<span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">i</span>), <span style="color:#000">b</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">p</span> <span style="color:#000">==</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">a</span> <span style="color:#000">^=</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">i</span>, <span style="color:#000">b</span> <span style="color:#000">^=</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">i</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34;!&#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">a</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">b</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="ehttpscodeforcescomcontest1088probleme"><a href="https://codeforces.com/contest/1088/problem/E">E</a></h2>
<h3 id="description-4">Description</h3>
<p>给定一棵 $n$​​​ 个节点的树，点有点权 $a_u$​​，可能为负。现在请你在树上找出 $k$​（$1~\leq~k~\leq~n$）个不相交集合，每个集合中的点构成一个联通块。</p>
<p>设选出的所有点的集合为 $s$，最大化 $\dfrac{\sum_{u\in s}a_u}{k}$，在满足前面那个东西最大的前提下，最大化 $k$。</p>
<h3 id="solution-4">Solution</h3>
<p>发现我们是要最大化每个集合中点权和的平均值。</p>
<p>那么有一个结论（感性理解）：我们选点权最大的集合，平均值最大。</p>
<p>那么还要最大化 $k$，就尽可能多选这个点权最大的集合就行。</p>
<p>设计一个很简单的树形 DP：$f(i)$ 为选 $i$​ 为根子树最大权值。$f(i)=w_i+\sum max(0,f(v))$。</p>
<p>然后统计一下最大值，再 DP 一次，然后再算一次 $f(i)$，这次当其已经成为最大值时，我们直接把这个连通块删掉，即把 $f(i)$ 设置为极小值即可。</p>
<h3 id="code-4">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cctype&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cerr</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">3e5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">inf</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1ll</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">60</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">vector</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">e</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">add</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>) { <span style="color:#000">e</span>[<span style="color:#000">x</span>].<span style="color:#000">push_back</span>(<span style="color:#000">y</span>), <span style="color:#000">e</span>[<span style="color:#000">y</span>].<span style="color:#000">push_back</span>(<span style="color:#000">x</span>); }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">w</span>[<span style="color:#000">maxn</span>], <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">f</span>[<span style="color:#000">maxn</span>], <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#000">-</span><span style="color:#000">inf</span>, <span style="color:#000">cnt</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">dfs</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">fa</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">f</span>[<span style="color:#000">x</span>] <span style="color:#000">=</span> <span style="color:#000">w</span>[<span style="color:#000">x</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">v</span> : <span style="color:#000">e</span>[<span style="color:#000">x</span>])
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">v</span> <span style="color:#000">!=</span> <span style="color:#000">fa</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">dfs</span>(<span style="color:#000">v</span>, <span style="color:#000">x</span>), <span style="color:#000">f</span>[<span style="color:#000">x</span>] <span style="color:#000">+=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">max</span>(<span style="color:#000">f</span>[<span style="color:#000">v</span>], <span style="color:#1c01ce">0ll</span>);
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">dfs2</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">fa</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">f</span>[<span style="color:#000">x</span>] <span style="color:#000">=</span> <span style="color:#000">w</span>[<span style="color:#000">x</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">v</span> : <span style="color:#000">e</span>[<span style="color:#000">x</span>])
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">v</span> <span style="color:#000">!=</span> <span style="color:#000">fa</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">dfs2</span>(<span style="color:#000">v</span>, <span style="color:#000">x</span>), <span style="color:#000">f</span>[<span style="color:#000">x</span>] <span style="color:#000">+=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">max</span>(<span style="color:#000">f</span>[<span style="color:#000">v</span>], <span style="color:#1c01ce">0ll</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">f</span>[<span style="color:#000">x</span>] <span style="color:#000">==</span> <span style="color:#000">ans</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cnt</span><span style="color:#000">++</span>, <span style="color:#000">f</span>[<span style="color:#000">x</span>] <span style="color:#000">=</span> <span style="color:#000">-</span><span style="color:#000">inf</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">ios</span><span style="color:#000">::</span><span style="color:#000">sync_with_stdio</span>(<span style="color:#a90d91">false</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">w</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">x</span>, <span style="color:#000">y</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">x</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">y</span>, <span style="color:#000">add</span>(<span style="color:#000">x</span>, <span style="color:#000">y</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">dfs</span>(<span style="color:#1c01ce">1</span>, <span style="color:#1c01ce">0</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">max</span>(<span style="color:#000">ans</span>, <span style="color:#000">f</span>[<span style="color:#000">i</span>]);
</span></span><span style="display:flex;"><span>    <span style="color:#000">memset</span>(<span style="color:#000">f</span>, <span style="color:#1c01ce">0</span>, <span style="color:#a90d91">sizeof</span>(<span style="color:#000">f</span>));
</span></span><span style="display:flex;"><span>    <span style="color:#000">dfs2</span>(<span style="color:#1c01ce">1</span>, <span style="color:#1c01ce">0</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">ans</span> <span style="color:#000">*</span> <span style="color:#000">cnt</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">cnt</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="fhttpscodeforcescomcontest1088problemf"><a href="https://codeforces.com/contest/1088/problem/F">F</a></h2>
<h3 id="description-5">Description</h3>
<p>有一个给定一棵树，点有点权，其中这棵树满足除了权值最小的点外，每个点都有一个权值比它小的点与它相邻。权值最小的点唯一要求你重新构建这棵树，使得代价最小。计算代价的方法如下：</p>
<ul>
<li>一个点的代价为：$\text{deg}_u \times a_u$​​​，其中 $\text{deg}_u$​​ 表示点 $u$​ 的度数，即新树中与 $u$ 直接相连的节点数。</li>
<li>一条边 $(u,v)$​​​​ 的代价为 $\lceil \log_2 \text{dis}(u,v) \rceil \times \min(a_u,a_v)$​​​)，其中 $\text{dis}(u,v)$​​ 为 $u$​ 和 $v$ 在原树中的距离。</li>
</ul>
<h3 id="solution-5">Solution</h3>
<p>考虑最小生成树。</p>
<p>这个点的代价就很怪，发现可以转到边上，那么在 $(u,v)$ 之间加一条边的代价就是 $a_u+a_v+\lceil \log_2 \text{dis}(u,v) \rceil \times \min(a_u,a_v)$。</p>
<p>直接加边是 $O(n^2)$ 的，过不去。</p>
<p>发现有一个条件没用，这个条件就是说如果我们以最小值为根遍历原树，每个点有且仅有一个点的权值小于它，就是他的父亲。</p>
<p>边太多了，我们考虑少加一些边，即去掉一些肯定不优的。</p>
<p>再次看一下式子，并想一想生成树——每个点只会往生成树里连一条边，也就是说我们需要给每个点找一个代价最小的边。</p>
<p>那么对于一个点 $u$ ，显然不能从它的儿子里找，这显然比从祖先找要劣。再想一想，最远就是和根连边，因为如果不从他到根这条路径上找点，其他的点权值肯定比根大，距离也更长。</p>
<p>因此就是要最小化 $a_v\times(\lceil \log_2 \text{dis}(u,v)\rceil+1)$​，因为有 $\log_2$，我们可以倍增找这个最小值。</p>
<p>然后就做完了。</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cmath&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cctype&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cerr</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">namespace</span> <span style="color:#000">IO</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>	<span style="color:#177500">// 省略
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>}
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#a90d91">namespace</span> <span style="color:#000">IO</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">5e5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>, <span style="color:#000">inf</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">30</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">typedef</span> <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">ll</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">vector</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">e</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">add</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>) { <span style="color:#000">e</span>[<span style="color:#000">x</span>].<span style="color:#000">push_back</span>(<span style="color:#000">y</span>), <span style="color:#000">e</span>[<span style="color:#000">y</span>].<span style="color:#000">push_back</span>(<span style="color:#000">x</span>); }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">f</span>[<span style="color:#000">maxn</span>][<span style="color:#1c01ce">26</span>], <span style="color:#000">a</span>[<span style="color:#000">maxn</span>], <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">mi</span>[<span style="color:#000">maxn</span>][<span style="color:#1c01ce">26</span>], <span style="color:#000">mii</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">dep</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">dfs</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">fa</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">f</span>[<span style="color:#000">x</span>][<span style="color:#1c01ce">0</span>] <span style="color:#000">=</span> <span style="color:#000">fa</span>, <span style="color:#000">mi</span>[<span style="color:#000">x</span>][<span style="color:#1c01ce">0</span>] <span style="color:#000">=</span> <span style="color:#000">a</span>[<span style="color:#000">fa</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#000">dep</span>[<span style="color:#000">x</span>] <span style="color:#000">=</span> <span style="color:#000">dep</span>[<span style="color:#000">fa</span>] <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">m</span> <span style="color:#000">=</span> <span style="color:#000">a</span>[<span style="color:#000">fa</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#1c01ce">25</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">f</span>[<span style="color:#000">x</span>][<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">f</span>[<span style="color:#000">f</span>[<span style="color:#000">x</span>][<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>]][<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>];
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">f</span>[<span style="color:#000">x</span>][<span style="color:#000">i</span>] <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">break</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">m</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">min</span>(<span style="color:#000">m</span>, <span style="color:#1c01ce">1ll</span> <span style="color:#000">*</span> <span style="color:#000">a</span>[<span style="color:#000">f</span>[<span style="color:#000">x</span>][<span style="color:#000">i</span>]] <span style="color:#000">*</span> (<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>));
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">m</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">min</span>(<span style="color:#000">m</span>, <span style="color:#1c01ce">1ll</span> <span style="color:#000">*</span> <span style="color:#000">a</span>[<span style="color:#000">mii</span>] <span style="color:#000">*</span> (<span style="color:#a90d91">int</span>(<span style="color:#000">ceil</span>(<span style="color:#000">log2</span>(<span style="color:#000">dep</span>[<span style="color:#000">x</span>] <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>))) <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>));
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">fa</span> <span style="color:#000">!=</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">ans</span> <span style="color:#000">+=</span> <span style="color:#000">m</span> <span style="color:#000">+</span> <span style="color:#000">a</span>[<span style="color:#000">x</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">v</span> : <span style="color:#000">e</span>[<span style="color:#000">x</span>])
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">v</span> <span style="color:#000">!=</span> <span style="color:#000">fa</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">dfs</span>(<span style="color:#000">v</span>, <span style="color:#000">x</span>);
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>   <span style="color:#000">n</span> <span style="color:#000">=</span> <span style="color:#000">read</span>(), <span style="color:#000">a</span>[<span style="color:#1c01ce">0</span>] <span style="color:#000">=</span> <span style="color:#000">inf</span>;
</span></span><span style="display:flex;"><span>   <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>       <span style="color:#000">a</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">read</span>(), <span style="color:#000">mii</span> <span style="color:#000">=</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>] <span style="color:#000">&lt;</span> <span style="color:#000">a</span>[<span style="color:#000">mii</span>] <span style="color:#000">?</span> <span style="color:#000">i</span> : <span style="color:#000">mii</span>;
</span></span><span style="display:flex;"><span>   <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>       <span style="color:#000">add</span>(<span style="color:#000">read</span>(), <span style="color:#000">read</span>());
</span></span><span style="display:flex;"><span>    <span style="color:#000">dfs</span>(<span style="color:#000">mii</span>, <span style="color:#1c01ce">0</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">writeln</span>(<span style="color:#000">ans</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div>]]></content:encoded>
    </item>
    
    <item>
      <title>Codeforces Round 573 (Div. 1&amp;2)</title>
      <link>https://luoyisu.github.io/posts/cf-contest1190/</link>
      <pubDate>Thu, 16 Dec 2021 15:23:16 +0000</pubDate>
      
      <guid>https://luoyisu.github.io/posts/cf-contest1190/</guid>
      <description>&lt;p&gt;挺难的，但没有 DP 好评（）&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>挺难的，但没有 DP 好评（）</p>
<h2 id="div2-ahttpscodeforcescontest1191problema"><a href="https://codeforc.es/contest/1191/problem/A">Div2 A</a></h2>
<h3 id="description">Description</h3>
<p>假设一个人有 $n$ 点血，定义他的等级为 $$
\begin{cases}\text{A}&amp;n\bmod4=1\\
\text{B}&amp;n\bmod4=3\\
\text{C}&amp;n\bmod4=2\\
\text{D}&amp;n\bmod4=0
\end{cases}$$。并定义等级由 $\text{D}\sim\text{A}$ 依次更好。</p>
<p>现在给出一个人的血量 $x$，他可以回 $0\sim2$ 点血。问回几点血得到的等级最高。</p>
<h3 id="solution">Solution</h3>
<p>分类讨论即可。</p>
<h3 id="code">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">n</span> <span style="color:#000">%</span> <span style="color:#1c01ce">4</span> <span style="color:#000">==</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">0</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34;A&#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">else</span> <span style="color:#a90d91">if</span> (<span style="color:#000">n</span> <span style="color:#000">%</span> <span style="color:#1c01ce">4</span> <span style="color:#000">==</span> <span style="color:#1c01ce">2</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34;B&#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">else</span> <span style="color:#a90d91">if</span> (<span style="color:#000">n</span> <span style="color:#000">%</span> <span style="color:#1c01ce">4</span> <span style="color:#000">==</span> <span style="color:#1c01ce">3</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">2</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34;A&#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34;A&#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="div2-bhttpscodeforcescontest1191problemb"><a href="https://codeforc.es/contest/1191/problem/B">Div2 B</a></h2>
<h3 id="description-1">Description</h3>
<p>Tokitsukaze 有 $3$ 块麻将，每个麻将上有一个 $2$ 位的字符串，由 $1\sim9$ 的一位数字和 m/s/p 组成，现在有两种出牌方式：</p>
<ol>
<li>3个完全一样的麻将；</li>
<li>第2位相同，前面是连号的（比如1p，2p，3p就可以）。</li>
</ol>
<p>但是 Tokitsukaze 不是个遵守规则的人，TA可以把任意一个麻将换成另一种麻将，可以换多次，也可以不换。问 Tokitsukaze 至少要换多少次才能一次出完 $3$ 个麻将？</p>
<h3 id="solution-1">Solution</h3>
<p>模拟，但是可以想办法简化代码。</p>
<h3 id="code-1">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;string&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">string</span> <span style="color:#000">a</span>, <span style="color:#000">b</span>, <span style="color:#000">c</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">string</span> <span style="color:#000">s</span>[<span style="color:#1c01ce">3</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">a</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">b</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">c</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">a</span> <span style="color:#000">==</span> <span style="color:#000">b</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">b</span> <span style="color:#000">==</span> <span style="color:#000">c</span>) <span style="color:#177500">// 三个一样
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">0</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">s</span>[<span style="color:#1c01ce">0</span>] <span style="color:#000">=</span> <span style="color:#000">a</span>, <span style="color:#000">s</span>[<span style="color:#1c01ce">1</span>] <span style="color:#000">=</span> <span style="color:#000">b</span>, <span style="color:#000">s</span>[<span style="color:#1c01ce">2</span>] <span style="color:#000">=</span> <span style="color:#000">c</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">sort</span>(<span style="color:#000">s</span>, <span style="color:#000">s</span> <span style="color:#000">+</span> <span style="color:#1c01ce">3</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">s</span>[<span style="color:#1c01ce">0</span>][<span style="color:#1c01ce">0</span>] <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">==</span> <span style="color:#000">s</span>[<span style="color:#1c01ce">1</span>][<span style="color:#1c01ce">0</span>] <span style="color:#000">&amp;&amp;</span> <span style="color:#000">s</span>[<span style="color:#1c01ce">1</span>][<span style="color:#1c01ce">0</span>] <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">==</span> <span style="color:#000">s</span>[<span style="color:#1c01ce">2</span>][<span style="color:#1c01ce">0</span>] <span style="color:#000">&amp;&amp;</span> <span style="color:#000">s</span>[<span style="color:#1c01ce">0</span>][<span style="color:#1c01ce">1</span>] <span style="color:#000">==</span> <span style="color:#000">s</span>[<span style="color:#1c01ce">1</span>][<span style="color:#1c01ce">1</span>] <span style="color:#000">&amp;&amp;</span> <span style="color:#000">s</span>[<span style="color:#1c01ce">2</span>][<span style="color:#1c01ce">1</span>] <span style="color:#000">==</span> <span style="color:#000">s</span>[<span style="color:#1c01ce">1</span>][<span style="color:#1c01ce">1</span>])
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">0</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>; <span style="color:#177500">// 已经是顺子
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>        <span style="color:#a90d91">return</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">s</span>[<span style="color:#1c01ce">0</span>] <span style="color:#000">==</span> <span style="color:#000">s</span>[<span style="color:#1c01ce">1</span>] <span style="color:#000">||</span> <span style="color:#000">s</span>[<span style="color:#1c01ce">1</span>] <span style="color:#000">==</span> <span style="color:#000">s</span>[<span style="color:#1c01ce">2</span>] <span style="color:#000">||</span> <span style="color:#000">s</span>[<span style="color:#1c01ce">0</span>] <span style="color:#000">==</span> <span style="color:#000">s</span>[<span style="color:#1c01ce">2</span>])
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>; <span style="color:#177500">// 两个一样
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>        <span style="color:#a90d91">return</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#1c01ce">2</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;</span> <span style="color:#1c01ce">3</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> ((<span style="color:#000">s</span>[<span style="color:#000">i</span>][<span style="color:#1c01ce">0</span>] <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">==</span> <span style="color:#000">s</span>[<span style="color:#000">j</span>][<span style="color:#1c01ce">0</span>] <span style="color:#000">||</span> <span style="color:#000">s</span>[<span style="color:#000">j</span>][<span style="color:#1c01ce">0</span>] <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">==</span> <span style="color:#000">s</span>[<span style="color:#000">i</span>][<span style="color:#1c01ce">0</span>] <span style="color:#000">||</span> <span style="color:#000">s</span>[<span style="color:#000">i</span>][<span style="color:#1c01ce">0</span>] <span style="color:#000">+</span> <span style="color:#1c01ce">2</span> <span style="color:#000">==</span> <span style="color:#000">s</span>[<span style="color:#000">j</span>][<span style="color:#1c01ce">0</span>] <span style="color:#000">||</span> <span style="color:#000">s</span>[<span style="color:#000">j</span>][<span style="color:#1c01ce">0</span>] <span style="color:#000">+</span> <span style="color:#1c01ce">2</span> <span style="color:#000">==</span> <span style="color:#000">s</span>[<span style="color:#000">i</span>][<span style="color:#1c01ce">0</span>]) <span style="color:#000">&amp;&amp;</span> <span style="color:#000">s</span>[<span style="color:#000">i</span>][<span style="color:#1c01ce">1</span>] <span style="color:#000">==</span> <span style="color:#000">s</span>[<span style="color:#000">j</span>][<span style="color:#1c01ce">1</span>])
</span></span><span style="display:flex;"><span>            {
</span></span><span style="display:flex;"><span>                <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>; <span style="color:#177500">// 两个相邻或差一个
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>                <span style="color:#a90d91">return</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>            }
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">2</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="ahttpscodeforcescontest1190problema"><a href="https://codeforc.es/contest/1190/problem/A">A</a></h2>
<h3 id="description-2">Description</h3>
<p>最近，Tokitsukaze 发现了一个有趣的游戏。在游戏开始，有 $n$ 个数（$1\sim n$）。这 $n$ 个数每 $k$ 个被分为一组（最后一组可能不到 $k$ 个）。现在她想拿出 $m$个数 $p_1, p_2,\dots,p_m$（输入保证该序列为升序）。她会从 $1$ 到 $n$ 逐个看，如果发现了她想要的数，那么她会将这组数中所有她想要的都取走，算作一次操作。一次操作结束后，数列中的数会自动左移补上被拿出的数的位置，但数值不变。求经过多少次操作后，她能取到所有她想要的数？$1\leq n\leq10^{18},1\leq m\leq10^5$。</p>
<h3 id="solution-2">Solution</h3>
<p>显然需要一个 $O(m)$ 的算法，我们对于每个数，算出来它在哪个块里，然后把在块里的数全跳过去就行。</p>
<p>假设当前数是 $p_i$，之前已经拿了 $del=i-1$ 个数，那么它所在的块就是 $\lceil\dfrac{p_i-del}{k}\rceil$。</p>
<h3 id="code-2">Code</h3>
<p>要注意 <code>ceil</code> 返回值是 <code>double</code>，会有精度问题，用返回值是 <code>long double</code> 的 <code>ceill</code> 就没有这个问题了。</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;string&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cmath&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1e5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">typedef</span> <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">ll</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000">ll</span> <span style="color:#000">n</span>, <span style="color:#000">m</span>, <span style="color:#000">k</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000">ll</span> <span style="color:#000">a</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">m</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">k</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">ll</span> <span style="color:#000">now</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> (<span style="color:#000">now</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">ll</span> <span style="color:#000">del</span> <span style="color:#000">=</span> <span style="color:#000">now</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">ll</span> <span style="color:#000">nowblock</span> <span style="color:#000">=</span> <span style="color:#000">ceill</span>(<span style="color:#1c01ce">1.0</span><span style="color:#000">l</span> <span style="color:#000">*</span> (<span style="color:#000">a</span>[<span style="color:#000">now</span>] <span style="color:#000">-</span> <span style="color:#000">del</span>) <span style="color:#000">/</span> <span style="color:#000">k</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">while</span> ((<span style="color:#000">ll</span>)<span style="color:#000">ceill</span>(<span style="color:#1c01ce">1.0</span><span style="color:#000">l</span> <span style="color:#000">*</span> (<span style="color:#000">a</span>[<span style="color:#000">now</span>] <span style="color:#000">-</span> <span style="color:#000">del</span>) <span style="color:#000">/</span> <span style="color:#000">k</span>) <span style="color:#000">==</span> <span style="color:#000">nowblock</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">now</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">ans</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">ans</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="bhttpscodeforcescontest1190problemb"><a href="https://codeforc.es/contest/1190/problem/B">B</a></h2>
<h3 id="description-3">Description</h3>
<p>A 和 B 在玩一个小游戏，轮流从 $n$ 堆石子里拿石子，一次拿一个。当拿之前所有石子都被拿完了或拿完一个石子之后有两堆石子剩余个数一样（包括都为空的石子），A 先手，问谁能赢。</p>
<h3 id="solution-3">Solution</h3>
<p>手玩一下发现当两个人开始轮流取的时候，取什么都是一样的，而最终一定会变成每堆石子的数目分别为 $0\sim n-1$ 这种情况。</p>
<p>所以直接算一下每堆石子和最终状态差值，看看是奇数还是偶数就知道谁赢了。</p>
<p>需要提前看一下能不能进入轮流取的情况，即先手拿完第一下会不会输。</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;string&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cmath&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;map&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1e5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">n</span>, <span style="color:#000">a</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">map</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span>, <span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">cnt</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">bool</span> <span style="color:#000">check</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">cnt</span>.<span style="color:#000">clear</span>();
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">cnt</span>.<span style="color:#000">count</span>(<span style="color:#000">a</span>[<span style="color:#000">i</span>]))
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">return</span> <span style="color:#a90d91">false</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>            <span style="color:#000">cnt</span>[<span style="color:#000">a</span>[<span style="color:#000">i</span>]] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">cnt</span>[<span style="color:#1c01ce">0</span>] <span style="color:#000">==</span> <span style="color:#000">n</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#a90d91">false</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#a90d91">true</span>;  
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">ios</span><span style="color:#000">::</span><span style="color:#000">sync_with_stdio</span>(<span style="color:#a90d91">false</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>], <span style="color:#000">cnt</span>[<span style="color:#000">a</span>[<span style="color:#000">i</span>]]<span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">ok</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">cnt</span>[<span style="color:#1c01ce">0</span>] <span style="color:#000">&gt;=</span> <span style="color:#1c01ce">2</span>) <span style="color:#177500">// 有不止一个 0，先手输
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34;cslnb&#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">tot</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">cnt</span>[<span style="color:#000">a</span>[<span style="color:#000">i</span>]] <span style="color:#000">&gt;=</span> <span style="color:#1c01ce">3</span>) <span style="color:#177500">// 同一个数出现超过两次，先手输
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">ok</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">break</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span> <span style="color:#a90d91">if</span> (<span style="color:#000">cnt</span>[<span style="color:#000">a</span>[<span style="color:#000">i</span>]] <span style="color:#000">&gt;=</span> <span style="color:#1c01ce">2</span>) <span style="color:#177500">// 同一个数出现两次，比它小 1 的数出现过，先手输
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">cnt</span>[<span style="color:#000">a</span>[<span style="color:#000">i</span>] <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">&gt;=</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>            {
</span></span><span style="display:flex;"><span>                <span style="color:#000">ok</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">break</span>;
</span></span><span style="display:flex;"><span>            }
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">auto</span> <span style="color:#000">k</span> : <span style="color:#000">cnt</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">k</span>.<span style="color:#000">second</span> <span style="color:#000">&gt;=</span> <span style="color:#1c01ce">2</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">tot</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>    }      
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">tot</span> <span style="color:#000">&gt;=</span> <span style="color:#1c01ce">2</span>) <span style="color:#177500">// 出现两次的数超过 1 个，先手输
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">ok</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">!</span><span style="color:#000">ok</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34;cslnb&#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">sort</span>(<span style="color:#000">a</span>, <span style="color:#000">a</span> <span style="color:#000">+</span> <span style="color:#000">n</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">sum</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">sum</span> <span style="color:#000">+=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">max</span>(<span style="color:#1c01ce">0</span>, <span style="color:#000">a</span>[<span style="color:#000">i</span>] <span style="color:#000">-</span> <span style="color:#000">i</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>  
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> (<span style="color:#000">sum</span> <span style="color:#000">%</span> <span style="color:#1c01ce">2</span> <span style="color:#000">?</span> <span style="color:#c41a16">&#34;sjfnb&#34;</span> <span style="color:#000">:</span> <span style="color:#c41a16">&#34;cslnb&#34;</span>) <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="chttpscodeforcescontest1190problemc"><a href="https://codeforc.es/contest/1190/problem/C">C</a></h2>
<h3 id="description-4">Description</h3>
<p>有一个长度为 $n$ 的01字符串，和一个整数 $k$。A、B。二人进行做博弈游戏，每个人必须选择连续的 $k$ 个字符，把这连续的 $k$ 个字符全变为 $0$ 或者 $1$。</p>
<p>如果某次操作之后整个字符串全为 $1$ 或者 $0$，那么这个人胜利，假设二人都绝顶聪明。给你初始局面，A先手，问 A、B 谁能赢，又或者平局。</p>
<h3 id="solution-4">Solution</h3>
<p>发现一个事情：如果先手第一次操作后赢不了，那么以后永远都赢不了。因为后手可以把他的操作改回去。</p>
<p>而如果后手第一次操作后赢不了，那么必定平局——即把先手操作改回去来防御，如此循环。</p>
<p>判断先手能不能赢很简单，前缀和一下即可。</p>
<p>怎么判断后手能不能赢呢？</p>
<p>首先必须满足 $k\neq1\operatorname{and}2k\geq n$，前一个要求很好理解，后一个要求就是说如果先手赢不了，他直接修改两边就行，后手赢不了。</p>
<p>我们先枚举先手选的区间 $[l,r]$，如果 $a_{l-1}\neq a_{l}\operatorname{or} a_r\neq a_{r+1}$，那么就会平局（先手可以把这个区间全改成挨着它的那个颜色，这样后手就改不过来）。如果每一个区间先手都没法让他变平局，后手胜利。</p>
<h3 id="code-3">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1e5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">n</span>, <span style="color:#000">a</span>[<span style="color:#000">maxn</span>], <span style="color:#000">sum</span>[<span style="color:#000">maxn</span>], <span style="color:#000">k</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">char</span> <span style="color:#000">ss</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">int</span> <span style="color:#000">s</span>(<span style="color:#a90d91">int</span> <span style="color:#000">l</span>, <span style="color:#a90d91">int</span> <span style="color:#000">r</span>) { <span style="color:#a90d91">return</span> <span style="color:#000">l</span> <span style="color:#000">&gt;</span> <span style="color:#000">r</span> <span style="color:#000">?</span> <span style="color:#1c01ce">0</span> <span style="color:#000">:</span> <span style="color:#000">sum</span>[<span style="color:#000">r</span>] <span style="color:#000">-</span> <span style="color:#000">sum</span>[<span style="color:#000">l</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>]; }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">bool</span> <span style="color:#000">check1</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#000">k</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">p</span> <span style="color:#000">=</span> <span style="color:#000">s</span>(<span style="color:#1c01ce">1</span>, <span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>) <span style="color:#000">+</span> <span style="color:#000">s</span>(<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#000">k</span>, <span style="color:#000">n</span>); <span style="color:#177500">// 判断先手必胜
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>        <span style="color:#a90d91">if</span> (<span style="color:#000">p</span> <span style="color:#000">==</span> <span style="color:#1c01ce">0</span> <span style="color:#000">||</span> <span style="color:#000">p</span> <span style="color:#000">+</span> <span style="color:#000">k</span> <span style="color:#000">==</span> <span style="color:#000">n</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">return</span> <span style="color:#a90d91">true</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#a90d91">false</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">bool</span> <span style="color:#000">check2</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">k</span> <span style="color:#000">==</span> <span style="color:#1c01ce">1</span> <span style="color:#000">||</span> <span style="color:#000">k</span> <span style="color:#000">*</span> <span style="color:#1c01ce">2</span> <span style="color:#000">&lt;</span> <span style="color:#000">n</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#a90d91">false</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span> <span style="color:#000">-</span> <span style="color:#000">k</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">a</span>[<span style="color:#000">i</span>] <span style="color:#000">!=</span> <span style="color:#000">a</span>[<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">||</span> <span style="color:#000">a</span>[<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#000">k</span>] <span style="color:#000">!=</span> <span style="color:#000">a</span>[<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#000">k</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>])
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">return</span> <span style="color:#a90d91">false</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#000">a</span>[<span style="color:#1c01ce">1</span>] <span style="color:#000">!=</span> <span style="color:#000">a</span>[<span style="color:#000">n</span>];
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">k</span> <span style="color:#000">&gt;&gt;</span> (<span style="color:#000">ss</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">a</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">ss</span>[<span style="color:#000">i</span>] <span style="color:#000">-</span> <span style="color:#2300ce">&#39;0&#39;</span>, <span style="color:#000">sum</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">sum</span>[<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">+</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">check1</span>())
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34;tokitsukaze&#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">else</span> <span style="color:#a90d91">if</span> (<span style="color:#000">check2</span>())
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34;quailty&#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34;once again&#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="dhttpscodeforcescontest1190problemd"><a href="https://codeforc.es/contest/1190/problem/D">D</a></h2>
<h3 id="description-5">Description</h3>
<p>平面上有 $n$ 个点，坐标为 $(x_i,y_i)$，有三条直线，两条平行 $y$ 轴，一条平行 $x$ 轴，他们会围起一些点。如图：</p>
<p>
  <img loading="lazy" src="https://codeforces.cdn.menci.xyz/menci/espresso/com/da2aefca33f93cc613b170675755eb2a06da1a9c.png" alt="图"  /></p>
<p>求对于这三条线所有的可能，有多少种非空点集会被这三条线围起来。</p>
<p>$n\leq2\times10^5,1\leq x_i,y_i\leq10^9$。</p>
<h3 id="solution-5">Solution</h3>
<p>发现这个平行 $x$ 轴的直线可以作为突破点。</p>
<p>首先把所有点坐标离散化一下。</p>
<p>我们从上到下移动这条线 $y=a$，当它扫到一个点时，我们把所有 $y\geq a$ 的点的答案都算进去。这样就不会算重也不会漏。</p>
<p>考虑这条线上只有一个点的情况，那么新的点集数就是 $cnt(1,x)\times cnt(x,x_{max})$，其中 $cnt(l,r)$ 表示在 $x=l$ 到 $x=r$ 这段闭区间内每条总共有几个横坐标不同的点（注意新扫到的点也算在内），解释就是从左面的直线有 $cnt(1,x)$ 种可以取的地方，右面同理，然后乘法原理一下。</p>
<p>如果直线上有多个点呢？我们先把所有点都算进去，然后对于每个点的贡献就是 $cnt(nxt+1,x)\times cnt(x,x_{max})$，其中 $nxt$ 是这条直线上在当前点左面的点的横坐标。</p>
<p>怎么维护 $cnt$？发现我们需要单点加区间求和，那么树状数组就可以胜任了。</p>
<p>时间复杂度 $O(n\log n)$。</p>
<h3 id="code-4">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2e5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">struct</span> <span style="color:#3f6e75">point</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#000">y</span>;
</span></span><span style="display:flex;"><span>} <span style="color:#000">a</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">XX</span>[<span style="color:#000">maxn</span>], <span style="color:#000">YY</span>[<span style="color:#000">maxn</span>], <span style="color:#000">n</span>, <span style="color:#000">totx</span>, <span style="color:#000">toty</span>, <span style="color:#000">cnt</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">vector</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">p</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">int</span> <span style="color:#000">lowbit</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>) { <span style="color:#a90d91">return</span> <span style="color:#000">x</span> <span style="color:#000">&amp;</span> <span style="color:#000">-</span><span style="color:#000">x</span>; }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">struct</span> <span style="color:#3f6e75">Tree</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">t</span>[<span style="color:#000">maxn</span>], <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">void</span> <span style="color:#000">modify</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">v</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (; <span style="color:#000">x</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">x</span> <span style="color:#000">+=</span> <span style="color:#000">lowbit</span>(<span style="color:#000">x</span>))
</span></span><span style="display:flex;"><span>            <span style="color:#000">t</span>[<span style="color:#000">x</span>] <span style="color:#000">+=</span> <span style="color:#000">v</span>;   
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">get</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">res</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (; <span style="color:#000">x</span>; <span style="color:#000">x</span> <span style="color:#000">-=</span> <span style="color:#000">lowbit</span>(<span style="color:#000">x</span>))
</span></span><span style="display:flex;"><span>            <span style="color:#000">res</span> <span style="color:#000">+=</span> <span style="color:#000">t</span>[<span style="color:#000">x</span>];
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#000">res</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">query</span>(<span style="color:#a90d91">int</span> <span style="color:#000">l</span>, <span style="color:#a90d91">int</span> <span style="color:#000">r</span>) { <span style="color:#a90d91">return</span> <span style="color:#000">get</span>(<span style="color:#000">r</span>) <span style="color:#000">-</span> <span style="color:#000">get</span>(<span style="color:#000">l</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>); }
</span></span><span style="display:flex;"><span>} <span style="color:#000">t</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">init</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">scanf</span>(<span style="color:#c41a16">&#34;%d&#34;</span>, <span style="color:#000">&amp;</span><span style="color:#000">n</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">scanf</span>(<span style="color:#c41a16">&#34;%d%d&#34;</span>, <span style="color:#000">&amp;</span><span style="color:#000">XX</span>[<span style="color:#000">i</span>], <span style="color:#000">&amp;</span><span style="color:#000">YY</span>[<span style="color:#000">i</span>]), <span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">XX</span>[<span style="color:#000">i</span>], <span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">y</span> <span style="color:#000">=</span> <span style="color:#000">YY</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">sort</span>(<span style="color:#000">XX</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">XX</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">+</span> <span style="color:#000">n</span>), <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">sort</span>(<span style="color:#000">YY</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">YY</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">+</span> <span style="color:#000">n</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">totx</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">unique</span>(<span style="color:#000">XX</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">XX</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">+</span> <span style="color:#000">n</span>) <span style="color:#000">-</span> <span style="color:#000">XX</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">toty</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">unique</span>(<span style="color:#000">YY</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">YY</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">+</span> <span style="color:#000">n</span>) <span style="color:#000">-</span> <span style="color:#000">YY</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">lower_bound</span>(<span style="color:#000">XX</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">XX</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">+</span> <span style="color:#000">totx</span>, <span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">x</span>) <span style="color:#000">-</span> <span style="color:#000">XX</span>, <span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">y</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">lower_bound</span>(<span style="color:#000">YY</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">YY</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">+</span> <span style="color:#000">toty</span>, <span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">y</span>) <span style="color:#000">-</span> <span style="color:#000">YY</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">p</span>[<span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">y</span>].<span style="color:#000">push_back</span>(<span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">x</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">toty</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">sort</span>(<span style="color:#000">p</span>[<span style="color:#000">i</span>].<span style="color:#000">begin</span>(), <span style="color:#000">p</span>[<span style="color:#000">i</span>].<span style="color:#000">end</span>());
</span></span><span style="display:flex;"><span>    <span style="color:#000">t</span>.<span style="color:#000">n</span> <span style="color:#000">=</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">init</span>();
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">y</span> <span style="color:#000">=</span> <span style="color:#000">toty</span>; <span style="color:#000">y</span> <span style="color:#000">&gt;=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">y</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">nxt</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">x</span> : <span style="color:#000">p</span>[<span style="color:#000">y</span>])
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">cnt</span>[<span style="color:#000">x</span>] <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">t</span>.<span style="color:#000">modify</span>(<span style="color:#000">x</span>, <span style="color:#1c01ce">1</span>), <span style="color:#000">cnt</span>[<span style="color:#000">x</span>]<span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">x</span> : <span style="color:#000">p</span>[<span style="color:#000">y</span>])
</span></span><span style="display:flex;"><span>            <span style="color:#000">ans</span> <span style="color:#000">+=</span> <span style="color:#1c01ce">1ll</span> <span style="color:#000">*</span> <span style="color:#000">t</span>.<span style="color:#000">query</span>(<span style="color:#000">nxt</span>, <span style="color:#000">x</span>) <span style="color:#000">*</span> <span style="color:#000">t</span>.<span style="color:#000">query</span>(<span style="color:#000">x</span>, <span style="color:#000">totx</span>), <span style="color:#000">nxt</span> <span style="color:#000">=</span> <span style="color:#000">x</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">ans</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="ehttpscodeforcescontest1190probleme"><a href="https://codeforc.es/contest/1190/problem/E">E</a></h2>
<h3 id="description-6">Description</h3>
<p>给定平面上$N$个关键点，现在你可以放置 $M$ 条直线，直线之间可以相交，需要满足所有关键点与原点之间的线段至少与你放置的一条直线相交（相交在端点也算相交）。如果有一个关键点就是原点，那么一定要满足有一条直线经过原点。</p>
<p>你需要求出在满足上述条件的情况下原点到所有放置的直线的距离的最小值的最大可能值是多少。</p>
<p>$n,x_i,y_i,m\leq10^5$。</p>
<h3 id="solution-6">Solution</h3>
<p>显然可以二分答案 $ans$，可以发现我们选择的直线一定在原点为圆心，半径为 $ans$ 的圆的切线上（因为这样更优）。</p>
<p>发现一个点到原点的直线被一条选择的直线经过等价于这条被选择的直线与圆的切点在这个点到圆两条切线之间的圆弧上。</p>
<p>那么我们的问题就转化为圆上有若干个圆弧，要覆盖整个圆，求这 $m$ 个圆弧能不能达成目的。</p>
<p>这个问题如果在序列上做是很经典的题，就是区间覆盖，按照左端点排序即可。我们可以把一个圆弧用两个角度来表示就实现了转化。</p>
<p>但是现在是在一个环上，我们肯定把长度变为二倍然后变成序列题目。</p>
<p>直接找一个起点跑是 $O(n^2)$ 的，不行。</p>
<p>我们可以想办法预处理一些什么东西。</p>
<p>发现对于每条线段，我们如果选择它，那么选择的下一条线段是确定的。这个东西可以用类似双指针的算法预处理出来。</p>
<p>然后，如果每步的决策是固定的，我们显然可以倍增优化。</p>
<p>$f_{i,j}$ 表示第 $i$ 条线段选 $2^j$ 条线段之后下一个到了哪条线段。然后就行了。</p>
<p>时间复杂度 $O(n\log n\log d)$，$d$ 是到原点最近的点到原点的距离。</p>
<h3 id="code-5">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cmath&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1e5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">double</span> <span style="color:#000">eps</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1e-10</span>, <span style="color:#000">pi</span> <span style="color:#000">=</span> <span style="color:#000">acos</span>(<span style="color:#000">-</span><span style="color:#1c01ce">1.0</span>), <span style="color:#000">pi2</span> <span style="color:#000">=</span> <span style="color:#000">pi</span> <span style="color:#000">*</span> <span style="color:#1c01ce">2</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">struct</span> <span style="color:#3f6e75">seg</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">double</span> <span style="color:#000">l</span>, <span style="color:#000">r</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">bool</span> <span style="color:#a90d91">operator</span><span style="color:#000">&lt;</span>(<span style="color:#a90d91">const</span> <span style="color:#000">seg</span> <span style="color:#000">&amp;</span><span style="color:#000">b</span>) <span style="color:#a90d91">const</span> { <span style="color:#a90d91">return</span> <span style="color:#000">l</span> <span style="color:#000">&lt;</span> <span style="color:#000">b</span>.<span style="color:#000">l</span>; }
</span></span><span style="display:flex;"><span>} <span style="color:#000">s</span>[<span style="color:#000">maxn</span> <span style="color:#000">*</span> <span style="color:#1c01ce">2</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">struct</span> <span style="color:#3f6e75">point</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">double</span> <span style="color:#000">x</span>, <span style="color:#000">y</span>, <span style="color:#000">diss</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">double</span> <span style="color:#000">dis</span>() { <span style="color:#a90d91">return</span> <span style="color:#000">diss</span> <span style="color:#000">=</span> <span style="color:#000">sqrt</span>(<span style="color:#000">x</span> <span style="color:#000">*</span> <span style="color:#000">x</span> <span style="color:#000">+</span> <span style="color:#000">y</span> <span style="color:#000">*</span> <span style="color:#000">y</span>); }
</span></span><span style="display:flex;"><span>} <span style="color:#000">p</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">n</span>, <span style="color:#000">m</span>, <span style="color:#000">n2</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">f</span>[<span style="color:#000">maxn</span> <span style="color:#000">*</span> <span style="color:#1c01ce">2</span>][<span style="color:#1c01ce">25</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">end</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">d</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">d</span>; <span style="color:#000">i</span><span style="color:#000">++</span>, <span style="color:#000">d</span> <span style="color:#000">&gt;&gt;=</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">d</span> <span style="color:#000">&amp;</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">f</span>[<span style="color:#000">x</span>][<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">bool</span> <span style="color:#000">check</span>(<span style="color:#a90d91">double</span> <span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">double</span> <span style="color:#000">k</span> <span style="color:#000">=</span> <span style="color:#000">atan2</span>(<span style="color:#000">p</span>[<span style="color:#000">i</span>].<span style="color:#000">y</span>, <span style="color:#000">p</span>[<span style="color:#000">i</span>].<span style="color:#000">x</span>), <span style="color:#000">delta</span> <span style="color:#000">=</span> <span style="color:#000">acos</span>(<span style="color:#000">x</span> <span style="color:#000">/</span> <span style="color:#000">p</span>[<span style="color:#000">i</span>].<span style="color:#000">diss</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">s</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> {<span style="color:#000">k</span> <span style="color:#000">-</span> <span style="color:#000">delta</span>, <span style="color:#000">k</span> <span style="color:#000">+</span> <span style="color:#000">delta</span>};
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">s</span>[<span style="color:#000">i</span>].<span style="color:#000">l</span> <span style="color:#000">&lt;</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">s</span>[<span style="color:#000">i</span>].<span style="color:#000">l</span> <span style="color:#000">+=</span> <span style="color:#000">pi2</span>, <span style="color:#000">s</span>[<span style="color:#000">i</span>].<span style="color:#000">r</span> <span style="color:#000">+=</span> <span style="color:#000">pi2</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">s</span>[<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#000">n</span>] <span style="color:#000">=</span> {<span style="color:#000">s</span>[<span style="color:#000">i</span>].<span style="color:#000">l</span> <span style="color:#000">+</span> <span style="color:#000">pi2</span>, <span style="color:#000">s</span>[<span style="color:#000">i</span>].<span style="color:#000">r</span> <span style="color:#000">+</span> <span style="color:#000">pi2</span>};
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">sort</span>(<span style="color:#000">s</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">s</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">+</span> <span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">n</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">f</span>[<span style="color:#000">n2</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>][<span style="color:#1c01ce">0</span>] <span style="color:#000">=</span> <span style="color:#000">n2</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">r</span> <span style="color:#000">=</span> <span style="color:#000">n2</span>, <span style="color:#000">l</span> <span style="color:#000">=</span> <span style="color:#000">n2</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (; <span style="color:#000">l</span>; <span style="color:#000">l</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">while</span> (<span style="color:#000">s</span>[<span style="color:#000">r</span>].<span style="color:#000">l</span> <span style="color:#000">&gt;</span> <span style="color:#000">s</span>[<span style="color:#000">l</span>].<span style="color:#000">r</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">r</span><span style="color:#000">--</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">f</span>[<span style="color:#000">l</span>][<span style="color:#1c01ce">0</span>] <span style="color:#000">=</span> <span style="color:#000">r</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#1c01ce">19</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n2</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">f</span>[<span style="color:#000">j</span>][<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">f</span>[<span style="color:#000">f</span>[<span style="color:#000">j</span>][<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>]][<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">end</span>(<span style="color:#000">i</span>, <span style="color:#000">m</span>) <span style="color:#000">&gt;=</span> <span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#000">n</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">return</span> <span style="color:#a90d91">true</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#a90d91">false</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">m</span>, <span style="color:#000">n2</span> <span style="color:#000">=</span> <span style="color:#000">n</span> <span style="color:#000">*</span> <span style="color:#1c01ce">2</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">double</span> <span style="color:#000">r</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1e18</span>, <span style="color:#000">l</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0.0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">p</span>[<span style="color:#000">i</span>].<span style="color:#000">x</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">p</span>[<span style="color:#000">i</span>].<span style="color:#000">y</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">r</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">min</span>(<span style="color:#000">p</span>[<span style="color:#000">i</span>].<span style="color:#000">dis</span>(), <span style="color:#000">r</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> (<span style="color:#000">r</span> <span style="color:#000">-</span> <span style="color:#000">l</span> <span style="color:#000">&gt;</span> <span style="color:#000">eps</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">double</span> <span style="color:#000">mid</span> <span style="color:#000">=</span> (<span style="color:#000">l</span> <span style="color:#000">+</span> <span style="color:#000">r</span>) <span style="color:#000">/</span> <span style="color:#1c01ce">2</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">check</span>(<span style="color:#000">mid</span>))
</span></span><span style="display:flex;"><span>            <span style="color:#000">l</span> <span style="color:#000">=</span> <span style="color:#000">mid</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>            <span style="color:#000">r</span> <span style="color:#000">=</span> <span style="color:#000">mid</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">printf</span>(<span style="color:#c41a16">&#34;%.10lf</span><span style="color:#c41a16">\\</span><span style="color:#c41a16">n&#34;</span>, <span style="color:#000">l</span>);
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="fhttpscodeforcescontest1190problemf"><a href="https://codeforc.es/contest/1190/problem/F">F</a></h2>
<h3 id="description-7">Description</h3>
<p>给出三个整数 $n,m,p$，试求出 $n$ 个互不相同的整数使得它们中的每个整数 $x$ 均满足以下条件：</p>
<ul>
<li>$x \in [0,m-1]$</li>
<li>$\gcd(m,x) = 1$</li>
<li>$\nexists e,k \in \mathbb{N},p^e = km+x$</li>
</ul>
<p>如果能够找到，输出可能的选择方案，否则输出 <code>-1</code>。</p>
<p>$1 \leq n \leq 5 \times 10^5 , 1 \leq p &lt; m \leq 10^{18}$，保证 $m$ 是某个质数的正整数次幂。</p>
<h3 id="solution-7">Solution</h3>
<p>完全不会，以下是从各路题解拼凑出来的东西。</p>
<p>明确一下题目要求，设 $S=\{x|x\in\mathbb Z,0\leq x&lt;m,\gcd(m,x)=1\},T=\{p^e\bmod m|e\in N\}$，我们需要从集合 $S-T$ 中找出 $n$ 个数。</p>
<p>设 $m=q^k$。</p>
<p>要判断有解，我们显然需要判断 $S-T$ 的大小。显然 $|S|=\varphi(m)=q^k-q^{k-1}=m(1-\dfrac{1}{q})$。</p>
<p>当 $\gcd(q,m)&gt;1$，$m$ 是 $q$ 的倍数，那么 $T=\{p^0\}=\{1\}$。（$0$ 不合法）此时 $|S-T|=\varphi(m)-1$，判是否有解然后暴力枚举一组解就行。</p>
<p>否则 $T\subseteq S$，我们需要求出来 $|T|$，集合 $T$ 肯定是循环的，其实就是求 $p$ 的阶 $\text{order(p)}$，这玩意是 $\varphi(m)$ 的约数，而约数个数是不多的，我们可以用 Pollard-Rou 分解质因数然后枚举因数检查就能知道 $p$ 的阶。那么如果 $\varphi(m)-\text{order}(p)&lt;n$，无解。</p>
<p>下面是构造解的过程：</p>
<p>当 $m$ 存在原根 $g$ 时，设 $p\equiv g^u\pmod m$，那么一个数 $p^e=g^{ue}\equiv g^{ue\ \bmod\ \varphi(m)}\pmod m$ （由欧拉定理）在 $T$ 中当且仅当关于 $e$ 的方程 $ue\equiv v\pmod{\varphi(m)}$ 有解。这个有解的充要条件是 $\gcd(u,\varphi(m))\mid v$。又由于 $(g^{u})^{\text{order}(p)}\equiv1\pmod m$，可以得出 $u=\dfrac{\varphi(m)}{\text{order}(p)}$（欧拉定理）。</p>
<p>这样就得出了不合法的数的性质，我们从小到大暴力枚举指数，检查是否合法即可。</p>
<p>当 $m$ 不存在原根即 $m=2^k,k\geq3$，且 $p$ 是奇数（因为要互质）。</p>
<p>用以下做法：</p>
<ul>
<li>当 $m\leq10^7$，暴力。</li>
<li>当 $p=4x+1$，$\forall e\in\mathbb N,p^e\equiv1\pmod4$，那么我们直接在模 $4$ 余 $3$ 的数里选即可，因为数据范围很大，总能找到。</li>
<li>当 $p=4x+3$，我们只能选模 $4$ 余 $1$ 的数，注意到在 $p^e$ 中，$1$ 和 $3$ 总是交替出现。那么把 $p$ 换成 $p^2$。还有一个事情是：在模 $2^k$（$k\geq3$）意义下，取一个伪原根 $g&rsquo;=5$，任意一个模 $4$ 余 $1$ 的数都可以用 $g&rsquo;$ 的若干次幂表示出。可以对 $k$ 用归纳法证明，我懒了。于是就用有原根的方法做即可。</li>
</ul>
<p>顺便一提，怎么找原根呢？上定理！</p>
<blockquote>
<p><strong>原根判定定理</strong>：设 $m \geqslant 3, \gcd(a,m)=1$，则 $a$ 是模 $m$ 的原根的充要条件是，对于 $\varphi(m)$ 的每个素因数 $p$，都有 $a^{\frac{\varphi(m)}{p}}\not\equiv 1\pmod m$。</p>
</blockquote>
<blockquote>
<p><strong>最小原根的数量级</strong>：若 $m$ 有原根，则其最小原根是不多于 $m^{0.25}$ 级别的。</p>
</blockquote>
<p>我们只需要分解质因数，然后从小到大原根枚举检验即可。</p>
<h3 id="code-6">Code</h3>
<p>不好写，因为这题实在太难，参考了 CF 上别人的代码。</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdlib&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;ctime&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;map&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;random&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;set&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cerr</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">typedef</span> <span style="color:#000">__int128_t</span> <span style="color:#000">ll</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">namespace</span> <span style="color:#000">IO</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">mxsiz</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">20</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">char</span> <span style="color:#000">inbuf</span>[<span style="color:#000">mxsiz</span>], <span style="color:#000">*</span><span style="color:#000">p1</span>, <span style="color:#000">*</span><span style="color:#000">p2</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">char</span> <span style="color:#000">outbuf</span>[<span style="color:#000">mxsiz</span>], <span style="color:#000">*</span><span style="color:#000">op</span> <span style="color:#000">=</span> <span style="color:#000">outbuf</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">struct</span> <span style="color:#3f6e75">endio</span>
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">endio</span>(){};
</span></span><span style="display:flex;"><span>        <span style="color:#000">~</span><span style="color:#000">endio</span>() { <span style="color:#000">fwrite</span>(<span style="color:#000">outbuf</span>, <span style="color:#1c01ce">1</span>, <span style="color:#000">op</span> <span style="color:#000">-</span> <span style="color:#000">outbuf</span>, <span style="color:#000">stdout</span>); }
</span></span><span style="display:flex;"><span>    } <span style="color:#000">useless_var</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">char</span> <span style="color:#000">gc</span>() { <span style="color:#a90d91">return</span> <span style="color:#000">p1</span> <span style="color:#000">==</span> <span style="color:#000">p2</span> <span style="color:#000">&amp;&amp;</span> (<span style="color:#000">p2</span> <span style="color:#000">=</span> (<span style="color:#000">p1</span> <span style="color:#000">=</span> <span style="color:#000">inbuf</span>) <span style="color:#000">+</span> <span style="color:#000">fread</span>(<span style="color:#000">inbuf</span>, <span style="color:#1c01ce">1</span>, <span style="color:#000">mxsiz</span>, <span style="color:#000">stdin</span>), <span style="color:#000">p1</span> <span style="color:#000">==</span> <span style="color:#000">p2</span>) <span style="color:#000">?</span> <span style="color:#000">EOF</span> : <span style="color:#000">*</span><span style="color:#000">p1</span><span style="color:#000">++</span>; }
</span></span><span style="display:flex;"><span><span style="color:#633820">#define isdigit(x) (x &gt;= &#39;0&#39; &amp;&amp; x &lt;= &#39;9&#39;) </span><span style="color:#177500">// 防止忘记打 &lt;cctype&gt; 头文件
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>    <span style="color:#a90d91">inline</span> <span style="color:#000">ll</span> <span style="color:#000">read</span>()
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">ll</span> <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">f</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">char</span> <span style="color:#000">ch</span> <span style="color:#000">=</span> <span style="color:#000">gc</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (; <span style="color:#000">!</span><span style="color:#000">isdigit</span>(<span style="color:#000">ch</span>); <span style="color:#000">ch</span> <span style="color:#000">=</span> <span style="color:#000">gc</span>())
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">ch</span> <span style="color:#000">==</span> <span style="color:#2300ce">&#39;-&#39;</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">f</span> <span style="color:#000">=</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (; <span style="color:#000">isdigit</span>(<span style="color:#000">ch</span>); <span style="color:#000">ch</span> <span style="color:#000">=</span> <span style="color:#000">gc</span>())
</span></span><span style="display:flex;"><span>            <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">x</span> <span style="color:#000">*</span> <span style="color:#1c01ce">10</span> <span style="color:#000">+</span> <span style="color:#000">ch</span> <span style="color:#000">-</span> <span style="color:#2300ce">&#39;0&#39;</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#000">x</span> <span style="color:#000">*</span> <span style="color:#000">f</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">template</span> <span style="color:#000">&lt;</span><span style="color:#a90d91">typename</span> <span style="color:#000">T</span><span style="color:#000">&gt;</span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">read</span>(<span style="color:#000">T</span> <span style="color:#000">&amp;</span><span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">f</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">char</span> <span style="color:#000">ch</span> <span style="color:#000">=</span> <span style="color:#000">gc</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (; <span style="color:#000">!</span><span style="color:#000">isdigit</span>(<span style="color:#000">ch</span>); <span style="color:#000">ch</span> <span style="color:#000">=</span> <span style="color:#000">gc</span>())
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">ch</span> <span style="color:#000">==</span> <span style="color:#2300ce">&#39;-&#39;</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">f</span> <span style="color:#000">=</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (; <span style="color:#000">isdigit</span>(<span style="color:#000">ch</span>); <span style="color:#000">ch</span> <span style="color:#000">=</span> <span style="color:#000">gc</span>())
</span></span><span style="display:flex;"><span>            <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">x</span> <span style="color:#000">*</span> <span style="color:#1c01ce">10</span> <span style="color:#000">+</span> <span style="color:#000">ch</span> <span style="color:#000">-</span> <span style="color:#2300ce">&#39;0&#39;</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">x</span> <span style="color:#000">*=</span> <span style="color:#000">f</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span><span style="color:#633820">#undef isdigit
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">bool</span> <span style="color:#000">ischar</span>(<span style="color:#a90d91">char</span> <span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#000">x</span> <span style="color:#000">&gt;=</span> <span style="color:#2300ce">&#39;A&#39;</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">x</span> <span style="color:#000">&lt;=</span> <span style="color:#2300ce">&#39;z&#39;</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">char</span> <span style="color:#000">readchar</span>()
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">char</span> <span style="color:#000">ch</span> <span style="color:#000">=</span> <span style="color:#000">gc</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">while</span> (<span style="color:#000">!</span><span style="color:#000">ischar</span>(<span style="color:#000">ch</span>))
</span></span><span style="display:flex;"><span>            <span style="color:#000">ch</span> <span style="color:#000">=</span> <span style="color:#000">gc</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#000">ch</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">push</span>(<span style="color:#a90d91">char</span> <span style="color:#000">ch</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">op</span> <span style="color:#000">-</span> <span style="color:#000">outbuf</span> <span style="color:#000">==</span> <span style="color:#000">mxsiz</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">fwrite</span>(<span style="color:#000">outbuf</span>, <span style="color:#1c01ce">1</span>, <span style="color:#000">mxsiz</span>, <span style="color:#000">stdout</span>), <span style="color:#000">op</span> <span style="color:#000">=</span> <span style="color:#000">outbuf</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">*</span><span style="color:#000">op</span><span style="color:#000">++</span> <span style="color:#000">=</span> <span style="color:#000">ch</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">template</span> <span style="color:#000">&lt;</span><span style="color:#a90d91">typename</span> <span style="color:#000">T</span><span style="color:#000">&gt;</span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">work_wt</span>(<span style="color:#000">T</span> <span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">x</span> <span style="color:#000">&gt;</span> <span style="color:#1c01ce">9</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">work_wt</span>(<span style="color:#000">x</span> <span style="color:#000">/</span> <span style="color:#1c01ce">10</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">push</span>(<span style="color:#000">x</span> <span style="color:#000">%</span> <span style="color:#1c01ce">10</span> <span style="color:#000">+</span> <span style="color:#2300ce">&#39;0&#39;</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">template</span> <span style="color:#000">&lt;</span><span style="color:#a90d91">typename</span> <span style="color:#000">T</span><span style="color:#000">&gt;</span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">write</span>(<span style="color:#000">T</span> <span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">x</span> <span style="color:#000">&lt;</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">-</span><span style="color:#000">x</span>, <span style="color:#000">push</span>(<span style="color:#2300ce">&#39;-&#39;</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">work_wt</span>(<span style="color:#000">x</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">writestr</span>(<span style="color:#a90d91">const</span> <span style="color:#a90d91">char</span> <span style="color:#000">*</span><span style="color:#000">s</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">n</span> <span style="color:#000">=</span> <span style="color:#000">strlen</span>(<span style="color:#000">s</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">push</span>(<span style="color:#000">s</span>[<span style="color:#000">i</span>]);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">endln</span>() { <span style="color:#000">push</span>(<span style="color:#000">&#39;\\</span><span style="color:#000">n</span><span style="color:#000">&#39;</span>); }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">space</span>() { <span style="color:#000">push</span>(<span style="color:#2300ce">&#39; &#39;</span>); }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">template</span> <span style="color:#000">&lt;</span><span style="color:#a90d91">typename</span> <span style="color:#000">T</span><span style="color:#000">&gt;</span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">writeln</span>(<span style="color:#000">T</span> <span style="color:#000">x</span>) { <span style="color:#000">write</span>(<span style="color:#000">x</span>), <span style="color:#000">endln</span>(); }
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#a90d91">namespace</span> <span style="color:#000">IO</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#000">ll</span> <span style="color:#000">inf</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1e18</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000">ll</span> <span style="color:#000">n</span>, <span style="color:#000">m</span>, <span style="color:#000">p</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000">ll</span> <span style="color:#000">gcd</span>(<span style="color:#000">ll</span> <span style="color:#000">a</span>, <span style="color:#000">ll</span> <span style="color:#000">b</span>) { <span style="color:#a90d91">return</span> <span style="color:#000">b</span> <span style="color:#000">==</span> <span style="color:#1c01ce">0</span> <span style="color:#000">?</span> <span style="color:#000">a</span> : <span style="color:#000">gcd</span>(<span style="color:#000">b</span>, <span style="color:#000">a</span> <span style="color:#000">%</span> <span style="color:#000">b</span>); }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000">ll</span> <span style="color:#000">qpow</span>(<span style="color:#000">ll</span> <span style="color:#000">a</span>, <span style="color:#000">ll</span> <span style="color:#000">x</span>, <span style="color:#000">ll</span> <span style="color:#000">p</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">ll</span> <span style="color:#000">res</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (; <span style="color:#000">x</span>; <span style="color:#000">x</span> <span style="color:#000">&gt;&gt;=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">a</span> <span style="color:#000">=</span> <span style="color:#000">a</span> <span style="color:#000">*</span> <span style="color:#000">a</span> <span style="color:#000">%</span> <span style="color:#000">p</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">x</span> <span style="color:#000">&amp;</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">res</span> <span style="color:#000">=</span> <span style="color:#000">res</span> <span style="color:#000">*</span> <span style="color:#000">a</span> <span style="color:#000">%</span> <span style="color:#000">p</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#000">res</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">bool</span> <span style="color:#000">MR</span>(<span style="color:#000">ll</span> <span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">x</span> <span style="color:#000">&lt;</span> <span style="color:#1c01ce">3</span> <span style="color:#000">||</span> <span style="color:#000">x</span> <span style="color:#000">%</span> <span style="color:#1c01ce">2</span> <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#000">x</span> <span style="color:#000">==</span> <span style="color:#1c01ce">2</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">ll</span> <span style="color:#000">a</span> <span style="color:#000">=</span> <span style="color:#000">x</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">b</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> (<span style="color:#000">a</span> <span style="color:#000">%</span> <span style="color:#1c01ce">2</span> <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">a</span> <span style="color:#000">/=</span> <span style="color:#1c01ce">2</span>, <span style="color:#000">b</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#000">ll</span> <span style="color:#000">times</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>, <span style="color:#000">j</span>; <span style="color:#000">times</span> <span style="color:#000">&lt;</span> <span style="color:#1c01ce">10</span>; <span style="color:#000">times</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">ll</span> <span style="color:#000">c</span> <span style="color:#000">=</span> <span style="color:#000">rand</span>() <span style="color:#000">%</span> (<span style="color:#000">x</span> <span style="color:#000">-</span> <span style="color:#1c01ce">2</span>) <span style="color:#000">+</span> <span style="color:#1c01ce">2</span>, <span style="color:#000">v</span> <span style="color:#000">=</span> <span style="color:#000">qpow</span>(<span style="color:#000">c</span>, <span style="color:#000">a</span>, <span style="color:#000">x</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">v</span> <span style="color:#000">==</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">continue</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;</span> <span style="color:#000">b</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">v</span> <span style="color:#000">==</span> <span style="color:#000">x</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">break</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">v</span> <span style="color:#000">=</span> <span style="color:#000">v</span> <span style="color:#000">*</span> <span style="color:#000">v</span> <span style="color:#000">%</span> <span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">j</span> <span style="color:#000">&gt;=</span> <span style="color:#000">b</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">return</span> <span style="color:#a90d91">false</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#a90d91">true</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000">ll</span> <span style="color:#000">myabs</span>(<span style="color:#000">ll</span> <span style="color:#000">x</span>) { <span style="color:#a90d91">return</span> <span style="color:#000">x</span> <span style="color:#000">&lt;</span> <span style="color:#1c01ce">0</span> <span style="color:#000">?</span> <span style="color:#000">-</span><span style="color:#000">x</span> : <span style="color:#000">x</span>; }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000">ll</span> <span style="color:#000">PR</span>(<span style="color:#000">ll</span> <span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">ll</span> <span style="color:#000">c</span> <span style="color:#000">=</span> <span style="color:#000">rand</span>() <span style="color:#000">%</span> (<span style="color:#000">x</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>) <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">val</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">s</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>, <span style="color:#000">t</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#000">ll</span> <span style="color:#000">lim</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;; <span style="color:#000">lim</span> <span style="color:#000">&lt;&lt;=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">s</span> <span style="color:#000">=</span> <span style="color:#000">t</span>, <span style="color:#000">val</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#000">ll</span> <span style="color:#000">step</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">step</span> <span style="color:#000">&lt;=</span> <span style="color:#000">lim</span>; <span style="color:#000">step</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">t</span> <span style="color:#000">=</span> (<span style="color:#000">t</span> <span style="color:#000">*</span> <span style="color:#000">t</span> <span style="color:#000">+</span> <span style="color:#000">c</span>) <span style="color:#000">%</span> <span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">val</span> <span style="color:#000">=</span> <span style="color:#000">val</span> <span style="color:#000">*</span> <span style="color:#000">myabs</span>(<span style="color:#000">t</span> <span style="color:#000">-</span> <span style="color:#000">s</span>) <span style="color:#000">%</span> <span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">step</span> <span style="color:#000">%</span> <span style="color:#1c01ce">127</span> <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>            {
</span></span><span style="display:flex;"><span>                <span style="color:#000">ll</span> <span style="color:#000">d</span> <span style="color:#000">=</span> <span style="color:#000">gcd</span>(<span style="color:#000">val</span>, <span style="color:#000">x</span>);
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">if</span> (<span style="color:#000">d</span> <span style="color:#000">&gt;</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>                    <span style="color:#a90d91">return</span> <span style="color:#000">d</span>;
</span></span><span style="display:flex;"><span>            }
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#000">ll</span> <span style="color:#000">d</span> <span style="color:#000">=</span> <span style="color:#000">gcd</span>(<span style="color:#000">val</span>, <span style="color:#000">x</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">d</span> <span style="color:#000">&gt;</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">return</span> <span style="color:#000">d</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">out_ans</span>(<span style="color:#a90d91">const</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">vector</span><span style="color:#000">&lt;</span><span style="color:#000">ll</span><span style="color:#000">&gt;</span> <span style="color:#000">&amp;</span><span style="color:#000">ans</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">ans</span>.<span style="color:#000">size</span>() <span style="color:#000">&lt;</span> <span style="color:#000">n</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">writeln</span>(<span style="color:#000">-</span><span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">write</span>(<span style="color:#000">ans</span>[<span style="color:#000">i</span>]), <span style="color:#000">space</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#000">endln</span>();
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">namespace</span> <span style="color:#000">BF</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxm</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1e7</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">bool</span> <span style="color:#000">vis</span>[<span style="color:#000">maxm</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">void</span> <span style="color:#000">solve</span>()
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">ll</span> <span style="color:#000">now</span> <span style="color:#000">=</span> <span style="color:#000">p</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">vis</span>[<span style="color:#1c01ce">1</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">while</span> (<span style="color:#000">!</span><span style="color:#000">vis</span>[<span style="color:#000">now</span>])
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">vis</span>[<span style="color:#000">now</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">now</span> <span style="color:#000">=</span> <span style="color:#000">now</span> <span style="color:#000">*</span> <span style="color:#000">p</span> <span style="color:#000">%</span> <span style="color:#000">m</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">m</span> <span style="color:#000">%</span> <span style="color:#000">i</span> <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>            {
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">*</span> <span style="color:#000">j</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                    <span style="color:#000">vis</span>[<span style="color:#000">i</span> <span style="color:#000">*</span> <span style="color:#000">j</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">break</span>;
</span></span><span style="display:flex;"><span>            }
</span></span><span style="display:flex;"><span>        <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">vector</span><span style="color:#000">&lt;</span><span style="color:#000">ll</span><span style="color:#000">&gt;</span> <span style="color:#000">ans</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">!</span><span style="color:#000">vis</span>[<span style="color:#000">i</span>])
</span></span><span style="display:flex;"><span>                <span style="color:#000">ans</span>.<span style="color:#000">push_back</span>(<span style="color:#000">i</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">out_ans</span>(<span style="color:#000">ans</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">struct</span> <span style="color:#3f6e75">primes</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">ll</span> <span style="color:#000">val</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">times</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">bool</span> <span style="color:#a90d91">operator</span><span style="color:#000">&lt;</span>(<span style="color:#a90d91">const</span> <span style="color:#000">primes</span> <span style="color:#000">&amp;</span><span style="color:#000">b</span>) <span style="color:#a90d91">const</span> { <span style="color:#a90d91">return</span> <span style="color:#000">val</span> <span style="color:#000">&lt;</span> <span style="color:#000">b</span>.<span style="color:#000">val</span>; }
</span></span><span style="display:flex;"><span>};
</span></span><span style="display:flex;"><span><span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">vector</span><span style="color:#000">&lt;</span><span style="color:#000">primes</span><span style="color:#000">&gt;</span> <span style="color:#000">all</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">PF</span>(<span style="color:#000">ll</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">times</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">x</span> <span style="color:#000">==</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">MR</span>(<span style="color:#000">x</span>))
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">all</span>.<span style="color:#000">push_back</span>({<span style="color:#000">x</span>, <span style="color:#000">times</span>});
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">ll</span> <span style="color:#000">g</span> <span style="color:#000">=</span> <span style="color:#000">x</span>, <span style="color:#000">t</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> (<span style="color:#000">g</span> <span style="color:#000">&gt;=</span> <span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">g</span> <span style="color:#000">=</span> <span style="color:#000">PR</span>(<span style="color:#000">g</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> (<span style="color:#000">x</span> <span style="color:#000">%</span> <span style="color:#000">g</span> <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">x</span> <span style="color:#000">/=</span> <span style="color:#000">g</span>, <span style="color:#000">t</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">PF</span>(<span style="color:#000">g</span>, <span style="color:#000">times</span> <span style="color:#000">*</span> <span style="color:#000">t</span>), <span style="color:#000">PF</span>(<span style="color:#000">x</span>, <span style="color:#000">times</span>);
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">find_order</span>(<span style="color:#a90d91">int</span> <span style="color:#000">pos</span>, <span style="color:#000">ll</span> <span style="color:#000">val</span>, <span style="color:#000">ll</span> <span style="color:#000">&amp;</span><span style="color:#000">ans</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">pos</span> <span style="color:#000">==</span> (<span style="color:#a90d91">int</span>)<span style="color:#000">all</span>.<span style="color:#000">size</span>())
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">qpow</span>(<span style="color:#000">p</span>, <span style="color:#000">val</span>, <span style="color:#000">m</span>) <span style="color:#000">==</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">min</span>(<span style="color:#000">ans</span>, <span style="color:#000">val</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">all</span>[<span style="color:#000">pos</span>].<span style="color:#000">times</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">find_order</span>(<span style="color:#000">pos</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">val</span>, <span style="color:#000">ans</span>), <span style="color:#000">val</span> <span style="color:#000">=</span> <span style="color:#000">val</span> <span style="color:#000">*</span> <span style="color:#000">all</span>[<span style="color:#000">pos</span>].<span style="color:#000">val</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">map</span><span style="color:#000">&lt;</span><span style="color:#000">ll</span>, <span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">mp</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">n</span> <span style="color:#000">=</span> <span style="color:#000">read</span>(), <span style="color:#000">m</span> <span style="color:#000">=</span> <span style="color:#000">read</span>(), <span style="color:#000">p</span> <span style="color:#000">=</span> <span style="color:#000">read</span>();
</span></span><span style="display:flex;"><span>    <span style="color:#000">srand</span>(<span style="color:#000">time</span>(<span style="color:#1c01ce">0</span>));
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">m</span> <span style="color:#000">&lt;=</span> <span style="color:#1c01ce">1e7</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">BF</span><span style="color:#000">::</span><span style="color:#000">solve</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">vector</span><span style="color:#000">&lt;</span><span style="color:#000">ll</span><span style="color:#000">&gt;</span> <span style="color:#000">ans</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">PF</span>(<span style="color:#000">m</span>, <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">ll</span> <span style="color:#000">q</span> <span style="color:#000">=</span> <span style="color:#000">all</span>[<span style="color:#1c01ce">0</span>].<span style="color:#000">val</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">p</span> <span style="color:#000">%</span> <span style="color:#000">q</span> <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#000">ll</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">ans</span>.<span style="color:#000">size</span>() <span style="color:#000">&lt;</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">i</span> <span style="color:#000">%</span> <span style="color:#000">q</span> <span style="color:#000">!=</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">ans</span>.<span style="color:#000">push_back</span>(<span style="color:#000">i</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">out_ans</span>(<span style="color:#000">ans</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">all</span>.<span style="color:#000">clear</span>();
</span></span><span style="display:flex;"><span>    <span style="color:#000">ll</span> <span style="color:#000">phi</span> <span style="color:#000">=</span> <span style="color:#000">m</span> <span style="color:#000">-</span> <span style="color:#000">m</span> <span style="color:#000">/</span> <span style="color:#000">q</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">PF</span>(<span style="color:#000">phi</span>, <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">auto</span> <span style="color:#000">k</span> : <span style="color:#000">all</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">mp</span>[<span style="color:#000">k</span>.<span style="color:#000">val</span>] <span style="color:#000">+=</span> <span style="color:#000">k</span>.<span style="color:#000">times</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">all</span>.<span style="color:#000">clear</span>();
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">auto</span> <span style="color:#000">k</span> : <span style="color:#000">mp</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">all</span>.<span style="color:#000">push_back</span>({<span style="color:#000">k</span>.<span style="color:#000">first</span>, <span style="color:#000">k</span>.<span style="color:#000">second</span>});
</span></span><span style="display:flex;"><span>    <span style="color:#000">ll</span> <span style="color:#000">order</span> <span style="color:#000">=</span> <span style="color:#000">inf</span>, <span style="color:#000">g</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">find_order</span>(<span style="color:#1c01ce">0</span>, <span style="color:#1c01ce">1</span>, <span style="color:#000">order</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">phi</span> <span style="color:#000">-</span> <span style="color:#000">order</span> <span style="color:#000">&lt;</span> <span style="color:#000">n</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">writeln</span>(<span style="color:#000">-</span><span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">q</span> <span style="color:#000">==</span> <span style="color:#1c01ce">2</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">p</span> <span style="color:#000">%</span> <span style="color:#1c01ce">4</span> <span style="color:#000">==</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#000">ll</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">3</span>; <span style="color:#000">ans</span>.<span style="color:#000">size</span>() <span style="color:#000">&lt;</span> <span style="color:#000">n</span>; <span style="color:#000">i</span> <span style="color:#000">+=</span> <span style="color:#1c01ce">4</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">ans</span>.<span style="color:#000">push_back</span>(<span style="color:#000">i</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">p</span> <span style="color:#000">=</span> <span style="color:#000">p</span> <span style="color:#000">*</span> <span style="color:#000">p</span> <span style="color:#000">%</span> <span style="color:#000">m</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">g</span> <span style="color:#000">=</span> <span style="color:#1c01ce">5</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#000">ll</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">now</span> <span style="color:#000">=</span> <span style="color:#000">g</span>; <span style="color:#000">ans</span>.<span style="color:#000">size</span>() <span style="color:#000">&lt;</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>, <span style="color:#000">now</span> <span style="color:#000">=</span> <span style="color:#000">now</span> <span style="color:#000">*</span> <span style="color:#000">g</span> <span style="color:#000">%</span> <span style="color:#000">m</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">if</span> (<span style="color:#000">i</span> <span style="color:#000">%</span> (<span style="color:#000">phi</span> <span style="color:#000">/</span> <span style="color:#000">order</span>) <span style="color:#000">!=</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>                    <span style="color:#000">ans</span>.<span style="color:#000">push_back</span>(<span style="color:#000">now</span>);
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#000">ll</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2</span>;; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">bool</span> <span style="color:#000">flag</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;</span> (<span style="color:#a90d91">int</span>)<span style="color:#000">all</span>.<span style="color:#000">size</span>() <span style="color:#000">&amp;&amp;</span> <span style="color:#000">flag</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">flag</span> <span style="color:#000">&amp;=</span> <span style="color:#000">qpow</span>(<span style="color:#000">i</span>, <span style="color:#000">phi</span> <span style="color:#000">/</span> <span style="color:#000">all</span>[<span style="color:#000">j</span>].<span style="color:#000">val</span>, <span style="color:#000">m</span>) <span style="color:#000">!=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">flag</span>)
</span></span><span style="display:flex;"><span>            {
</span></span><span style="display:flex;"><span>                <span style="color:#000">g</span> <span style="color:#000">=</span> <span style="color:#000">i</span>;
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">break</span>;
</span></span><span style="display:flex;"><span>            }
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#000">ll</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">now</span> <span style="color:#000">=</span> <span style="color:#000">g</span>; <span style="color:#000">ans</span>.<span style="color:#000">size</span>() <span style="color:#000">&lt;</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>, <span style="color:#000">now</span> <span style="color:#000">=</span> <span style="color:#000">now</span> <span style="color:#000">*</span> <span style="color:#000">g</span> <span style="color:#000">%</span> <span style="color:#000">m</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">i</span> <span style="color:#000">%</span> (<span style="color:#000">phi</span> <span style="color:#000">/</span> <span style="color:#000">order</span>) <span style="color:#000">!=</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">ans</span>.<span style="color:#000">push_back</span>(<span style="color:#000">now</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">out_ans</span>(<span style="color:#000">ans</span>);
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div>]]></content:encoded>
    </item>
    
    <item>
      <title>Codeforces Round 495 (Div. 2)</title>
      <link>https://luoyisu.github.io/posts/cf-contest1004/</link>
      <pubDate>Tue, 14 Dec 2021 13:38:13 +0000</pubDate>
      
      <guid>https://luoyisu.github.io/posts/cf-contest1004/</guid>
      <description>&lt;p&gt;还行吧，但我实在太菜了，水题都不会做&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>还行吧，但我实在太菜了，水题都不会做</p>
<h2 id="ahttpscodeforcescomcontest1004problema"><a href="https://codeforces.com/contest/1004/problem/A">A</a></h2>
<h3 id="description">Description</h3>
<p>数轴上 $n$ 个点，求离最近的点的距离恰好为 $d$ 的点的数目。</p>
<h3 id="solution">Solution</h3>
<p>扫一遍，我直接用 <code>set</code> 去重（）</p>
<h3 id="code">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;set&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">110</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">a</span>[<span style="color:#000">maxn</span>], <span style="color:#000">n</span>, <span style="color:#000">d</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">d</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">set</span><span style="color:#000">&lt;</span><span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span><span style="color:#000">&gt;</span> <span style="color:#000">S</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">a</span>[<span style="color:#1c01ce">0</span>] <span style="color:#000">=</span> <span style="color:#000">-</span><span style="color:#1c01ce">5e9</span>, <span style="color:#000">a</span>[<span style="color:#000">n</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">5e9</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">nxt</span> <span style="color:#000">=</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>] <span style="color:#000">+</span> <span style="color:#000">d</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">a</span>[<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">-</span> <span style="color:#000">nxt</span> <span style="color:#000">&gt;=</span> <span style="color:#000">d</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">S</span>.<span style="color:#000">insert</span>(<span style="color:#000">nxt</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">nxt</span> <span style="color:#000">=</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>] <span style="color:#000">-</span> <span style="color:#000">d</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">nxt</span> <span style="color:#000">-</span> <span style="color:#000">a</span>[<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">&gt;=</span> <span style="color:#000">d</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">S</span>.<span style="color:#000">insert</span>(<span style="color:#000">nxt</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">S</span>.<span style="color:#000">size</span>() <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="bhttpscodeforcescomcontest1004problemb"><a href="https://codeforces.com/contest/1004/problem/B">B</a></h2>
<h3 id="description-1">Description</h3>
<p>一个长度为 $n$ 的 $01$ 串，给出 $m$ 个区间，每个区间权值是区间里 $1$ 的数目乘 $0$​​ 的数目。输出总权值最大的串。</p>
<h3 id="solution-1">Solution</h3>
<p>和同近积大，直接 $0$ 和 $1$ 交替输出就行。</p>
<h3 id="code-1">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#000">n</span>, <span style="color:#000">m</span> <span style="color:#000">=</span> <span style="color:#a90d91">map</span>(<span style="color:#a90d91">int</span>, <span style="color:#a90d91">input</span>()<span style="color:#000">.</span><span style="color:#000">split</span>())
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">for</span> <span style="color:#000">i</span> <span style="color:#000">in</span> <span style="color:#a90d91">range</span>(<span style="color:#000">n</span>):
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> <span style="color:#000">i</span> <span style="color:#000">%</span> <span style="color:#1c01ce">2</span> <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>:
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">print</span>(<span style="color:#1c01ce">0</span>, <span style="color:#000">end</span><span style="color:#000">=</span><span style="color:#c41a16">&#39;&#39;</span>)
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">else</span>:
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">print</span>(<span style="color:#1c01ce">1</span>, <span style="color:#000">end</span><span style="color:#000">=</span><span style="color:#c41a16">&#39;&#39;</span>)
</span></span></code></pre></div><h2 id="chttpscodeforcescomcontest1004problemc"><a href="https://codeforces.com/contest/1004/problem/C">C</a></h2>
<h3 id="description-2">Description</h3>
<p>给你 $n$ 个数，从每一个数起向后找一个数，这两个数组成一个数对，求一共有多少个数对。（去掉重复的）</p>
<h3 id="solution-2">Solution</h3>
<p>一个数最优答案肯定在最左面，我们开个桶然后倒着更新答案即可。</p>
<h3 id="code-2">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;set&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1e5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">a</span>[<span style="color:#000">maxn</span>], <span style="color:#000">n</span>, <span style="color:#000">b</span>[<span style="color:#000">maxn</span>], <span style="color:#000">ans</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">sum</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span> <span style="color:#000">&gt;=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">ans</span>[<span style="color:#000">a</span>[<span style="color:#000">i</span>]] <span style="color:#000">=</span> <span style="color:#000">sum</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">sum</span> <span style="color:#000">-=</span> <span style="color:#000">b</span>[<span style="color:#000">a</span>[<span style="color:#000">i</span>]];
</span></span><span style="display:flex;"><span>        <span style="color:#000">b</span>[<span style="color:#000">a</span>[<span style="color:#000">i</span>]] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">sum</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">res</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#1c01ce">1e5</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">res</span> <span style="color:#000">+=</span> <span style="color:#000">ans</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">res</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;    
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="dhttpscodeforcescomcontest1004problemd"><a href="https://codeforces.com/contest/1004/problem/D">D</a></h2>
<h3 id="description-3">Description</h3>
<p>定义一种矩阵是菱形矩阵，其大小是 $n\times m$；满足以下条件：有且只有一个格子的值是 $0$，其他格子的值是到值为 $0$ 的格子的曼哈顿距离。</p>
<p>给出 $t$​ 个数，问这些数能不能构造出一个菱形矩阵。如果可以，输出其 $n,m$​，以及值为 $0$​​​ 的格子的坐标。</p>
<p>$t\leq10^6$。</p>
<h3 id="solution-3">Solution</h3>
<p>首先发现矩阵是可以旋转的，这肯定不影响。</p>
<p>如果矩阵无限大，那每个数的数量是 $4\times n$。</p>
<p>手玩一下样例可以发现第一个不符合上面要求的数（即出到矩阵外了）一定是值为 $0$​ 的数的横坐标或纵坐标。</p>
<p>这样我们就确定了 $x$。</p>
<p>证明不写了，懒，挺显然的。</p>
<p>我们可以枚举 $n$​，同时也就确定了 $m$​。想一想怎么确定 $y$​——找找奇怪的性质。</p>
<p>发现最大的数一定在一个角上，那随便算一下就知道 $y=n+m-mx$​，$mx$ 是给出的最大的数。</p>
<p>发现我们现在时间复杂度还很充裕，且已经知道了 $x,y,n,m$，只需要 check 一下，那怎么 check 呢？当然是暴力了！（）（）（）</p>
<p>时间复杂度 $O(t)$ 乘上 $t$ 的因数个数，这玩意显然能过。（因为很难跑满）</p>
<h3 id="code-3">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;set&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cmath&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1e6</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">cnt</span>[<span style="color:#000">maxn</span>], <span style="color:#000">n</span>, <span style="color:#000">t</span>, <span style="color:#000">m</span>, <span style="color:#000">x</span>, <span style="color:#000">y</span>, <span style="color:#000">mx</span>, <span style="color:#000">tot</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">bool</span> <span style="color:#000">check</span>(<span style="color:#a90d91">int</span> <span style="color:#000">n</span>, <span style="color:#a90d91">int</span> <span style="color:#000">m</span>, <span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">mx</span> <span style="color:#000">+</span> <span style="color:#1c01ce">5</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">tot</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">tot</span>[<span style="color:#000">abs</span>(<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#000">x</span>) <span style="color:#000">+</span> <span style="color:#000">abs</span>(<span style="color:#000">j</span> <span style="color:#000">-</span> <span style="color:#000">y</span>)]<span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">mx</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">cnt</span>[<span style="color:#000">i</span>] <span style="color:#000">!=</span> <span style="color:#000">tot</span>[<span style="color:#000">i</span>])
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">return</span> <span style="color:#a90d91">false</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#a90d91">true</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">ios</span><span style="color:#000">::</span><span style="color:#000">sync_with_stdio</span>(<span style="color:#a90d91">false</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">t</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>, <span style="color:#000">p</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">t</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">p</span>, <span style="color:#000">cnt</span>[<span style="color:#000">p</span>]<span style="color:#000">++</span>, <span style="color:#000">mx</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">max</span>(<span style="color:#000">mx</span>, <span style="color:#000">p</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">cnt</span>[<span style="color:#1c01ce">0</span>] <span style="color:#000">!=</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">t</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">cnt</span>[<span style="color:#000">i</span>] <span style="color:#000">!=</span> <span style="color:#000">i</span> <span style="color:#000">*</span> <span style="color:#1c01ce">4</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">i</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">break</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#000">n</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">n</span> <span style="color:#000">&lt;=</span> <span style="color:#000">t</span>; <span style="color:#000">n</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">t</span> <span style="color:#000">%</span> <span style="color:#000">n</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">continue</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">m</span> <span style="color:#000">=</span> <span style="color:#000">t</span> <span style="color:#000">/</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">y</span> <span style="color:#000">=</span> <span style="color:#000">m</span> <span style="color:#000">+</span> <span style="color:#000">n</span> <span style="color:#000">-</span> <span style="color:#000">x</span> <span style="color:#000">-</span> <span style="color:#000">mx</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">y</span> <span style="color:#000">&gt;</span> <span style="color:#1c01ce">0</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">check</span>(<span style="color:#000">n</span>, <span style="color:#000">m</span>, <span style="color:#000">x</span>, <span style="color:#000">y</span>))
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">n</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">m</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">x</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">y</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">return</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="ehttpscodeforcescomcontest1004probleme"><a href="https://codeforces.com/contest/1004/problem/E">E</a></h2>
<h3 id="description-4">Description</h3>
<p>给出一个 $n$ 个结点的带权树和 $k$，找出一条点数不大于 $k$​​ 的路径，使得路径外的点到路径的距离的最大值最小。求这个最小的最大值。$n\leq10^5$。</p>
<h3 id="solution-4">Solution</h3>
<p>和树网的核一样。甚至更简单</p>
<p>树上路径、最小、最大，去想一想直径。</p>
<p>能证明这条路径一定在任意一条直径上。</p>
<p>于是对于一条路径分两种情况。到路径距离最大的点可能是直径的两个段点之一，也可能在路径上某个点的子树内。</p>
<p>对前者直接双指针即可，后者搜一遍就行。</p>
<p>时间复杂度 $O(n)$​。</p>
<h3 id="code-4">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1e5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">struct</span> <span style="color:#3f6e75">edge</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">y</span>, <span style="color:#000">w</span>;
</span></span><span style="display:flex;"><span>};
</span></span><span style="display:flex;"><span><span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">vector</span><span style="color:#000">&lt;</span><span style="color:#000">edge</span><span style="color:#000">&gt;</span> <span style="color:#000">e</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">add</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>, <span style="color:#a90d91">int</span> <span style="color:#000">w</span>) { <span style="color:#000">e</span>[<span style="color:#000">x</span>].<span style="color:#000">push_back</span>({<span style="color:#000">y</span>, <span style="color:#000">w</span>}), <span style="color:#000">e</span>[<span style="color:#000">y</span>].<span style="color:#000">push_back</span>({<span style="color:#000">x</span>, <span style="color:#000">w</span>}); }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">n</span>, <span style="color:#000">k</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">dis</span>[<span style="color:#000">maxn</span>], <span style="color:#000">father</span>[<span style="color:#000">maxn</span>], <span style="color:#000">ind</span>[<span style="color:#000">maxn</span>], <span style="color:#000">dep</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">dfs</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">fa</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">father</span>[<span style="color:#000">x</span>] <span style="color:#000">=</span> <span style="color:#000">fa</span>, <span style="color:#000">dep</span>[<span style="color:#000">x</span>] <span style="color:#000">=</span> <span style="color:#000">dep</span>[<span style="color:#000">fa</span>] <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">auto</span> <span style="color:#000">k</span> : <span style="color:#000">e</span>[<span style="color:#000">x</span>])
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">k</span>.<span style="color:#000">y</span> <span style="color:#000">==</span> <span style="color:#000">fa</span> <span style="color:#000">||</span> <span style="color:#000">ind</span>[<span style="color:#000">k</span>.<span style="color:#000">y</span>])
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">continue</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">v</span> <span style="color:#000">=</span> <span style="color:#000">k</span>.<span style="color:#000">y</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">dis</span>[<span style="color:#000">v</span>] <span style="color:#000">=</span> <span style="color:#000">dis</span>[<span style="color:#000">x</span>] <span style="color:#000">+</span> <span style="color:#000">k</span>.<span style="color:#000">w</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">dfs</span>(<span style="color:#000">v</span>, <span style="color:#000">x</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">find_root</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">res</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">dis</span>[<span style="color:#000">i</span>] <span style="color:#000">&gt;</span> <span style="color:#000">dis</span>[<span style="color:#000">res</span>])
</span></span><span style="display:flex;"><span>            <span style="color:#000">res</span> <span style="color:#000">=</span> <span style="color:#000">i</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#000">res</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">ios</span><span style="color:#000">::</span><span style="color:#000">sync_with_stdio</span>(<span style="color:#a90d91">false</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">k</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">x</span>, <span style="color:#000">w</span>, <span style="color:#000">y</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">x</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">y</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">w</span>, <span style="color:#000">add</span>(<span style="color:#000">x</span>, <span style="color:#000">y</span>, <span style="color:#000">w</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">dfs</span>(<span style="color:#1c01ce">1</span>, <span style="color:#1c01ce">0</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">root</span> <span style="color:#000">=</span> <span style="color:#000">find_root</span>();
</span></span><span style="display:flex;"><span>    <span style="color:#000">dis</span>[<span style="color:#000">root</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;  
</span></span><span style="display:flex;"><span>    <span style="color:#000">dfs</span>(<span style="color:#000">root</span>, <span style="color:#1c01ce">0</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">root</span> <span style="color:#000">=</span> <span style="color:#000">find_root</span>();
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">30</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">n</span> <span style="color:#000">==</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">puts</span>(<span style="color:#c41a16">&#34;0&#34;</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#000">root</span>, <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#000">root</span>; <span style="color:#000">i</span>; <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#000">father</span>[<span style="color:#000">i</span>])
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">while</span> (<span style="color:#000">father</span>[<span style="color:#000">j</span>] <span style="color:#000">&amp;&amp;</span> <span style="color:#000">dep</span>[<span style="color:#000">i</span>] <span style="color:#000">-</span> <span style="color:#000">dep</span>[<span style="color:#000">j</span>] <span style="color:#000">&lt;</span> <span style="color:#000">k</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#000">father</span>[<span style="color:#000">j</span>];
</span></span><span style="display:flex;"><span>        <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">min</span>(<span style="color:#000">ans</span>, <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">max</span>(<span style="color:#000">dis</span>[<span style="color:#000">j</span>], <span style="color:#000">dis</span>[<span style="color:#000">root</span>] <span style="color:#000">-</span> <span style="color:#000">dis</span>[<span style="color:#000">i</span>]));
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">p</span> <span style="color:#000">=</span> <span style="color:#000">root</span>; <span style="color:#000">p</span>; <span style="color:#000">p</span> <span style="color:#000">=</span> <span style="color:#000">father</span>[<span style="color:#000">p</span>])
</span></span><span style="display:flex;"><span>        <span style="color:#000">ind</span>[<span style="color:#000">p</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">dis</span>[<span style="color:#000">p</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">p</span> <span style="color:#000">=</span> <span style="color:#000">root</span>; <span style="color:#000">p</span>; <span style="color:#000">p</span> <span style="color:#000">=</span> <span style="color:#000">father</span>[<span style="color:#000">p</span>])
</span></span><span style="display:flex;"><span>        <span style="color:#000">dfs</span>(<span style="color:#000">p</span>, <span style="color:#000">father</span>[<span style="color:#000">p</span>]);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">max</span>(<span style="color:#000">ans</span>, <span style="color:#000">dis</span>[<span style="color:#000">i</span>]);
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">ans</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="fhttpscodeforcescomcontest1004problemf"><a href="https://codeforces.com/contest/1004/problem/F">F</a></h2>
<h3 id="description-5">Description</h3>
<p>有一个长度为 $n$​ 的序列，有两种操作。</p>
<ul>
<li>
<p>操作一：将 $a_i$ 修改为 $y$；</p>
</li>
<li>
<p>操作二：给出 $l,r$，求 $[l,r]$ 内有几个子区间内所有数按位或起来的结果大于等于 $X$（$X$ 在题目一开始给出，为定值）。</p>
</li>
</ul>
<p>$n,m\leq10^5$。</p>
<h3 id="solution-5">Solution</h3>
<p>难，我看了题解。</p>
<p>先考虑如果只有一次询问怎么办。</p>
<p>能（能吗？）想到一个分治算法：把 $[l,r]$ 的询问拆成 $[l,mid],[mid+1,r]$，求出解，然后合并这两个区间。</p>
<p>具体怎么得出大区间的解呢？我们联想区间最长连续子段和的做法，求出每个区间的前缀或和后缀或。</p>
<p>这样我们可以用双指针得到两个区间合并后的解。</p>
<p>单点修改，区间查询，显然我们需要线段树来维护这个东西。</p>
<p>那怎么把上面这个做法推广到线段树上呢？好像直接做不太行，我们显然需要看一看或运算的性质。</p>
<p>一个数或另一个数之后最少只变了 $1$​ 位，且不会变回去，也就是说每个区间前缀/后缀或应该是分成至多 $\log a_i$​ 段的，我们用 <code>vector</code> 维护这个值，就能做到 $O(\log a_i)$​ 合并了。</p>
<p>那我们用线段树维护，把得到的这 $\log n$​ 个区间依次合并起来就行。</p>
<p>这时候发现时间复杂度是 $O(m\log n\log a_i)$。</p>
<p>后来我双指针写挂了，一怒之下把双指针换成了暴力合并，复杂度是 $O(m\log n\log^2a_i)$​，也能轻松通过。​</p>
<p>注意位运算的优先级。</p>
<h3 id="code-5">Code</h3>
<p>建议把所有函数规划好再写，然后想一些简单的方法来简化代码。</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cerr</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">namespace</span> <span style="color:#000">IO</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">mxsiz</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">20</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">char</span> <span style="color:#000">inbuf</span>[<span style="color:#000">mxsiz</span>], <span style="color:#000">*</span><span style="color:#000">p1</span>, <span style="color:#000">*</span><span style="color:#000">p2</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">char</span> <span style="color:#000">outbuf</span>[<span style="color:#000">mxsiz</span>], <span style="color:#000">*</span><span style="color:#000">op</span> <span style="color:#000">=</span> <span style="color:#000">outbuf</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">struct</span> <span style="color:#3f6e75">endio</span>
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">endio</span>(){};
</span></span><span style="display:flex;"><span>        <span style="color:#000">~</span><span style="color:#000">endio</span>() { <span style="color:#000">fwrite</span>(<span style="color:#000">outbuf</span>, <span style="color:#1c01ce">1</span>, <span style="color:#000">op</span> <span style="color:#000">-</span> <span style="color:#000">outbuf</span>, <span style="color:#000">stdout</span>); }
</span></span><span style="display:flex;"><span>    } <span style="color:#000">useless_var</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">char</span> <span style="color:#000">gc</span>() { <span style="color:#a90d91">return</span> <span style="color:#000">p1</span> <span style="color:#000">==</span> <span style="color:#000">p2</span> <span style="color:#000">&amp;&amp;</span> (<span style="color:#000">p2</span> <span style="color:#000">=</span> (<span style="color:#000">p1</span> <span style="color:#000">=</span> <span style="color:#000">inbuf</span>) <span style="color:#000">+</span> <span style="color:#000">fread</span>(<span style="color:#000">inbuf</span>, <span style="color:#1c01ce">1</span>, <span style="color:#000">mxsiz</span>, <span style="color:#000">stdin</span>), <span style="color:#000">p1</span> <span style="color:#000">==</span> <span style="color:#000">p2</span>) <span style="color:#000">?</span> <span style="color:#000">EOF</span> : <span style="color:#000">*</span><span style="color:#000">p1</span><span style="color:#000">++</span>; }
</span></span><span style="display:flex;"><span><span style="color:#633820">#define isdigit(x) (x &gt;= &#39;0&#39; &amp;&amp; x &lt;= &#39;9&#39;) </span><span style="color:#177500">// 防止忘记打 &lt;cctype&gt; 头文件
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">int</span> <span style="color:#000">read</span>()
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>, <span style="color:#000">f</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">char</span> <span style="color:#000">ch</span> <span style="color:#000">=</span> <span style="color:#000">gc</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (; <span style="color:#000">!</span><span style="color:#000">isdigit</span>(<span style="color:#000">ch</span>); <span style="color:#000">ch</span> <span style="color:#000">=</span> <span style="color:#000">gc</span>())
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">ch</span> <span style="color:#000">==</span> <span style="color:#2300ce">&#39;-&#39;</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">f</span> <span style="color:#000">=</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (; <span style="color:#000">isdigit</span>(<span style="color:#000">ch</span>); <span style="color:#000">ch</span> <span style="color:#000">=</span> <span style="color:#000">gc</span>())
</span></span><span style="display:flex;"><span>            <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">x</span> <span style="color:#000">*</span> <span style="color:#1c01ce">10</span> <span style="color:#000">+</span> <span style="color:#000">ch</span> <span style="color:#000">-</span> <span style="color:#2300ce">&#39;0&#39;</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#000">x</span> <span style="color:#000">*</span> <span style="color:#000">f</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">template</span> <span style="color:#000">&lt;</span><span style="color:#a90d91">typename</span> <span style="color:#000">T</span><span style="color:#000">&gt;</span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">read</span>(<span style="color:#000">T</span> <span style="color:#000">&amp;</span><span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">f</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">char</span> <span style="color:#000">ch</span> <span style="color:#000">=</span> <span style="color:#000">gc</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (; <span style="color:#000">!</span><span style="color:#000">isdigit</span>(<span style="color:#000">ch</span>); <span style="color:#000">ch</span> <span style="color:#000">=</span> <span style="color:#000">gc</span>())
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">ch</span> <span style="color:#000">==</span> <span style="color:#2300ce">&#39;-&#39;</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">f</span> <span style="color:#000">=</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (; <span style="color:#000">isdigit</span>(<span style="color:#000">ch</span>); <span style="color:#000">ch</span> <span style="color:#000">=</span> <span style="color:#000">gc</span>())
</span></span><span style="display:flex;"><span>            <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">x</span> <span style="color:#000">*</span> <span style="color:#1c01ce">10</span> <span style="color:#000">+</span> <span style="color:#000">ch</span> <span style="color:#000">-</span> <span style="color:#2300ce">&#39;0&#39;</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">x</span> <span style="color:#000">*=</span> <span style="color:#000">f</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span><span style="color:#633820">#undef isdigit
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">bool</span> <span style="color:#000">ischar</span>(<span style="color:#a90d91">char</span> <span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#000">x</span> <span style="color:#000">&gt;=</span> <span style="color:#2300ce">&#39;A&#39;</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">x</span> <span style="color:#000">&lt;=</span> <span style="color:#2300ce">&#39;z&#39;</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">char</span> <span style="color:#000">readchar</span>()
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">char</span> <span style="color:#000">ch</span> <span style="color:#000">=</span> <span style="color:#000">gc</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">while</span> (<span style="color:#000">!</span><span style="color:#000">ischar</span>(<span style="color:#000">ch</span>))
</span></span><span style="display:flex;"><span>            <span style="color:#000">ch</span> <span style="color:#000">=</span> <span style="color:#000">gc</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#000">ch</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">push</span>(<span style="color:#a90d91">char</span> <span style="color:#000">ch</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">op</span> <span style="color:#000">-</span> <span style="color:#000">outbuf</span> <span style="color:#000">==</span> <span style="color:#000">mxsiz</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">fwrite</span>(<span style="color:#000">outbuf</span>, <span style="color:#1c01ce">1</span>, <span style="color:#000">mxsiz</span>, <span style="color:#000">stdout</span>), <span style="color:#000">op</span> <span style="color:#000">=</span> <span style="color:#000">outbuf</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">*</span><span style="color:#000">op</span><span style="color:#000">++</span> <span style="color:#000">=</span> <span style="color:#000">ch</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">template</span> <span style="color:#000">&lt;</span><span style="color:#a90d91">typename</span> <span style="color:#000">T</span><span style="color:#000">&gt;</span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">work_wt</span>(<span style="color:#000">T</span> <span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">x</span> <span style="color:#000">&gt;</span> <span style="color:#1c01ce">9</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">work_wt</span>(<span style="color:#000">x</span> <span style="color:#000">/</span> <span style="color:#1c01ce">10</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">push</span>(<span style="color:#000">x</span> <span style="color:#000">%</span> <span style="color:#1c01ce">10</span> <span style="color:#000">+</span> <span style="color:#2300ce">&#39;0&#39;</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">template</span> <span style="color:#000">&lt;</span><span style="color:#a90d91">typename</span> <span style="color:#000">T</span><span style="color:#000">&gt;</span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">write</span>(<span style="color:#000">T</span> <span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">x</span> <span style="color:#000">&lt;</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">-</span><span style="color:#000">x</span>, <span style="color:#000">push</span>(<span style="color:#2300ce">&#39;-&#39;</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">work_wt</span>(<span style="color:#000">x</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">writestr</span>(<span style="color:#a90d91">char</span> <span style="color:#000">*</span><span style="color:#000">s</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">n</span> <span style="color:#000">=</span> <span style="color:#000">strlen</span>(<span style="color:#000">s</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">push</span>(<span style="color:#000">s</span>[<span style="color:#000">i</span>]);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">endln</span>() { <span style="color:#000">push</span>(<span style="color:#000">&#39;\\</span><span style="color:#000">n</span><span style="color:#000">&#39;</span>); }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">space</span>() { <span style="color:#000">push</span>(<span style="color:#2300ce">&#39; &#39;</span>); }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">template</span> <span style="color:#000">&lt;</span><span style="color:#a90d91">typename</span> <span style="color:#000">T</span><span style="color:#000">&gt;</span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">writeln</span>(<span style="color:#000">T</span> <span style="color:#000">x</span>) { <span style="color:#000">write</span>(<span style="color:#000">x</span>), <span style="color:#000">endln</span>(); }
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#a90d91">namespace</span> <span style="color:#000">IO</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1e5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">typedef</span> <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">ll</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">n</span>, <span style="color:#000">X</span>, <span style="color:#000">m</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">a</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">struct</span> <span style="color:#3f6e75">seg</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">val</span>, <span style="color:#000">len</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">void</span> <span style="color:#000">p</span>() { <span style="color:#000">write</span>(<span style="color:#000">val</span>), <span style="color:#000">space</span>(), <span style="color:#000">write</span>(<span style="color:#000">len</span>), <span style="color:#000">space</span>(), <span style="color:#000">endln</span>(); }
</span></span><span style="display:flex;"><span>};
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">struct</span> <span style="color:#3f6e75">node</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">vector</span><span style="color:#000">&lt;</span><span style="color:#000">seg</span><span style="color:#000">&gt;</span> <span style="color:#000">l</span>, <span style="color:#000">r</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">ll</span> <span style="color:#000">ans</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">void</span> <span style="color:#000">p</span>()
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">writestr</span>(<span style="color:#c41a16">&#34;l :</span><span style="color:#c41a16">\\</span><span style="color:#c41a16">n&#34;</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">auto</span> <span style="color:#000">k</span> : <span style="color:#000">l</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">k</span>.<span style="color:#000">p</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#000">writestr</span>(<span style="color:#c41a16">&#34;r :</span><span style="color:#c41a16">\\</span><span style="color:#c41a16">n&#34;</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">auto</span> <span style="color:#000">k</span> : <span style="color:#000">r</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">k</span>.<span style="color:#000">p</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#000">writeln</span>(<span style="color:#000">ans</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>} <span style="color:#000">t</span>[<span style="color:#000">maxn</span> <span style="color:#000">*</span> <span style="color:#1c01ce">4</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">int</span> <span style="color:#000">ls</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>) { <span style="color:#a90d91">return</span> <span style="color:#000">x</span> <span style="color:#000">*</span> <span style="color:#1c01ce">2</span>; }
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">int</span> <span style="color:#000">rs</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>) { <span style="color:#a90d91">return</span> <span style="color:#000">x</span> <span style="color:#000">*</span> <span style="color:#1c01ce">2</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>; }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000">node</span> <span style="color:#000">merge</span>(<span style="color:#a90d91">const</span> <span style="color:#000">node</span> <span style="color:#000">&amp;</span><span style="color:#000">ls</span>, <span style="color:#a90d91">const</span> <span style="color:#000">node</span> <span style="color:#000">&amp;</span><span style="color:#000">rs</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">node</span> <span style="color:#000">k</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">k</span>.<span style="color:#000">l</span> <span style="color:#000">=</span> <span style="color:#000">ls</span>.<span style="color:#000">l</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">auto</span> <span style="color:#000">p</span> : <span style="color:#000">rs</span>.<span style="color:#000">l</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> ((<span style="color:#000">k</span>.<span style="color:#000">l</span>.<span style="color:#000">back</span>().<span style="color:#000">val</span> <span style="color:#000">|</span> <span style="color:#000">p</span>.<span style="color:#000">val</span>) <span style="color:#000">==</span> <span style="color:#000">k</span>.<span style="color:#000">l</span>.<span style="color:#000">back</span>().<span style="color:#000">val</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">k</span>.<span style="color:#000">l</span>.<span style="color:#000">back</span>().<span style="color:#000">len</span> <span style="color:#000">+=</span> <span style="color:#000">p</span>.<span style="color:#000">len</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>            <span style="color:#000">k</span>.<span style="color:#000">l</span>.<span style="color:#000">push_back</span>({<span style="color:#000">k</span>.<span style="color:#000">l</span>.<span style="color:#000">back</span>().<span style="color:#000">val</span> <span style="color:#000">|</span> <span style="color:#000">p</span>.<span style="color:#000">val</span>, <span style="color:#000">p</span>.<span style="color:#000">len</span>});
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">k</span>.<span style="color:#000">r</span> <span style="color:#000">=</span> <span style="color:#000">rs</span>.<span style="color:#000">r</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">auto</span> <span style="color:#000">p</span> : <span style="color:#000">ls</span>.<span style="color:#000">r</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> ((<span style="color:#000">k</span>.<span style="color:#000">r</span>.<span style="color:#000">back</span>().<span style="color:#000">val</span> <span style="color:#000">|</span> <span style="color:#000">p</span>.<span style="color:#000">val</span>) <span style="color:#000">==</span> <span style="color:#000">k</span>.<span style="color:#000">r</span>.<span style="color:#000">back</span>().<span style="color:#000">val</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">k</span>.<span style="color:#000">r</span>.<span style="color:#000">back</span>().<span style="color:#000">len</span> <span style="color:#000">+=</span> <span style="color:#000">p</span>.<span style="color:#000">len</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>            <span style="color:#000">k</span>.<span style="color:#000">r</span>.<span style="color:#000">push_back</span>({<span style="color:#000">k</span>.<span style="color:#000">r</span>.<span style="color:#000">back</span>().<span style="color:#000">val</span> <span style="color:#000">|</span> <span style="color:#000">p</span>.<span style="color:#000">val</span>, <span style="color:#000">p</span>.<span style="color:#000">len</span>});
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">k</span>.<span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#000">ls</span>.<span style="color:#000">ans</span> <span style="color:#000">+</span> <span style="color:#000">rs</span>.<span style="color:#000">ans</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#177500">// 原先的双指针
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>    <span style="color:#177500">/*
</span></span></span><span style="display:flex;"><span><span style="color:#177500">    for (int i = 0, j = (int)rs.l.size() - 1; i &lt; (int)ls.r.size(); i++)
</span></span></span><span style="display:flex;"><span><span style="color:#177500">    {
</span></span></span><span style="display:flex;"><span><span style="color:#177500">        while (j &amp;&amp; ls.r[i].val | rs.l[j].val &gt;= X)
</span></span></span><span style="display:flex;"><span><span style="color:#177500">            j--;
</span></span></span><span style="display:flex;"><span><span style="color:#177500">        if (j &gt;= 0)
</span></span></span><span style="display:flex;"><span><span style="color:#177500">            k.ans += rs.l[j].sum * ls.r[i].len;
</span></span></span><span style="display:flex;"><span><span style="color:#177500">    } */</span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">auto</span> <span style="color:#000">i</span> : <span style="color:#000">ls</span>.<span style="color:#000">r</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">auto</span> <span style="color:#000">j</span> : <span style="color:#000">rs</span>.<span style="color:#000">l</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> ((<span style="color:#000">i</span>.<span style="color:#000">val</span> <span style="color:#000">|</span> <span style="color:#000">j</span>.<span style="color:#000">val</span>) <span style="color:#000">&gt;=</span> <span style="color:#000">X</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">k</span>.<span style="color:#000">ans</span> <span style="color:#000">+=</span> (<span style="color:#000">ll</span>)<span style="color:#000">i</span>.<span style="color:#000">len</span> <span style="color:#000">*</span> <span style="color:#000">j</span>.<span style="color:#000">len</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#000">k</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">modify</span>(<span style="color:#a90d91">int</span> <span style="color:#000">l</span>, <span style="color:#a90d91">int</span> <span style="color:#000">r</span>, <span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">v</span>, <span style="color:#a90d91">int</span> <span style="color:#000">k</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">l</span> <span style="color:#000">==</span> <span style="color:#000">r</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">t</span>[<span style="color:#000">k</span>].<span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#000">v</span> <span style="color:#000">&gt;=</span> <span style="color:#000">X</span>, <span style="color:#000">t</span>[<span style="color:#000">k</span>].<span style="color:#000">l</span>.<span style="color:#000">clear</span>(), <span style="color:#000">t</span>[<span style="color:#000">k</span>].<span style="color:#000">r</span>.<span style="color:#000">clear</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#000">t</span>[<span style="color:#000">k</span>].<span style="color:#000">l</span>.<span style="color:#000">push_back</span>({<span style="color:#000">v</span>, <span style="color:#1c01ce">1</span>}), <span style="color:#000">t</span>[<span style="color:#000">k</span>].<span style="color:#000">r</span>.<span style="color:#000">push_back</span>({<span style="color:#000">v</span>, <span style="color:#1c01ce">1</span>});
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">mid</span> <span style="color:#000">=</span> (<span style="color:#000">l</span> <span style="color:#000">+</span> <span style="color:#000">r</span>) <span style="color:#000">/</span> <span style="color:#1c01ce">2</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">x</span> <span style="color:#000">&lt;=</span> <span style="color:#000">mid</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">modify</span>(<span style="color:#000">l</span>, <span style="color:#000">mid</span>, <span style="color:#000">x</span>, <span style="color:#000">v</span>, <span style="color:#000">ls</span>(<span style="color:#000">k</span>));
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>        <span style="color:#000">modify</span>(<span style="color:#000">mid</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">r</span>, <span style="color:#000">x</span>, <span style="color:#000">v</span>, <span style="color:#000">rs</span>(<span style="color:#000">k</span>));
</span></span><span style="display:flex;"><span>    <span style="color:#000">t</span>[<span style="color:#000">k</span>] <span style="color:#000">=</span> <span style="color:#000">merge</span>(<span style="color:#000">t</span>[<span style="color:#000">ls</span>(<span style="color:#000">k</span>)], <span style="color:#000">t</span>[<span style="color:#000">rs</span>(<span style="color:#000">k</span>)]);
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000">node</span> <span style="color:#000">query</span>(<span style="color:#a90d91">int</span> <span style="color:#000">l</span>, <span style="color:#a90d91">int</span> <span style="color:#000">r</span>, <span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>, <span style="color:#a90d91">int</span> <span style="color:#000">k</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">l</span> <span style="color:#000">==</span> <span style="color:#000">x</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">r</span> <span style="color:#000">==</span> <span style="color:#000">y</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#000">t</span>[<span style="color:#000">k</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">mid</span> <span style="color:#000">=</span> (<span style="color:#000">l</span> <span style="color:#000">+</span> <span style="color:#000">r</span>) <span style="color:#000">/</span> <span style="color:#1c01ce">2</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">y</span> <span style="color:#000">&lt;=</span> <span style="color:#000">mid</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#000">query</span>(<span style="color:#000">l</span>, <span style="color:#000">mid</span>, <span style="color:#000">x</span>, <span style="color:#000">y</span>, <span style="color:#000">ls</span>(<span style="color:#000">k</span>));
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">x</span> <span style="color:#000">&gt;</span> <span style="color:#000">mid</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#000">query</span>(<span style="color:#000">mid</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">r</span>, <span style="color:#000">x</span>, <span style="color:#000">y</span>, <span style="color:#000">rs</span>(<span style="color:#000">k</span>));
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#000">merge</span>(<span style="color:#000">query</span>(<span style="color:#000">l</span>, <span style="color:#000">mid</span>, <span style="color:#000">x</span>, <span style="color:#000">mid</span>, <span style="color:#000">ls</span>(<span style="color:#000">k</span>)), <span style="color:#000">query</span>(<span style="color:#000">mid</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">r</span>, <span style="color:#000">mid</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">y</span>, <span style="color:#000">rs</span>(<span style="color:#000">k</span>)));
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">build</span>(<span style="color:#a90d91">int</span> <span style="color:#000">l</span>, <span style="color:#a90d91">int</span> <span style="color:#000">r</span>, <span style="color:#a90d91">int</span> <span style="color:#000">k</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">l</span> <span style="color:#000">==</span> <span style="color:#000">r</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">t</span>[<span style="color:#000">k</span>].<span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#000">a</span>[<span style="color:#000">l</span>] <span style="color:#000">&gt;=</span> <span style="color:#000">X</span>, <span style="color:#000">t</span>[<span style="color:#000">k</span>].<span style="color:#000">l</span>.<span style="color:#000">clear</span>(), <span style="color:#000">t</span>[<span style="color:#000">k</span>].<span style="color:#000">r</span>.<span style="color:#000">clear</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#000">t</span>[<span style="color:#000">k</span>].<span style="color:#000">l</span>.<span style="color:#000">push_back</span>({<span style="color:#000">a</span>[<span style="color:#000">l</span>], <span style="color:#1c01ce">1</span>}), <span style="color:#000">t</span>[<span style="color:#000">k</span>].<span style="color:#000">r</span>.<span style="color:#000">push_back</span>({<span style="color:#000">a</span>[<span style="color:#000">l</span>], <span style="color:#1c01ce">1</span>});
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">mid</span> <span style="color:#000">=</span> (<span style="color:#000">l</span> <span style="color:#000">+</span> <span style="color:#000">r</span>) <span style="color:#000">/</span> <span style="color:#1c01ce">2</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">build</span>(<span style="color:#000">l</span>, <span style="color:#000">mid</span>, <span style="color:#000">ls</span>(<span style="color:#000">k</span>));
</span></span><span style="display:flex;"><span>    <span style="color:#000">build</span>(<span style="color:#000">mid</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">r</span>, <span style="color:#000">rs</span>(<span style="color:#000">k</span>));
</span></span><span style="display:flex;"><span>    <span style="color:#000">t</span>[<span style="color:#000">k</span>] <span style="color:#000">=</span> <span style="color:#000">merge</span>(<span style="color:#000">t</span>[<span style="color:#000">ls</span>(<span style="color:#000">k</span>)], <span style="color:#000">t</span>[<span style="color:#000">rs</span>(<span style="color:#000">k</span>)]);
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">n</span> <span style="color:#000">=</span> <span style="color:#000">read</span>(), <span style="color:#000">m</span> <span style="color:#000">=</span> <span style="color:#000">read</span>(), <span style="color:#000">X</span> <span style="color:#000">=</span> <span style="color:#000">read</span>();
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">a</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">read</span>();
</span></span><span style="display:flex;"><span>    <span style="color:#000">build</span>(<span style="color:#1c01ce">1</span>, <span style="color:#000">n</span>, <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> (<span style="color:#000">m</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">opt</span> <span style="color:#000">=</span> <span style="color:#000">read</span>(), <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">read</span>(), <span style="color:#000">y</span> <span style="color:#000">=</span> <span style="color:#000">read</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">opt</span> <span style="color:#000">==</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">modify</span>(<span style="color:#1c01ce">1</span>, <span style="color:#000">n</span>, <span style="color:#000">x</span>, <span style="color:#000">y</span>, <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>            <span style="color:#000">writeln</span>(<span style="color:#000">query</span>(<span style="color:#1c01ce">1</span>, <span style="color:#000">n</span>, <span style="color:#000">x</span>, <span style="color:#000">y</span>, <span style="color:#1c01ce">1</span>).<span style="color:#000">ans</span>);
</span></span><span style="display:flex;"><span>    }    
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div>]]></content:encoded>
    </item>
    
    <item>
      <title>Codeforces Round 524 (Div. 2)</title>
      <link>https://luoyisu.github.io/posts/cf-contest1080/</link>
      <pubDate>Mon, 13 Dec 2021 14:16:04 +0000</pubDate>
      
      <guid>https://luoyisu.github.io/posts/cf-contest1080/</guid>
      <description>&lt;p&gt;似乎仍然不是很难。&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>似乎仍然不是很难。</p>
<h2 id="ahttpscodeforcescontest1080problema"><a href="https://codeforc.es/contest/1080/problem/A">A</a></h2>
<h3 id="description">Description</h3>
<p>有 $n$ 个人，每个人需要 $2$ 张红纸，$5$ 张绿纸，$8$ 张蓝纸。一次可以买 $k$ 张同一种颜色的纸。问最少需要买几次。</p>
<h3 id="solution">Solution</h3>
<p>算一下每种颜色需要几张纸然后除一下向上取整。</p>
<h3 id="code">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cmath&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>() {
</span></span><span style="display:flex;"><span>  <span style="color:#a90d91">int</span> <span style="color:#000">n</span>, <span style="color:#000">k</span>;
</span></span><span style="display:flex;"><span>  <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">k</span>;
</span></span><span style="display:flex;"><span>  <span style="color:#a90d91">int</span> <span style="color:#000">a</span> <span style="color:#000">=</span> <span style="color:#000">n</span> <span style="color:#000">*</span> <span style="color:#1c01ce">2</span>, <span style="color:#000">b</span> <span style="color:#000">=</span> <span style="color:#000">n</span> <span style="color:#000">*</span> <span style="color:#1c01ce">5</span>, <span style="color:#000">c</span> <span style="color:#000">=</span> <span style="color:#000">n</span> <span style="color:#000">*</span> <span style="color:#1c01ce">8</span>;
</span></span><span style="display:flex;"><span>  <span style="color:#000">a</span> <span style="color:#000">=</span> <span style="color:#000">ceil</span>(<span style="color:#1c01ce">1.0</span> <span style="color:#000">*</span> <span style="color:#000">a</span> <span style="color:#000">/</span> <span style="color:#000">k</span>), <span style="color:#000">b</span> <span style="color:#000">=</span> <span style="color:#000">ceil</span>(<span style="color:#1c01ce">1.0</span> <span style="color:#000">*</span> <span style="color:#000">b</span> <span style="color:#000">/</span> <span style="color:#000">k</span>), <span style="color:#000">c</span> <span style="color:#000">=</span> <span style="color:#000">ceil</span>(<span style="color:#1c01ce">1.0</span> <span style="color:#000">*</span> <span style="color:#000">c</span> <span style="color:#000">/</span> <span style="color:#000">k</span>);
</span></span><span style="display:flex;"><span>  <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">a</span> <span style="color:#000">+</span> <span style="color:#000">b</span> <span style="color:#000">+</span> <span style="color:#000">c</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="bhttpscodeforcescontest1080problemb"><a href="https://codeforc.es/contest/1080/problem/B">B</a></h2>
<h3 id="description-1">Description</h3>
<p>有一个序列 $\{a_i\}$，通项公式 $a_i=i\times(-1)^i$，$q$ 个询问，求区间和。</p>
<h3 id="solution-1">Solution</h3>
<p>找规律即可，规律不写了。</p>
<h3 id="code-1">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cmath&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>() {
</span></span><span style="display:flex;"><span>  <span style="color:#a90d91">int</span> <span style="color:#000">q</span>;
</span></span><span style="display:flex;"><span>  <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">q</span>;
</span></span><span style="display:flex;"><span>  <span style="color:#a90d91">while</span> (<span style="color:#000">q</span><span style="color:#000">--</span>) {
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#000">y</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">x</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">y</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">len</span> <span style="color:#000">=</span> <span style="color:#000">y</span> <span style="color:#000">-</span> <span style="color:#000">x</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">x</span> <span style="color:#000">==</span> <span style="color:#000">y</span>)
</span></span><span style="display:flex;"><span>      <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> (<span style="color:#000">x</span> <span style="color:#000">&amp;</span> <span style="color:#1c01ce">1</span> <span style="color:#000">?</span> <span style="color:#000">-</span><span style="color:#000">x</span> : <span style="color:#000">x</span>) <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">else</span> {
</span></span><span style="display:flex;"><span>      <span style="color:#a90d91">int</span> <span style="color:#000">p</span> <span style="color:#000">=</span> <span style="color:#000">len</span> <span style="color:#000">/</span> <span style="color:#1c01ce">2</span> <span style="color:#000">*</span> (<span style="color:#000">x</span> <span style="color:#000">&amp;</span> <span style="color:#1c01ce">1</span> <span style="color:#000">?</span> <span style="color:#1c01ce">1</span> <span style="color:#000">:</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>      <span style="color:#a90d91">if</span> (<span style="color:#000">len</span> <span style="color:#000">&amp;</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">p</span> <span style="color:#000">+=</span> <span style="color:#000">y</span> <span style="color:#000">&amp;</span> <span style="color:#1c01ce">1</span> <span style="color:#000">?</span> <span style="color:#000">-</span><span style="color:#000">y</span> : <span style="color:#000">y</span>;
</span></span><span style="display:flex;"><span>      <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">p</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;  
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>  }
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="chttpscodeforcescontest1080problemc"><a href="https://codeforc.es/contest/1080/problem/C">C</a></h2>
<h3 id="description-2">Description</h3>
<p>有一个 $n\times m$ 的国际象棋棋盘（每个格子颜色白或黑），先将一个子矩形染成白色，再将一个子矩形染成黑色，问最后有几个白格子和几个黑格子。$n,m\leq10^9$。</p>
<h3 id="solution-2">Solution</h3>
<p>只算黑色格子即可，乱算一算，最后再把重叠部分算进去。</p>
<h3 id="code-2">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cmath&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>() {
</span></span><span style="display:flex;"><span>  <span style="color:#a90d91">int</span> <span style="color:#000">T</span>;
</span></span><span style="display:flex;"><span>  <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">T</span>;
</span></span><span style="display:flex;"><span>  <span style="color:#a90d91">while</span> (<span style="color:#000">T</span><span style="color:#000">--</span>) {
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">n</span>, <span style="color:#000">m</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">m</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">x1</span>, <span style="color:#000">x2</span>, <span style="color:#000">y1</span>, <span style="color:#000">y2</span>, <span style="color:#000">x3</span>, <span style="color:#000">y3</span>, <span style="color:#000">x4</span>, <span style="color:#000">y4</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">x1</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">y1</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">x2</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">y2</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">x3</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">y3</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">x4</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">y4</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">black</span> <span style="color:#000">=</span> <span style="color:#000">n</span> <span style="color:#000">*</span> <span style="color:#000">m</span> <span style="color:#000">/</span> <span style="color:#1c01ce">2</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">dx1</span> <span style="color:#000">=</span> <span style="color:#000">x2</span> <span style="color:#000">-</span> <span style="color:#000">x1</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">dy1</span> <span style="color:#000">=</span> <span style="color:#000">y2</span> <span style="color:#000">-</span> <span style="color:#000">y1</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">black</span> <span style="color:#000">-=</span> <span style="color:#000">dx1</span> <span style="color:#000">*</span> <span style="color:#000">dy1</span> <span style="color:#000">/</span> <span style="color:#1c01ce">2</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">dx1</span> <span style="color:#000">*</span> <span style="color:#000">dy1</span> <span style="color:#000">%</span> <span style="color:#1c01ce">2</span>)
</span></span><span style="display:flex;"><span>      <span style="color:#a90d91">if</span> ((<span style="color:#000">x1</span> <span style="color:#000">+</span> <span style="color:#000">y1</span>) <span style="color:#000">&amp;</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">black</span><span style="color:#000">--</span>;    
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">dx2</span> <span style="color:#000">=</span> <span style="color:#000">x4</span> <span style="color:#000">-</span> <span style="color:#000">x3</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">dy2</span> <span style="color:#000">=</span> <span style="color:#000">y4</span> <span style="color:#000">-</span> <span style="color:#000">y3</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">black</span> <span style="color:#000">+=</span> <span style="color:#000">dx2</span> <span style="color:#000">*</span> <span style="color:#000">dy2</span> <span style="color:#000">/</span> <span style="color:#1c01ce">2</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">dx2</span> <span style="color:#000">*</span> <span style="color:#000">dy2</span> <span style="color:#000">%</span> <span style="color:#1c01ce">2</span>)
</span></span><span style="display:flex;"><span>      <span style="color:#a90d91">if</span> ((<span style="color:#000">x3</span> <span style="color:#000">+</span> <span style="color:#000">y3</span>) <span style="color:#000">%</span> <span style="color:#1c01ce">2</span> <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">black</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">x5</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">max</span>(<span style="color:#000">x3</span>, <span style="color:#000">x1</span>), <span style="color:#000">x6</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">min</span>(<span style="color:#000">x2</span>, <span style="color:#000">x4</span>), <span style="color:#000">y5</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">max</span>(<span style="color:#000">y1</span>, <span style="color:#000">y3</span>), <span style="color:#000">y6</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">min</span>(<span style="color:#000">y2</span>, <span style="color:#000">y4</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">x5</span> <span style="color:#000">&lt;=</span> <span style="color:#000">x6</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">y5</span> <span style="color:#000">&lt;=</span> <span style="color:#000">y6</span>) {
</span></span><span style="display:flex;"><span>      <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">dx0</span> <span style="color:#000">=</span> <span style="color:#000">x6</span> <span style="color:#000">-</span> <span style="color:#000">x5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">dy0</span> <span style="color:#000">=</span> <span style="color:#000">y6</span> <span style="color:#000">-</span> <span style="color:#000">y5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>      <span style="color:#000">black</span> <span style="color:#000">+=</span> <span style="color:#000">dx0</span> <span style="color:#000">*</span> <span style="color:#000">dy0</span> <span style="color:#000">/</span> <span style="color:#1c01ce">2</span>;
</span></span><span style="display:flex;"><span>      <span style="color:#a90d91">if</span> (<span style="color:#000">dx0</span> <span style="color:#000">*</span> <span style="color:#000">dy0</span> <span style="color:#000">%</span> <span style="color:#1c01ce">2</span>) {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> ((<span style="color:#000">x5</span> <span style="color:#000">+</span> <span style="color:#000">y5</span>) <span style="color:#000">%</span> <span style="color:#1c01ce">2</span>) {
</span></span><span style="display:flex;"><span>          <span style="color:#000">black</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>      }
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">white</span> <span style="color:#000">=</span> <span style="color:#000">n</span> <span style="color:#000">*</span> <span style="color:#000">m</span> <span style="color:#000">-</span> <span style="color:#000">black</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">white</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">black</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>  }
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="dhttpscodeforcescontest1080problemd"><a href="https://codeforc.es/contest/1080/problem/D">D</a></h2>
<h3 id="description-3">Description</h3>
<p>有一个 $2^n\times2^n$ 的正方形，进行 $k$ 次切割操作，每次把一个正方形切成 $4$ 个等大的小正方形。</p>
<p>需要找到一条在切割后正方形边长全部相同且四连通的从左下角到右上角的路径，判断能不能找到，如果能找到，输出这条路径上正方形边长以 $2$​ 为底的对数。</p>
<p>$n\leq10^9,k\leq10^{18}$。</p>
<h3 id="solution-3">Solution</h3>
<p>能算出来把一个 $2^n\times 2^n$ 的正方形切成最小的切割次数 $a_n$ 满足递推式 $a_n=4\times a_{n-1}+1$​。</p>
<p>显然我们只需要打通一条路就行，其他的随便切。</p>
<p>那么当 $n&gt;31$，肯定无解。</p>
<p>我们可以枚举这条路径上正方形边长，设边长为 $2^i$，那么我们只需要找到可以的最小切割次数和最大切割次数，如果 $k$ 在这两个数的闭区间里，那么一定有解。</p>
<p>最小切割次数怎么算呢？我们只切最边上的路径，第一次切 $1$ 次，第二次切 $3$ 次，第三次切 $7$ 次……，所以最小切割次数 $mi_i=\sum_{j=1}^{n-i}mi_j$。</p>
<p>最大切割次数怎么算呢？我们先切成最小的方块，然后减去多切的。最多切割次数 $f_i=a_n-a_i\times(2^{n-i+1}-1)$。</p>
<p>就这样。</p>
<h3 id="code-3">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cmath&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">typedef</span> <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">ll</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000">ll</span> <span style="color:#000">a</span>[<span style="color:#1c01ce">40</span>], <span style="color:#000">mi</span>[<span style="color:#1c01ce">40</span>], <span style="color:#000">mx</span>[<span style="color:#1c01ce">40</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">solve</span>(<span style="color:#a90d91">int</span> <span style="color:#000">n</span>, <span style="color:#000">ll</span> <span style="color:#000">k</span>) {
</span></span><span style="display:flex;"><span>  <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>) {
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">a</span>[<span style="color:#000">n</span>] <span style="color:#000">-</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>] <span style="color:#000">*</span> ((<span style="color:#1c01ce">1ll</span> <span style="color:#000">&lt;&lt;</span> (<span style="color:#000">n</span> <span style="color:#000">-</span> <span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>)) <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>) <span style="color:#000">&gt;=</span> <span style="color:#000">k</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">mi</span>[<span style="color:#000">n</span> <span style="color:#000">-</span> <span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">&lt;=</span> <span style="color:#000">k</span>)
</span></span><span style="display:flex;"><span>      <span style="color:#a90d91">return</span> <span style="color:#000">i</span>;
</span></span><span style="display:flex;"><span>  }
</span></span><span style="display:flex;"><span>  <span style="color:#a90d91">return</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>() {
</span></span><span style="display:flex;"><span>  <span style="color:#a90d91">int</span> <span style="color:#000">T</span>;
</span></span><span style="display:flex;"><span>  <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">T</span>;
</span></span><span style="display:flex;"><span>  <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#1c01ce">31</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    <span style="color:#000">a</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">4</span> <span style="color:#000">*</span> <span style="color:#000">a</span>[<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>  <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#1c01ce">31</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    <span style="color:#000">mi</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> (<span style="color:#1c01ce">1ll</span> <span style="color:#000">&lt;&lt;</span> (<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>)) <span style="color:#000">-</span> <span style="color:#1c01ce">1</span> <span style="color:#000">+</span> <span style="color:#000">mi</span>[<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>];
</span></span><span style="display:flex;"><span>  <span style="color:#a90d91">while</span> (<span style="color:#000">T</span><span style="color:#000">--</span>) {
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">n</span>, <span style="color:#000">k</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">k</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">n</span> <span style="color:#000">&gt;</span> <span style="color:#1c01ce">31</span>) {
</span></span><span style="display:flex;"><span>      <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34;YES&#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">n</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>      <span style="color:#a90d91">continue</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">k</span> <span style="color:#000">&gt;</span> <span style="color:#000">a</span>[<span style="color:#000">n</span>]) {
</span></span><span style="display:flex;"><span>      <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34;NO&#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>      <span style="color:#a90d91">continue</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#000">solve</span>(<span style="color:#000">n</span>, <span style="color:#000">k</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">ans</span> <span style="color:#000">==</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>      <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34;NO&#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>      <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34;YES&#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">ans</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>  }
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="ehttpscodeforcescontest1080probleme"><a href="https://codeforc.es/contest/1080/problem/E">E</a></h2>
<h3 id="description-4">Description</h3>
<p>$n\times m$ 的字符矩阵，求满足一下条件子矩形个数：将每一行重新排列后满足每一行和每一列都是回文串。$n\leq250$。</p>
<h3 id="solution-4">Solution</h3>
<p>每一行的要求可以很好判断，因为可以随便重排，满足至多只有一个字符出现两次即可。然后把每一行当成一个字符做 manacher，就行了。复杂度 $O(nm^2|\sum|)$​​，能过。如果比较每一行用 hash 来判断，那就可以优化到 $O(nm^2)$​​。</p>
<p>shr 神说可以用组合数暴力算，我不懂，他 tql。</p>
<h3 id="code-4">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cmath&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">510</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">char</span> <span style="color:#000">s</span>[<span style="color:#000">maxn</span>][<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">n</span>, <span style="color:#000">m</span>, <span style="color:#000">cnt</span>[<span style="color:#000">maxn</span>][<span style="color:#1c01ce">30</span>], <span style="color:#000">odd</span>[<span style="color:#000">maxn</span>], <span style="color:#000">d</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">bool</span> <span style="color:#000">cmp</span>(<span style="color:#a90d91">int</span> <span style="color:#000">a</span>, <span style="color:#a90d91">int</span> <span style="color:#000">b</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">odd</span>[<span style="color:#000">a</span>] <span style="color:#000">&gt;</span> <span style="color:#1c01ce">1</span> <span style="color:#000">||</span> <span style="color:#000">odd</span>[<span style="color:#000">b</span>] <span style="color:#000">&gt;</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#a90d91">false</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#1c01ce">26</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">cnt</span>[<span style="color:#000">a</span>][<span style="color:#000">i</span>] <span style="color:#000">!=</span> <span style="color:#000">cnt</span>[<span style="color:#000">b</span>][<span style="color:#000">i</span>])
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">return</span> <span style="color:#a90d91">false</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#a90d91">true</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">scanf</span>(<span style="color:#c41a16">&#34;%d%d&#34;</span>, <span style="color:#000">&amp;</span><span style="color:#000">n</span>, <span style="color:#000">&amp;</span><span style="color:#000">m</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">scanf</span>(<span style="color:#c41a16">&#34;%s&#34;</span>, <span style="color:#000">s</span>[<span style="color:#000">i</span>] <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">l</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">l</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">l</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">memset</span>(<span style="color:#000">cnt</span>, <span style="color:#1c01ce">0</span>, <span style="color:#a90d91">sizeof</span>(<span style="color:#000">cnt</span>)), <span style="color:#000">memset</span>(<span style="color:#000">odd</span>, <span style="color:#1c01ce">0</span>, <span style="color:#a90d91">sizeof</span>(<span style="color:#000">odd</span>));
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">r</span> <span style="color:#000">=</span> <span style="color:#000">l</span>; <span style="color:#000">r</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">r</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            {
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">char</span> <span style="color:#000">ch</span> <span style="color:#000">=</span> <span style="color:#000">s</span>[<span style="color:#000">i</span>][<span style="color:#000">r</span>] <span style="color:#000">-</span> <span style="color:#2300ce">&#39;a&#39;</span>;
</span></span><span style="display:flex;"><span>                <span style="color:#000">cnt</span>[<span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>][<span style="color:#000">ch</span>]<span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">if</span> (<span style="color:#000">cnt</span>[<span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>][<span style="color:#000">ch</span>] <span style="color:#000">&amp;</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>                    <span style="color:#000">odd</span>[<span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>]<span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>                    <span style="color:#000">odd</span>[<span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>]<span style="color:#000">--</span>;
</span></span><span style="display:flex;"><span>            }
</span></span><span style="display:flex;"><span>            <span style="color:#000">memset</span>(<span style="color:#000">d</span>, <span style="color:#1c01ce">0</span>, <span style="color:#a90d91">sizeof</span>(<span style="color:#000">d</span>));
</span></span><span style="display:flex;"><span>            <span style="color:#000">cnt</span>[<span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">n</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>][<span style="color:#1c01ce">0</span>] <span style="color:#000">=</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">l</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>, <span style="color:#000">r</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            {
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">if</span> (<span style="color:#000">odd</span>[<span style="color:#000">i</span>] <span style="color:#000">&gt;</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>                    <span style="color:#a90d91">continue</span>;
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">if</span> (<span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">r</span>)
</span></span><span style="display:flex;"><span>                    <span style="color:#000">d</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">min</span>(<span style="color:#000">r</span> <span style="color:#000">-</span> <span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">d</span>[<span style="color:#000">l</span> <span style="color:#000">+</span> <span style="color:#000">r</span> <span style="color:#000">-</span> <span style="color:#000">i</span>]);
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">while</span> (<span style="color:#000">cmp</span>(<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#000">d</span>[<span style="color:#000">i</span>], <span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#000">d</span>[<span style="color:#000">i</span>]))
</span></span><span style="display:flex;"><span>                    <span style="color:#000">d</span>[<span style="color:#000">i</span>]<span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">if</span> (<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#000">d</span>[<span style="color:#000">i</span>] <span style="color:#000">&gt;=</span> <span style="color:#000">r</span>)
</span></span><span style="display:flex;"><span>                    <span style="color:#000">r</span> <span style="color:#000">=</span> <span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#000">d</span>[<span style="color:#000">i</span>] <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">l</span> <span style="color:#000">=</span> <span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#000">d</span>[<span style="color:#000">i</span>] <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>                <span style="color:#000">ans</span> <span style="color:#000">+=</span> <span style="color:#000">d</span>[<span style="color:#000">i</span>] <span style="color:#000">/</span> <span style="color:#1c01ce">2</span>;
</span></span><span style="display:flex;"><span>            }
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">ans</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="fhttpscodeforcescontest1080problemf"><a href="https://codeforc.es/contest/1080/problem/F">F</a></h2>
<h3 id="description-5">Description</h3>
<p>有 $n$ 个集合，$k$ 条线段，每条线段由 $l,r,p$ 描述，分别表示其左端点，右端点，所在集合。</p>
<p>$m$ 个询问，每次给出 $a,b,x,y$，问编号在 $[a,b]$ 之间所有的集合是否都存在一条满足 $x\leq l\leq r\leq y$ 的线段。</p>
<p>$n,m\leq10^5$，$k\leq3\times10^5$，强制在线。</p>
<h3 id="solution-5">Solution</h3>
<p>看到强制在线，像是能用线段树维护的信息，我们想到主席树（）（）（）</p>
<p>以上扯淡，分析一下，如果直接存线段的信息会发现集合信息很难维护。</p>
<p>我们考虑存集合并转化一下要求的东西。</p>
<p>如果一个集合满足要求，那么它左端点大于等于 $l$ 的线段中右端点最小值必定小于等于 $y$。</p>
<p>如果多个集合呢？就是这些集合上面这个东西的最大值小于等于 $y$。</p>
<p>那么我们线段树里维护的东西就确定了：叶子中是这个集合中 $r$ 的最小值，非叶子结点是它所管辖区间中上述值的最大值。</p>
<p>那么怎么满足线段树中只有左端点大于等于 $l$ 的线段呢？我们用一棵主席树，把线段按照 $l$ 从大到小插入进去就行了。</p>
<h3 id="code-5">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cerr</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1e5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxk</span> <span style="color:#000">=</span> <span style="color:#1c01ce">3e5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">root</span>[<span style="color:#000">maxk</span>], <span style="color:#000">n</span>, <span style="color:#000">m</span>, <span style="color:#000">k</span>, <span style="color:#000">inf</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">30</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">struct</span> <span style="color:#3f6e75">Tree</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">static</span> <span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#000">::</span><span style="color:#000">maxn</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">6</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">ls</span>[<span style="color:#000">maxn</span>], <span style="color:#000">rs</span>[<span style="color:#000">maxn</span>], <span style="color:#000">tot</span>, <span style="color:#000">mx</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#000">Tree</span>()
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">maxn</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">mx</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">inf</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">clone</span>(<span style="color:#a90d91">int</span> <span style="color:#000">k</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">tot</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">mx</span>[<span style="color:#000">tot</span>] <span style="color:#000">=</span> <span style="color:#000">mx</span>[<span style="color:#000">k</span>], <span style="color:#000">ls</span>[<span style="color:#000">tot</span>] <span style="color:#000">=</span> <span style="color:#000">ls</span>[<span style="color:#000">k</span>], <span style="color:#000">rs</span>[<span style="color:#000">tot</span>] <span style="color:#000">=</span> <span style="color:#000">rs</span>[<span style="color:#000">k</span>];
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#000">tot</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">push_up</span>(<span style="color:#a90d91">int</span> <span style="color:#000">k</span>) { <span style="color:#000">mx</span>[<span style="color:#000">k</span>] <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">max</span>(<span style="color:#000">mx</span>[<span style="color:#000">ls</span>[<span style="color:#000">k</span>]], <span style="color:#000">mx</span>[<span style="color:#000">rs</span>[<span style="color:#000">k</span>]]); }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">build</span>(<span style="color:#a90d91">int</span> <span style="color:#000">l</span>, <span style="color:#a90d91">int</span> <span style="color:#000">r</span>, <span style="color:#a90d91">int</span> <span style="color:#000">k</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">!</span><span style="color:#000">k</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">k</span> <span style="color:#000">=</span> <span style="color:#000">++</span><span style="color:#000">tot</span>, <span style="color:#000">mx</span>[<span style="color:#000">tot</span>] <span style="color:#000">=</span> <span style="color:#000">inf</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">l</span> <span style="color:#000">==</span> <span style="color:#000">r</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">mx</span>[<span style="color:#000">k</span>] <span style="color:#000">=</span> <span style="color:#000">inf</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">return</span> <span style="color:#000">k</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">mid</span> <span style="color:#000">=</span> (<span style="color:#000">l</span> <span style="color:#000">+</span> <span style="color:#000">r</span>) <span style="color:#000">/</span> <span style="color:#1c01ce">2</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">ls</span>[<span style="color:#000">k</span>] <span style="color:#000">=</span> <span style="color:#000">build</span>(<span style="color:#000">l</span>, <span style="color:#000">mid</span>, <span style="color:#000">ls</span>[<span style="color:#000">k</span>]), <span style="color:#000">rs</span>[<span style="color:#000">k</span>] <span style="color:#000">=</span> <span style="color:#000">build</span>(<span style="color:#000">mid</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">r</span>, <span style="color:#000">rs</span>[<span style="color:#000">k</span>]);
</span></span><span style="display:flex;"><span>        <span style="color:#000">push_up</span>(<span style="color:#000">k</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#000">k</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">modify</span>(<span style="color:#a90d91">int</span> <span style="color:#000">l</span>, <span style="color:#a90d91">int</span> <span style="color:#000">r</span>, <span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>, <span style="color:#a90d91">int</span> <span style="color:#000">k</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">k</span> <span style="color:#000">=</span> <span style="color:#000">clone</span>(<span style="color:#000">k</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">l</span> <span style="color:#000">==</span> <span style="color:#000">r</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">mx</span>[<span style="color:#000">k</span>] <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">min</span>(<span style="color:#000">mx</span>[<span style="color:#000">k</span>], <span style="color:#000">y</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">return</span> <span style="color:#000">k</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">mid</span> <span style="color:#000">=</span> (<span style="color:#000">l</span> <span style="color:#000">+</span> <span style="color:#000">r</span>) <span style="color:#000">/</span> <span style="color:#1c01ce">2</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">x</span> <span style="color:#000">&lt;=</span> <span style="color:#000">mid</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">ls</span>[<span style="color:#000">k</span>] <span style="color:#000">=</span> <span style="color:#000">modify</span>(<span style="color:#000">l</span>, <span style="color:#000">mid</span>, <span style="color:#000">x</span>, <span style="color:#000">y</span>, <span style="color:#000">ls</span>[<span style="color:#000">k</span>]);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>            <span style="color:#000">rs</span>[<span style="color:#000">k</span>] <span style="color:#000">=</span> <span style="color:#000">modify</span>(<span style="color:#000">mid</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">r</span>, <span style="color:#000">x</span>, <span style="color:#000">y</span>, <span style="color:#000">rs</span>[<span style="color:#000">k</span>]);
</span></span><span style="display:flex;"><span>        <span style="color:#000">push_up</span>(<span style="color:#000">k</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#000">k</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">query</span>(<span style="color:#a90d91">int</span> <span style="color:#000">l</span>, <span style="color:#a90d91">int</span> <span style="color:#000">r</span>, <span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>, <span style="color:#a90d91">int</span> <span style="color:#000">k</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">x</span> <span style="color:#000">&lt;=</span> <span style="color:#000">l</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">y</span> <span style="color:#000">&gt;=</span> <span style="color:#000">r</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">return</span> <span style="color:#000">mx</span>[<span style="color:#000">k</span>];
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">res</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>, <span style="color:#000">mid</span> <span style="color:#000">=</span> (<span style="color:#000">l</span> <span style="color:#000">+</span> <span style="color:#000">r</span>) <span style="color:#000">/</span> <span style="color:#1c01ce">2</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">x</span> <span style="color:#000">&lt;=</span> <span style="color:#000">mid</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">res</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">max</span>(<span style="color:#000">res</span>, <span style="color:#000">query</span>(<span style="color:#000">l</span>, <span style="color:#000">mid</span>, <span style="color:#000">x</span>, <span style="color:#000">y</span>, <span style="color:#000">ls</span>[<span style="color:#000">k</span>]));
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">y</span> <span style="color:#000">&gt;</span> <span style="color:#000">mid</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">res</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">max</span>(<span style="color:#000">res</span>, <span style="color:#000">query</span>(<span style="color:#000">mid</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">r</span>, <span style="color:#000">x</span>, <span style="color:#000">y</span>, <span style="color:#000">rs</span>[<span style="color:#000">k</span>]));
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#000">res</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>} <span style="color:#000">t</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">struct</span> <span style="color:#3f6e75">Segment</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">l</span>, <span style="color:#000">r</span>, <span style="color:#000">p</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">bool</span> <span style="color:#a90d91">operator</span><span style="color:#000">&lt;</span>(<span style="color:#a90d91">const</span> <span style="color:#000">Segment</span> <span style="color:#000">&amp;</span><span style="color:#000">b</span>) <span style="color:#a90d91">const</span> { <span style="color:#a90d91">return</span> <span style="color:#000">l</span> <span style="color:#000">&gt;</span> <span style="color:#000">b</span>.<span style="color:#000">l</span>; }
</span></span><span style="display:flex;"><span>} <span style="color:#000">a</span>[<span style="color:#000">maxk</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">tot</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">scanf</span>(<span style="color:#c41a16">&#34;%d%d%d&#34;</span>, <span style="color:#000">&amp;</span><span style="color:#000">n</span>, <span style="color:#000">&amp;</span><span style="color:#000">m</span>, <span style="color:#000">&amp;</span><span style="color:#000">k</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">k</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">scanf</span>(<span style="color:#c41a16">&#34;%d%d%d&#34;</span>, <span style="color:#000">&amp;</span><span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">l</span>, <span style="color:#000">&amp;</span><span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">r</span>, <span style="color:#000">&amp;</span><span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">p</span>);  
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">sort</span>(<span style="color:#000">a</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">a</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">+</span> <span style="color:#000">k</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">root</span>[<span style="color:#1c01ce">0</span>] <span style="color:#000">=</span> <span style="color:#000">t</span>.<span style="color:#000">build</span>(<span style="color:#1c01ce">1</span>, <span style="color:#000">n</span>, <span style="color:#000">root</span>[<span style="color:#1c01ce">0</span>]);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">k</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">root</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">t</span>.<span style="color:#000">modify</span>(<span style="color:#1c01ce">1</span>, <span style="color:#000">n</span>, <span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">p</span>, <span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">r</span>, <span style="color:#000">root</span>[<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>]);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> (<span style="color:#000">m</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">p</span>, <span style="color:#000">q</span>, <span style="color:#000">x</span>, <span style="color:#000">y</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">scanf</span>(<span style="color:#c41a16">&#34;%d%d%d%d&#34;</span>, <span style="color:#000">&amp;</span><span style="color:#000">p</span>, <span style="color:#000">&amp;</span><span style="color:#000">q</span>, <span style="color:#000">&amp;</span><span style="color:#000">x</span>, <span style="color:#000">&amp;</span><span style="color:#000">y</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">pos</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">upper_bound</span>(<span style="color:#000">a</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">a</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">+</span> <span style="color:#000">k</span>, (<span style="color:#000">Segment</span>){<span style="color:#000">x</span>, <span style="color:#1c01ce">0</span>, <span style="color:#1c01ce">0</span>}) <span style="color:#000">-</span> <span style="color:#000">a</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#000">t</span>.<span style="color:#000">query</span>(<span style="color:#1c01ce">1</span>, <span style="color:#000">n</span>, <span style="color:#000">p</span>, <span style="color:#000">q</span>, <span style="color:#000">root</span>[<span style="color:#000">pos</span>]);
</span></span><span style="display:flex;"><span>        <span style="color:#000">puts</span>(<span style="color:#000">ans</span> <span style="color:#000">&lt;=</span> <span style="color:#000">y</span> <span style="color:#000">?</span> <span style="color:#c41a16">&#34;yes&#34;</span> <span style="color:#000">:</span> <span style="color:#c41a16">&#34;no&#34;</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">fflush</span>(<span style="color:#000">stdout</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div>]]></content:encoded>
    </item>
    
    <item>
      <title>Codeforces Round 705 (Div. 2)</title>
      <link>https://luoyisu.github.io/posts/cf-contest1493/</link>
      <pubDate>Sat, 11 Dec 2021 15:29:05 +0000</pubDate>
      
      <guid>https://luoyisu.github.io/posts/cf-contest1493/</guid>
      <description>&lt;p&gt;似乎不是很难，但似乎又很难。&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>似乎不是很难，但似乎又很难。</p>
<h2 id="ahttpscodeforcescontest1493problema"><a href="https://codeforc.es/contest/1493/problem/A">A</a></h2>
<h3 id="description">Description</h3>
<p>有两个数 $n,k$，在 $1\sim n$ 中选择最多的数使得不存在两个和为 $k$ 的数。</p>
<h3 id="solution">Solution</h3>
<p>显然比 $k$ 大的数全都要选，显然 $k$ 不能选，显然比 $k$ 小的数只能选一半。</p>
<h3 id="code">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">T</span>, <span style="color:#000">n</span>, <span style="color:#000">k</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">T</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> (<span style="color:#000">T</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">k</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#000">n</span> <span style="color:#000">-</span> <span style="color:#000">k</span> <span style="color:#000">+</span> <span style="color:#000">k</span> <span style="color:#000">/</span> <span style="color:#1c01ce">2</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">ans</span> <span style="color:#000">&lt;=</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">0</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">continue</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">n</span> <span style="color:#000">-</span> <span style="color:#000">k</span> <span style="color:#000">+</span> <span style="color:#000">k</span> <span style="color:#000">/</span> <span style="color:#1c01ce">2</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span> <span style="color:#000">&gt;</span> <span style="color:#000">k</span>; <span style="color:#000">i</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">i</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#000">k</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&gt;=</span> (<span style="color:#000">k</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>) <span style="color:#000">/</span> <span style="color:#1c01ce">2</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">i</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="bhttpscodeforcescontest1493problemb"><a href="https://codeforc.es/contest/1493/problem/B">B</a></h2>
<h3 id="description-1">Description</h3>
<p>有一个每天有 $h$ 个小时，每个小时有 $m$ 分钟的星球，给出一个时间，求下一个能在镜子中照出合法时间的时间。</p>
<h3 id="solution-1">Solution</h3>
<p>只有 $0,1,2,5,8$ 组成的时间是合法的，预处理一下然后模拟。</p>
<h3 id="code-1">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">10010</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">number</span>[] <span style="color:#000">=</span> {<span style="color:#1c01ce">0</span>, <span style="color:#1c01ce">1</span>, <span style="color:#1c01ce">2</span>, <span style="color:#1c01ce">5</span>, <span style="color:#1c01ce">8</span>};
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">bool</span> <span style="color:#000">ok</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">n</span>, <span style="color:#000">m</span>, <span style="color:#000">x</span>[<span style="color:#1c01ce">10</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">int</span> <span style="color:#000">hash</span>(<span style="color:#a90d91">int</span> <span style="color:#000">a</span>, <span style="color:#a90d91">int</span> <span style="color:#000">b</span>, <span style="color:#a90d91">int</span> <span style="color:#000">c</span>, <span style="color:#a90d91">int</span> <span style="color:#000">d</span>) { <span style="color:#a90d91">return</span> <span style="color:#000">a</span> <span style="color:#000">*</span> <span style="color:#1c01ce">1000</span> <span style="color:#000">+</span> <span style="color:#000">b</span> <span style="color:#000">*</span> <span style="color:#1c01ce">100</span> <span style="color:#000">+</span> <span style="color:#000">c</span> <span style="color:#000">*</span> <span style="color:#1c01ce">10</span> <span style="color:#000">+</span> <span style="color:#000">d</span>; }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">init</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">a</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">a</span> <span style="color:#000">&lt;</span> <span style="color:#1c01ce">5</span>; <span style="color:#000">a</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">b</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">b</span> <span style="color:#000">&lt;</span> <span style="color:#1c01ce">5</span>; <span style="color:#000">b</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">c</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">c</span> <span style="color:#000">&lt;</span> <span style="color:#1c01ce">5</span>; <span style="color:#000">c</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">d</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">d</span> <span style="color:#000">&lt;</span> <span style="color:#1c01ce">5</span>; <span style="color:#000">d</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                    <span style="color:#000">ok</span>[<span style="color:#000">hash</span>(<span style="color:#000">number</span>[<span style="color:#000">a</span>], <span style="color:#000">number</span>[<span style="color:#000">b</span>], <span style="color:#000">number</span>[<span style="color:#000">c</span>], <span style="color:#000">number</span>[<span style="color:#000">d</span>])] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">x</span>[<span style="color:#1c01ce">0</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>, <span style="color:#000">x</span>[<span style="color:#1c01ce">1</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">x</span>[<span style="color:#1c01ce">2</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">5</span>, <span style="color:#000">x</span>[<span style="color:#1c01ce">5</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">2</span>, <span style="color:#000">x</span>[<span style="color:#1c01ce">8</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">8</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">int</span> <span style="color:#000">hash2</span>(<span style="color:#a90d91">int</span> <span style="color:#000">a</span>, <span style="color:#a90d91">int</span> <span style="color:#000">b</span>) { <span style="color:#a90d91">return</span> <span style="color:#000">a</span> <span style="color:#000">*</span> <span style="color:#1c01ce">100</span> <span style="color:#000">+</span> <span style="color:#000">b</span>; }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">bool</span> <span style="color:#000">check</span>(<span style="color:#a90d91">int</span> <span style="color:#000">a</span>, <span style="color:#a90d91">int</span> <span style="color:#000">b</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">!</span><span style="color:#000">ok</span>[<span style="color:#000">hash2</span>(<span style="color:#000">a</span>, <span style="color:#000">b</span>)])
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#a90d91">false</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">p</span> <span style="color:#000">=</span> <span style="color:#000">x</span>[<span style="color:#000">a</span> <span style="color:#000">%</span> <span style="color:#1c01ce">10</span>] <span style="color:#000">*</span> <span style="color:#1c01ce">10</span> <span style="color:#000">+</span> <span style="color:#000">x</span>[<span style="color:#000">a</span> <span style="color:#000">/</span> <span style="color:#1c01ce">10</span>], <span style="color:#000">q</span> <span style="color:#000">=</span> <span style="color:#000">x</span>[<span style="color:#000">b</span> <span style="color:#000">%</span> <span style="color:#1c01ce">10</span>] <span style="color:#000">*</span> <span style="color:#1c01ce">10</span> <span style="color:#000">+</span> <span style="color:#000">x</span>[<span style="color:#000">b</span> <span style="color:#000">/</span> <span style="color:#1c01ce">10</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#000">p</span> <span style="color:#000">&lt;</span> <span style="color:#000">m</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">q</span> <span style="color:#000">&lt;</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">work</span>(<span style="color:#a90d91">int</span> <span style="color:#000">a</span>, <span style="color:#a90d91">int</span> <span style="color:#000">b</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> (<span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">check</span>(<span style="color:#000">a</span>, <span style="color:#000">b</span>))
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">printf</span>(<span style="color:#c41a16">&#34;%02d:%02d</span><span style="color:#c41a16">\\</span><span style="color:#c41a16">n&#34;</span>, <span style="color:#000">a</span>, <span style="color:#000">b</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">return</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#000">b</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">b</span> <span style="color:#000">==</span> <span style="color:#000">m</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">b</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>, <span style="color:#000">a</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">a</span> <span style="color:#000">==</span> <span style="color:#000">n</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">a</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">T</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">T</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">init</span>();
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">char</span> <span style="color:#000">ch</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> (<span style="color:#000">T</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">m</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">a</span>, <span style="color:#000">b</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">a</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">ch</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">b</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">work</span>(<span style="color:#000">a</span>, <span style="color:#000">b</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="chttpscodeforcescontest1493problemc"><a href="https://codeforc.es/contest/1493/problem/C">C</a></h2>
<h3 id="description-2">Description</h3>
<p>有一个长度为 $n$ 只含小写字母的字符串和一个数 $k$。求一个字符串，满足这个字符串字典序比原字符串大且每个字符出现的次数都能被 $k$​​ 整除，要求满足以上要求的字典序最小的字符串。$n\leq1000$。</p>
<h3 id="solution-2">Solution</h3>
<p>发现和原字符串前缀相同的位数越多字典序就可能越小，于是从大到小枚举从哪一位开始不一样，然后枚举这一位填什么字符，看剩下的位置能不能满足要求。</p>
<p>具体判断能不能满足要求需要看把所有字符都填到恰好被 $k$ 整除需要几个，然后看这些的和是否不大于剩下的位数。</p>
<p>填的时候先把能随便填的都填上 <code>a</code>，剩下的地方从 <code>a</code> 到 <code>z</code> 依次填就行。</p>
<p>建议想好再写。</p>
<h3 id="code-2">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1e5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">char</span> <span style="color:#000">s</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">T</span>, <span style="color:#000">n</span>, <span style="color:#000">k</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">b</span>[<span style="color:#1c01ce">30</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">output</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">s</span>[<span style="color:#000">x</span>] <span style="color:#000">=</span> <span style="color:#000">y</span> <span style="color:#000">+</span> <span style="color:#2300ce">&#39;a&#39;</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">x</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">s</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">res</span> <span style="color:#000">=</span> <span style="color:#000">n</span> <span style="color:#000">-</span> <span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#1c01ce">26</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">res</span> <span style="color:#000">-=</span> (<span style="color:#000">k</span> <span style="color:#000">-</span> <span style="color:#000">b</span>[<span style="color:#000">i</span>] <span style="color:#000">%</span> <span style="color:#000">k</span>) <span style="color:#000">%</span> <span style="color:#000">k</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">res</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#2300ce">&#39;a&#39;</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#1c01ce">26</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">b</span>[<span style="color:#000">i</span>] <span style="color:#000">%=</span> <span style="color:#000">k</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;</span> (<span style="color:#000">k</span> <span style="color:#000">-</span> <span style="color:#000">b</span>[<span style="color:#000">i</span>] <span style="color:#000">%</span> <span style="color:#000">k</span>) <span style="color:#000">%</span> <span style="color:#000">k</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#a90d91">char</span>(<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#2300ce">&#39;a&#39;</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">solve</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">sum</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span> <span style="color:#000">&gt;=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">b</span>[<span style="color:#000">s</span>[<span style="color:#000">i</span>] <span style="color:#000">-</span> <span style="color:#2300ce">&#39;a&#39;</span>]<span style="color:#000">--</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#000">s</span>[<span style="color:#000">i</span>] <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">-</span> <span style="color:#2300ce">&#39;a&#39;</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;</span> <span style="color:#1c01ce">26</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">b</span>[<span style="color:#000">j</span>]<span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">sum</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">p</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">p</span> <span style="color:#000">&lt;</span> <span style="color:#1c01ce">26</span>; <span style="color:#000">p</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">sum</span> <span style="color:#000">+=</span> (<span style="color:#000">k</span> <span style="color:#000">-</span> <span style="color:#000">b</span>[<span style="color:#000">p</span>] <span style="color:#000">%</span> <span style="color:#000">k</span>) <span style="color:#000">%</span> <span style="color:#000">k</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">sum</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span> <span style="color:#000">-</span> <span style="color:#000">i</span>)
</span></span><span style="display:flex;"><span>            {
</span></span><span style="display:flex;"><span>                <span style="color:#000">output</span>(<span style="color:#000">i</span>, <span style="color:#000">j</span>);
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">return</span>;
</span></span><span style="display:flex;"><span>            }
</span></span><span style="display:flex;"><span>            <span style="color:#000">b</span>[<span style="color:#000">j</span>]<span style="color:#000">--</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">ios</span><span style="color:#000">::</span><span style="color:#000">sync_with_stdio</span>(<span style="color:#a90d91">false</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">T</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> (<span style="color:#000">T</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">memset</span>(<span style="color:#000">b</span>, <span style="color:#1c01ce">0</span>, <span style="color:#a90d91">sizeof</span>(<span style="color:#000">b</span>));
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">k</span> <span style="color:#000">&gt;&gt;</span> (<span style="color:#000">s</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">b</span>[<span style="color:#000">s</span>[<span style="color:#000">i</span>] <span style="color:#000">-</span> <span style="color:#2300ce">&#39;a&#39;</span>]<span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">ok</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#1c01ce">26</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">b</span>[<span style="color:#000">i</span>] <span style="color:#000">%</span> <span style="color:#000">k</span>)
</span></span><span style="display:flex;"><span>            {
</span></span><span style="display:flex;"><span>                <span style="color:#000">ok</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">break</span>;
</span></span><span style="display:flex;"><span>            }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">ok</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> (<span style="color:#000">s</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>) <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">continue</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span> <span style="color:#a90d91">if</span> (<span style="color:#000">n</span> <span style="color:#000">%</span> <span style="color:#000">k</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">continue</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#000">solve</span>();
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="dhttpscodeforcescontest1493problemd"><a href="https://codeforc.es/contest/1493/problem/D">D</a></h2>
<h3 id="description-3">Description</h3>
<p>有一个 $n$ 个数的正整数序列，$q$ 次操作，每次把一个数乘上 $x$，问每次操作后整个序列的 gcd 对 $10^9+7$ 取模的结果。</p>
<h3 id="solution-3">Solution</h3>
<p>我们只需要求出所有质因子最低次数的幂即可。</p>
<p>对每个质因子维护一个 <code>multiset</code>，乘的时候把这个数增加的质因子加进去就行。</p>
<p>然后把答案乘一个 $p^x$ 即可，其中 $x$​​ 是增加的幂次。</p>
<p>乱维护即可。。。</p>
<p>注意质因数分解需要做到 $O(\log n)$，为此需要预处理每个数最小质因子。</p>
<h3 id="code-3">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;set&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;map&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cerr</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2e5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>, <span style="color:#000">mod</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1e9</span> <span style="color:#000">+</span> <span style="color:#1c01ce">7</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxp</span> <span style="color:#000">=</span> <span style="color:#1c01ce">18000</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">typedef</span> <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">ll</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">namespace</span> <span style="color:#000">IO</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">mxsiz</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">20</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">char</span> <span style="color:#000">inbuf</span>[<span style="color:#000">mxsiz</span>], <span style="color:#000">*</span><span style="color:#000">p1</span>, <span style="color:#000">*</span><span style="color:#000">p2</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">char</span> <span style="color:#000">outbuf</span>[<span style="color:#000">mxsiz</span>], <span style="color:#000">*</span><span style="color:#000">op</span> <span style="color:#000">=</span> <span style="color:#000">outbuf</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">struct</span> <span style="color:#3f6e75">endio</span>
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">endio</span>(){};
</span></span><span style="display:flex;"><span>        <span style="color:#000">~</span><span style="color:#000">endio</span>() { <span style="color:#000">fwrite</span>(<span style="color:#000">outbuf</span>, <span style="color:#1c01ce">1</span>, <span style="color:#000">op</span> <span style="color:#000">-</span> <span style="color:#000">outbuf</span>, <span style="color:#000">stdout</span>); }
</span></span><span style="display:flex;"><span>    } <span style="color:#000">useless_var</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">char</span> <span style="color:#000">gc</span>() { <span style="color:#a90d91">return</span> <span style="color:#000">p1</span> <span style="color:#000">==</span> <span style="color:#000">p2</span> <span style="color:#000">&amp;&amp;</span> (<span style="color:#000">p2</span> <span style="color:#000">=</span> (<span style="color:#000">p1</span> <span style="color:#000">=</span> <span style="color:#000">inbuf</span>) <span style="color:#000">+</span> <span style="color:#000">fread</span>(<span style="color:#000">inbuf</span>, <span style="color:#1c01ce">1</span>, <span style="color:#000">mxsiz</span>, <span style="color:#000">stdin</span>), <span style="color:#000">p1</span> <span style="color:#000">==</span> <span style="color:#000">p2</span>) <span style="color:#000">?</span> <span style="color:#000">EOF</span> : <span style="color:#000">*</span><span style="color:#000">p1</span><span style="color:#000">++</span>; }
</span></span><span style="display:flex;"><span><span style="color:#633820">#define isdigit(x) (x &gt;= &#39;0&#39; &amp;&amp; x &lt;= &#39;9&#39;)
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">int</span> <span style="color:#000">read</span>()
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>, <span style="color:#000">f</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">char</span> <span style="color:#000">ch</span> <span style="color:#000">=</span> <span style="color:#000">gc</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (; <span style="color:#000">!</span><span style="color:#000">isdigit</span>(<span style="color:#000">ch</span>); <span style="color:#000">ch</span> <span style="color:#000">=</span> <span style="color:#000">gc</span>())
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">ch</span> <span style="color:#000">==</span> <span style="color:#2300ce">&#39;-&#39;</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">f</span> <span style="color:#000">=</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (; <span style="color:#000">isdigit</span>(<span style="color:#000">ch</span>); <span style="color:#000">ch</span> <span style="color:#000">=</span> <span style="color:#000">gc</span>())
</span></span><span style="display:flex;"><span>            <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">x</span> <span style="color:#000">*</span> <span style="color:#1c01ce">10</span> <span style="color:#000">+</span> <span style="color:#000">ch</span> <span style="color:#000">-</span> <span style="color:#2300ce">&#39;0&#39;</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#000">x</span> <span style="color:#000">*</span> <span style="color:#000">f</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">template</span> <span style="color:#000">&lt;</span><span style="color:#a90d91">typename</span> <span style="color:#000">T</span><span style="color:#000">&gt;</span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">read</span>(<span style="color:#000">T</span> <span style="color:#000">&amp;</span><span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">f</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">char</span> <span style="color:#000">ch</span> <span style="color:#000">=</span> <span style="color:#000">gc</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (; <span style="color:#000">!</span><span style="color:#000">isdigit</span>(<span style="color:#000">ch</span>); <span style="color:#000">ch</span> <span style="color:#000">=</span> <span style="color:#000">gc</span>())
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">ch</span> <span style="color:#000">==</span> <span style="color:#2300ce">&#39;-&#39;</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">f</span> <span style="color:#000">=</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (; <span style="color:#000">isdigit</span>(<span style="color:#000">ch</span>); <span style="color:#000">ch</span> <span style="color:#000">=</span> <span style="color:#000">gc</span>())
</span></span><span style="display:flex;"><span>            <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">x</span> <span style="color:#000">*</span> <span style="color:#1c01ce">10</span> <span style="color:#000">+</span> <span style="color:#000">ch</span> <span style="color:#000">-</span> <span style="color:#2300ce">&#39;0&#39;</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">x</span> <span style="color:#000">*=</span> <span style="color:#000">f</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span><span style="color:#633820">#undef isdigit
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">bool</span> <span style="color:#000">ischar</span>(<span style="color:#a90d91">char</span> <span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#000">x</span> <span style="color:#000">&gt;=</span> <span style="color:#2300ce">&#39;A&#39;</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">x</span> <span style="color:#000">&lt;=</span> <span style="color:#2300ce">&#39;z&#39;</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">char</span> <span style="color:#000">readchar</span>()
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">char</span> <span style="color:#000">ch</span> <span style="color:#000">=</span> <span style="color:#000">gc</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">while</span> (<span style="color:#000">!</span><span style="color:#000">ischar</span>(<span style="color:#000">ch</span>))
</span></span><span style="display:flex;"><span>            <span style="color:#000">ch</span> <span style="color:#000">=</span> <span style="color:#000">gc</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#000">ch</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">push</span>(<span style="color:#a90d91">char</span> <span style="color:#000">ch</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">op</span> <span style="color:#000">-</span> <span style="color:#000">outbuf</span> <span style="color:#000">==</span> <span style="color:#000">mxsiz</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">fwrite</span>(<span style="color:#000">outbuf</span>, <span style="color:#1c01ce">1</span>, <span style="color:#000">mxsiz</span>, <span style="color:#000">stdout</span>), <span style="color:#000">op</span> <span style="color:#000">=</span> <span style="color:#000">outbuf</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">*</span><span style="color:#000">op</span><span style="color:#000">++</span> <span style="color:#000">=</span> <span style="color:#000">ch</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">template</span> <span style="color:#000">&lt;</span><span style="color:#a90d91">typename</span> <span style="color:#000">T</span><span style="color:#000">&gt;</span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">work_wt</span>(<span style="color:#000">T</span> <span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">x</span> <span style="color:#000">&gt;</span> <span style="color:#1c01ce">9</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">work_wt</span>(<span style="color:#000">x</span> <span style="color:#000">/</span> <span style="color:#1c01ce">10</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">push</span>(<span style="color:#000">x</span> <span style="color:#000">%</span> <span style="color:#1c01ce">10</span> <span style="color:#000">+</span> <span style="color:#2300ce">&#39;0&#39;</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">template</span> <span style="color:#000">&lt;</span><span style="color:#a90d91">typename</span> <span style="color:#000">T</span><span style="color:#000">&gt;</span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">write</span>(<span style="color:#000">T</span> <span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">x</span> <span style="color:#000">&lt;</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">-</span><span style="color:#000">x</span>, <span style="color:#000">push</span>(<span style="color:#2300ce">&#39;-&#39;</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">work_wt</span>(<span style="color:#000">x</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">writestr</span>(<span style="color:#a90d91">char</span> <span style="color:#000">*</span><span style="color:#000">s</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">n</span> <span style="color:#000">=</span> <span style="color:#000">strlen</span>(<span style="color:#000">s</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">push</span>(<span style="color:#000">s</span>[<span style="color:#000">i</span>]);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">endln</span>() { <span style="color:#000">push</span>(<span style="color:#000">&#39;\\</span><span style="color:#000">n</span><span style="color:#000">&#39;</span>); }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">space</span>() { <span style="color:#000">push</span>(<span style="color:#2300ce">&#39; &#39;</span>); }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">template</span> <span style="color:#000">&lt;</span><span style="color:#a90d91">typename</span> <span style="color:#000">T</span><span style="color:#000">&gt;</span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">writeln</span>(<span style="color:#000">T</span> <span style="color:#000">x</span>) { <span style="color:#000">write</span>(<span style="color:#000">x</span>), <span style="color:#000">endln</span>(); }
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#a90d91">namespace</span> <span style="color:#000">IO</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">vis</span>[<span style="color:#000">maxn</span>], <span style="color:#000">p</span>[<span style="color:#000">maxp</span>], <span style="color:#000">tot</span>, <span style="color:#000">n</span>, <span style="color:#000">mi</span>[<span style="color:#000">maxn</span>], <span style="color:#000">q</span>;
</span></span><span style="display:flex;"><span><span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">multiset</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">S</span>[<span style="color:#000">maxp</span>];
</span></span><span style="display:flex;"><span><span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">map</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span>, <span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">mp</span>[<span style="color:#000">maxn</span>], <span style="color:#000">P</span>;
</span></span><span style="display:flex;"><span><span style="color:#000">ll</span> <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">init</span>(<span style="color:#a90d91">int</span> <span style="color:#000">n</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">mi</span>[<span style="color:#1c01ce">1</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">2</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">!</span><span style="color:#000">vis</span>[<span style="color:#000">i</span>])
</span></span><span style="display:flex;"><span>            <span style="color:#000">p</span>[<span style="color:#000">++</span><span style="color:#000">tot</span>] <span style="color:#000">=</span> <span style="color:#000">i</span>, <span style="color:#000">P</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">tot</span>, <span style="color:#000">mi</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">i</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;=</span> <span style="color:#000">tot</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">p</span>[<span style="color:#000">j</span>] <span style="color:#000">*</span> <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">vis</span>[<span style="color:#000">i</span> <span style="color:#000">*</span> <span style="color:#000">p</span>[<span style="color:#000">j</span>]] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">mi</span>[<span style="color:#000">i</span> <span style="color:#000">*</span> <span style="color:#000">p</span>[<span style="color:#000">j</span>]] <span style="color:#000">=</span> <span style="color:#000">p</span>[<span style="color:#000">j</span>];
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">i</span> <span style="color:#000">%</span> <span style="color:#000">p</span>[<span style="color:#000">j</span>] <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">break</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000">ll</span> <span style="color:#000">qpow</span>(<span style="color:#000">ll</span> <span style="color:#000">a</span>, <span style="color:#a90d91">int</span> <span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">ll</span> <span style="color:#000">res</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (; <span style="color:#000">x</span>; <span style="color:#000">x</span> <span style="color:#000">&gt;&gt;=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">a</span> <span style="color:#000">=</span> <span style="color:#000">a</span> <span style="color:#000">*</span> <span style="color:#000">a</span> <span style="color:#000">%</span> <span style="color:#000">mod</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">x</span> <span style="color:#000">&amp;</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">res</span> <span style="color:#000">=</span> <span style="color:#000">res</span> <span style="color:#000">*</span> <span style="color:#000">a</span> <span style="color:#000">%</span> <span style="color:#000">mod</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#000">res</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">modify</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">pos</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">x</span> <span style="color:#000">==</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> (<span style="color:#000">x</span> <span style="color:#000">&gt;</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">i</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#000">P</span>[<span style="color:#000">mi</span>[<span style="color:#000">x</span>]];
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">cnt</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">while</span> (<span style="color:#000">x</span> <span style="color:#000">%</span> <span style="color:#000">p</span>[<span style="color:#000">i</span>] <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">x</span> <span style="color:#000">/=</span> <span style="color:#000">p</span>[<span style="color:#000">i</span>], <span style="color:#000">cnt</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">cnt</span> <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">continue</span>;        
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">auto</span> <span style="color:#000">lst</span> <span style="color:#000">=</span> <span style="color:#000">*</span><span style="color:#000">S</span>[<span style="color:#000">i</span>].<span style="color:#000">begin</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">flag</span> <span style="color:#000">=</span> <span style="color:#000">S</span>[<span style="color:#000">i</span>].<span style="color:#000">size</span>() <span style="color:#000">==</span> <span style="color:#000">n</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">mp</span>[<span style="color:#000">pos</span>][<span style="color:#000">i</span>] <span style="color:#000">!=</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">S</span>[<span style="color:#000">i</span>].<span style="color:#000">erase</span>(<span style="color:#000">S</span>[<span style="color:#000">i</span>].<span style="color:#000">find</span>(<span style="color:#000">mp</span>[<span style="color:#000">pos</span>][<span style="color:#000">i</span>])), <span style="color:#000">S</span>[<span style="color:#000">i</span>].<span style="color:#000">insert</span>(<span style="color:#000">cnt</span> <span style="color:#000">+</span> <span style="color:#000">mp</span>[<span style="color:#000">pos</span>][<span style="color:#000">i</span>]);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>            <span style="color:#000">S</span>[<span style="color:#000">i</span>].<span style="color:#000">insert</span>(<span style="color:#000">cnt</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">mp</span>[<span style="color:#000">pos</span>][<span style="color:#000">i</span>] <span style="color:#000">+=</span> <span style="color:#000">cnt</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">S</span>[<span style="color:#000">i</span>].<span style="color:#000">size</span>() <span style="color:#000">&lt;</span> <span style="color:#000">n</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">continue</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>            <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#000">ans</span> <span style="color:#000">*</span> <span style="color:#000">qpow</span>(<span style="color:#000">p</span>[<span style="color:#000">i</span>], <span style="color:#000">flag</span> <span style="color:#000">?</span> <span style="color:#000">*</span><span style="color:#000">S</span>[<span style="color:#000">i</span>].<span style="color:#000">begin</span>() <span style="color:#000">:</span> <span style="color:#000">*</span><span style="color:#000">S</span>[<span style="color:#000">i</span>].<span style="color:#000">begin</span>() <span style="color:#000">-</span> <span style="color:#000">lst</span>) <span style="color:#000">%</span> <span style="color:#000">mod</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">signed</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">init</span>(<span style="color:#1c01ce">2e5</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">n</span> <span style="color:#000">=</span> <span style="color:#000">read</span>(), <span style="color:#000">q</span> <span style="color:#000">=</span> <span style="color:#000">read</span>();
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">read</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#000">modify</span>(<span style="color:#000">x</span>, <span style="color:#000">i</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> (<span style="color:#000">q</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#000">i</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#000">read</span>(), <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">read</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#000">modify</span>(<span style="color:#000">x</span>, <span style="color:#000">i</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">writeln</span>(<span style="color:#000">ans</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="ehttpscodeforcescontest1493probleme"><a href="https://codeforc.es/contest/1493/problem/E">E</a></h2>
<h3 id="description-4">Description</h3>
<p>给定两个位数为 $n$ 的二进制数 $a,b$。$g(x,y)$ 为 $[x,y]$ 所有数异或起来的结果，$f(l,r)$ 为所有满足 $l\leq x\leq y\leq r$ 中 $g(x,y)$ 的最大值，求 $f(a,b)$。$n\leq10^6$​。</p>
<h3 id="solution-4">Solution</h3>
<p>不会？打表！</p>
<p>发现当 $a,b$​ 位数不同时，答案是 $2^n-1$​。</p>
<p>否则当 $a=b$ 或 $b=a+1$ 或 $b$ 是奇数时，答案是 $b$。</p>
<p>否则答案是 $b+1$。</p>
<p>证明？不会！</p>
<h3 id="code-4">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;string&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cerr</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">string</span> <span style="color:#000">a</span>, <span style="color:#000">b</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">string</span> <span style="color:#000">add</span>(<span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">string</span> <span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">n</span> <span style="color:#000">=</span> <span style="color:#000">x</span>.<span style="color:#000">size</span>();
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">string</span> <span style="color:#000">res</span> <span style="color:#000">=</span> <span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">pos</span> <span style="color:#000">=</span> <span style="color:#000">n</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (; <span style="color:#000">pos</span> <span style="color:#000">&gt;=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">pos</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">res</span>[<span style="color:#000">pos</span>] <span style="color:#000">==</span> <span style="color:#2300ce">&#39;1&#39;</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">res</span>[<span style="color:#000">pos</span>] <span style="color:#000">=</span> <span style="color:#2300ce">&#39;0&#39;</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">break</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">res</span>[<span style="color:#000">pos</span>] <span style="color:#000">=</span> <span style="color:#2300ce">&#39;1&#39;</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#000">res</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">a</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">b</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">a</span>[<span style="color:#1c01ce">0</span>] <span style="color:#000">!=</span> <span style="color:#000">b</span>[<span style="color:#1c01ce">0</span>])
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">a</span> <span style="color:#000">==</span> <span style="color:#000">b</span> <span style="color:#000">||</span> <span style="color:#000">add</span>(<span style="color:#000">a</span>) <span style="color:#000">==</span> <span style="color:#000">b</span> <span style="color:#000">||</span> <span style="color:#000">b</span>.<span style="color:#000">back</span>() <span style="color:#000">==</span> <span style="color:#2300ce">&#39;1&#39;</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">b</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">add</span>(<span style="color:#000">b</span>) <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="fhttpscodeforcescontest1493problemf"><a href="https://codeforc.es/contest/1493/problem/F">F</a></h2>
<h3 id="description-5">Description</h3>
<p><strong>这是一道交互题</strong>。</p>
<p>有一个 $n\times m$ 的矩阵，里面是正整数。（$n,m$ 给出）。</p>
<p>你可以询问两个长为 $w$，宽为 $h$ 的矩形是否完全相等。要求这两个矩形不能重叠也不能越界。</p>
<p>你需要求出所有 $(x,y)$ 的数目，满足整个矩形能用 $(1,1)-(x,y)$ 的子矩阵完全平铺出来。</p>
<p>询问次数最多 $3\times\log(n+m)$。</p>
<h3 id="solution-5">Solution</h3>
<p>很显然可以对行和列分别求解，然后把答案乘起来。</p>
<p>实际上，我们只需要求出最小循环节——枚举 $n$​ 的质因子，然后试一下它的最小质因子行不行，如果可以就除以这个最小质因子然后接着算直到 $n=1$。算完最小循环节之后就能知道最多能分成几段，那么这个段数的所有因数都是合法的。</p>
<p>也就是说我们需要在 $3$ 次询问以内判断一个串是否能被分成完全相同的若干个串。</p>
<p>我们把每个完全相同的串看成一个字符，问题就转化为询问一个字符串所有字符是否都相等。</p>
<p>设这个字符串长度为 $L$，当 $L=2$，直接问就行。</p>
<p>否则串长度一定为奇数（因为是质数）我们询问 $([1,\left\lfloor\dfrac{L}{2}\right\rfloor],[\left\lceil\dfrac{L}{2}\right\rceil,L-1])$，再询问 $([1,\left\lfloor\dfrac{L}{2}\right\rfloor],[\left\lceil\dfrac{L}{2}\right\rceil+1,L])$，如果两个都完全相等，那么这个串里的字符都相等（自己想想就懂了）。</p>
<p>于是就结束了。</p>
<h3 id="code-5">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;set&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1010</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">n</span>, <span style="color:#000">m</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">p</span>[<span style="color:#000">maxn</span> <span style="color:#000">*</span> <span style="color:#1c01ce">2</span>], <span style="color:#000">vis</span>[<span style="color:#000">maxn</span> <span style="color:#000">*</span> <span style="color:#1c01ce">2</span>], <span style="color:#000">tot</span>, <span style="color:#000">mi</span>[<span style="color:#000">maxn</span> <span style="color:#000">*</span> <span style="color:#1c01ce">2</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">ansn</span>, <span style="color:#000">ansm</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">init</span>(<span style="color:#a90d91">int</span> <span style="color:#000">n</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2000</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">mi</span>[<span style="color:#1c01ce">1</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">2</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">!</span><span style="color:#000">vis</span>[<span style="color:#000">i</span>])
</span></span><span style="display:flex;"><span>            <span style="color:#000">p</span>[<span style="color:#000">++</span><span style="color:#000">tot</span>] <span style="color:#000">=</span> <span style="color:#000">i</span>, <span style="color:#000">mi</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">i</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;=</span> <span style="color:#000">tot</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">p</span>[<span style="color:#000">j</span>] <span style="color:#000">*</span> <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">vis</span>[<span style="color:#000">i</span> <span style="color:#000">*</span> <span style="color:#000">p</span>[<span style="color:#000">j</span>]] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">mi</span>[<span style="color:#000">i</span> <span style="color:#000">*</span> <span style="color:#000">p</span>[<span style="color:#000">j</span>]] <span style="color:#000">=</span> <span style="color:#000">p</span>[<span style="color:#000">j</span>];
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">i</span> <span style="color:#000">%</span> <span style="color:#000">p</span>[<span style="color:#000">j</span>] <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">break</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">ios</span><span style="color:#000">::</span><span style="color:#000">sync_with_stdio</span>(<span style="color:#a90d91">false</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">::</span><span style="color:#000">n</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">m</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">bool</span> <span style="color:#000">ask</span>(<span style="color:#a90d91">int</span> <span style="color:#000">l</span>, <span style="color:#a90d91">int</span> <span style="color:#000">r</span>, <span style="color:#a90d91">int</span> <span style="color:#000">len</span>, <span style="color:#a90d91">bool</span> <span style="color:#000">d</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">d</span> <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34;? &#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">n</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">len</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">l</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">r</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34;? &#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">len</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">m</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">l</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">r</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">res</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">res</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#000">res</span> <span style="color:#000">==</span> <span style="color:#1c01ce">1</span> <span style="color:#000">?</span> <span style="color:#a90d91">true</span> <span style="color:#000">:</span> <span style="color:#a90d91">false</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">bool</span> <span style="color:#000">queryn</span>(<span style="color:#a90d91">int</span> <span style="color:#000">L</span>, <span style="color:#a90d91">int</span> <span style="color:#000">len</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">L</span> <span style="color:#000">==</span> <span style="color:#1c01ce">2</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#000">ask</span>(<span style="color:#1c01ce">1</span>, <span style="color:#000">len</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">len</span>, <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">mid</span> <span style="color:#000">=</span> <span style="color:#000">L</span> <span style="color:#000">/</span> <span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">len</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#000">ask</span>(<span style="color:#1c01ce">1</span>, <span style="color:#000">mid</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">mid</span>, <span style="color:#1c01ce">1</span>) <span style="color:#000">&amp;&amp;</span> <span style="color:#000">ask</span>(<span style="color:#1c01ce">1</span>, <span style="color:#000">mid</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">+</span> <span style="color:#000">len</span>, <span style="color:#000">mid</span>, <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">bool</span> <span style="color:#000">querym</span>(<span style="color:#a90d91">int</span> <span style="color:#000">L</span>, <span style="color:#a90d91">int</span> <span style="color:#000">len</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">L</span> <span style="color:#000">==</span> <span style="color:#1c01ce">2</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#000">ask</span>(<span style="color:#1c01ce">1</span>, <span style="color:#000">len</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">len</span>, <span style="color:#1c01ce">0</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">mid</span> <span style="color:#000">=</span> <span style="color:#000">L</span> <span style="color:#000">/</span> <span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">len</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#000">ask</span>(<span style="color:#1c01ce">1</span>, <span style="color:#000">mid</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">mid</span>, <span style="color:#1c01ce">0</span>) <span style="color:#000">&amp;&amp;</span> <span style="color:#000">ask</span>(<span style="color:#1c01ce">1</span>, <span style="color:#000">mid</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">+</span> <span style="color:#000">len</span>, <span style="color:#000">mid</span>, <span style="color:#1c01ce">0</span>);
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">work1</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">res</span> <span style="color:#000">=</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span> <span style="color:#000">&gt;</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">/=</span> <span style="color:#000">mi</span>[<span style="color:#000">i</span>])
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">queryn</span>(<span style="color:#000">mi</span>[<span style="color:#000">i</span>], <span style="color:#000">res</span> <span style="color:#000">/</span> <span style="color:#000">mi</span>[<span style="color:#000">i</span>]))
</span></span><span style="display:flex;"><span>            <span style="color:#000">res</span> <span style="color:#000">/=</span> <span style="color:#000">mi</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">times</span> <span style="color:#000">=</span> <span style="color:#000">n</span> <span style="color:#000">/</span> <span style="color:#000">res</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">times</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">times</span> <span style="color:#000">%</span> <span style="color:#000">i</span> <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">ans</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#000">ans</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">work2</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">res</span> <span style="color:#000">=</span> <span style="color:#000">m</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#000">m</span>; <span style="color:#000">i</span> <span style="color:#000">&gt;</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">/=</span> <span style="color:#000">mi</span>[<span style="color:#000">i</span>])
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">querym</span>(<span style="color:#000">mi</span>[<span style="color:#000">i</span>], <span style="color:#000">res</span> <span style="color:#000">/</span> <span style="color:#000">mi</span>[<span style="color:#000">i</span>]))
</span></span><span style="display:flex;"><span>            <span style="color:#000">res</span> <span style="color:#000">/=</span> <span style="color:#000">mi</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">times</span> <span style="color:#000">=</span> <span style="color:#000">m</span> <span style="color:#000">/</span> <span style="color:#000">res</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">times</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">times</span> <span style="color:#000">%</span> <span style="color:#000">i</span> <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">ans</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#000">ans</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">init</span>();
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#000">work1</span>() <span style="color:#000">*</span> <span style="color:#000">work2</span>();
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34;! &#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">ans</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div>]]></content:encoded>
    </item>
    
    <item>
      <title>Codeforces Round 344 (Div. 2)</title>
      <link>https://luoyisu.github.io/posts/cf-contest631/</link>
      <pubDate>Fri, 10 Dec 2021 15:01:44 +0000</pubDate>
      
      <guid>https://luoyisu.github.io/posts/cf-contest631/</guid>
      <description>&lt;p&gt;还算良心的比赛。&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>还算良心的比赛。</p>
<h2 id="ahttpscodeforcescontest631problema"><a href="https://codeforc.es/contest/631/problem/A">A</a></h2>
<h3 id="description">Description</h3>
<p>有两个序列 $a,b$​，定义 $f(x,l,r)$​ 为  $x$​ 序列中 $[l,r]$​ 的数或起来的结果，求所有 $l,r$​ 中，$f(a,l,r)+f(b,l,r)$​ 的最大值。</p>
<h3 id="solution">Solution</h3>
<p>发现或起来之后数不会变小，那直接全或起来就行。</p>
<h3 id="code">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#000">n</span> <span style="color:#000">=</span> <span style="color:#a90d91">int</span>(<span style="color:#a90d91">input</span>())
</span></span><span style="display:flex;"><span><span style="color:#000">a</span> <span style="color:#000">=</span> <span style="color:#a90d91">map</span>(<span style="color:#a90d91">int</span>, <span style="color:#a90d91">input</span>()<span style="color:#000">.</span><span style="color:#000">split</span>())
</span></span><span style="display:flex;"><span><span style="color:#000">b</span> <span style="color:#000">=</span> <span style="color:#a90d91">map</span>(<span style="color:#a90d91">int</span>, <span style="color:#a90d91">input</span>()<span style="color:#000">.</span><span style="color:#000">split</span>())
</span></span><span style="display:flex;"><span> 
</span></span><span style="display:flex;"><span><span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">y</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>
</span></span><span style="display:flex;"><span> 
</span></span><span style="display:flex;"><span><span style="color:#a90d91">for</span> <span style="color:#000">i</span> <span style="color:#000">in</span> <span style="color:#000">a</span>:
</span></span><span style="display:flex;"><span>    <span style="color:#000">x</span> <span style="color:#000">|=</span> <span style="color:#000">i</span>
</span></span><span style="display:flex;"><span> 
</span></span><span style="display:flex;"><span><span style="color:#a90d91">for</span> <span style="color:#000">i</span> <span style="color:#000">in</span> <span style="color:#000">b</span>:
</span></span><span style="display:flex;"><span>    <span style="color:#000">y</span> <span style="color:#000">|=</span> <span style="color:#000">i</span>
</span></span><span style="display:flex;"><span> 
</span></span><span style="display:flex;"><span><span style="color:#a90d91">print</span>(<span style="color:#000">x</span> <span style="color:#000">+</span> <span style="color:#000">y</span>)
</span></span></code></pre></div><h2 id="bhttpscodeforcescontest631problemb"><a href="https://codeforc.es/contest/631/problem/B">B</a></h2>
<h3 id="description-1">Description</h3>
<p>有一个 $n\times m$​ 的矩阵，$k$​ 次操作，每次可以把一行或一列涂成一个颜色，求最后的矩阵。$n\times m,k\leq10^5,n\leq5000,m\leq5000$​。</p>
<h3 id="solution-1">Solution</h3>
<p>对于每个行和列直接维护最后一次修改是什么颜色和这次修改的时间即可，最后直接找时间更晚的颜色输出。</p>
<h3 id="code-1">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span> 
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">5010</span>;
</span></span><span style="display:flex;"><span> 
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">col</span>[<span style="color:#000">maxn</span>], <span style="color:#000">row</span>[<span style="color:#000">maxn</span>], <span style="color:#000">tc</span>[<span style="color:#000">maxn</span>], <span style="color:#000">tr</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span> 
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">ios</span><span style="color:#000">::</span><span style="color:#000">sync_with_stdio</span>(<span style="color:#a90d91">false</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">n</span>, <span style="color:#000">m</span>, <span style="color:#000">k</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">m</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">k</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">k</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">opt</span>, <span style="color:#000">x</span>, <span style="color:#000">c</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">opt</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">x</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">c</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">opt</span> <span style="color:#000">==</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">row</span>[<span style="color:#000">x</span>] <span style="color:#000">=</span> <span style="color:#000">c</span>, <span style="color:#000">tr</span>[<span style="color:#000">x</span>] <span style="color:#000">=</span> <span style="color:#000">i</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>            <span style="color:#000">col</span>[<span style="color:#000">x</span>] <span style="color:#000">=</span> <span style="color:#000">c</span>, <span style="color:#000">tc</span>[<span style="color:#000">x</span>] <span style="color:#000">=</span> <span style="color:#000">i</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>, <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> (<span style="color:#000">tr</span>[<span style="color:#000">i</span>] <span style="color:#000">&gt;</span> <span style="color:#000">tc</span>[<span style="color:#000">j</span>] <span style="color:#000">?</span> <span style="color:#000">row</span>[<span style="color:#000">i</span>] <span style="color:#000">:</span> <span style="color:#000">col</span>[<span style="color:#000">j</span>]) <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span>;
</span></span><span style="display:flex;"><span>    
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="chttpscodeforcescontest631problemc"><a href="https://codeforc.es/contest/631/problem/C">C</a></h2>
<h3 id="description-2">Description</h3>
<p>有一个长度为 $n$ 序列 $\{a_i\}$，有 $m$​ 个人依次进行一次操作，每次操作会把序列的一个前缀升序或降序排序，求最后得到的序列。$n\leq2\times10^5$</p>
<h3 id="solution-2">Solution</h3>
<p>注意到如果上一次操作的区间比这一次小，那么上一次操作没有意义，因此我们只需要找到单调递减的一组操作：用单调栈维护。</p>
<p>维护一个从后到前的答案栈。</p>
<p>然后把原序列排个序，升序排序就是把剩下的不会被下一次操作影响的数从大到小压进栈里，降序排序就是从小到大。</p>
<h3 id="code-2">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;stack&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2e5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">top</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">a</span>[<span style="color:#000">maxn</span>], <span style="color:#000">n</span>, <span style="color:#000">m</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">struct</span> <span style="color:#3f6e75">opt</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">i</span>, <span style="color:#000">t</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">opt</span>()
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#000">t</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">opt</span>(<span style="color:#a90d91">int</span> <span style="color:#000">i_</span>, <span style="color:#a90d91">int</span> <span style="color:#000">t_</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#000">i_</span>, <span style="color:#000">t</span> <span style="color:#000">=</span> <span style="color:#000">t_</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>} <span style="color:#000">p</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">stack</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">stk</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">ios</span><span style="color:#000">::</span><span style="color:#000">sync_with_stdio</span>(<span style="color:#a90d91">false</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">m</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#000">pos</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">x</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">pos</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">while</span> (<span style="color:#000">top</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">pos</span> <span style="color:#000">&gt;=</span> <span style="color:#000">p</span>[<span style="color:#000">top</span>].<span style="color:#000">i</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">top</span><span style="color:#000">--</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">p</span>[<span style="color:#000">++</span><span style="color:#000">top</span>] <span style="color:#000">=</span> (<span style="color:#000">opt</span>){<span style="color:#000">pos</span>, <span style="color:#000">x</span>};
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">r</span> <span style="color:#000">=</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> (<span style="color:#000">r</span> <span style="color:#000">&gt;</span> <span style="color:#000">p</span>[<span style="color:#1c01ce">1</span>].<span style="color:#000">i</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">stk</span>.<span style="color:#000">push</span>(<span style="color:#000">a</span>[<span style="color:#000">r</span><span style="color:#000">--</span>]);
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">sort</span>(<span style="color:#000">a</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">a</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">+</span> <span style="color:#000">p</span>[<span style="color:#1c01ce">1</span>].<span style="color:#000">i</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">lpos</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">rpos</span> <span style="color:#000">=</span> <span style="color:#000">p</span>[<span style="color:#1c01ce">1</span>].<span style="color:#000">i</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">res</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">top</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">d</span> <span style="color:#000">=</span> <span style="color:#000">p</span>[<span style="color:#000">i</span>].<span style="color:#000">i</span> <span style="color:#000">-</span> (<span style="color:#000">i</span> <span style="color:#000">==</span> <span style="color:#000">top</span> <span style="color:#000">?</span> <span style="color:#1c01ce">0</span> <span style="color:#000">:</span> <span style="color:#000">p</span>[<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>].<span style="color:#000">i</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">p</span>[<span style="color:#000">i</span>].<span style="color:#000">t</span> <span style="color:#000">==</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;</span> <span style="color:#000">d</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">stk</span>.<span style="color:#000">push</span>(<span style="color:#000">a</span>[<span style="color:#000">rpos</span><span style="color:#000">--</span>]);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;</span> <span style="color:#000">d</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">stk</span>.<span style="color:#000">push</span>(<span style="color:#000">a</span>[<span style="color:#000">lpos</span><span style="color:#000">++</span>]);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> (<span style="color:#000">!</span><span style="color:#000">stk</span>.<span style="color:#000">empty</span>())
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">stk</span>.<span style="color:#000">top</span>() <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span>, <span style="color:#000">stk</span>.<span style="color:#000">pop</span>();
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="dhttpscodeforcescontest631problemd"><a href="https://codeforc.es/contest/631/problem/D">D</a></h2>
<h3 id="description-3">Description</h3>
<p>定义一个字符串压缩后得到的字符串是把连续相同的字符用数字+字符的形式表示。</p>
<p>给出两个压缩后的字符串 A、B（长度分别为 $n$，$m$），求 B 在 A 中出现了几次。</p>
<p>$n,m\leq2\times10^5$​。</p>
<h3 id="solution-3">Solution</h3>
<p>这显然是个 KMP，我们把 B 去除掉第一位和最后一位和 A 匹配，然后看一下第一位和最后一位是否也能匹配即可，特判一下 $m&lt;3$ 的情况。</p>
<h3 id="code-3">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2e5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">struct</span> <span style="color:#3f6e75">node</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">char</span> <span style="color:#000">ch</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">len</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">bool</span> <span style="color:#a90d91">operator</span><span style="color:#000">==</span>(<span style="color:#a90d91">const</span> <span style="color:#000">node</span> <span style="color:#000">&amp;</span><span style="color:#000">b</span>) <span style="color:#a90d91">const</span> { <span style="color:#a90d91">return</span> <span style="color:#000">ch</span> <span style="color:#000">==</span> <span style="color:#000">b</span>.<span style="color:#000">ch</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">len</span> <span style="color:#000">==</span> <span style="color:#000">b</span>.<span style="color:#000">len</span>; }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">bool</span> <span style="color:#a90d91">operator</span><span style="color:#000">!=</span>(<span style="color:#a90d91">const</span> <span style="color:#000">node</span> <span style="color:#000">&amp;</span><span style="color:#000">b</span>) <span style="color:#a90d91">const</span> { <span style="color:#a90d91">return</span> <span style="color:#000">!</span>(<span style="color:#000">*</span><span style="color:#a90d91">this</span> <span style="color:#000">==</span> <span style="color:#000">b</span>); }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">void</span> <span style="color:#000">print</span>() { <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">ch</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">len</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>; }
</span></span><span style="display:flex;"><span>} <span style="color:#000">a</span>[<span style="color:#000">maxn</span>], <span style="color:#000">b</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">char</span> <span style="color:#000">s</span>[<span style="color:#1c01ce">20</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">n</span>, <span style="color:#000">m</span>, <span style="color:#000">tota</span>, <span style="color:#000">totb</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">ans</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">solve1</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">ch</span> <span style="color:#000">==</span> <span style="color:#000">b</span>[<span style="color:#1c01ce">1</span>].<span style="color:#000">ch</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">len</span> <span style="color:#000">&gt;=</span> <span style="color:#000">b</span>[<span style="color:#1c01ce">1</span>].<span style="color:#000">len</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">ans</span> <span style="color:#000">+=</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">len</span> <span style="color:#000">-</span> <span style="color:#000">b</span>[<span style="color:#1c01ce">1</span>].<span style="color:#000">len</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">solve2</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">ch</span> <span style="color:#000">==</span> <span style="color:#000">b</span>[<span style="color:#1c01ce">1</span>].<span style="color:#000">ch</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">a</span>[<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>].<span style="color:#000">ch</span> <span style="color:#000">==</span> <span style="color:#000">b</span>[<span style="color:#1c01ce">2</span>].<span style="color:#000">ch</span> 
</span></span><span style="display:flex;"><span>            <span style="color:#000">&amp;&amp;</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">len</span> <span style="color:#000">&gt;=</span> <span style="color:#000">b</span>[<span style="color:#1c01ce">1</span>].<span style="color:#000">len</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">a</span>[<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>].<span style="color:#000">len</span> <span style="color:#000">&gt;=</span> <span style="color:#000">b</span>[<span style="color:#1c01ce">2</span>].<span style="color:#000">len</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">ans</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">nxt</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#000">node</span> <span style="color:#000">tmpb</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">tmpm</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">get_nxt</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">m</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">tmpb</span>[<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">=</span> <span style="color:#000">b</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#000">tmpm</span> <span style="color:#000">=</span> <span style="color:#000">m</span> <span style="color:#000">-</span> <span style="color:#1c01ce">2</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2</span>, <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">tmpm</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">while</span> (<span style="color:#000">j</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">tmpb</span>[<span style="color:#000">i</span>] <span style="color:#000">!=</span> <span style="color:#000">tmpb</span>[<span style="color:#000">j</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>])
</span></span><span style="display:flex;"><span>            <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#000">nxt</span>[<span style="color:#000">j</span>];
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">tmpb</span>[<span style="color:#000">i</span>] <span style="color:#000">==</span> <span style="color:#000">tmpb</span>[<span style="color:#000">j</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>])
</span></span><span style="display:flex;"><span>            <span style="color:#000">j</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">nxt</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">j</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">solve</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">get_nxt</span>();
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2</span>, <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">while</span> (<span style="color:#000">j</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>] <span style="color:#000">!=</span> <span style="color:#000">tmpb</span>[<span style="color:#000">j</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>])
</span></span><span style="display:flex;"><span>            <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#000">nxt</span>[<span style="color:#000">j</span>];
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">a</span>[<span style="color:#000">i</span>] <span style="color:#000">==</span> <span style="color:#000">tmpb</span>[<span style="color:#000">j</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>])
</span></span><span style="display:flex;"><span>            <span style="color:#000">j</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">j</span> <span style="color:#000">==</span> <span style="color:#000">tmpm</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">int</span> <span style="color:#000">pos</span> <span style="color:#000">=</span> <span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#000">tmpm</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">a</span>[<span style="color:#000">pos</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>].<span style="color:#000">ch</span> <span style="color:#000">==</span> <span style="color:#000">b</span>[<span style="color:#1c01ce">1</span>].<span style="color:#000">ch</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">a</span>[<span style="color:#000">pos</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>].<span style="color:#000">len</span> <span style="color:#000">&gt;=</span> <span style="color:#000">b</span>[<span style="color:#1c01ce">1</span>].<span style="color:#000">len</span> 
</span></span><span style="display:flex;"><span>                <span style="color:#000">&amp;&amp;</span> <span style="color:#000">a</span>[<span style="color:#000">pos</span> <span style="color:#000">+</span> <span style="color:#000">m</span> <span style="color:#000">-</span> <span style="color:#1c01ce">2</span>].<span style="color:#000">ch</span> <span style="color:#000">==</span> <span style="color:#000">b</span>[<span style="color:#000">m</span>].<span style="color:#000">ch</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">a</span>[<span style="color:#000">pos</span> <span style="color:#000">+</span> <span style="color:#000">m</span> <span style="color:#000">-</span> <span style="color:#1c01ce">2</span>].<span style="color:#000">len</span> <span style="color:#000">&gt;=</span> <span style="color:#000">b</span>[<span style="color:#000">m</span>].<span style="color:#000">len</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">ans</span><span style="color:#000">++</span>;        
</span></span><span style="display:flex;"><span>            <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#000">nxt</span>[<span style="color:#000">j</span>];
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">ios</span><span style="color:#000">::</span><span style="color:#000">sync_with_stdio</span>(<span style="color:#a90d91">false</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">m</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">a</span>[<span style="color:#1c01ce">0</span>].<span style="color:#000">ch</span> <span style="color:#000">=</span> <span style="color:#000">b</span>[<span style="color:#1c01ce">0</span>].<span style="color:#000">ch</span> <span style="color:#000">=</span> <span style="color:#2300ce">&#39;#&#39;</span>, <span style="color:#000">a</span>[<span style="color:#1c01ce">0</span>].<span style="color:#000">len</span> <span style="color:#000">=</span> <span style="color:#000">b</span>[<span style="color:#1c01ce">0</span>].<span style="color:#000">len</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">s</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">len</span> <span style="color:#000">=</span> <span style="color:#000">strlen</span>(<span style="color:#000">s</span>), <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">len</span> <span style="color:#000">-</span> <span style="color:#1c01ce">2</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">x</span> <span style="color:#000">*</span> <span style="color:#1c01ce">10</span> <span style="color:#000">+</span> <span style="color:#000">s</span>[<span style="color:#000">i</span>] <span style="color:#000">-</span> <span style="color:#2300ce">&#39;0&#39;</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">s</span>[<span style="color:#000">len</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">==</span> <span style="color:#000">a</span>[<span style="color:#000">tota</span>].<span style="color:#000">ch</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">a</span>[<span style="color:#000">tota</span>].<span style="color:#000">len</span> <span style="color:#000">+=</span> <span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>            <span style="color:#000">a</span>[<span style="color:#000">++</span><span style="color:#000">tota</span>] <span style="color:#000">=</span> {<span style="color:#000">s</span>[<span style="color:#000">len</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>], <span style="color:#000">x</span>};
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">s</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">len</span> <span style="color:#000">=</span> <span style="color:#000">strlen</span>(<span style="color:#000">s</span>), <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">len</span> <span style="color:#000">-</span> <span style="color:#1c01ce">2</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">x</span> <span style="color:#000">*</span> <span style="color:#1c01ce">10</span> <span style="color:#000">+</span> <span style="color:#000">s</span>[<span style="color:#000">i</span>] <span style="color:#000">-</span> <span style="color:#2300ce">&#39;0&#39;</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">s</span>[<span style="color:#000">len</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">==</span> <span style="color:#000">b</span>[<span style="color:#000">totb</span>].<span style="color:#000">ch</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">b</span>[<span style="color:#000">totb</span>].<span style="color:#000">len</span> <span style="color:#000">+=</span> <span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>            <span style="color:#000">b</span>[<span style="color:#000">++</span><span style="color:#000">totb</span>] <span style="color:#000">=</span> {<span style="color:#000">s</span>[<span style="color:#000">len</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>], <span style="color:#000">x</span>};
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">n</span> <span style="color:#000">=</span> <span style="color:#000">tota</span>, <span style="color:#000">m</span> <span style="color:#000">=</span> <span style="color:#000">totb</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">m</span> <span style="color:#000">==</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">solve1</span>();
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">else</span> <span style="color:#a90d91">if</span> (<span style="color:#000">m</span> <span style="color:#000">==</span> <span style="color:#1c01ce">2</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">solve2</span>();
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>        <span style="color:#000">solve</span>();
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">ans</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="ehttpscodeforcescontest631probleme"><a href="https://codeforc.es/contest/631/problem/E">E</a></h2>
<h3 id="description-4">Description</h3>
<p>给出一个长度为 $n$​ 的序列 $\{a_i\}$​，定义它的权值是 $\sum\limits_{i=1}^ni\times a_i$​，你可以将序列中一个数移动一次，求能得到的最大的权值。$n\leq2\times10^5$。​</p>
<h3 id="solution-4">Solution</h3>
<p>我们只需要最大化操作后增加的权值即可。</p>
<p>设 $f_i$​ 表示把第 $i$​ 个数移动后能得到的最大权值增加量，$sum_i$​ 为序列的前缀和。</p>
<p>$f_i=\max\limits_0^n\{(j-i)\times a_i+sum_i-sum_j\}$，直接枚举 $j$​，是 $O(n^2)$。</p>
<p>发现这是个斜率优化的形式。</p>
<p>$sum_j=j\times a_i+(sum_i-i\times a_i-f_i)$。</p>
<p>那么 $y=sum_j,x=j,k=a_i,b=sum_i-i\times a_i-f_i$​。</p>
<p>我们要最小化截距，维护一个下凸包即可。</p>
<p>这个题一开始所有的 $j$​ 都是可以用的，于是我们的下凸包是固定的，用单调栈维护。</p>
<p>斜率没有单调性，我们直接在单调栈上二分即可。</p>
<h3 id="code-4">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2e5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">typedef</span> <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">ll</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">a</span>[<span style="color:#000">maxn</span>], <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span><span style="color:#000">ll</span> <span style="color:#000">sum</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">struct</span> <span style="color:#3f6e75">node</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">ll</span> <span style="color:#000">x</span>, <span style="color:#000">y</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">node</span>() { <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">y</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; }
</span></span><span style="display:flex;"><span>    <span style="color:#000">node</span>(<span style="color:#000">ll</span> <span style="color:#000">x_</span>, <span style="color:#000">ll</span> <span style="color:#000">y_</span>) { <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">x_</span>, <span style="color:#000">y</span> <span style="color:#000">=</span> <span style="color:#000">y_</span>; }
</span></span><span style="display:flex;"><span>} <span style="color:#000">p</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">top</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">double</span> <span style="color:#000">slope</span>(<span style="color:#a90d91">const</span> <span style="color:#000">node</span> <span style="color:#000">&amp;</span><span style="color:#000">x</span>, <span style="color:#a90d91">const</span> <span style="color:#000">node</span> <span style="color:#000">&amp;</span><span style="color:#000">y</span>) { <span style="color:#a90d91">return</span> (<span style="color:#a90d91">double</span>)(<span style="color:#a90d91">double</span>(<span style="color:#000">y</span>.<span style="color:#000">y</span> <span style="color:#000">-</span> <span style="color:#000">x</span>.<span style="color:#000">y</span>)) <span style="color:#000">/</span> (<span style="color:#a90d91">double</span>(<span style="color:#000">y</span>.<span style="color:#000">x</span> <span style="color:#000">-</span> <span style="color:#000">x</span>.<span style="color:#000">x</span>)); }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000">node</span> <span style="color:#000">solve</span>(<span style="color:#000">ll</span> <span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">l</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2</span>, <span style="color:#000">r</span> <span style="color:#000">=</span> <span style="color:#000">top</span>, <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> (<span style="color:#000">l</span> <span style="color:#000">&lt;=</span> <span style="color:#000">r</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">mid</span> <span style="color:#000">=</span> (<span style="color:#000">l</span> <span style="color:#000">+</span> <span style="color:#000">r</span>) <span style="color:#000">/</span> <span style="color:#1c01ce">2</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">slope</span>(<span style="color:#000">p</span>[<span style="color:#000">mid</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>], <span style="color:#000">p</span>[<span style="color:#000">mid</span>]) <span style="color:#000">&lt;=</span> <span style="color:#a90d91">double</span>(<span style="color:#000">x</span>))
</span></span><span style="display:flex;"><span>            <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#000">mid</span>, <span style="color:#000">l</span> <span style="color:#000">=</span> <span style="color:#000">mid</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>            <span style="color:#000">r</span> <span style="color:#000">=</span> <span style="color:#000">mid</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#000">p</span>[<span style="color:#000">ans</span>];
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">ios</span><span style="color:#000">::</span><span style="color:#000">sync_with_stdio</span>(<span style="color:#a90d91">false</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">ll</span> <span style="color:#000">res</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>], <span style="color:#000">sum</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">sum</span>[<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">+</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>], <span style="color:#000">res</span> <span style="color:#000">+=</span> <span style="color:#1c01ce">1ll</span> <span style="color:#000">*</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>] <span style="color:#000">*</span> <span style="color:#000">i</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">top</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">node</span> <span style="color:#000">now</span>(<span style="color:#000">i</span>, <span style="color:#000">sum</span>[<span style="color:#000">i</span>]);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">while</span> (<span style="color:#000">top</span> <span style="color:#000">&gt;</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">slope</span>(<span style="color:#000">p</span>[<span style="color:#000">top</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>], <span style="color:#000">p</span>[<span style="color:#000">top</span>]) <span style="color:#000">&gt;=</span> <span style="color:#000">slope</span>(<span style="color:#000">p</span>[<span style="color:#000">top</span>], <span style="color:#000">now</span>))
</span></span><span style="display:flex;"><span>            <span style="color:#000">top</span><span style="color:#000">--</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">p</span>[<span style="color:#000">++</span><span style="color:#000">top</span>] <span style="color:#000">=</span> <span style="color:#000">now</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">ll</span> <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">auto</span> <span style="color:#000">now</span> <span style="color:#000">=</span> <span style="color:#000">solve</span>(<span style="color:#000">a</span>[<span style="color:#000">i</span>]);
</span></span><span style="display:flex;"><span>        <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">max</span>(<span style="color:#000">ans</span>, <span style="color:#000">-</span><span style="color:#000">now</span>.<span style="color:#000">y</span> <span style="color:#000">+</span> <span style="color:#000">now</span>.<span style="color:#000">x</span> <span style="color:#000">*</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>] <span style="color:#000">-</span> <span style="color:#1c01ce">1ll</span> <span style="color:#000">*</span> <span style="color:#000">i</span> <span style="color:#000">*</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>] <span style="color:#000">+</span> <span style="color:#000">sum</span>[<span style="color:#000">i</span>]);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">res</span> <span style="color:#000">+</span> <span style="color:#000">ans</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div>]]></content:encoded>
    </item>
    
    <item>
      <title>Codeforces Round 519</title>
      <link>https://luoyisu.github.io/posts/cf-contest1043/</link>
      <pubDate>Thu, 09 Dec 2021 13:21:40 +0000</pubDate>
      
      <guid>https://luoyisu.github.io/posts/cf-contest1043/</guid>
      <description>&lt;p&gt;好像又是没有数据结构和数学题的一天。&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>好像又是没有数据结构和数学题的一天。</p>
<h2 id="ahttpscodeforcescontest1043problema"><a href="https://codeforc.es/contest/1043/problem/A">A</a></h2>
<h3 id="description">Description</h3>
<p>有 A、B 两个人要竞选，有 $n$ 个人，每个人有 $k$ 票，其中给 B 投 $a_i$​ 票，剩下的投 A。问要使 A 的票数大于 B，$k$  最小是多少。</p>
<h3 id="solution">Solution</h3>
<p>$$
nk-\sum a_i&gt;\sum a_i\Rightarrow k&gt;\frac{2\times\sum a_i}{n}
$$</p>
<h3 id="code">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">read</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">double</span> <span style="color:#000">eps</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1e-8</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">n</span>, <span style="color:#000">sum</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>, <span style="color:#000">mx</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">x</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">read</span>(), <span style="color:#000">sum</span> <span style="color:#000">+=</span> <span style="color:#000">x</span>, <span style="color:#000">mx</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">max</span>(<span style="color:#000">mx</span>, <span style="color:#000">x</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">sum</span> <span style="color:#000">/</span> <span style="color:#000">n</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">max</span>(<span style="color:#000">ans</span>, <span style="color:#000">mx</span>) <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="bhttpscodeforcescontest1043problemb"><a href="https://codeforc.es/contest/1043/problem/B">B</a></h2>
<h3 id="description-1">Description</h3>
<p>有一个长度为 $n$ 序列 $\{a_i\}$，求满足以下条件的序列 $\{x_i\}$ 的数目：$a_i=x_{(i-1)\ \bmod\ k}+a_{i-1}$。其中 $k$ 是序列 $\{x_i\}$ 的长度。</p>
<h3 id="solution-1">Solution</h3>
<p>发现如果没有取模的限制，要求的就是差分数组，有了这个限制也就是说要找到他的循环节，那么构建一下 KMP 中的 $next$ 数组跳一跳就行。</p>
<h3 id="code-1">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">read</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1010</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">nxt</span>[<span style="color:#000">maxn</span>], <span style="color:#000">a</span>[<span style="color:#000">maxn</span>], <span style="color:#000">b</span>[<span style="color:#000">maxn</span>], <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span><span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">vector</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">ans</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">get_nxt</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">while</span> (<span style="color:#000">j</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">b</span>[<span style="color:#000">i</span>] <span style="color:#000">!=</span> <span style="color:#000">b</span>[<span style="color:#000">j</span>])
</span></span><span style="display:flex;"><span>            <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#000">nxt</span>[<span style="color:#000">j</span>];
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">b</span>[<span style="color:#000">i</span>] <span style="color:#000">==</span> <span style="color:#000">b</span>[<span style="color:#000">j</span>])
</span></span><span style="display:flex;"><span>            <span style="color:#000">j</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">nxt</span>[<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">=</span> <span style="color:#000">j</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">solve</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">now</span> <span style="color:#000">=</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> (<span style="color:#000">now</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">ans</span>.<span style="color:#000">push_back</span>(<span style="color:#000">n</span> <span style="color:#000">-</span> <span style="color:#000">nxt</span>[<span style="color:#000">now</span>]);
</span></span><span style="display:flex;"><span>        <span style="color:#000">now</span> <span style="color:#000">=</span> <span style="color:#000">nxt</span>[<span style="color:#000">now</span>];
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">ans</span>.<span style="color:#000">size</span>() <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> : <span style="color:#000">ans</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">i</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;   
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">b</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">a</span>[<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">-</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#000">get_nxt</span>();
</span></span><span style="display:flex;"><span>    <span style="color:#000">solve</span>();
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="chttpscodeforcescontest1043problemc"><a href="https://codeforc.es/contest/1043/problem/C">C</a></h2>
<h3 id="description-2">Description</h3>
<p>有一个只有 <code>a</code> 和 <code>b</code> 的字符串，从前往后扫一遍，在每一位你可以选择将其前缀翻转，问如何操作得到字符串字典序最小。</p>
<h3 id="solution-2">Solution</h3>
<p>假如我们得到了当前这一位之前的操作方案，且这一位是 <code>a</code>，我们显然需要把这个 <code>a</code> 翻转到前面去。那么我们把前一位翻转一下，再把这一位翻转一下即可。</p>
<h3 id="code-2">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">read</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1010</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">char</span> <span style="color:#000">s</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">ans</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">s</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">n</span> <span style="color:#000">=</span> <span style="color:#000">strlen</span>(<span style="color:#000">s</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">s</span>[<span style="color:#000">i</span>] <span style="color:#000">==</span> <span style="color:#2300ce">&#39;a&#39;</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">ans</span>[<span style="color:#000">i</span>] <span style="color:#000">^=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">ans</span>[<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">^=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">ans</span>[<span style="color:#000">i</span>] <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>    
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="dhttpscodeforcescontest1043problemd"><a href="https://codeforc.es/contest/1043/problem/D">D</a></h2>
<h3 id="description-3">Description</h3>
<p>有 $m$ 个长度为 $n$ 的 $1\sim n$​ 的排列。你可以对一个排列删除任意长度的前缀或后缀（可以不删或只删前缀或只删后缀），但不能删空。最终使得到的排列全都相同，求删除的方案数。$m\leq10,n\leq10^5$​​。</p>
<h3 id="solution-3">Solution</h3>
<p>对于第一个排列中的一个子序列，发现它合法等价于其他所有排列中也存在这个子序列，那么我们只需要考虑第一个排列中的所有合法子序列长度即可。</p>
<p>对于一个长度为 $n$ 的合法子序列，他对答案的贡献是 $n+\dfrac{(n\times(n-1))}{2}=\dfrac{n\times(n+1)}{2}$​​，即任意选一个或任意选两个。</p>
<p>求所有子序列的长度可以用类似双指针的算法实现。</p>
<h3 id="code-3">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;map&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;utility&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cerr</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">namespace</span> <span style="color:#000">IO</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>	<span style="color:#177500">// 为了简短代码省略了
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>}
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#a90d91">namespace</span> <span style="color:#000">IO</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1e5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>, <span style="color:#000">maxm</span> <span style="color:#000">=</span> <span style="color:#1c01ce">15</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">b</span>[<span style="color:#000">maxm</span>][<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">a</span>[<span style="color:#000">maxm</span>][<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">n</span>, <span style="color:#000">m</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">len</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">bool</span> <span style="color:#000">check</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">a</span>[<span style="color:#000">i</span>][<span style="color:#000">b</span>[<span style="color:#000">i</span>][<span style="color:#000">x</span>] <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">!=</span> <span style="color:#000">y</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">return</span> <span style="color:#a90d91">false</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#a90d91">true</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">n</span> <span style="color:#000">=</span> <span style="color:#000">read</span>(), <span style="color:#000">m</span> <span style="color:#000">=</span> <span style="color:#000">read</span>();
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">a</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>] <span style="color:#000">=</span> <span style="color:#000">read</span>(), <span style="color:#000">b</span>[<span style="color:#000">i</span>][<span style="color:#000">a</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>]] <span style="color:#000">=</span> <span style="color:#000">j</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">l</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">r</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (; <span style="color:#000">l</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">l</span> <span style="color:#000">=</span> <span style="color:#000">r</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">len</span>[<span style="color:#000">l</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">r</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">while</span> (<span style="color:#000">r</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">check</span>(<span style="color:#000">a</span>[<span style="color:#1c01ce">1</span>][<span style="color:#000">r</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>], <span style="color:#000">a</span>[<span style="color:#1c01ce">1</span>][<span style="color:#000">r</span>]))
</span></span><span style="display:flex;"><span>            <span style="color:#000">r</span><span style="color:#000">++</span>, <span style="color:#000">len</span>[<span style="color:#000">l</span>]<span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">ans</span> <span style="color:#000">+=</span> <span style="color:#1c01ce">1ll</span> <span style="color:#000">*</span> <span style="color:#000">len</span>[<span style="color:#000">i</span>] <span style="color:#000">*</span> (<span style="color:#000">len</span>[<span style="color:#000">i</span>] <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>) <span style="color:#000">/</span> <span style="color:#1c01ce">2</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">ans</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="ehttpscodeforcescontest1043probleme"><a href="https://codeforc.es/contest/1043/problem/E">E</a></h2>
<h3 id="description-4">Description</h3>
<p>有 $n$​ 个人，给出 $m$​ 组互相不喜欢的人，每个人与他喜欢的人都要组队一次，组队之后要挑战两个任务 A、B，每个人对 A、B 有一个不擅长程度 $x_i,y_i$​​​​​，组队时每人挑战其中一个任务，一次组队的不擅长程度是做两个任务的人对应的不擅长程度之和，并希望最小化这次组队的不擅长程度。</p>
<p>需要求出每个人所有组队的不擅长程度之和。</p>
<p>$n\leq3\times10^5,m\leq3\times10^5$​。​</p>
<p>（建议参考原题面和样例三，我尽力讲明白了）</p>
<h3 id="solution-4">Solution</h3>
<p>对于每次组队 $(x,y)$，不擅长程度是 $\min(x_i+y_j,x_j+y_i)$，也就是说每次组队的和只有两种，且选哪种是很确定的，我们考虑一个贪心。</p>
<p>选 $x_i+y_j$​​ 当且仅当 $x_i+y_j&lt;x_j+y_i\Leftrightarrow x_i-y_i&lt;x_j-y_j$​​，那么我们按照 $x_i-y_i$​​​ 从小到大排序，对于一个人，他和前面的人组队一定取 $x_i+y_j$​​，和后面的人组队一定取 $x_j+y_i$。</p>
<p>对 $x_i,y_i$​ 搞一个前缀和就能很方便统计答案。有边的提前减掉就行。</p>
<h3 id="code-4">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;map&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;utility&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cerr</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">namespace</span> <span style="color:#000">IO</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>	<span style="color:#177500">// 省略了
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>}
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#a90d91">namespace</span> <span style="color:#000">IO</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">3e5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">typedef</span> <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">ll</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">vector</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">e</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">add</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>) { <span style="color:#000">e</span>[<span style="color:#000">x</span>].<span style="color:#000">push_back</span>(<span style="color:#000">y</span>), <span style="color:#000">e</span>[<span style="color:#000">y</span>].<span style="color:#000">push_back</span>(<span style="color:#000">x</span>); }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">struct</span> <span style="color:#3f6e75">node</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">i</span>, <span style="color:#000">j</span>, <span style="color:#000">pos</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">ll</span> <span style="color:#000">ans</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">bool</span> <span style="color:#a90d91">operator</span><span style="color:#000">&lt;</span>(<span style="color:#a90d91">const</span> <span style="color:#000">node</span> <span style="color:#000">&amp;</span><span style="color:#000">b</span>) <span style="color:#a90d91">const</span> { <span style="color:#a90d91">return</span> <span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#000">j</span> <span style="color:#000">&lt;</span> <span style="color:#000">b</span>.<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#000">b</span>.<span style="color:#000">j</span>; }
</span></span><span style="display:flex;"><span>} <span style="color:#000">a</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">bool</span> <span style="color:#000">cmppos</span>(<span style="color:#a90d91">const</span> <span style="color:#000">node</span> <span style="color:#000">&amp;</span><span style="color:#000">a</span>, <span style="color:#a90d91">const</span> <span style="color:#000">node</span> <span style="color:#000">&amp;</span><span style="color:#000">b</span>) { <span style="color:#a90d91">return</span> <span style="color:#000">a</span>.<span style="color:#000">pos</span> <span style="color:#000">&lt;</span> <span style="color:#000">b</span>.<span style="color:#000">pos</span>; }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">n</span>, <span style="color:#000">m</span>;
</span></span><span style="display:flex;"><span><span style="color:#000">ll</span> <span style="color:#000">down</span>[<span style="color:#000">maxn</span>], <span style="color:#000">up</span>[<span style="color:#000">maxn</span>], <span style="color:#000">ans</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">n</span> <span style="color:#000">=</span> <span style="color:#000">read</span>(), <span style="color:#000">m</span> <span style="color:#000">=</span> <span style="color:#000">read</span>();
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#000">read</span>(), <span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#000">read</span>(), <span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">pos</span> <span style="color:#000">=</span> <span style="color:#000">i</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">m</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">add</span>(<span style="color:#000">read</span>(), <span style="color:#000">read</span>());
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> : <span style="color:#000">e</span>[<span style="color:#000">i</span>])
</span></span><span style="display:flex;"><span>            <span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">ans</span> <span style="color:#000">-=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">min</span>(<span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#000">a</span>[<span style="color:#000">j</span>].<span style="color:#000">j</span>, <span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">j</span> <span style="color:#000">+</span> <span style="color:#000">a</span>[<span style="color:#000">j</span>].<span style="color:#000">i</span>);    
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">sort</span>(<span style="color:#000">a</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">a</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">+</span> <span style="color:#000">n</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">down</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">down</span>[<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">+</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">i</span>, <span style="color:#000">up</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">up</span>[<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">+</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">j</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">ans</span> <span style="color:#000">+=</span> <span style="color:#1c01ce">1ll</span> <span style="color:#000">*</span> (<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>) <span style="color:#000">*</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">j</span> <span style="color:#000">+</span> <span style="color:#000">down</span>[<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>];
</span></span><span style="display:flex;"><span>        <span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">ans</span> <span style="color:#000">+=</span> <span style="color:#1c01ce">1ll</span> <span style="color:#000">*</span> (<span style="color:#000">n</span> <span style="color:#000">-</span> <span style="color:#000">i</span>) <span style="color:#000">*</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#000">up</span>[<span style="color:#000">n</span>] <span style="color:#000">-</span> <span style="color:#000">up</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">sort</span>(<span style="color:#000">a</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">a</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">+</span> <span style="color:#000">n</span>, <span style="color:#000">cmppos</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">ans</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="fhttpscodeforcescontest1043problemf"><a href="https://codeforc.es/contest/1043/problem/F">F</a></h2>
<h3 id="description-5">Description</h3>
<p>有 $n$ 个数的集合 $\{a_i\}$，求它的最小子集的大小，使其中数的最大公约数是 $1$。$n\leq3\times10^5,a_i\leq3\times10^5$。</p>
<h3 id="solution-5">Solution</h3>
<p>能发现答案最大是 $7$，一个数最多只有 $6$ 个公约数。那么我们可以从小到大枚举答案。</p>
<p>然后就不会了，看了题解：</p>
<p>存在性问题可以转化为求方案数。</p>
<p>$f(i,j)$ 表示选了 $i$ 个数，当前 gcd 是 $j$​ 的方案数。</p>
<p>$f(i,j)=C_{cnt_j}^i-\sum f(i,k)$​，其中 $cnt_j$ 表示是 $j$ 倍数的数的个数，$k$ 是 $j$ 的倍数。</p>
<p>解释一下：所有倍数减去不是最大公约数的。</p>
<h3 id="code-5">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;map&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;utility&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cerr</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">typedef</span> <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">ll</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">3e5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">N</span> <span style="color:#000">=</span> <span style="color:#1c01ce">3e5</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000">ll</span> <span style="color:#000">fac</span>[<span style="color:#000">maxn</span>], <span style="color:#000">ifac</span>[<span style="color:#000">maxn</span>], <span style="color:#000">f</span>[<span style="color:#1c01ce">10</span>][<span style="color:#000">maxn</span>], <span style="color:#000">cnt</span>[<span style="color:#000">maxn</span>], <span style="color:#000">mod</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1e9</span> <span style="color:#000">+</span> <span style="color:#1c01ce">7</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000">ll</span> <span style="color:#000">qpow</span>(<span style="color:#000">ll</span> <span style="color:#000">a</span>, <span style="color:#000">ll</span> <span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">ll</span> <span style="color:#000">res</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (; <span style="color:#000">x</span>; <span style="color:#000">x</span> <span style="color:#000">&gt;&gt;=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">a</span> <span style="color:#000">=</span> <span style="color:#000">a</span> <span style="color:#000">*</span> <span style="color:#000">a</span> <span style="color:#000">%</span> <span style="color:#000">mod</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">x</span> <span style="color:#000">&amp;</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">res</span> <span style="color:#000">=</span> <span style="color:#000">res</span> <span style="color:#000">*</span> <span style="color:#000">a</span> <span style="color:#000">%</span> <span style="color:#000">mod</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#000">res</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">init</span>(<span style="color:#a90d91">int</span> <span style="color:#000">n</span> <span style="color:#000">=</span> <span style="color:#1c01ce">3e5</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">fac</span>[<span style="color:#1c01ce">0</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">fac</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">fac</span>[<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">*</span> <span style="color:#000">i</span> <span style="color:#000">%</span> <span style="color:#000">mod</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">ifac</span>[<span style="color:#000">n</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">=</span> <span style="color:#000">qpow</span>(<span style="color:#000">fac</span>[<span style="color:#000">n</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>], <span style="color:#000">mod</span> <span style="color:#000">-</span> <span style="color:#1c01ce">2</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span> <span style="color:#000">&gt;=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">ifac</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">ifac</span>[<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">*</span> (<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>) <span style="color:#000">%</span> <span style="color:#000">mod</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#000">ll</span> <span style="color:#000">C</span>(<span style="color:#a90d91">int</span> <span style="color:#000">n</span>, <span style="color:#a90d91">int</span> <span style="color:#000">m</span>) { <span style="color:#a90d91">return</span> <span style="color:#000">m</span> <span style="color:#000">&lt;</span> <span style="color:#1c01ce">0</span> <span style="color:#000">||</span> <span style="color:#000">n</span> <span style="color:#000">&lt;</span> <span style="color:#1c01ce">0</span> <span style="color:#000">||</span> <span style="color:#000">n</span> <span style="color:#000">&lt;</span> <span style="color:#000">m</span> <span style="color:#000">?</span> <span style="color:#1c01ce">0</span> <span style="color:#000">:</span> <span style="color:#000">fac</span>[<span style="color:#000">n</span>] <span style="color:#000">*</span> <span style="color:#000">ifac</span>[<span style="color:#000">m</span>] <span style="color:#000">%</span> <span style="color:#000">mod</span> <span style="color:#000">*</span> <span style="color:#000">ifac</span>[<span style="color:#000">n</span> <span style="color:#000">-</span> <span style="color:#000">m</span>] <span style="color:#000">%</span> <span style="color:#000">mod</span>; }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">upd</span>(<span style="color:#000">ll</span> <span style="color:#000">&amp;</span><span style="color:#000">x</span>, <span style="color:#000">ll</span> <span style="color:#000">y</span>) { <span style="color:#000">x</span> <span style="color:#000">-=</span> <span style="color:#000">y</span>, <span style="color:#000">x</span> <span style="color:#000">+=</span> <span style="color:#000">mod</span>, <span style="color:#000">x</span> <span style="color:#000">%=</span> <span style="color:#000">mod</span>; }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">n</span> <span style="color:#000">=</span> <span style="color:#000">read</span>();
</span></span><span style="display:flex;"><span>    <span style="color:#000">init</span>();
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">cnt</span>[<span style="color:#000">read</span>()]<span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">N</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#000">i</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;=</span> <span style="color:#000">N</span>; <span style="color:#000">j</span> <span style="color:#000">+=</span> <span style="color:#000">i</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">cnt</span>[<span style="color:#000">i</span>] <span style="color:#000">+=</span> <span style="color:#000">cnt</span>[<span style="color:#000">j</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#1c01ce">10</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#000">N</span>; <span style="color:#000">j</span> <span style="color:#000">&gt;=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">j</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">f</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>] <span style="color:#000">=</span> <span style="color:#000">C</span>(<span style="color:#000">cnt</span>[<span style="color:#000">j</span>], <span style="color:#000">i</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">k</span> <span style="color:#000">=</span> <span style="color:#000">j</span> <span style="color:#000">+</span> <span style="color:#000">j</span>; <span style="color:#000">k</span> <span style="color:#000">&lt;=</span> <span style="color:#000">N</span>; <span style="color:#000">k</span> <span style="color:#000">+=</span> <span style="color:#000">j</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">upd</span>(<span style="color:#000">f</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>], <span style="color:#000">f</span>[<span style="color:#000">i</span>][<span style="color:#000">k</span>]);
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">f</span>[<span style="color:#000">i</span>][<span style="color:#1c01ce">1</span>] <span style="color:#000">&gt;</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">writeln</span>(<span style="color:#000">i</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">return</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">writeln</span>(<span style="color:#000">-</span><span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="ghttpscodeforcescontest1043"><a href="https://codeforc.es/contest/1043">G</a></h2>
<p>不会，好像要后缀数组。</p>]]></content:encoded>
    </item>
    
    <item>
      <title>luogu3203</title>
      <link>https://luoyisu.github.io/posts/luogu3203/</link>
      <pubDate>Wed, 08 Dec 2021 22:18:33 +0000</pubDate>
      
      <guid>https://luoyisu.github.io/posts/luogu3203/</guid>
      <description>&lt;p&gt;一个 LCT&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>一个 LCT</p>
<h2 id="description">Description</h2>
<p>游戏一开始，Lostmonkey 在地上沿着一条直线摆上 $n$ 个装置，每个装置设定初始弹力系数 $k_i$，当绵羊达到第 $i$ 个装置时，它会往后弹 $k_i$ 步，达到第 $i+k_i$个装置，若不存在这个装置，则绵羊被弹飞。</p>
<p>绵羊想知道当它从第 $i$​ 个装置起步时，被弹几次后会被弹飞。为了使得游戏更有趣，Lostmonkey 可以修改某个弹力装置的弹力系数。任何时候弹力系数均为正整数。</p>
<h3 id="solution1">Solution1</h3>
<p>我们让每个装置向弹射到的地方连一个边，那么答案就是这个点到根的路径的长度。</p>
<p>因为要加边、删边且一直是一棵树，我们使用 LCT 维护。</p>
<p>具体怎么维护呢？</p>
<p>我们发现，我们不需要把一段路径单独拎出来处理，只需要查询一个点到这个辅助树对应的原树上的根的距离即可。</p>
<p>并且不能随便换原树的根。</p>
<p>那好办了，回想一下我们为什么要换根：因为 $access$ 只能打通一个点到根的路径，所以当我们想查询一条路径的时候需要换根，但这个题根是固定的，不需要这么做。</p>
<p>当查询点 $x$ 的时候，我们直接 $access(x),splay(x)$，然后答案就是 $siz(x)$。</p>
<p>加边怎么办呢？我们直接 $access(x),splay(x)$，然后连一条虚边即可（实链剖分的灵活性体现出来了，这个虚边就有一点有向边的意思在里面）。</p>
<p>删边怎么办呢？也是一样的。</p>
<p>发现我们实际上少写了很多函数，代码又简洁常数又小。</p>
<h2 id="code1">Code1</h2>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2e5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">struct</span> <span style="color:#3f6e75">LCT</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">ch</span>[<span style="color:#000">maxn</span>][<span style="color:#1c01ce">2</span>], <span style="color:#000">rev</span>[<span style="color:#000">maxn</span>], <span style="color:#000">father</span>[<span style="color:#000">maxn</span>], <span style="color:#000">ans</span>[<span style="color:#000">maxn</span>], <span style="color:#000">val</span>[<span style="color:#000">maxn</span>], <span style="color:#000">siz</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">int</span> <span style="color:#000">&amp;</span><span style="color:#000">ls</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>) { <span style="color:#a90d91">return</span> <span style="color:#000">ch</span>[<span style="color:#000">x</span>][<span style="color:#1c01ce">0</span>]; }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">int</span> <span style="color:#000">&amp;</span><span style="color:#000">rs</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>) { <span style="color:#a90d91">return</span> <span style="color:#000">ch</span>[<span style="color:#000">x</span>][<span style="color:#1c01ce">1</span>]; }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">bool</span> <span style="color:#000">get</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>) { <span style="color:#a90d91">return</span> <span style="color:#000">x</span> <span style="color:#000">==</span> <span style="color:#000">rs</span>(<span style="color:#000">father</span>[<span style="color:#000">x</span>]); }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">bool</span> <span style="color:#000">isroot</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>) { <span style="color:#a90d91">return</span> <span style="color:#000">x</span> <span style="color:#000">!=</span> <span style="color:#000">ch</span>[<span style="color:#000">father</span>[<span style="color:#000">x</span>]][<span style="color:#1c01ce">0</span>] <span style="color:#000">&amp;&amp;</span> <span style="color:#000">x</span> <span style="color:#000">!=</span> <span style="color:#000">ch</span>[<span style="color:#000">father</span>[<span style="color:#000">x</span>]][<span style="color:#1c01ce">1</span>]; }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">push_up</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>) { <span style="color:#000">siz</span>[<span style="color:#000">x</span>] <span style="color:#000">=</span> <span style="color:#000">siz</span>[<span style="color:#000">ls</span>(<span style="color:#000">x</span>)] <span style="color:#000">+</span> <span style="color:#000">siz</span>[<span style="color:#000">rs</span>(<span style="color:#000">x</span>)] <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>; }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">push_down</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">!</span><span style="color:#000">rev</span>[<span style="color:#000">x</span>])
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">return</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">ls</span>(<span style="color:#000">x</span>))
</span></span><span style="display:flex;"><span>            <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">swap</span>(<span style="color:#000">ls</span>(<span style="color:#000">ls</span>(<span style="color:#000">x</span>)), <span style="color:#000">rs</span>(<span style="color:#000">ls</span>(<span style="color:#000">x</span>))), <span style="color:#000">rev</span>[<span style="color:#000">ls</span>(<span style="color:#000">x</span>)] <span style="color:#000">^=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">rs</span>(<span style="color:#000">x</span>))
</span></span><span style="display:flex;"><span>            <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">swap</span>(<span style="color:#000">ls</span>(<span style="color:#000">rs</span>(<span style="color:#000">x</span>)), <span style="color:#000">rs</span>(<span style="color:#000">rs</span>(<span style="color:#000">x</span>))), <span style="color:#000">rev</span>[<span style="color:#000">rs</span>(<span style="color:#000">x</span>)] <span style="color:#000">^=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">rev</span>[<span style="color:#000">x</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">update</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">!</span><span style="color:#000">isroot</span>(<span style="color:#000">x</span>))
</span></span><span style="display:flex;"><span>            <span style="color:#000">update</span>(<span style="color:#000">father</span>[<span style="color:#000">x</span>]);
</span></span><span style="display:flex;"><span>        <span style="color:#000">push_down</span>(<span style="color:#000">x</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">rotate</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">y</span> <span style="color:#000">=</span> <span style="color:#000">father</span>[<span style="color:#000">x</span>], <span style="color:#000">z</span> <span style="color:#000">=</span> <span style="color:#000">father</span>[<span style="color:#000">y</span>], <span style="color:#000">d</span> <span style="color:#000">=</span> <span style="color:#000">get</span>(<span style="color:#000">x</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">!</span><span style="color:#000">isroot</span>(<span style="color:#000">y</span>))
</span></span><span style="display:flex;"><span>            <span style="color:#000">ch</span>[<span style="color:#000">z</span>][<span style="color:#000">y</span> <span style="color:#000">==</span> <span style="color:#000">ch</span>[<span style="color:#000">z</span>][<span style="color:#1c01ce">1</span>]] <span style="color:#000">=</span> <span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">ch</span>[<span style="color:#000">y</span>][<span style="color:#000">d</span>] <span style="color:#000">=</span> <span style="color:#000">ch</span>[<span style="color:#000">x</span>][<span style="color:#000">d</span> <span style="color:#000">^</span> <span style="color:#1c01ce">1</span>];
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">ch</span>[<span style="color:#000">x</span>][<span style="color:#000">d</span> <span style="color:#000">^</span> <span style="color:#1c01ce">1</span>])
</span></span><span style="display:flex;"><span>            <span style="color:#000">father</span>[<span style="color:#000">ch</span>[<span style="color:#000">x</span>][<span style="color:#000">d</span> <span style="color:#000">^</span> <span style="color:#1c01ce">1</span>]] <span style="color:#000">=</span> <span style="color:#000">y</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">ch</span>[<span style="color:#000">x</span>][<span style="color:#000">d</span> <span style="color:#000">^</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">=</span> <span style="color:#000">y</span>, <span style="color:#000">father</span>[<span style="color:#000">y</span>] <span style="color:#000">=</span> <span style="color:#000">x</span>, <span style="color:#000">father</span>[<span style="color:#000">x</span>] <span style="color:#000">=</span> <span style="color:#000">z</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">push_up</span>(<span style="color:#000">y</span>), <span style="color:#000">push_up</span>(<span style="color:#000">x</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">splay</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">update</span>(<span style="color:#000">x</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">f</span>; <span style="color:#000">f</span> <span style="color:#000">=</span> <span style="color:#000">father</span>[<span style="color:#000">x</span>], <span style="color:#000">!</span><span style="color:#000">isroot</span>(<span style="color:#000">x</span>); <span style="color:#000">rotate</span>(<span style="color:#000">x</span>))
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">!</span><span style="color:#000">isroot</span>(<span style="color:#000">f</span>))
</span></span><span style="display:flex;"><span>                <span style="color:#000">rotate</span>(<span style="color:#000">get</span>(<span style="color:#000">x</span>) <span style="color:#000">==</span> <span style="color:#000">get</span>(<span style="color:#000">f</span>) <span style="color:#000">?</span> <span style="color:#000">f</span> : <span style="color:#000">x</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">int</span> <span style="color:#000">access</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">p</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (; <span style="color:#000">x</span>; <span style="color:#000">p</span> <span style="color:#000">=</span> <span style="color:#000">x</span>, <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">father</span>[<span style="color:#000">x</span>])
</span></span><span style="display:flex;"><span>            <span style="color:#000">splay</span>(<span style="color:#000">x</span>), <span style="color:#000">rs</span>(<span style="color:#000">x</span>) <span style="color:#000">=</span> <span style="color:#000">p</span>, <span style="color:#000">push_up</span>(<span style="color:#000">x</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#000">p</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>} <span style="color:#000">lct</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">p</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">ios</span><span style="color:#000">::</span><span style="color:#000">sync_with_stdio</span>(<span style="color:#a90d91">false</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">n</span>, <span style="color:#000">m</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#000">x</span> <span style="color:#000">&gt;</span> <span style="color:#000">n</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">continue</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>            <span style="color:#000">lct</span>.<span style="color:#000">father</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">m</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> (<span style="color:#000">m</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">pos</span>, <span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">pos</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">x</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">pos</span> <span style="color:#000">==</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">lct</span>.<span style="color:#000">access</span>(<span style="color:#000">x</span>), <span style="color:#000">lct</span>.<span style="color:#000">splay</span>(<span style="color:#000">x</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">lct</span>.<span style="color:#000">siz</span>[<span style="color:#000">x</span>] <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">int</span> <span style="color:#000">k</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">k</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">lct</span>.<span style="color:#000">access</span>(<span style="color:#000">x</span>), <span style="color:#000">lct</span>.<span style="color:#000">splay</span>(<span style="color:#000">x</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#000">lct</span>.<span style="color:#000">ls</span>(<span style="color:#000">x</span>) <span style="color:#000">=</span> <span style="color:#000">lct</span>.<span style="color:#000">father</span>[<span style="color:#000">lct</span>.<span style="color:#000">ls</span>(<span style="color:#000">x</span>)] <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">x</span> <span style="color:#000">+</span> <span style="color:#000">k</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">lct</span>.<span style="color:#000">father</span>[<span style="color:#000">x</span>] <span style="color:#000">=</span> <span style="color:#000">x</span> <span style="color:#000">+</span> <span style="color:#000">k</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">lct</span>.<span style="color:#000">push_up</span>(<span style="color:#000">x</span>);
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="solution2">Solution2</h2>
<p>很无脑的一个做法，我不喜欢，但有必要学。</p>
<p>建一个超级源点 $n+1$，弹射出去的时候在这个点和超级源点之间建边，查询的时候用 $link(x,n+1)$​ ，然后答案是 $siz(n+1)-1$。</p>
<p>优点：高度模块化，比较无脑。</p>
<p>缺点：我不喜欢，且代码长，常数大。</p>
<h3 id="code2">Code2</h3>
<p>我的实现很丑，看个乐。</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#define mem(x) memset(x, 0, sizeof(x))
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2e5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">int</span> <span style="color:#000">read</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">char</span> <span style="color:#000">ch</span> <span style="color:#000">=</span> <span style="color:#000">getchar</span>();
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> (<span style="color:#000">!</span><span style="color:#000">isdigit</span>(<span style="color:#000">ch</span>))
</span></span><span style="display:flex;"><span>        <span style="color:#000">ch</span> <span style="color:#000">=</span> <span style="color:#000">getchar</span>();
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> (<span style="color:#000">isdigit</span>(<span style="color:#000">ch</span>))
</span></span><span style="display:flex;"><span>        <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">x</span> <span style="color:#000">*</span> <span style="color:#1c01ce">10</span> <span style="color:#000">+</span> <span style="color:#000">ch</span> <span style="color:#000">-</span> <span style="color:#2300ce">&#39;0&#39;</span>, <span style="color:#000">ch</span> <span style="color:#000">=</span> <span style="color:#000">getchar</span>();
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">struct</span> <span style="color:#3f6e75">LCT</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">ch</span>[<span style="color:#000">maxn</span>][<span style="color:#1c01ce">2</span>], <span style="color:#000">rev</span>[<span style="color:#000">maxn</span>], <span style="color:#000">father</span>[<span style="color:#000">maxn</span>], <span style="color:#000">siz</span>[<span style="color:#000">maxn</span>], <span style="color:#000">val</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">int</span> <span style="color:#000">&amp;</span><span style="color:#000">ls</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>) { <span style="color:#a90d91">return</span> <span style="color:#000">ch</span>[<span style="color:#000">x</span>][<span style="color:#1c01ce">0</span>]; }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">int</span> <span style="color:#000">&amp;</span><span style="color:#000">rs</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>) { <span style="color:#a90d91">return</span> <span style="color:#000">ch</span>[<span style="color:#000">x</span>][<span style="color:#1c01ce">1</span>]; }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">bool</span> <span style="color:#000">get</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>) { <span style="color:#a90d91">return</span> <span style="color:#000">x</span> <span style="color:#000">==</span> <span style="color:#000">rs</span>(<span style="color:#000">father</span>[<span style="color:#000">x</span>]); }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">bool</span> <span style="color:#000">isroot</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>) { <span style="color:#a90d91">return</span> <span style="color:#000">x</span> <span style="color:#000">!=</span> <span style="color:#000">ch</span>[<span style="color:#000">father</span>[<span style="color:#000">x</span>]][<span style="color:#1c01ce">0</span>] <span style="color:#000">&amp;&amp;</span> <span style="color:#000">x</span> <span style="color:#000">!=</span> <span style="color:#000">ch</span>[<span style="color:#000">father</span>[<span style="color:#000">x</span>]][<span style="color:#1c01ce">1</span>]; }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">push_up</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>) { <span style="color:#000">siz</span>[<span style="color:#000">x</span>] <span style="color:#000">=</span> <span style="color:#000">siz</span>[<span style="color:#000">ls</span>(<span style="color:#000">x</span>)] <span style="color:#000">+</span> <span style="color:#000">siz</span>[<span style="color:#000">rs</span>(<span style="color:#000">x</span>)] <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>; }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">push_down</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">!</span><span style="color:#000">rev</span>[<span style="color:#000">x</span>])
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">return</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">ls</span>(<span style="color:#000">x</span>))
</span></span><span style="display:flex;"><span>            <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">swap</span>(<span style="color:#000">ls</span>(<span style="color:#000">ls</span>(<span style="color:#000">x</span>)), <span style="color:#000">rs</span>(<span style="color:#000">ls</span>(<span style="color:#000">x</span>))), <span style="color:#000">rev</span>[<span style="color:#000">ls</span>(<span style="color:#000">x</span>)] <span style="color:#000">^=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">rs</span>(<span style="color:#000">x</span>))
</span></span><span style="display:flex;"><span>            <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">swap</span>(<span style="color:#000">ls</span>(<span style="color:#000">rs</span>(<span style="color:#000">x</span>)), <span style="color:#000">rs</span>(<span style="color:#000">rs</span>(<span style="color:#000">x</span>))), <span style="color:#000">rev</span>[<span style="color:#000">rs</span>(<span style="color:#000">x</span>)] <span style="color:#000">^=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">rev</span>[<span style="color:#000">x</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">update</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">!</span><span style="color:#000">isroot</span>(<span style="color:#000">x</span>))
</span></span><span style="display:flex;"><span>            <span style="color:#000">update</span>(<span style="color:#000">father</span>[<span style="color:#000">x</span>]);
</span></span><span style="display:flex;"><span>        <span style="color:#000">push_down</span>(<span style="color:#000">x</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">rotate</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">y</span> <span style="color:#000">=</span> <span style="color:#000">father</span>[<span style="color:#000">x</span>], <span style="color:#000">z</span> <span style="color:#000">=</span> <span style="color:#000">father</span>[<span style="color:#000">y</span>], <span style="color:#000">d</span> <span style="color:#000">=</span> <span style="color:#000">get</span>(<span style="color:#000">x</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">!</span><span style="color:#000">isroot</span>(<span style="color:#000">y</span>))
</span></span><span style="display:flex;"><span>            <span style="color:#000">ch</span>[<span style="color:#000">z</span>][<span style="color:#000">y</span> <span style="color:#000">==</span> <span style="color:#000">ch</span>[<span style="color:#000">z</span>][<span style="color:#1c01ce">1</span>]] <span style="color:#000">=</span> <span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">ch</span>[<span style="color:#000">y</span>][<span style="color:#000">d</span>] <span style="color:#000">=</span> <span style="color:#000">ch</span>[<span style="color:#000">x</span>][<span style="color:#000">d</span> <span style="color:#000">^</span> <span style="color:#1c01ce">1</span>];
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">ch</span>[<span style="color:#000">x</span>][<span style="color:#000">d</span> <span style="color:#000">^</span> <span style="color:#1c01ce">1</span>])
</span></span><span style="display:flex;"><span>            <span style="color:#000">father</span>[<span style="color:#000">ch</span>[<span style="color:#000">x</span>][<span style="color:#000">d</span> <span style="color:#000">^</span> <span style="color:#1c01ce">1</span>]] <span style="color:#000">=</span> <span style="color:#000">y</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">ch</span>[<span style="color:#000">x</span>][<span style="color:#000">d</span> <span style="color:#000">^</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">=</span> <span style="color:#000">y</span>, <span style="color:#000">father</span>[<span style="color:#000">y</span>] <span style="color:#000">=</span> <span style="color:#000">x</span>, <span style="color:#000">father</span>[<span style="color:#000">x</span>] <span style="color:#000">=</span> <span style="color:#000">z</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">push_up</span>(<span style="color:#000">y</span>), <span style="color:#000">push_up</span>(<span style="color:#000">x</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">splay</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">update</span>(<span style="color:#000">x</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">f</span>; <span style="color:#000">f</span> <span style="color:#000">=</span> <span style="color:#000">father</span>[<span style="color:#000">x</span>], <span style="color:#000">!</span><span style="color:#000">isroot</span>(<span style="color:#000">x</span>); <span style="color:#000">rotate</span>(<span style="color:#000">x</span>))
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">!</span><span style="color:#000">isroot</span>(<span style="color:#000">f</span>))
</span></span><span style="display:flex;"><span>                <span style="color:#000">rotate</span>(<span style="color:#000">get</span>(<span style="color:#000">x</span>) <span style="color:#000">==</span> <span style="color:#000">get</span>(<span style="color:#000">f</span>) <span style="color:#000">?</span> <span style="color:#000">f</span> : <span style="color:#000">x</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">access</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">p</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (; <span style="color:#000">x</span>; <span style="color:#000">p</span> <span style="color:#000">=</span> <span style="color:#000">x</span>, <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">father</span>[<span style="color:#000">x</span>])
</span></span><span style="display:flex;"><span>            <span style="color:#000">splay</span>(<span style="color:#000">x</span>), <span style="color:#000">rs</span>(<span style="color:#000">x</span>) <span style="color:#000">=</span> <span style="color:#000">p</span>, <span style="color:#000">push_up</span>(<span style="color:#000">x</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#000">p</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">void</span> <span style="color:#000">makeroot</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>) { <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">access</span>(<span style="color:#000">x</span>), <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">swap</span>(<span style="color:#000">ls</span>(<span style="color:#000">x</span>), <span style="color:#000">rs</span>(<span style="color:#000">x</span>)), <span style="color:#000">rev</span>[<span style="color:#000">x</span>] <span style="color:#000">^=</span> <span style="color:#1c01ce">1</span>; }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">find</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">access</span>(<span style="color:#000">x</span>), <span style="color:#000">splay</span>(<span style="color:#000">x</span>), <span style="color:#000">push_down</span>(<span style="color:#000">x</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">while</span> (<span style="color:#000">ls</span>(<span style="color:#000">x</span>))
</span></span><span style="display:flex;"><span>            <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">ls</span>(<span style="color:#000">x</span>), <span style="color:#000">push_down</span>(<span style="color:#000">x</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">splay</span>(<span style="color:#000">x</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">void</span> <span style="color:#000">split</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>) { <span style="color:#000">makeroot</span>(<span style="color:#000">x</span>), <span style="color:#000">access</span>(<span style="color:#000">y</span>), <span style="color:#000">splay</span>(<span style="color:#000">y</span>); }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">void</span> <span style="color:#000">link</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">makeroot</span>(<span style="color:#000">x</span>), <span style="color:#000">splay</span>(<span style="color:#000">x</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">find</span>(<span style="color:#000">y</span>) <span style="color:#000">==</span> <span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">return</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">father</span>[<span style="color:#000">x</span>] <span style="color:#000">=</span> <span style="color:#000">y</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">void</span> <span style="color:#000">cut</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">makeroot</span>(<span style="color:#000">x</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">find</span>(<span style="color:#000">y</span>) <span style="color:#000">==</span> <span style="color:#000">x</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">father</span>[<span style="color:#000">y</span>] <span style="color:#000">==</span> <span style="color:#000">x</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">!</span><span style="color:#000">ls</span>(<span style="color:#000">y</span>))
</span></span><span style="display:flex;"><span>            <span style="color:#000">ls</span>(<span style="color:#000">x</span>) <span style="color:#000">=</span> <span style="color:#000">father</span>[<span style="color:#000">y</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>, <span style="color:#000">push_up</span>(<span style="color:#000">x</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>} <span style="color:#000">lct</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">p</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">n</span> <span style="color:#000">=</span> <span style="color:#000">read</span>();
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">read</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#000">lct</span>.<span style="color:#000">link</span>(<span style="color:#000">i</span>, <span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#000">x</span> <span style="color:#000">&gt;</span> <span style="color:#000">n</span> <span style="color:#000">?</span> <span style="color:#000">n</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">:</span> <span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#000">x</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">p</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#000">x</span> <span style="color:#000">&gt;</span> <span style="color:#000">n</span> <span style="color:#000">?</span> <span style="color:#000">n</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">-</span> <span style="color:#000">i</span> : <span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">m</span> <span style="color:#000">=</span> <span style="color:#000">read</span>();
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> (<span style="color:#000">m</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">pos</span> <span style="color:#000">=</span> <span style="color:#000">read</span>(), <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">read</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#000">x</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">pos</span> <span style="color:#000">==</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">lct</span>.<span style="color:#000">split</span>(<span style="color:#000">x</span>, <span style="color:#000">n</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">lct</span>.<span style="color:#000">siz</span>[<span style="color:#000">n</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">-</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">int</span> <span style="color:#000">k</span> <span style="color:#000">=</span> <span style="color:#000">read</span>();
</span></span><span style="display:flex;"><span>            <span style="color:#000">lct</span>.<span style="color:#000">cut</span>(<span style="color:#000">x</span>, <span style="color:#000">x</span> <span style="color:#000">+</span> <span style="color:#000">p</span>[<span style="color:#000">x</span>]);
</span></span><span style="display:flex;"><span>            <span style="color:#000">lct</span>.<span style="color:#000">link</span>(<span style="color:#000">x</span>, <span style="color:#000">x</span> <span style="color:#000">+</span> <span style="color:#000">k</span> <span style="color:#000">&gt;</span> <span style="color:#000">n</span> <span style="color:#000">?</span> <span style="color:#000">n</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">:</span> <span style="color:#000">x</span> <span style="color:#000">+</span> <span style="color:#000">k</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#000">p</span>[<span style="color:#000">x</span>] <span style="color:#000">=</span> <span style="color:#000">x</span> <span style="color:#000">+</span> <span style="color:#000">k</span> <span style="color:#000">&gt;</span> <span style="color:#000">n</span> <span style="color:#000">?</span> <span style="color:#000">n</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">-</span> <span style="color:#000">x</span> : <span style="color:#000">k</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="总结">总结</h2>
<p>注意题目的性质，可以考虑挖掘题目的一些性质，魔改数据结构入手，也可以考虑对数据结构进行一些扩展。</p>]]></content:encoded>
    </item>
    
    <item>
      <title>Codeforces Round 380 (Div. 2)</title>
      <link>https://luoyisu.github.io/posts/cf-contest738/</link>
      <pubDate>Wed, 08 Dec 2021 11:49:18 +0000</pubDate>
      
      <guid>https://luoyisu.github.io/posts/cf-contest738/</guid>
      <description>&lt;p&gt;好像不是非常难。&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>好像不是非常难。</p>
<h2 id="ahttpscodeforcescontest738problema"><a href="https://codeforc.es/contest/738/problem/A">A</a></h2>
<h3 id="description">Description</h3>
<p>给一个字符串，将所有形如 <code>ogo</code> + <code>gogogogo...</code> 的串变为 <code>***</code>，输出字符串。</p>
<h3 id="solution">Solution</h3>
<p>模拟。</p>
<h3 id="code">Code</h3>
<p>尝试用 python 水过去（）</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#000">n</span> <span style="color:#000">=</span> <span style="color:#a90d91">int</span>(<span style="color:#a90d91">input</span>())
</span></span><span style="display:flex;"><span><span style="color:#000">s</span> <span style="color:#000">=</span> <span style="color:#a90d91">input</span>()
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000">l</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">while</span> <span style="color:#000">l</span> <span style="color:#000">&lt;</span> <span style="color:#000">n</span>:
</span></span><span style="display:flex;"><span>    <span style="color:#000">pos</span> <span style="color:#000">=</span> <span style="color:#000">s</span><span style="color:#000">.</span><span style="color:#000">find</span>(<span style="color:#c41a16">&#39;ogo&#39;</span>, <span style="color:#000">l</span>)
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> <span style="color:#000">pos</span> <span style="color:#000">==</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span>:
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">break</span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">print</span>(<span style="color:#000">s</span>[<span style="color:#000">l</span>:<span style="color:#000">pos</span>], <span style="color:#000">end</span> <span style="color:#000">=</span> <span style="color:#c41a16">&#39;&#39;</span>)
</span></span><span style="display:flex;"><span>    <span style="color:#000">l</span> <span style="color:#000">=</span> <span style="color:#000">pos</span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> <span style="color:#000">l</span> <span style="color:#000">&lt;</span> <span style="color:#000">n</span> <span style="color:#000">-</span> <span style="color:#1c01ce">2</span> <span style="color:#000">and</span> <span style="color:#000">s</span>[<span style="color:#000">l</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>:<span style="color:#000">l</span> <span style="color:#000">+</span> <span style="color:#1c01ce">3</span>] <span style="color:#000">==</span> <span style="color:#c41a16">&#39;go&#39;</span>:
</span></span><span style="display:flex;"><span>        <span style="color:#000">l</span> <span style="color:#000">+=</span> <span style="color:#1c01ce">2</span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">print</span>(<span style="color:#c41a16">&#39;***&#39;</span>, <span style="color:#000">end</span> <span style="color:#000">=</span> <span style="color:#c41a16">&#39;&#39;</span>)
</span></span><span style="display:flex;"><span>    <span style="color:#000">l</span> <span style="color:#000">+=</span> <span style="color:#1c01ce">1</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">print</span>(<span style="color:#000">s</span>[<span style="color:#000">l</span>:])
</span></span></code></pre></div><h2 id="bhttpscodeforcescontest738problemb"><a href="https://codeforc.es/contest/738/problem/B">B</a></h2>
<h3 id="description-1">Description</h3>
<p>有一个 $n\times m$​ 的舞台，给出每个点有没有人，在空的地方可以放灯，往上下左右其中一个方向打光。一个灯光合法当且仅当这个方向有人，位置相同方向不同的灯光算不同的灯光，求合法灯光总数。</p>
<h3 id="solution-1">Solution</h3>
<p>对每个方向做一个前缀和，然后算一下就行。</p>
<h3 id="code-1">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1e3</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">up</span>[<span style="color:#000">maxn</span>][<span style="color:#000">maxn</span>], <span style="color:#000">down</span>[<span style="color:#000">maxn</span>][<span style="color:#000">maxn</span>], <span style="color:#000">left</span>[<span style="color:#000">maxn</span>][<span style="color:#000">maxn</span>], <span style="color:#000">right</span>[<span style="color:#000">maxn</span>][<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">a</span>[<span style="color:#000">maxn</span>][<span style="color:#000">maxn</span>], <span style="color:#000">n</span>, <span style="color:#000">m</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">m</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">left</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>] <span style="color:#000">=</span> <span style="color:#000">left</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">+</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>];
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#000">m</span>; <span style="color:#000">j</span> <span style="color:#000">&gt;=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">j</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">right</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>] <span style="color:#000">=</span> <span style="color:#000">right</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">+</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>];
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">up</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>] <span style="color:#000">=</span> <span style="color:#000">up</span>[<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>][<span style="color:#000">j</span>] <span style="color:#000">+</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>];
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span> <span style="color:#000">&gt;=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">down</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>] <span style="color:#000">=</span> <span style="color:#000">down</span>[<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>][<span style="color:#000">j</span>] <span style="color:#000">+</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>];
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">!</span><span style="color:#000">a</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>])
</span></span><span style="display:flex;"><span>            {
</span></span><span style="display:flex;"><span>                <span style="color:#000">ans</span> <span style="color:#000">+=</span> <span style="color:#000">up</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>] <span style="color:#000">?</span> <span style="color:#1c01ce">1</span> <span style="color:#000">:</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>                <span style="color:#000">ans</span> <span style="color:#000">+=</span> <span style="color:#000">left</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>] <span style="color:#000">?</span> <span style="color:#1c01ce">1</span> <span style="color:#000">:</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>                <span style="color:#000">ans</span> <span style="color:#000">+=</span> <span style="color:#000">down</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>] <span style="color:#000">?</span> <span style="color:#1c01ce">1</span> <span style="color:#000">:</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>                <span style="color:#000">ans</span> <span style="color:#000">+=</span> <span style="color:#000">right</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>] <span style="color:#000">?</span> <span style="color:#1c01ce">1</span> <span style="color:#000">:</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>            }
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">ans</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="chttpscodeforcescontest738problemc"><a href="https://codeforc.es/contest/738/problem/C">C</a></h2>
<h3 id="description-2">Description</h3>
<p>你在 $0$ 处，需要在 $t$ 时间之前沿直线开车到达距离为 $s$ 的电影院，路上有 $k$ 个加油站，经过一个加油站时会免费加满油，有 $n$ 辆车，每辆车有价钱和油箱容量，初始时油箱会满油，一升油可以在 2min 中走 1km，也可以在 0.5min 中走 0.5km。问最少需要花多少钱。</p>
<h3 id="solution-2">Solution</h3>
<p>不难发现油箱容量是有单调性的，二分出最小的能满足题意的油箱容量（check 只需要模拟即可）。</p>
<p>然后找一个油箱不小于它的价钱最小的车即可。注意若 $s&gt;t$，肯定无解。</p>
<h3 id="code-2">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2e5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">struct</span> <span style="color:#3f6e75">car</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">c</span>, <span style="color:#000">v</span>;
</span></span><span style="display:flex;"><span>} <span style="color:#000">cars</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">n</span>, <span style="color:#000">k</span>, <span style="color:#000">s</span>, <span style="color:#000">t</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">a</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">bool</span> <span style="color:#000">check</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">now</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>, <span style="color:#000">time</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">k</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">dis</span> <span style="color:#000">=</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>] <span style="color:#000">-</span> <span style="color:#000">now</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">dis</span> <span style="color:#000">*</span> <span style="color:#1c01ce">2</span> <span style="color:#000">&lt;=</span> <span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">time</span> <span style="color:#000">+=</span> <span style="color:#000">dis</span>, <span style="color:#000">now</span> <span style="color:#000">=</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span> <span style="color:#a90d91">if</span> (<span style="color:#000">x</span> <span style="color:#000">&gt;=</span> <span style="color:#000">dis</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">time</span> <span style="color:#000">+=</span> <span style="color:#000">dis</span> <span style="color:#000">*</span> <span style="color:#1c01ce">2</span> <span style="color:#000">-</span> (<span style="color:#000">x</span> <span style="color:#000">-</span> <span style="color:#000">dis</span>), <span style="color:#000">now</span> <span style="color:#000">=</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">return</span> <span style="color:#a90d91">false</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#000">time</span> <span style="color:#000">&lt;=</span> <span style="color:#000">t</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">ios</span><span style="color:#000">::</span><span style="color:#000">sync_with_stdio</span>(<span style="color:#a90d91">false</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">k</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">s</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">t</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">cars</span>[<span style="color:#000">i</span>].<span style="color:#000">c</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">cars</span>[<span style="color:#000">i</span>].<span style="color:#000">v</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">k</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#000">a</span>[<span style="color:#000">++</span><span style="color:#000">k</span>] <span style="color:#000">=</span> <span style="color:#000">s</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">s</span> <span style="color:#000">&gt;</span> <span style="color:#000">t</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">puts</span>(<span style="color:#c41a16">&#34;-1&#34;</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">sort</span>(<span style="color:#000">a</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">a</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">+</span> <span style="color:#000">k</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">l</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">r</span> <span style="color:#000">=</span> <span style="color:#000">s</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#000">r</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> (<span style="color:#000">l</span> <span style="color:#000">&lt;=</span> <span style="color:#000">r</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">mid</span> <span style="color:#000">=</span> (<span style="color:#000">l</span> <span style="color:#000">+</span> <span style="color:#000">r</span>) <span style="color:#000">/</span> <span style="color:#1c01ce">2</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">check</span>(<span style="color:#000">mid</span>))
</span></span><span style="display:flex;"><span>            <span style="color:#000">r</span> <span style="color:#000">=</span> <span style="color:#000">mid</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#000">mid</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>            <span style="color:#000">l</span> <span style="color:#000">=</span> <span style="color:#000">mid</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">mi</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">30</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">cars</span>[<span style="color:#000">i</span>].<span style="color:#000">v</span> <span style="color:#000">&gt;=</span> <span style="color:#000">ans</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">mi</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">min</span>(<span style="color:#000">mi</span>, <span style="color:#000">cars</span>[<span style="color:#000">i</span>].<span style="color:#000">c</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">mi</span> <span style="color:#000">==</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">30</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">puts</span>(<span style="color:#c41a16">&#34;-1&#34;</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">mi</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="dhttpscodeforcescontest738problemd"><a href="https://codeforc.es/contest/738/problem/D">D</a></h2>
<h3 id="description-3">Description</h3>
<p>有 $a$ 艘船，每艘船长度为 $b$，总共有 $n$​ 个位置，其中给出 $k$ 个已经进行过射击且没有船的位置，问最少打几次一定能打到船并输出方案。（建议看原题面加强理解）</p>
<h3 id="solution-3">Solution</h3>
<p>一个地方可能有船当且仅当有连续 $b$ 个 $0$，对于这种地方，我们打最后面就行。</p>
<p>然后处理出可能有船的所有地方，根据雀巢原理（？），设所有可能有船的地方有 $x$ 个，我们只需要打其中 $x-a+1$ 个地方即可。</p>
<h3 id="code-3">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2e5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">char</span> <span style="color:#000">s</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">n</span>, <span style="color:#000">a</span>, <span style="color:#000">b</span>, <span style="color:#000">k</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">a</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">b</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">k</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">s</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">vector</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">ans</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">now</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">s</span>[<span style="color:#000">i</span>] <span style="color:#000">==</span> <span style="color:#2300ce">&#39;1&#39;</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">now</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">now</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">now</span> <span style="color:#000">==</span> <span style="color:#000">b</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">now</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>, <span style="color:#000">ans</span>.<span style="color:#000">push_back</span>(<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">ans</span>.<span style="color:#000">size</span>() <span style="color:#000">-</span> <span style="color:#000">a</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">ans</span>.<span style="color:#000">size</span>() <span style="color:#000">-</span> <span style="color:#000">a</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">ans</span>[<span style="color:#000">i</span>] <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="ehttpscodeforcescontest738probleme"><a href="https://codeforc.es/contest/738/problem/E">E</a></h2>
<h3 id="description-4">Description</h3>
<p>有一颗 $n$ 个点的树，给出每个点的祖先数，并指定一个点是根。问最少有几个点的祖先数是错的。</p>
<h3 id="solution-4">Solution</h3>
<p>考虑一个点的祖先数一定是他父亲的祖先数加上一，那么所有点的祖先数排序之后一定是一个连续的非严格单调递增的序列。</p>
<p>我们从小到大枚举祖先数，当没有任何一个点的祖先数是当前这个点时，我们把一个祖先数最大的点改过来就行，直到所有点都处理完。注意处理一下根。</p>
<h3 id="code-4">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2e5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">a</span>[<span style="color:#000">maxn</span>], <span style="color:#000">b</span>[<span style="color:#000">maxn</span>], <span style="color:#000">n</span>, <span style="color:#000">s</span>, <span style="color:#000">ans</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">s</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">i</span> <span style="color:#000">==</span> <span style="color:#000">s</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">ans</span> <span style="color:#000">+=</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>] <span style="color:#000">&gt;</span> <span style="color:#1c01ce">0</span>;        
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>            <span style="color:#000">b</span>[<span style="color:#000">a</span>[<span style="color:#000">i</span>]]<span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">cnt</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">cnt</span> <span style="color:#000">&lt;</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">!</span><span style="color:#000">b</span>[<span style="color:#000">i</span>])
</span></span><span style="display:flex;"><span>            <span style="color:#000">cnt</span><span style="color:#000">++</span>, <span style="color:#000">ans</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>            <span style="color:#000">cnt</span> <span style="color:#000">+=</span> <span style="color:#000">b</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">ans</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="fhttpscodeforcescontest738problemf"><a href="https://codeforc.es/contest/738/problem/F">F</a></h2>
<h3 id="description-5">Description</h3>
<p>有 $n$​ 个数。A、B 两个人轮流取数，A 从左取，B 从右取。A 先取。假如上一个人取了 $k$ 个数，那么这个人只能取 $k$ 或 $k+1$​ 个数。初始时 $k=1$。当取不了或取完时，游戏结束。A 想最大化他取的数的和 $a$，B 想最小化他去的数 $b$​。求这两个数差的最大值。$n\leq4000$​​，空间 512MB。</p>
<h3 id="solution-5">Solution</h3>
<p>我以前对博弈论有个误解，以为只要是玩游戏就是博弈论，今天才知道博弈论是研究谁必胜的，这种最优化问题和 $SG$ 函数没关系。</p>
<p>最优化，考虑一个 DP，$f(l,r,k,0/1)$​ 表示当前左面该取 $l$，右面该取 $r$，当前的 $k$，轮到 A/B 取的答案。</p>
<p>状态数看起来是 $O(n^3)$​ 的，转移是 $O(1)$ 的。但实际上发现 $k$ 是 $O(\sqrt n)$ 级别的，又发现对于一个确定的 $l$，可能的 $r$ 总数是 $O(k)=O(\sqrt n)$ 级别的，也就是说合法的状态数总共只有 $O(n^2)$​ 个。转移挺简单的，但是需要注意一些细节。</p>
<p>那么我们可以使用记忆化搜索来找到答案。</p>
<p>注意直接开数组会 MLE，我们可以把所有可行的状态哈希一下用哈希表存储。（新学到的点）</p>
<h3 id="code-5">Code</h3>
<p>不知道为什么，用 <code>unordered_map</code>  会 TLE，手写就不会，看来还是慎用比较好。</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">4e4</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>, <span style="color:#000">maxm</span> <span style="color:#000">=</span> <span style="color:#1c01ce">5e7</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>, <span style="color:#000">mod</span> <span style="color:#000">=</span> <span style="color:#1c01ce">10000019</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">a</span>[<span style="color:#000">maxn</span>], <span style="color:#000">n</span>, <span style="color:#000">sum</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">int</span> <span style="color:#000">s</span>(<span style="color:#a90d91">int</span> <span style="color:#000">l</span>, <span style="color:#a90d91">int</span> <span style="color:#000">r</span>) { <span style="color:#a90d91">return</span> <span style="color:#000">l</span> <span style="color:#000">&gt;</span> <span style="color:#000">r</span> <span style="color:#000">?</span> <span style="color:#1c01ce">0</span> <span style="color:#000">:</span> <span style="color:#000">sum</span>[<span style="color:#000">r</span>] <span style="color:#000">-</span> <span style="color:#000">sum</span>[<span style="color:#000">l</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>]; }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">struct</span> <span style="color:#3f6e75">node</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">l</span>, <span style="color:#000">r</span>, <span style="color:#000">k</span>, <span style="color:#000">pos</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">node</span>() {}
</span></span><span style="display:flex;"><span>    <span style="color:#000">node</span>(<span style="color:#a90d91">int</span> <span style="color:#000">l_</span>, <span style="color:#a90d91">int</span> <span style="color:#000">r_</span>, <span style="color:#a90d91">int</span> <span style="color:#000">k_</span>, <span style="color:#a90d91">int</span> <span style="color:#000">pos_</span>) <span style="color:#000">:</span> <span style="color:#000">l</span>(<span style="color:#000">l_</span>), <span style="color:#000">r</span>(<span style="color:#000">r_</span>), <span style="color:#000">k</span>(<span style="color:#000">k_</span>), <span style="color:#000">pos</span>(<span style="color:#000">pos_</span>) {}
</span></span><span style="display:flex;"><span>};
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">hash</span>(<span style="color:#a90d91">const</span> <span style="color:#000">node</span> <span style="color:#000">&amp;</span><span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> (<span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span>)((<span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span>)<span style="color:#1c01ce">800000</span> <span style="color:#000">*</span> <span style="color:#000">x</span>.<span style="color:#000">l</span> <span style="color:#000">+</span> <span style="color:#1c01ce">200</span> <span style="color:#000">*</span> <span style="color:#000">x</span>.<span style="color:#000">r</span> <span style="color:#000">+</span> <span style="color:#000">x</span>.<span style="color:#000">k</span> <span style="color:#000">*</span> <span style="color:#1c01ce">2</span> <span style="color:#000">+</span> <span style="color:#000">x</span>.<span style="color:#000">pos</span>);
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span><span style="color:#a90d91">struct</span> <span style="color:#3f6e75">hash_map</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">struct</span> <span style="color:#3f6e75">data</span>
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">u</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">v</span>, <span style="color:#000">nex</span>;
</span></span><span style="display:flex;"><span>    };
</span></span><span style="display:flex;"><span>    <span style="color:#000">data</span> <span style="color:#000">e</span>[<span style="color:#000">mod</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">1</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">h</span>[<span style="color:#000">mod</span>], <span style="color:#000">cnt</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">hash</span>(<span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">u</span>) { <span style="color:#a90d91">return</span> <span style="color:#000">u</span> <span style="color:#000">%</span> <span style="color:#000">mod</span>; }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">&amp;</span><span style="color:#a90d91">operator</span>[](<span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">u</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">hu</span> <span style="color:#000">=</span> <span style="color:#000">hash</span>(<span style="color:#000">u</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#000">h</span>[<span style="color:#000">hu</span>]; <span style="color:#000">i</span>; <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#000">e</span>[<span style="color:#000">i</span>].<span style="color:#000">nex</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">e</span>[<span style="color:#000">i</span>].<span style="color:#000">u</span> <span style="color:#000">==</span> <span style="color:#000">u</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">return</span> <span style="color:#000">e</span>[<span style="color:#000">i</span>].<span style="color:#000">v</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#000">e</span>[<span style="color:#000">++</span><span style="color:#000">cnt</span>] <span style="color:#000">=</span> (<span style="color:#000">data</span>){<span style="color:#000">u</span>, <span style="color:#000">-</span><span style="color:#1c01ce">1</span>, <span style="color:#000">h</span>[<span style="color:#000">hu</span>]}, <span style="color:#000">h</span>[<span style="color:#000">hu</span>] <span style="color:#000">=</span> <span style="color:#000">cnt</span>, <span style="color:#000">e</span>[<span style="color:#000">cnt</span>].<span style="color:#000">v</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">hash_map</span>()
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">cnt</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">memset</span>(<span style="color:#000">h</span>, <span style="color:#1c01ce">0</span>, <span style="color:#a90d91">sizeof</span>(<span style="color:#000">h</span>));
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>} <span style="color:#000">mp</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">dp</span>(<span style="color:#a90d91">int</span> <span style="color:#000">l</span>, <span style="color:#a90d91">int</span> <span style="color:#000">r</span>, <span style="color:#a90d91">int</span> <span style="color:#000">k</span>, <span style="color:#a90d91">int</span> <span style="color:#000">pos</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">r</span> <span style="color:#000">-</span> <span style="color:#000">l</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;</span> <span style="color:#000">k</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">else</span> <span style="color:#a90d91">if</span> (<span style="color:#000">r</span> <span style="color:#000">-</span> <span style="color:#000">l</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">==</span> <span style="color:#000">k</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#000">s</span>(<span style="color:#000">l</span>, <span style="color:#000">r</span>) <span style="color:#000">*</span> (<span style="color:#000">pos</span> <span style="color:#000">==</span> <span style="color:#1c01ce">1</span> <span style="color:#000">?</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span> <span style="color:#000">:</span> <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">nowst</span> <span style="color:#000">=</span> <span style="color:#000">hash</span>(<span style="color:#000">node</span>(<span style="color:#000">l</span>, <span style="color:#000">r</span>, <span style="color:#000">k</span>, <span style="color:#000">pos</span>));
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">mp</span>[<span style="color:#000">nowst</span>] <span style="color:#000">!=</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#000">mp</span>[<span style="color:#000">nowst</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">pos</span> <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">tmp</span> <span style="color:#000">=</span> <span style="color:#000">dp</span>(<span style="color:#000">l</span> <span style="color:#000">+</span> <span style="color:#000">k</span>, <span style="color:#000">r</span>, <span style="color:#000">k</span>, <span style="color:#000">pos</span> <span style="color:#000">^</span> <span style="color:#1c01ce">1</span>) <span style="color:#000">+</span> <span style="color:#000">s</span>(<span style="color:#000">l</span>, <span style="color:#000">l</span> <span style="color:#000">+</span> <span style="color:#000">k</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">l</span> <span style="color:#000">+</span> <span style="color:#000">k</span> <span style="color:#000">&lt;=</span> <span style="color:#000">r</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">tmp</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">max</span>(<span style="color:#000">tmp</span>, <span style="color:#000">dp</span>(<span style="color:#000">l</span> <span style="color:#000">+</span> <span style="color:#000">k</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">r</span>, <span style="color:#000">k</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">pos</span> <span style="color:#000">^</span> <span style="color:#1c01ce">1</span>) <span style="color:#000">+</span> <span style="color:#000">s</span>(<span style="color:#000">l</span>, <span style="color:#000">l</span> <span style="color:#000">+</span> <span style="color:#000">k</span>));
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#000">mp</span>[<span style="color:#000">nowst</span>] <span style="color:#000">=</span> <span style="color:#000">tmp</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">tmp</span> <span style="color:#000">=</span> <span style="color:#000">dp</span>(<span style="color:#000">l</span>, <span style="color:#000">r</span> <span style="color:#000">-</span> <span style="color:#000">k</span>, <span style="color:#000">k</span>, <span style="color:#000">pos</span> <span style="color:#000">^</span> <span style="color:#1c01ce">1</span>) <span style="color:#000">-</span> <span style="color:#000">s</span>(<span style="color:#000">r</span> <span style="color:#000">-</span> <span style="color:#000">k</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">r</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">r</span> <span style="color:#000">-</span> <span style="color:#000">k</span> <span style="color:#000">&gt;=</span> <span style="color:#000">l</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">tmp</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">min</span>(<span style="color:#000">tmp</span>, <span style="color:#000">dp</span>(<span style="color:#000">l</span>, <span style="color:#000">r</span> <span style="color:#000">-</span> <span style="color:#000">k</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">k</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">pos</span> <span style="color:#000">^</span> <span style="color:#1c01ce">1</span>) <span style="color:#000">-</span> <span style="color:#000">s</span>(<span style="color:#000">r</span> <span style="color:#000">-</span> <span style="color:#000">k</span>, <span style="color:#000">r</span>));
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#000">mp</span>[<span style="color:#000">nowst</span>] <span style="color:#000">=</span> <span style="color:#000">tmp</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">ios</span><span style="color:#000">::</span><span style="color:#000">sync_with_stdio</span>(<span style="color:#a90d91">false</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>], <span style="color:#000">sum</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">sum</span>[<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">+</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">dp</span>(<span style="color:#1c01ce">1</span>, <span style="color:#000">n</span>, <span style="color:#1c01ce">1</span>, <span style="color:#1c01ce">0</span>) <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div>]]></content:encoded>
    </item>
    
    <item>
      <title>Codeforces Round 709 (div2)</title>
      <link>https://luoyisu.github.io/posts/cf-contest1484/</link>
      <pubDate>Tue, 07 Dec 2021 15:32:19 +0000</pubDate>
      
      <guid>https://luoyisu.github.io/posts/cf-contest1484/</guid>
      <description>&lt;p&gt;时间比较近的比赛果然难度大一些。。。&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>时间比较近的比赛果然难度大一些。。。</p>
<h2 id="ahttpscodeforcescontest1484problema"><a href="https://codeforc.es/contest/1484/problem/A">A</a></h2>
<h3 id="description">Description</h3>
<p>有一个 $(n+1)\times(m+1)$​ 的点图，问最少断掉几条边能使​剩下的点全联通且没有环。（建议看原题面）</p>
<h3 id="solution">Solution</h3>
<p>答案是 $n\times m$，一个构造性证明：蛇形就行。</p>
<h2 id="bhttpscodeforcescontest1484problemb"><a href="https://codeforc.es/contest/1484/problem/B">B</a></h2>
<h3 id="description-1">Description</h3>
<p>给出一个序列 $\{a_i\}$ ，求最大的 $m$ 和任意的 $c$，满足 $a_i=(a_{i-1}+c)\bmod m$​。（需要判断无解和 $m\rightarrow\infty$）​</p>
<h3 id="solution-1">Solution</h3>
<p>可以发现相邻的两个数差一定是 $c-m$ 或 $c$​，那么扫一遍就能知道 $c$ 和 $m$，然后再扫一遍看看合不合法就行。</p>
<h2 id="chttpscodeforcescontest1484problemc"><a href="https://codeforc.es/contest/1484/problem/C">C</a></h2>
<h3 id="description-2">Description</h3>
<p>有 $n$ 个人， $m$ 天，你每天需要从给定的一些人中选一个，且每个人最多只能选 $\lceil \dfrac m2\rceil$ 次，判断有没有解并给出一个方案。</p>
<h3 id="solution-2">Solution</h3>
<p>从前往后一天一天选。当一天只能选一个人，这个人必须就选了，先预处理这些天。剩下的天我们直接选当前已经选过的次数最少的人。</p>
<p>证明感性一下，想要卡掉这个做法需要每天两个人一直出现，但是这样也只能让选一个人的次数达到 $\dfrac m2$，所以卡不掉。</p>
<h3 id="code">Code</h3>
<p>没必要看，实在是丑。。。</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2e5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">vector</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">a</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">used</span>[<span style="color:#000">maxn</span> <span style="color:#000">/</span> <span style="color:#1c01ce">2</span>], <span style="color:#000">times</span>[<span style="color:#000">maxn</span> <span style="color:#000">/</span> <span style="color:#1c01ce">2</span>], <span style="color:#000">ans</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">T</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">T</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">times</span>[<span style="color:#1c01ce">0</span>] <span style="color:#000">=</span> <span style="color:#000">used</span>[<span style="color:#1c01ce">0</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">30</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> (<span style="color:#000">T</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">n</span>, <span style="color:#000">m</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">m</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">clear</span>(), <span style="color:#000">ans</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">used</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">times</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;        
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">flag</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">int</span> <span style="color:#000">t</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">t</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">while</span> (<span style="color:#000">t</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">x</span>, <span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">push_back</span>(<span style="color:#000">x</span>), <span style="color:#000">times</span>[<span style="color:#000">x</span>]<span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">size</span>() <span style="color:#000">==</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">used</span>[<span style="color:#000">a</span>[<span style="color:#000">i</span>][<span style="color:#1c01ce">0</span>]]<span style="color:#000">++</span>, <span style="color:#000">times</span>[<span style="color:#000">a</span>[<span style="color:#000">i</span>][<span style="color:#1c01ce">0</span>]]<span style="color:#000">--</span>, <span style="color:#000">ans</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>][<span style="color:#1c01ce">0</span>], <span style="color:#000">flag</span> <span style="color:#000">&amp;=</span> <span style="color:#000">used</span>[<span style="color:#000">a</span>[<span style="color:#000">i</span>][<span style="color:#1c01ce">0</span>]] <span style="color:#000">&gt;</span> (<span style="color:#000">m</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>) <span style="color:#000">/</span> <span style="color:#1c01ce">2</span> <span style="color:#000">?</span> <span style="color:#1c01ce">0</span> <span style="color:#000">:</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">a</span>[<span style="color:#000">i</span>].<span style="color:#000">size</span>() <span style="color:#000">==</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">continue</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">int</span> <span style="color:#000">mx</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">p</span> : <span style="color:#000">a</span>[<span style="color:#000">i</span>])
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">if</span> (<span style="color:#000">used</span>[<span style="color:#000">p</span>] <span style="color:#000">&lt;</span> <span style="color:#000">used</span>[<span style="color:#000">mx</span>])
</span></span><span style="display:flex;"><span>                    <span style="color:#000">mx</span> <span style="color:#000">=</span> <span style="color:#000">p</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">used</span>[<span style="color:#000">mx</span>]<span style="color:#000">++</span>, <span style="color:#000">ans</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">mx</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">used</span>[<span style="color:#000">mx</span>] <span style="color:#000">&gt;</span> (<span style="color:#000">m</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>) <span style="color:#000">/</span> <span style="color:#1c01ce">2</span>)
</span></span><span style="display:flex;"><span>            {
</span></span><span style="display:flex;"><span>                <span style="color:#000">flag</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">break</span>;
</span></span><span style="display:flex;"><span>            }
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">!</span><span style="color:#000">flag</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">puts</span>(<span style="color:#c41a16">&#34;NO&#34;</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">continue</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#000">puts</span>(<span style="color:#c41a16">&#34;YES&#34;</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">ans</span>[<span style="color:#000">i</span>] <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="dhttpscodeforcescontest1484problemd"><a href="https://codeforc.es/contest/1484/problem/D">D</a></h2>
<h3 id="description-3">Description</h3>
<p>给出 $n$​ 首歌，和他们的类型值，从头循环播放，如果当前的歌和前一首歌的类型值互质，把当前这首歌删掉，切到下一首歌去，求删除的歌的序列。</p>
<h3 id="solution-3">Solution</h3>
<p>用一个链表模拟即可，第一次扫一遍把要删除的组加进一个队列里，然后取出队首，执行删除，再判断一下需不需要接着删就行。</p>
<h3 id="code-1">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;queue&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;utility&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">int</span> <span style="color:#000">gcd</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>) { <span style="color:#a90d91">return</span> <span style="color:#000">y</span> <span style="color:#000">==</span> <span style="color:#1c01ce">0</span> <span style="color:#000">?</span> <span style="color:#000">x</span> : <span style="color:#000">gcd</span>(<span style="color:#000">y</span>, <span style="color:#000">x</span> <span style="color:#000">%</span> <span style="color:#000">y</span>); }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1e5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">typedef</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">pair</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span>, <span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">pii</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">nxt</span>[<span style="color:#000">maxn</span>], <span style="color:#000">a</span>[<span style="color:#000">maxn</span>], <span style="color:#000">used</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">vector</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">ans</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">T</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">T</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> (<span style="color:#000">T</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>], <span style="color:#000">nxt</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">nxt</span>[<span style="color:#000">n</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">queue</span><span style="color:#000">&lt;</span><span style="color:#000">pii</span><span style="color:#000">&gt;</span> <span style="color:#000">q</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">gcd</span>(<span style="color:#000">a</span>[<span style="color:#000">i</span>], <span style="color:#000">a</span>[<span style="color:#000">nxt</span>[<span style="color:#000">i</span>]]) <span style="color:#000">==</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">q</span>.<span style="color:#000">push</span>(<span style="color:#000">pii</span>(<span style="color:#000">i</span>, <span style="color:#000">nxt</span>[<span style="color:#000">i</span>])), <span style="color:#000">i</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">while</span> (<span style="color:#000">!</span><span style="color:#000">q</span>.<span style="color:#000">empty</span>())
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">auto</span> <span style="color:#000">now</span> <span style="color:#000">=</span> <span style="color:#000">q</span>.<span style="color:#000">front</span>();
</span></span><span style="display:flex;"><span>            <span style="color:#000">q</span>.<span style="color:#000">pop</span>();
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">int</span> <span style="color:#000">pos</span> <span style="color:#000">=</span> <span style="color:#000">now</span>.<span style="color:#000">first</span>, <span style="color:#000">npos</span> <span style="color:#000">=</span> <span style="color:#000">now</span>.<span style="color:#000">second</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">used</span>[<span style="color:#000">pos</span>] <span style="color:#000">||</span> <span style="color:#000">used</span>[<span style="color:#000">npos</span>])
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">continue</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">used</span>[<span style="color:#000">npos</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">ans</span>.<span style="color:#000">push_back</span>(<span style="color:#000">npos</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#000">nxt</span>[<span style="color:#000">pos</span>] <span style="color:#000">=</span> <span style="color:#000">nxt</span>[<span style="color:#000">npos</span>];
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">gcd</span>(<span style="color:#000">a</span>[<span style="color:#000">pos</span>], <span style="color:#000">a</span>[<span style="color:#000">nxt</span>[<span style="color:#000">pos</span>]]) <span style="color:#000">==</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">q</span>.<span style="color:#000">push</span>(<span style="color:#000">pii</span>(<span style="color:#000">pos</span>, <span style="color:#000">nxt</span>[<span style="color:#000">pos</span>]));
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">ans</span>.<span style="color:#000">size</span>() <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> : <span style="color:#000">ans</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">i</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">ans</span>.<span style="color:#000">clear</span>(), <span style="color:#000">memset</span>(<span style="color:#000">used</span>, <span style="color:#1c01ce">0</span>, <span style="color:#a90d91">sizeof</span>(<span style="color:#000">used</span>));
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="ehttpscodeforcescontest1484probleme"><a href="https://codeforc.es/contest/1484/problem/E">E</a></h2>
<h3 id="description-4">Description</h3>
<p>给出 $n$​​ 个楼房的高度和美丽值，把所有楼房划分成连续的若干组，最大化 每组高度最小的楼房的美丽值 的和。$n\leq3\times10^5$​。</p>
<h3 id="solution-4">Solution</h3>
<p>显然有个 DP，$f_i=\max\{f_j+val(j+1,n)\}$​，其中 $val(l,r)$​ 表示 $[l,r]$​​ 内最矮楼房的美丽值。然后发现一个楼房到下一个比它更矮的楼房这段区间内， $val$ 都是固定的，可以维护一个单调栈。</p>
<h3 id="算法一">算法一</h3>
<p>对于每个楼房，进栈时把他能影响到的 $f$ 的值全部加它的美丽值，出栈的时候减掉。使用线段树维护， $f_i$ 就是当前所有已经加进线段树的点的最大值。然后把 $f_i$ 加进去。细节有点多。。。。。</p>
<h3 id="code1">Code1</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;queue&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">3e5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">typedef</span> <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">ll</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#000">ll</span> <span style="color:#000">inf</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1ll</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">60</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">struct</span> <span style="color:#3f6e75">node</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">ll</span> <span style="color:#000">lzy</span>, <span style="color:#000">mx</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">node</span>() {}
</span></span><span style="display:flex;"><span>} <span style="color:#000">t</span>[<span style="color:#000">maxn</span> <span style="color:#000">*</span> <span style="color:#1c01ce">4</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">int</span> <span style="color:#000">ls</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>) { <span style="color:#a90d91">return</span> <span style="color:#000">x</span> <span style="color:#000">*</span> <span style="color:#1c01ce">2</span>; }
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">int</span> <span style="color:#000">rs</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>) { <span style="color:#a90d91">return</span> <span style="color:#000">x</span> <span style="color:#000">*</span> <span style="color:#1c01ce">2</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>; }
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">push_up</span>(<span style="color:#a90d91">int</span> <span style="color:#000">k</span>) { <span style="color:#000">t</span>[<span style="color:#000">k</span>].<span style="color:#000">mx</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">max</span>(<span style="color:#000">t</span>[<span style="color:#000">ls</span>(<span style="color:#000">k</span>)].<span style="color:#000">mx</span>, <span style="color:#000">t</span>[<span style="color:#000">rs</span>(<span style="color:#000">k</span>)].<span style="color:#000">mx</span>); }
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">push_down</span>(<span style="color:#a90d91">int</span> <span style="color:#000">k</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">!</span><span style="color:#000">t</span>[<span style="color:#000">k</span>].<span style="color:#000">lzy</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">t</span>[<span style="color:#000">ls</span>(<span style="color:#000">k</span>)].<span style="color:#000">lzy</span> <span style="color:#000">+=</span> <span style="color:#000">t</span>[<span style="color:#000">k</span>].<span style="color:#000">lzy</span>, <span style="color:#000">t</span>[<span style="color:#000">rs</span>(<span style="color:#000">k</span>)].<span style="color:#000">lzy</span> <span style="color:#000">+=</span> <span style="color:#000">t</span>[<span style="color:#000">k</span>].<span style="color:#000">lzy</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">t</span>[<span style="color:#000">ls</span>(<span style="color:#000">k</span>)].<span style="color:#000">mx</span> <span style="color:#000">+=</span> <span style="color:#000">t</span>[<span style="color:#000">k</span>].<span style="color:#000">lzy</span>, <span style="color:#000">t</span>[<span style="color:#000">rs</span>(<span style="color:#000">k</span>)].<span style="color:#000">mx</span> <span style="color:#000">+=</span> <span style="color:#000">t</span>[<span style="color:#000">k</span>].<span style="color:#000">lzy</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">t</span>[<span style="color:#000">k</span>].<span style="color:#000">lzy</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">modify_add</span>(<span style="color:#a90d91">int</span> <span style="color:#000">l</span>, <span style="color:#a90d91">int</span> <span style="color:#000">r</span>, <span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>, <span style="color:#000">ll</span> <span style="color:#000">v</span>, <span style="color:#a90d91">int</span> <span style="color:#000">k</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">l</span> <span style="color:#000">&gt;=</span> <span style="color:#000">x</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">r</span> <span style="color:#000">&lt;=</span> <span style="color:#000">y</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">t</span>[<span style="color:#000">k</span>].<span style="color:#000">lzy</span> <span style="color:#000">+=</span> <span style="color:#000">v</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">t</span>[<span style="color:#000">k</span>].<span style="color:#000">mx</span> <span style="color:#000">+=</span> <span style="color:#000">v</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">mid</span> <span style="color:#000">=</span> (<span style="color:#000">l</span> <span style="color:#000">+</span> <span style="color:#000">r</span>) <span style="color:#000">/</span> <span style="color:#1c01ce">2</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">push_down</span>(<span style="color:#000">k</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">x</span> <span style="color:#000">&lt;=</span> <span style="color:#000">mid</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">modify_add</span>(<span style="color:#000">l</span>, <span style="color:#000">mid</span>, <span style="color:#000">x</span>, <span style="color:#000">y</span>, <span style="color:#000">v</span>, <span style="color:#000">ls</span>(<span style="color:#000">k</span>));
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">y</span> <span style="color:#000">&gt;</span> <span style="color:#000">mid</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">modify_add</span>(<span style="color:#000">mid</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">r</span>, <span style="color:#000">x</span>, <span style="color:#000">y</span>, <span style="color:#000">v</span>, <span style="color:#000">rs</span>(<span style="color:#000">k</span>));
</span></span><span style="display:flex;"><span>    <span style="color:#000">push_up</span>(<span style="color:#000">k</span>);
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">modify</span>(<span style="color:#a90d91">int</span> <span style="color:#000">l</span>, <span style="color:#a90d91">int</span> <span style="color:#000">r</span>, <span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#000">ll</span> <span style="color:#000">v</span>, <span style="color:#a90d91">int</span> <span style="color:#000">k</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">l</span> <span style="color:#000">==</span> <span style="color:#000">r</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#177500">//t[k].lzy = 0;
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>        <span style="color:#000">t</span>[<span style="color:#000">k</span>].<span style="color:#000">mx</span> <span style="color:#000">=</span> <span style="color:#000">v</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#177500">//cout &lt;&lt; l &lt;&lt; &#34; &#34; &lt;&lt; v &lt;&lt; endl;
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>        <span style="color:#a90d91">return</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">mid</span> <span style="color:#000">=</span> (<span style="color:#000">l</span> <span style="color:#000">+</span> <span style="color:#000">r</span>) <span style="color:#000">/</span> <span style="color:#1c01ce">2</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#177500">//push_down(k);
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>    <span style="color:#a90d91">if</span> (<span style="color:#000">x</span> <span style="color:#000">&lt;=</span> <span style="color:#000">mid</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">modify</span>(<span style="color:#000">l</span>, <span style="color:#000">mid</span>, <span style="color:#000">x</span>, <span style="color:#000">v</span>, <span style="color:#000">ls</span>(<span style="color:#000">k</span>));
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>        <span style="color:#000">modify</span>(<span style="color:#000">mid</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">r</span>, <span style="color:#000">x</span>, <span style="color:#000">v</span>, <span style="color:#000">rs</span>(<span style="color:#000">k</span>));
</span></span><span style="display:flex;"><span>    <span style="color:#000">push_up</span>(<span style="color:#000">k</span>);
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000">ll</span> <span style="color:#000">query</span>(<span style="color:#a90d91">int</span> <span style="color:#000">l</span>, <span style="color:#a90d91">int</span> <span style="color:#000">r</span>, <span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>, <span style="color:#a90d91">int</span> <span style="color:#000">k</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">x</span> <span style="color:#000">&lt;=</span> <span style="color:#000">l</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">r</span> <span style="color:#000">&lt;=</span> <span style="color:#000">y</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#000">t</span>[<span style="color:#000">k</span>].<span style="color:#000">mx</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">mid</span> <span style="color:#000">=</span> (<span style="color:#000">l</span> <span style="color:#000">+</span> <span style="color:#000">r</span>) <span style="color:#000">/</span> <span style="color:#1c01ce">2</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">ll</span> <span style="color:#000">res</span> <span style="color:#000">=</span> <span style="color:#000">-</span><span style="color:#000">inf</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">x</span> <span style="color:#000">&lt;=</span> <span style="color:#000">mid</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">res</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">max</span>(<span style="color:#000">res</span>, <span style="color:#000">query</span>(<span style="color:#000">l</span>, <span style="color:#000">mid</span>, <span style="color:#000">x</span>, <span style="color:#000">y</span>, <span style="color:#000">ls</span>(<span style="color:#000">k</span>)));
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">y</span> <span style="color:#000">&gt;</span> <span style="color:#000">mid</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">res</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">max</span>(<span style="color:#000">res</span>, <span style="color:#000">query</span>(<span style="color:#000">mid</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">r</span>, <span style="color:#000">x</span>, <span style="color:#000">y</span>, <span style="color:#000">rs</span>(<span style="color:#000">k</span>)));
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#000">res</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">struct</span> <span style="color:#3f6e75">Q</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">i</span>, <span style="color:#000">val</span>, <span style="color:#000">b</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">Q</span>() { <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#000">b</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>, <span style="color:#000">val</span> <span style="color:#000">=</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span>; }
</span></span><span style="display:flex;"><span>    <span style="color:#000">Q</span>(<span style="color:#a90d91">int</span> <span style="color:#000">i_</span>, <span style="color:#a90d91">int</span> <span style="color:#000">val_</span>, <span style="color:#a90d91">int</span> <span style="color:#000">b_</span>) <span style="color:#000">:</span> <span style="color:#000">i</span>(<span style="color:#000">i_</span>), <span style="color:#000">val</span>(<span style="color:#000">val_</span>), <span style="color:#000">b</span>(<span style="color:#000">b_</span>) {}
</span></span><span style="display:flex;"><span>} <span style="color:#000">q</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">n</span>, <span style="color:#000">h</span>[<span style="color:#000">maxn</span>], <span style="color:#000">b</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#000">ll</span> <span style="color:#000">f</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">h</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">b</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">r</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">h</span>[<span style="color:#1c01ce">0</span>] <span style="color:#000">=</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">while</span> (<span style="color:#000">r</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">q</span>[<span style="color:#000">r</span>].<span style="color:#000">val</span> <span style="color:#000">&gt;=</span> <span style="color:#000">h</span>[<span style="color:#000">i</span>])
</span></span><span style="display:flex;"><span>        {            
</span></span><span style="display:flex;"><span>            <span style="color:#000">modify_add</span>(<span style="color:#1c01ce">0</span>, <span style="color:#000">n</span>, <span style="color:#000">q</span>[<span style="color:#000">r</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>].<span style="color:#000">i</span>, <span style="color:#000">q</span>[<span style="color:#000">r</span>].<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">-</span><span style="color:#000">q</span>[<span style="color:#000">r</span>].<span style="color:#000">b</span>, <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#000">r</span><span style="color:#000">--</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#000">q</span>[<span style="color:#000">++</span><span style="color:#000">r</span>] <span style="color:#000">=</span> <span style="color:#000">Q</span>(<span style="color:#000">i</span>, <span style="color:#000">h</span>[<span style="color:#000">i</span>], <span style="color:#000">b</span>[<span style="color:#000">i</span>]);
</span></span><span style="display:flex;"><span>        <span style="color:#000">modify_add</span>(<span style="color:#1c01ce">0</span>, <span style="color:#000">n</span>, <span style="color:#000">q</span>[<span style="color:#000">r</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>].<span style="color:#000">i</span>, <span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">b</span>[<span style="color:#000">i</span>], <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">f</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">query</span>(<span style="color:#1c01ce">0</span>, <span style="color:#000">n</span>, <span style="color:#1c01ce">0</span>, <span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>, <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">modify</span>(<span style="color:#1c01ce">0</span>, <span style="color:#000">n</span>, <span style="color:#000">i</span>, <span style="color:#000">f</span>[<span style="color:#000">i</span>], <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#177500">//for (int i = 1; i &lt;= n; i++)
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>    <span style="color:#177500">//    cout &lt;&lt; f[i] &lt;&lt; endl;
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">f</span>[<span style="color:#000">n</span>] <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h3 id="算法二">算法二</h3>
<p>同样是单调栈，直接上代码吧。。。维护之前的答案折腾一下，很难描述。看题解得来的做法。</p>
<h3 id="code2">Code2</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">3e5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">typedef</span> <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">ll</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">h</span>[<span style="color:#000">maxn</span>], <span style="color:#000">b</span>[<span style="color:#000">maxn</span>], <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span><span style="color:#000">ll</span> <span style="color:#000">f</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">struct</span> <span style="color:#3f6e75">Q</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">i</span>, <span style="color:#000">h</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">ll</span> <span style="color:#000">val</span>, <span style="color:#000">ans</span>;
</span></span><span style="display:flex;"><span>} <span style="color:#000">q</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">h</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">b</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">r</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">q</span>[<span style="color:#1c01ce">0</span>].<span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#000">-</span><span style="color:#1c01ce">1ll</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">60</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">ll</span> <span style="color:#000">t</span> <span style="color:#000">=</span> <span style="color:#000">f</span>[<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>];
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">while</span> (<span style="color:#000">r</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">q</span>[<span style="color:#000">r</span>].<span style="color:#000">h</span> <span style="color:#000">&gt;</span> <span style="color:#000">h</span>[<span style="color:#000">i</span>])
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">t</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">max</span>(<span style="color:#000">t</span>, <span style="color:#000">q</span>[<span style="color:#000">r</span>].<span style="color:#000">val</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#000">r</span><span style="color:#000">--</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#000">q</span>[<span style="color:#000">++</span><span style="color:#000">r</span>] <span style="color:#000">=</span> {<span style="color:#000">i</span>, <span style="color:#000">h</span>[<span style="color:#000">i</span>], <span style="color:#000">t</span>, <span style="color:#1c01ce">0ll</span>};
</span></span><span style="display:flex;"><span>        <span style="color:#000">f</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">q</span>[<span style="color:#000">r</span>].<span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">max</span>(<span style="color:#000">q</span>[<span style="color:#000">r</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>].<span style="color:#000">ans</span>, <span style="color:#000">t</span> <span style="color:#000">+</span> <span style="color:#000">b</span>[<span style="color:#000">i</span>]);
</span></span><span style="display:flex;"><span>        <span style="color:#177500">// 前一部分是之前的答案，有更小的楼房，直接放在一组里，后面是新开一组的答案
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">f</span>[<span style="color:#000">n</span>] <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="fhttpscodeforcescontest1484problemf"><a href="https://codeforc.es/contest/1484/problem/F">F</a></h2>
<h3 id="description-5">Description</h3>
<p>有一个 $n$​ 个点的带权无向图（$n\leq600$​），给出若干个三元组 $(u,v,l)$​​，问有多少条边满足：</p>
<ol>
<li>
<p>在任意一个三元组中 $u$​ 到 $v$​ 的路径上；</p>
</li>
<li>
<p>这个路径的长度不大于 $l$。</p>
</li>
</ol>
<h3 id="solution-5">Solution</h3>
<p>发现一条边 $(x,y)$​​ 满足要求当且仅当存在一个三元组 $(u,v,l)$​​ 满足 $dis(u,x)+w(x,y)+dis(y,w)\leq l(u,v)$​​​。</p>
<p>首先枚举 $O(n^4)$ 肯定是对的，但是会 TLE，想个办法优化枚举。。。</p>
<p>换个形式：$dis(u,x)+w(x,y)\leq l(u,v)-dis(y,v)$​。</p>
<p>我们枚举 $u,y$，这样左面只和 $x$ 有关，右面只和 $v$ 有关，考虑接着枚举 $x$，我们发现，因为存在 $v$ 即可，所以一个 $x$ 满足要求等价于 $dis(u,x)+w(x,y)\leq(l(u,v)-dis(y,v))_{max}$。右面可以枚举 $u,v,y$ 在 $O(n^3)$ 时间内预处理出来，答案可以枚举 $u,v,x$ 求出来，那么我们在 $O(n^3)$​ 的时间内解决了这个问题。</p>
<h3 id="code-2">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">610</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">typedef</span> <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">ll</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000">ll</span> <span style="color:#000">dis</span>[<span style="color:#000">maxn</span>][<span style="color:#000">maxn</span>], <span style="color:#000">mx</span>[<span style="color:#000">maxn</span>][<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#000">ll</span> <span style="color:#000">p</span>[<span style="color:#000">maxn</span>][<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">ok</span>[<span style="color:#000">maxn</span>][<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">struct</span> <span style="color:#3f6e75">edge</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">y</span>, <span style="color:#000">w</span>;
</span></span><span style="display:flex;"><span>};
</span></span><span style="display:flex;"><span><span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">vector</span><span style="color:#000">&lt;</span><span style="color:#000">edge</span><span style="color:#000">&gt;</span> <span style="color:#000">e</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">add</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>, <span style="color:#a90d91">int</span> <span style="color:#000">w</span>) { <span style="color:#000">e</span>[<span style="color:#000">x</span>].<span style="color:#000">push_back</span>({<span style="color:#000">y</span>, <span style="color:#000">w</span>}), <span style="color:#000">e</span>[<span style="color:#000">y</span>].<span style="color:#000">push_back</span>({<span style="color:#000">x</span>, <span style="color:#000">w</span>}); }
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">n</span>, <span style="color:#000">m</span>, <span style="color:#000">q</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">memset</span>(<span style="color:#000">dis</span>, <span style="color:#1c01ce">1</span>, <span style="color:#a90d91">sizeof</span>(<span style="color:#000">dis</span>));
</span></span><span style="display:flex;"><span>    <span style="color:#000">memset</span>(<span style="color:#000">p</span>, <span style="color:#1c01ce">128</span>, <span style="color:#a90d91">sizeof</span>(<span style="color:#000">p</span>)), <span style="color:#000">memset</span>(<span style="color:#000">mx</span>, <span style="color:#1c01ce">128</span>, <span style="color:#a90d91">sizeof</span>(<span style="color:#000">mx</span>));
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">m</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">p</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>] <span style="color:#000">/=</span> <span style="color:#1c01ce">2</span>, <span style="color:#000">mx</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>] <span style="color:#000">/=</span> <span style="color:#1c01ce">2</span>, <span style="color:#000">dis</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>] <span style="color:#000">/=</span> <span style="color:#1c01ce">2</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">x</span>, <span style="color:#000">y</span>, <span style="color:#000">w</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">x</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">y</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">w</span>, <span style="color:#000">dis</span>[<span style="color:#000">x</span>][<span style="color:#000">y</span>] <span style="color:#000">=</span> <span style="color:#000">dis</span>[<span style="color:#000">y</span>][<span style="color:#000">x</span>] <span style="color:#000">=</span> <span style="color:#000">w</span>, <span style="color:#000">add</span>(<span style="color:#000">x</span>, <span style="color:#000">y</span>, <span style="color:#000">w</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">q</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">x</span>, <span style="color:#000">y</span>, <span style="color:#000">l</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">q</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">x</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">y</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">l</span>, <span style="color:#000">p</span>[<span style="color:#000">x</span>][<span style="color:#000">y</span>] <span style="color:#000">=</span> <span style="color:#000">p</span>[<span style="color:#000">y</span>][<span style="color:#000">x</span>] <span style="color:#000">=</span> <span style="color:#000">l</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">k</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">k</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">k</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">dis</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>] <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">min</span>(<span style="color:#000">dis</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>], <span style="color:#000">dis</span>[<span style="color:#000">i</span>][<span style="color:#000">k</span>] <span style="color:#000">+</span> <span style="color:#000">dis</span>[<span style="color:#000">k</span>][<span style="color:#000">j</span>]);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)    
</span></span><span style="display:flex;"><span>        <span style="color:#000">dis</span>[<span style="color:#000">i</span>][<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>, <span style="color:#000">add</span>(<span style="color:#000">i</span>, <span style="color:#000">i</span>, <span style="color:#1c01ce">0</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">u</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">u</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">u</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">y</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">y</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">y</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">v</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">v</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">v</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#177500">//if (p[u][v])
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>                    <span style="color:#000">mx</span>[<span style="color:#000">u</span>][<span style="color:#000">y</span>] <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">max</span>(<span style="color:#000">mx</span>[<span style="color:#000">u</span>][<span style="color:#000">y</span>], (<span style="color:#000">ll</span>)<span style="color:#000">p</span>[<span style="color:#000">u</span>][<span style="color:#000">v</span>] <span style="color:#000">-</span> <span style="color:#000">dis</span>[<span style="color:#000">y</span>][<span style="color:#000">v</span>]);
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">u</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">u</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">u</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">y</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">y</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">y</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">auto</span> <span style="color:#000">k</span> : <span style="color:#000">e</span>[<span style="color:#000">y</span>])
</span></span><span style="display:flex;"><span>            {
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">int</span> <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">k</span>.<span style="color:#000">y</span>, <span style="color:#000">w</span> <span style="color:#000">=</span> <span style="color:#000">k</span>.<span style="color:#000">w</span>;
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">if</span> (<span style="color:#000">w</span> <span style="color:#000">+</span> <span style="color:#000">dis</span>[<span style="color:#000">x</span>][<span style="color:#000">u</span>] <span style="color:#000">&lt;=</span> <span style="color:#000">mx</span>[<span style="color:#000">u</span>][<span style="color:#000">y</span>])
</span></span><span style="display:flex;"><span>                    <span style="color:#000">ok</span>[<span style="color:#000">x</span>][<span style="color:#000">y</span>] <span style="color:#000">=</span> <span style="color:#000">ok</span>[<span style="color:#000">y</span>][<span style="color:#000">x</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>            }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">ok</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>])
</span></span><span style="display:flex;"><span>                <span style="color:#000">ans</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">ans</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div>]]></content:encoded>
    </item>
    
    <item>
      <title>Codeforces Round 120 (Div. 2) 题解</title>
      <link>https://luoyisu.github.io/posts/cf-contest120/</link>
      <pubDate>Mon, 06 Dec 2021 12:54:17 +0000</pubDate>
      
      <guid>https://luoyisu.github.io/posts/cf-contest120/</guid>
      <description>&lt;p&gt;因为是久远的比赛，没有什么特别难的题。&lt;/p&gt;
&lt;p&gt;没有 DP 好评（）&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>因为是久远的比赛，没有什么特别难的题。</p>
<p>没有 DP 好评（）</p>
<h2 id="ahttpscodeforcescontest190problema"><a href="https://codeforc.es/contest/190/problem/A">A</a></h2>
<h3 id="description">Description</h3>
<p>有 $n$ 个大人 $m$ 个小孩，一枚车票一元钱，一个大人可以带很多小孩，一个大人能免费带一个小孩上车，每个小孩都必须有一个大人带。问最少/最多需要花多少钱。</p>
<h3 id="solution">Solution</h3>
<p>又水又毒瘤，不写了，看代码。</p>
<h3 id="code">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span> 
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">a</span>, <span style="color:#000">b</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">a</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">b</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">a</span> <span style="color:#000">==</span> <span style="color:#1c01ce">0</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">b</span> <span style="color:#000">!=</span> <span style="color:#1c01ce">0</span>) <span style="color:#177500">// 有小孩没大人
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>        <span style="color:#000">puts</span>(<span style="color:#c41a16">&#34;Impossible&#34;</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">else</span> <span style="color:#a90d91">if</span> (<span style="color:#000">b</span> <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>) <span style="color:#177500">// 有大人没小孩
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">a</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">a</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">max</span>(<span style="color:#000">a</span>, <span style="color:#000">b</span>) <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">a</span> <span style="color:#000">+</span> <span style="color:#000">b</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>; 
</span></span><span style="display:flex;"><span>    <span style="color:#177500">// 最少就是尽量一个大人带一个小孩，最大就是一个大人带所有小孩
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>}
</span></span></code></pre></div><h2 id="bhttpscodeforcescontest190problemb"><a href="https://codeforc.es/contest/190/problem/B">B</a></h2>
<h3 id="description-1">Description</h3>
<p>平面上有两个圆，输出一个能连接这两个圆的圆的最小半径。</p>
<h3 id="solution-1">Solution</h3>
<p>分两个圆相离、内含、相交（相切）算一下就行，具体看代码。</p>
<h3 id="code-1">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cmath&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">double</span> <span style="color:#000">pow2</span>(<span style="color:#a90d91">double</span> <span style="color:#000">x</span>) { <span style="color:#a90d91">return</span> <span style="color:#000">x</span> <span style="color:#000">*</span> <span style="color:#000">x</span>; }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">updmi</span>(<span style="color:#a90d91">double</span> <span style="color:#000">&amp;</span><span style="color:#000">a</span>, <span style="color:#a90d91">double</span> <span style="color:#000">b</span>) { <span style="color:#000">a</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">min</span>(<span style="color:#000">a</span>, <span style="color:#000">fabs</span>(<span style="color:#000">b</span>) <span style="color:#000">/</span> <span style="color:#1c01ce">2.0</span>); }
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">out</span>(<span style="color:#a90d91">double</span> <span style="color:#000">x</span>) { <span style="color:#000">printf</span>(<span style="color:#c41a16">&#34;%.15lf</span><span style="color:#c41a16">\\</span><span style="color:#c41a16">n&#34;</span>, <span style="color:#000">x</span>); }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">double</span> <span style="color:#000">x1</span>, <span style="color:#000">y1</span>, <span style="color:#000">r1</span>, <span style="color:#000">x2</span>, <span style="color:#000">y2</span>, <span style="color:#000">r2</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">x1</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">y1</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">r1</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">x2</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">y2</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">r2</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">double</span> <span style="color:#000">dis</span> <span style="color:#000">=</span> <span style="color:#000">sqrt</span>(<span style="color:#000">pow2</span>(<span style="color:#000">x1</span> <span style="color:#000">-</span> <span style="color:#000">x2</span>) <span style="color:#000">+</span> <span style="color:#000">pow2</span>(<span style="color:#000">y1</span> <span style="color:#000">-</span> <span style="color:#000">y2</span>));
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">r1</span> <span style="color:#000">&lt;</span> <span style="color:#000">r2</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">swap</span>(<span style="color:#000">r1</span>, <span style="color:#000">r2</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">dis</span> <span style="color:#000">&gt;</span> <span style="color:#000">r1</span> <span style="color:#000">+</span> <span style="color:#000">r2</span>) <span style="color:#177500">// 相离，即样例的那两个图
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>        <span style="color:#000">out</span>((<span style="color:#000">dis</span> <span style="color:#000">-</span> <span style="color:#000">r1</span> <span style="color:#000">-</span> <span style="color:#000">r2</span>) <span style="color:#000">/</span> <span style="color:#1c01ce">2.0</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">else</span> <span style="color:#a90d91">if</span> (<span style="color:#000">r2</span> <span style="color:#000">+</span> <span style="color:#000">dis</span> <span style="color:#000">&lt;</span> <span style="color:#000">r1</span>) <span style="color:#177500">// 内含，圆的直径是大半径减小半径减两个圆圆心的距离
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>        <span style="color:#000">out</span>((<span style="color:#000">r1</span> <span style="color:#000">-</span> <span style="color:#000">r2</span> <span style="color:#000">-</span> <span style="color:#000">dis</span>) <span style="color:#000">/</span> <span style="color:#1c01ce">2.0</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">else</span> <span style="color:#177500">// 相交或相离，显然答案是 0
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>        <span style="color:#000">out</span>(<span style="color:#1c01ce">0.0</span>);
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="chttpscodeforcescontest190problemc"><a href="https://codeforc.es/contest/190/problem/C">C</a></h2>
<h3 id="description-2">Description</h3>
<p>给出若干个 <code>pair</code> 和 <code>int</code>，你需要把它输出成合法的 c++ 语法，如 <code>pair pair int int int</code> 输出 <code>pair&lt;pair&lt;int,int&gt;,int&gt;</code>，如果无解输出 <code>Error occurred</code>。</p>
<h3 id="solution-2">Solution</h3>
<p>类似一个表达式转化，对于一个 <code>pair</code> 递归两次就行，注意直接用 <code>string</code> 会 TLE，最好先判断一下有没有解。（我这个做法贼蠢，看个乐就行）</p>
<h3 id="code-2">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;stack&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;string&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1e6</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">a</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">char</span> <span style="color:#000">s</span>[<span style="color:#1c01ce">10</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">n</span>, <span style="color:#000">m</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">work</span>(<span style="color:#a90d91">int</span> <span style="color:#000">&amp;</span><span style="color:#000">i</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">a</span>[<span style="color:#000">i</span>] <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34;int&#34;</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">a</span>[<span style="color:#000">i</span>] <span style="color:#000">==</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34;pair&lt;&#34;</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">work</span>(<span style="color:#000">++</span><span style="color:#000">i</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34;,&#34;</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">work</span>(<span style="color:#000">++</span><span style="color:#000">i</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34;&gt;&#34;</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">bool</span> <span style="color:#000">check</span>(<span style="color:#a90d91">int</span> <span style="color:#000">&amp;</span><span style="color:#000">i</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">i</span> <span style="color:#000">==</span> <span style="color:#000">n</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>] <span style="color:#000">==</span> <span style="color:#1c01ce">0</span> <span style="color:#000">?</span> <span style="color:#1c01ce">1</span> <span style="color:#000">:</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">i</span> <span style="color:#000">==</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>] <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">a</span>[<span style="color:#000">i</span>] <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">bool</span> <span style="color:#000">tmp</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">a</span>[<span style="color:#000">i</span>] <span style="color:#000">==</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">tmp</span> <span style="color:#000">=</span> <span style="color:#000">check</span>(<span style="color:#000">++</span><span style="color:#000">i</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">tmp</span> <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">return</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">tmp</span> <span style="color:#000">=</span> <span style="color:#000">check</span>(<span style="color:#000">++</span><span style="color:#000">i</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">tmp</span> <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">return</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">m</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> (<span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">s</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">a</span>[<span style="color:#000">++</span><span style="color:#000">n</span>] <span style="color:#000">=</span> <span style="color:#000">s</span>[<span style="color:#1c01ce">0</span>] <span style="color:#000">==</span> <span style="color:#2300ce">&#39;p&#39;</span> <span style="color:#000">?</span> <span style="color:#1c01ce">1</span> <span style="color:#000">:</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">n</span> <span style="color:#000">!=</span> <span style="color:#000">m</span> <span style="color:#000">+</span> <span style="color:#000">m</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">puts</span>(<span style="color:#c41a16">&#34;Error occurred&#34;</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">bool</span> <span style="color:#000">ok</span> <span style="color:#000">=</span> <span style="color:#000">check</span>(<span style="color:#000">i</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">!</span><span style="color:#000">ok</span> <span style="color:#000">||</span> <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">n</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">puts</span>(<span style="color:#c41a16">&#34;Error occurred&#34;</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">work</span>(<span style="color:#000">i</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="dhttpscodeforcescontest190problemd"><a href="https://codeforc.es/contest/190/problem/D">D</a></h2>
<h3 id="description-3">Description</h3>
<p>给定一个长度为 $n$ 的序列 $a_i$ 和 $k$，求满足出现次数最多的数的出现次数小于 $k$​ 的连续子序列的数目。</p>
<h3 id="solution-3">Solution</h3>
<p>由于是连续的子序列，而且发现选的数越多越可能满足，考虑双指针。</p>
<p>对于每个 $l$，我们找到最小的能满足这个条件的 $r$​，然后后面的就随便选了，把它对答案的贡献加进去，就完事了。</p>
<p>至于怎么找 $r$ 呢，我们用一个 <code>map</code> 存每个数的出现次数就行了。</p>
<h3 id="code-3">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;map&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">4e5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">typedef</span> <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">ll</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">n</span>, <span style="color:#000">a</span>[<span style="color:#000">maxn</span>], <span style="color:#000">k</span>;
</span></span><span style="display:flex;"><span><span style="color:#000">ll</span> <span style="color:#000">ans</span>;
</span></span><span style="display:flex;"><span><span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">map</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span>, <span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">mp</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">ios</span><span style="color:#000">::</span><span style="color:#000">sync_with_stdio</span>(<span style="color:#a90d91">false</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">k</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">l</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">r</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2</span>;        
</span></span><span style="display:flex;"><span>    <span style="color:#000">mp</span>[<span style="color:#000">a</span>[<span style="color:#1c01ce">1</span>]]<span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (; <span style="color:#000">l</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">l</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">while</span> (<span style="color:#000">r</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">mp</span>[<span style="color:#000">a</span>[<span style="color:#000">r</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>]] <span style="color:#000">&lt;</span> <span style="color:#000">k</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">mp</span>[<span style="color:#000">a</span>[<span style="color:#000">r</span>]]<span style="color:#000">++</span>, <span style="color:#000">r</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">mp</span>[<span style="color:#000">a</span>[<span style="color:#000">r</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>]] <span style="color:#000">&gt;=</span> <span style="color:#000">k</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">ans</span> <span style="color:#000">+=</span> <span style="color:#000">n</span> <span style="color:#000">-</span> <span style="color:#000">r</span> <span style="color:#000">+</span> <span style="color:#1c01ce">2</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">mp</span>[<span style="color:#000">a</span>[<span style="color:#000">l</span>]]<span style="color:#000">--</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">ans</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="ehttpscodeforcescontest190probleme"><a href="https://codeforc.es/contest/190/problem/E">E</a></h2>
<h3 id="description-4">Description</h3>
<p>给定一个点数为 $n$ 的完全图，从中删除 $m$ 条边，求得到的图的联通块。$n\leq5\times10^5,m\leq10^6$。</p>
<h3 id="solution-4">Solution</h3>
<p>发现一个事情：相对于一个很大的完全图，删除的边数实在少得可怜。量化一下发现最多只能让约 $\dfrac{m}{n}$​​​ 个点成为一个独立的联通块。</p>
<p>这实在是小的可怜。也就是说大部分点实际上是连通的。</p>
<p>考虑到当能删完的时候，$n\approx1500$，那么我们直接找一个在删除的边中出现次数最小的点，把与它相连的点全都取出来当成一个联通块。</p>
<p>剩下的点爆搜一下连通块就行。我的实现非常暴力而且恶心，使用了 <code>map</code> 复杂度大概是 $O(n+(\dfrac{m}{n})^2\log\dfrac{m}{n})$​​。最大的点跑得很慢。</p>
<p>事实上我不知道我这个复杂度到底对不对，反正是卡常卡过去了&hellip;</p>
<p>看到有用并查集的做法能做到 $O(n+m)$​，值得一学。。。</p>
<h3 id="code-4">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;map&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">5e5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">namespace</span> <span style="color:#000">IO</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">mxsiz</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">20</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">char</span> <span style="color:#000">inbuf</span>[<span style="color:#000">mxsiz</span>], <span style="color:#000">*</span><span style="color:#000">p1</span>, <span style="color:#000">*</span><span style="color:#000">p2</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">char</span> <span style="color:#000">outbuf</span>[<span style="color:#000">mxsiz</span>], <span style="color:#000">*</span><span style="color:#000">op</span> <span style="color:#000">=</span> <span style="color:#000">outbuf</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">struct</span> <span style="color:#3f6e75">endio</span>
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">endio</span>(){};
</span></span><span style="display:flex;"><span>        <span style="color:#000">~</span><span style="color:#000">endio</span>() { <span style="color:#000">fwrite</span>(<span style="color:#000">outbuf</span>, <span style="color:#1c01ce">1</span>, <span style="color:#000">op</span> <span style="color:#000">-</span> <span style="color:#000">outbuf</span>, <span style="color:#000">stdout</span>); }
</span></span><span style="display:flex;"><span>    } <span style="color:#000">useless_var</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">char</span> <span style="color:#000">gc</span>() { <span style="color:#a90d91">return</span> <span style="color:#000">p1</span> <span style="color:#000">==</span> <span style="color:#000">p2</span> <span style="color:#000">&amp;&amp;</span> (<span style="color:#000">p2</span> <span style="color:#000">=</span> (<span style="color:#000">p1</span> <span style="color:#000">=</span> <span style="color:#000">inbuf</span>) <span style="color:#000">+</span> <span style="color:#000">fread</span>(<span style="color:#000">inbuf</span>, <span style="color:#1c01ce">1</span>, <span style="color:#000">mxsiz</span>, <span style="color:#000">stdin</span>), <span style="color:#000">p1</span> <span style="color:#000">==</span> <span style="color:#000">p2</span>) <span style="color:#000">?</span> <span style="color:#000">EOF</span> : <span style="color:#000">*</span><span style="color:#000">p1</span><span style="color:#000">++</span>; }
</span></span><span style="display:flex;"><span><span style="color:#633820">#define isdigit(x) (x &gt;= &#39;0&#39; &amp;&amp; x &lt;= &#39;9&#39;) </span><span style="color:#177500">// 防止忘记打 &lt;cctype&gt; 头文件
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">int</span> <span style="color:#000">read</span>()
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>, <span style="color:#000">f</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">char</span> <span style="color:#000">ch</span> <span style="color:#000">=</span> <span style="color:#000">gc</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (; <span style="color:#000">!</span><span style="color:#000">isdigit</span>(<span style="color:#000">ch</span>); <span style="color:#000">ch</span> <span style="color:#000">=</span> <span style="color:#000">gc</span>())
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">ch</span> <span style="color:#000">==</span> <span style="color:#2300ce">&#39;-&#39;</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">f</span> <span style="color:#000">=</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (; <span style="color:#000">isdigit</span>(<span style="color:#000">ch</span>); <span style="color:#000">ch</span> <span style="color:#000">=</span> <span style="color:#000">gc</span>())
</span></span><span style="display:flex;"><span>            <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">x</span> <span style="color:#000">*</span> <span style="color:#1c01ce">10</span> <span style="color:#000">+</span> <span style="color:#000">ch</span> <span style="color:#000">-</span> <span style="color:#2300ce">&#39;0&#39;</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#000">x</span> <span style="color:#000">*</span> <span style="color:#000">f</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">template</span> <span style="color:#000">&lt;</span><span style="color:#a90d91">typename</span> <span style="color:#000">T</span><span style="color:#000">&gt;</span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">read</span>(<span style="color:#000">T</span> <span style="color:#000">&amp;</span><span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">f</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">char</span> <span style="color:#000">ch</span> <span style="color:#000">=</span> <span style="color:#000">gc</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (; <span style="color:#000">!</span><span style="color:#000">isdigit</span>(<span style="color:#000">ch</span>); <span style="color:#000">ch</span> <span style="color:#000">=</span> <span style="color:#000">gc</span>())
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">ch</span> <span style="color:#000">==</span> <span style="color:#2300ce">&#39;-&#39;</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">f</span> <span style="color:#000">=</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (; <span style="color:#000">isdigit</span>(<span style="color:#000">ch</span>); <span style="color:#000">ch</span> <span style="color:#000">=</span> <span style="color:#000">gc</span>())
</span></span><span style="display:flex;"><span>            <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">x</span> <span style="color:#000">*</span> <span style="color:#1c01ce">10</span> <span style="color:#000">+</span> <span style="color:#000">ch</span> <span style="color:#000">-</span> <span style="color:#2300ce">&#39;0&#39;</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">x</span> <span style="color:#000">*=</span> <span style="color:#000">f</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span><span style="color:#633820">#undef isdigit
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">bool</span> <span style="color:#000">ischar</span>(<span style="color:#a90d91">char</span> <span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#000">x</span> <span style="color:#000">&gt;=</span> <span style="color:#2300ce">&#39;A&#39;</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">x</span> <span style="color:#000">&lt;=</span> <span style="color:#2300ce">&#39;z&#39;</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">char</span> <span style="color:#000">readchar</span>()
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">char</span> <span style="color:#000">ch</span> <span style="color:#000">=</span> <span style="color:#000">gc</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">while</span> (<span style="color:#000">!</span><span style="color:#000">ischar</span>(<span style="color:#000">ch</span>))
</span></span><span style="display:flex;"><span>            <span style="color:#000">ch</span> <span style="color:#000">=</span> <span style="color:#000">gc</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#000">ch</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">push</span>(<span style="color:#a90d91">char</span> <span style="color:#000">ch</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">op</span> <span style="color:#000">-</span> <span style="color:#000">outbuf</span> <span style="color:#000">==</span> <span style="color:#000">mxsiz</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">fwrite</span>(<span style="color:#000">outbuf</span>, <span style="color:#1c01ce">1</span>, <span style="color:#000">mxsiz</span>, <span style="color:#000">stdout</span>), <span style="color:#000">op</span> <span style="color:#000">=</span> <span style="color:#000">outbuf</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">*</span><span style="color:#000">op</span><span style="color:#000">++</span> <span style="color:#000">=</span> <span style="color:#000">ch</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">template</span> <span style="color:#000">&lt;</span><span style="color:#a90d91">typename</span> <span style="color:#000">T</span><span style="color:#000">&gt;</span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">work_wt</span>(<span style="color:#000">T</span> <span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">x</span> <span style="color:#000">&gt;</span> <span style="color:#1c01ce">9</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">work_wt</span>(<span style="color:#000">x</span> <span style="color:#000">/</span> <span style="color:#1c01ce">10</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">push</span>(<span style="color:#000">x</span> <span style="color:#000">%</span> <span style="color:#1c01ce">10</span> <span style="color:#000">+</span> <span style="color:#2300ce">&#39;0&#39;</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">template</span> <span style="color:#000">&lt;</span><span style="color:#a90d91">typename</span> <span style="color:#000">T</span><span style="color:#000">&gt;</span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">write</span>(<span style="color:#000">T</span> <span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">x</span> <span style="color:#000">&lt;</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">-</span><span style="color:#000">x</span>, <span style="color:#000">push</span>(<span style="color:#2300ce">&#39;-&#39;</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">work_wt</span>(<span style="color:#000">x</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">writestr</span>(<span style="color:#a90d91">char</span> <span style="color:#000">*</span><span style="color:#000">s</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">n</span> <span style="color:#000">=</span> <span style="color:#000">strlen</span>(<span style="color:#000">s</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">push</span>(<span style="color:#000">s</span>[<span style="color:#000">i</span>]);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">endln</span>() { <span style="color:#000">push</span>(<span style="color:#000">&#39;\\</span><span style="color:#000">n</span><span style="color:#000">&#39;</span>); }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">space</span>() { <span style="color:#000">push</span>(<span style="color:#2300ce">&#39; &#39;</span>); }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">template</span> <span style="color:#000">&lt;</span><span style="color:#a90d91">typename</span> <span style="color:#000">T</span><span style="color:#000">&gt;</span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">writeln</span>(<span style="color:#000">T</span> <span style="color:#000">x</span>) { <span style="color:#000">write</span>(<span style="color:#000">x</span>), <span style="color:#000">endln</span>(); }
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#a90d91">namespace</span> <span style="color:#000">IO</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">times</span>[<span style="color:#000">maxn</span>], <span style="color:#000">n</span>, <span style="color:#000">mm</span>, <span style="color:#000">tot</span>, <span style="color:#000">used</span>[<span style="color:#000">maxn</span>], <span style="color:#000">arcscc</span>[<span style="color:#000">maxn</span>], <span style="color:#000">m</span>;
</span></span><span style="display:flex;"><span><span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">vector</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">scc</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">vector</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">e</span>[<span style="color:#000">maxn</span>], <span style="color:#000">e2</span>[<span style="color:#000">maxn</span> <span style="color:#000">/</span> <span style="color:#1c01ce">10</span>];
</span></span><span style="display:flex;"><span><span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">map</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span>, <span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">mp</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">vector</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">not_used</span>;
</span></span><span style="display:flex;"><span><span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">vector</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">now</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">p</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">add</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>) { <span style="color:#000">e</span>[<span style="color:#000">x</span>].<span style="color:#000">push_back</span>(<span style="color:#000">y</span>), <span style="color:#000">e</span>[<span style="color:#000">y</span>].<span style="color:#000">push_back</span>(<span style="color:#000">x</span>); }
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">add2</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>) { <span style="color:#000">e2</span>[<span style="color:#000">x</span>].<span style="color:#000">push_back</span>(<span style="color:#000">y</span>), <span style="color:#000">e2</span>[<span style="color:#000">y</span>].<span style="color:#000">push_back</span>(<span style="color:#000">x</span>); }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">dfs</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">q</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">arcscc</span>[<span style="color:#000">not_used</span>[<span style="color:#000">x</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>]] <span style="color:#000">=</span> <span style="color:#000">q</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">x</span> <span style="color:#000">!=</span> <span style="color:#000">m</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">not_used</span>[<span style="color:#000">x</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">!=</span> <span style="color:#000">n</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">scc</span>[<span style="color:#000">q</span>].<span style="color:#000">push_back</span>(<span style="color:#000">not_used</span>[<span style="color:#000">x</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>]);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">v</span> : <span style="color:#000">e2</span>[<span style="color:#000">x</span>])
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">!</span><span style="color:#000">arcscc</span>[<span style="color:#000">not_used</span>[<span style="color:#000">v</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>]])
</span></span><span style="display:flex;"><span>            <span style="color:#000">dfs</span>(<span style="color:#000">v</span>, <span style="color:#000">q</span>);
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">n</span> <span style="color:#000">=</span> <span style="color:#000">read</span>(), <span style="color:#000">mm</span> <span style="color:#000">=</span> <span style="color:#000">read</span>(); <span style="color:#177500">// 这里的 mm 是原题的 m，我因为变量名冲突改了一下
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#000">y</span>, <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">mm</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">read</span>(), <span style="color:#000">y</span> <span style="color:#000">=</span> <span style="color:#000">read</span>(), <span style="color:#000">times</span>[<span style="color:#000">x</span>]<span style="color:#000">++</span>, <span style="color:#000">times</span>[<span style="color:#000">y</span>]<span style="color:#000">++</span>, <span style="color:#000">add</span>(<span style="color:#000">x</span>, <span style="color:#000">y</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">mi</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1e9</span>, <span style="color:#000">pos</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">times</span>[<span style="color:#000">i</span>] <span style="color:#000">&lt;</span> <span style="color:#000">mi</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">mi</span> <span style="color:#000">=</span> <span style="color:#000">times</span>[<span style="color:#000">i</span>], <span style="color:#000">pos</span> <span style="color:#000">=</span> <span style="color:#000">i</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">scc</span>[<span style="color:#000">++</span><span style="color:#000">tot</span>].<span style="color:#000">push_back</span>(<span style="color:#000">pos</span>), <span style="color:#000">used</span>[<span style="color:#000">pos</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">arcscc</span>[<span style="color:#000">pos</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">v</span> : <span style="color:#000">e</span>[<span style="color:#000">pos</span>])
</span></span><span style="display:flex;"><span>        <span style="color:#000">used</span>[<span style="color:#000">v</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">!</span><span style="color:#000">used</span>[<span style="color:#000">i</span>] <span style="color:#000">&amp;&amp;</span> <span style="color:#000">i</span> <span style="color:#000">!=</span> <span style="color:#000">pos</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">scc</span>[<span style="color:#000">tot</span>].<span style="color:#000">push_back</span>(<span style="color:#000">i</span>), <span style="color:#000">arcscc</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span> <span style="color:#a90d91">if</span> (<span style="color:#000">used</span>[<span style="color:#000">i</span>])
</span></span><span style="display:flex;"><span>            <span style="color:#000">not_used</span>.<span style="color:#000">push_back</span>(<span style="color:#000">i</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#177500">// 以上是找到出现次数最小的点并将与他相连的点删掉
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> : <span style="color:#000">not_used</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">cnt</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">v</span> : <span style="color:#000">e</span>[<span style="color:#000">i</span>])
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">arcscc</span>[<span style="color:#000">v</span>] <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">mp</span>[<span style="color:#000">i</span>][<span style="color:#000">v</span>] <span style="color:#000">=</span> <span style="color:#000">mp</span>[<span style="color:#000">v</span>][<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>                <span style="color:#000">cnt</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">cnt</span> <span style="color:#000">==</span> <span style="color:#000">scc</span>[<span style="color:#1c01ce">1</span>].<span style="color:#000">size</span>())
</span></span><span style="display:flex;"><span>            <span style="color:#000">mp</span>[<span style="color:#000">i</span>][<span style="color:#000">n</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">=</span> <span style="color:#000">mp</span>[<span style="color:#000">n</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>][<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">m</span> <span style="color:#000">=</span> <span style="color:#000">not_used</span>.<span style="color:#000">size</span>(); <span style="color:#177500">// 删掉之后原图剩余点数
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>    <span style="color:#000">not_used</span>.<span style="color:#000">push_back</span>(<span style="color:#000">n</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>); <span style="color:#177500">// 除了剩余的点，刚刚删除的点也作为一个联通块加进去
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">not_used</span>.<span style="color:#000">size</span>(); <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">now</span>.<span style="color:#000">push_back</span>(<span style="color:#000">i</span>), <span style="color:#000">p</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">not_used</span>[<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">m</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">!</span><span style="color:#000">mp</span>[<span style="color:#000">p</span>[<span style="color:#000">i</span>]][<span style="color:#000">p</span>[<span style="color:#000">j</span>]])
</span></span><span style="display:flex;"><span>                <span style="color:#000">add2</span>(<span style="color:#000">i</span>, <span style="color:#000">j</span>); <span style="color:#177500">// 重新建图
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>    <span style="color:#000">dfs</span>(<span style="color:#000">m</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">!</span><span style="color:#000">arcscc</span>[<span style="color:#000">not_used</span>[<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>]])
</span></span><span style="display:flex;"><span>            <span style="color:#000">dfs</span>(<span style="color:#000">i</span>, <span style="color:#000">++</span><span style="color:#000">tot</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">writeln</span>(<span style="color:#000">tot</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">tot</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">write</span>(<span style="color:#000">scc</span>[<span style="color:#000">i</span>].<span style="color:#000">size</span>()), <span style="color:#000">space</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> : <span style="color:#000">scc</span>[<span style="color:#000">i</span>])
</span></span><span style="display:flex;"><span>            <span style="color:#000">write</span>(<span style="color:#000">j</span>), <span style="color:#000">space</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#000">endln</span>();
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div>]]></content:encoded>
    </item>
    
    <item>
      <title>KMP 的一个不常见做法</title>
      <link>https://luoyisu.github.io/posts/kmp-explore/</link>
      <pubDate>Sun, 05 Dec 2021 20:36:55 +0000</pubDate>
      
      <guid>https://luoyisu.github.io/posts/kmp-explore/</guid>
      <description>&lt;p&gt;看到 &lt;strong&gt;OI Wiki&lt;/strong&gt; 上有关 KMP 的一个不算惊为天人但也有点意思的做法，水一水。&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>看到 <strong>OI Wiki</strong> 上有关 KMP 的一个不算惊为天人但也有点意思的做法，水一水。</p>
<p>众所周知 KMP 是为了解决字符串匹配问题的，有一个长度为 $n$ 的模式串 $t$ 和一个文本串 $s$。</p>
<p>我们构造一个字符串 $t+\#+s$​​​​，其中 $\#$​​​​ 是既不在 $t$​​​​ 中也不在 $s$​​​​ 中的一个字符。</p>
<p>求这个字符串的前缀数组（即 $nxt$ 函数），那么在该字符串中 $nxt[i]=n$​ 的位置就是一个匹配。</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#a90d91">char</span> <span style="color:#000">a</span>[<span style="color:#000">maxn</span>]; <span style="color:#177500">// 字符串从 1 开始
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span><span style="color:#a90d91">char</span> <span style="color:#000">b</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">n</span>, <span style="color:#000">m</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">nxt</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">solve</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2</span>, <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">+</span> <span style="color:#000">m</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">while</span> (<span style="color:#000">j</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>] <span style="color:#000">!=</span> <span style="color:#000">a</span>[<span style="color:#000">j</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>])
</span></span><span style="display:flex;"><span>            <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#000">nxt</span>[<span style="color:#000">j</span>];
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">a</span>[<span style="color:#000">i</span>] <span style="color:#000">==</span> <span style="color:#000">a</span>[<span style="color:#000">j</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>])
</span></span><span style="display:flex;"><span>            <span style="color:#000">j</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">nxt</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">j</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#000">n</span> <span style="color:#000">+</span> <span style="color:#1c01ce">2</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">+</span> <span style="color:#000">m</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">nxt</span>[<span style="color:#000">i</span>] <span style="color:#000">==</span> <span style="color:#000">n</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">2</span> <span style="color:#000">*</span> <span style="color:#000">n</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div>]]></content:encoded>
    </item>
    
    <item>
      <title>YbtOJ 简要题解合集</title>
      <link>https://luoyisu.github.io/posts/ybtoj-simple-solutions/</link>
      <pubDate>Wed, 24 Nov 2021 08:22:14 +0000</pubDate>
      
      <guid>https://luoyisu.github.io/posts/ybtoj-simple-solutions/</guid>
      <description>&lt;p&gt;懒得写那么多题解，于是就有了这个文章。&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>懒得写那么多题解，于是就有了这个文章。</p>
<h2 id="难度评级">难度评级</h2>
<p>D：很简单，也没怎么调。很可能不会出现在这个文章里。</p>
<p>C：会做，但是出了一些不是特别傻的 bug。</p>
<p>B：勉强会做 / 写代码是遇到了问题。</p>
<p>A：不会，看了题解很容易就弄懂了。</p>
<p>S：完全不会，反复看题解和代码才懂。</p>
<p>可能用加减号来更细化一些，+表示难，-表示简单。</p>
<h2 id="chapter-1-递推">Chapter 1 递推</h2>
<h3 id="e-练习1-划分数列">E 练习1 划分数列</h3>
<p>给定一个长度为 $n$ 的数列，要求划分最少的段数，使得每一段要么单调不降，要么单调不升。</p>
<p>难度：D+</p>
<p>有点贪心的感觉，可以发现如果能接上肯定比不接好，和每一段越长越好。</p>
<p>预处理 $up_i,down_i$​ 表示以 $i$​ 为结尾的最长不降/不升段的开始位置，然后答案 $f_i=\min(f_{up_i-1},f_{down_i-1})+1$​。</p>
<h3 id="g-练习2-无限序列">G 练习2 无限序列</h3>
<p>我们按以下方式产生序列：</p>
<ol>
<li>开始时序列是： <code>1</code> ；</li>
<li>每一次变化把序列中的 <code>1</code> 变成 <code>10</code> ，<code>0</code> 变成 <code>1</code>。</li>
</ol>
<p>经过无限次变化，我们得到序列 <code>1011010110110101101...</code>。</p>
<p>总共有 $Q$ 个询问（ $Q\leq5000$） ，要回答在区间 $[a,b]$​ 间有多少个<code>1</code>（$1\leq a\leq b\leq2^{63}$​）。</p>
<p>难度：D+</p>
<p>手玩发现第 $i$ 次变化后得到的序列是 $i-1$ 次变化后的序列 + $i-2$ 次变化后的序列，于是这就是个斐波那契。</p>
<p>对于每个询问，转换成前缀和，然后不停二分即可。要注意二分时要找到第一个不大于它的，所以用 <code>std::lower_bound()</code> 时要注意。</p>
<p>{% spoiler Code %}</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cctype&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">100</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>, <span style="color:#000">n</span> <span style="color:#000">=</span> <span style="color:#1c01ce">100</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">typedef</span> <span style="color:#a90d91">unsigned</span> <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">ll</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#000">ll</span> <span style="color:#000">read</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">ll</span> <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">char</span> <span style="color:#000">ch</span> <span style="color:#000">=</span> <span style="color:#000">getchar</span>();
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> (<span style="color:#000">!</span><span style="color:#000">isdigit</span>(<span style="color:#000">ch</span>))
</span></span><span style="display:flex;"><span>        <span style="color:#000">ch</span> <span style="color:#000">=</span> <span style="color:#000">getchar</span>();
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> (<span style="color:#000">isdigit</span>(<span style="color:#000">ch</span>))
</span></span><span style="display:flex;"><span>        <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">x</span> <span style="color:#000">*</span> <span style="color:#1c01ce">10</span> <span style="color:#000">+</span> <span style="color:#000">ch</span> <span style="color:#000">-</span> <span style="color:#2300ce">&#39;0&#39;</span>, <span style="color:#000">ch</span> <span style="color:#000">=</span> <span style="color:#000">getchar</span>();
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">write</span>(<span style="color:#000">ll</span> <span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">x</span> <span style="color:#000">&gt;</span> <span style="color:#1c01ce">9</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">write</span>(<span style="color:#000">x</span> <span style="color:#000">/</span> <span style="color:#1c01ce">10</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">putchar</span>(<span style="color:#000">x</span> <span style="color:#000">%</span> <span style="color:#1c01ce">10</span> <span style="color:#000">+</span> <span style="color:#2300ce">&#39;0&#39;</span>);
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000">ll</span> <span style="color:#000">f</span>[<span style="color:#000">maxn</span>], <span style="color:#000">ans</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000">ll</span> <span style="color:#000">solve</span>(<span style="color:#000">ll</span> <span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">x</span> <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">ll</span> <span style="color:#000">res</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> (<span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">pos</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">lower_bound</span>(<span style="color:#000">f</span>, <span style="color:#000">f</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">+</span> <span style="color:#000">n</span>, <span style="color:#000">x</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>) <span style="color:#000">-</span> <span style="color:#000">f</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">pos</span><span style="color:#000">--</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">pos</span> <span style="color:#000">&lt;</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">return</span> <span style="color:#000">res</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">res</span> <span style="color:#000">+=</span> <span style="color:#000">ans</span>[<span style="color:#000">pos</span>];
</span></span><span style="display:flex;"><span>        <span style="color:#000">x</span> <span style="color:#000">-=</span> <span style="color:#000">f</span>[<span style="color:#000">pos</span>];
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#000">res</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">f</span>[<span style="color:#1c01ce">0</span>] <span style="color:#000">=</span> <span style="color:#000">ans</span>[<span style="color:#1c01ce">0</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">f</span>[<span style="color:#1c01ce">1</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">2</span>, <span style="color:#000">ans</span>[<span style="color:#1c01ce">1</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">f</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">f</span>[<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">+</span> <span style="color:#000">f</span>[<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">2</span>], <span style="color:#000">ans</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">f</span>[<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">q</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">scanf</span>(<span style="color:#c41a16">&#34;%d&#34;</span>, <span style="color:#000">&amp;</span><span style="color:#000">q</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> (<span style="color:#000">q</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">ll</span> <span style="color:#000">x</span>, <span style="color:#000">y</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">read</span>(), <span style="color:#000">y</span> <span style="color:#000">=</span> <span style="color:#000">read</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#000">write</span>(<span style="color:#000">solve</span>(<span style="color:#000">y</span>) <span style="color:#000">-</span> <span style="color:#000">solve</span>(<span style="color:#000">x</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>));
</span></span><span style="display:flex;"><span>        <span style="color:#000">puts</span>(<span style="color:#c41a16">&#34;&#34;</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><p>{% endspoiler %}</p>
<h2 id="chapter-2-二分">Chapter 2 二分</h2>
<h3 id="f-练习3-攻击法坛">F 练习3 攻击法坛</h3>
<p><a href="https://www.ybtoj.com.cn/contest/131/problem/6">题面</a></p>
<p>难度：C</p>
<p>二分 $L$，然后用 DP 来 check，$f(i,j)=\max(nxt1_{f(i-1,j)+1},nxt2_{f(i,j-1)+1})$。其中 $f(i,j)$ 表示用 $i$ 个第一种法杖和 $j$​ 个第二种法杖能覆盖的最远的法坛，$nxt1_i,nxt2_i$​ 分别表示在第 $i$ 个祭坛处用第一种/第二种法杖能覆盖的最远的法坛。特别地，$nxt1_{n+1}=nxt2_{n+1}=n$。注意使用次数限制需要和 $n$​ 取一个最小值。</p>
<h2 id="chapter-19-倍增">Chapter 19 倍增</h2>
<h3 id="h-练习3-图上查询">H 练习3 图上查询</h3>
<p>一个 $n$ 个点 $n$ 条边的 <strong>有向图</strong>，对每个点求出从它出发经过 $k$ 条边，这些边的权值和以及这些边的权值最小值。</p>
<p>难度：D+</p>
<p>一开始没看到有向图，就纳闷了，这玩意基环树？？？然后越想越不对劲，感觉是有向图这个题就不对了啊。</p>
<p>看了题解发现是有向图。。。。。。。然后这个有向图每个点的出度都是 $1$，那么倍增一下就行。</p>
<p>然后写着写着又忘记这个有向图有环了，可以无限走下去，于是挂了好几遍。。。</p>
<p>确实要注意一下。</p>
<h2 id="chapter-22-数位dp">Chapter 22 数位DP</h2>
<h3 id="c-例题3-数字计数-zjoi2010">C 例题3 数字计数 [ZJOI2010]</h3>
<p>给定两个正整数 $l$ 和 $r$，求在 $[l,r]$ 中的所有整数中，每个数码各出现了多少次。</p>
<p>难度：B+</p>
<p>第一道自己做的数位DP&hellip;</p>
<p>虽说是数位DP，但我似乎并不是正统数位DP，更像是一种推式子的递推。</p>
<p>做每道推式子的计数都很费劲啊。。。实际上这题并不难。</p>
<p>设 $f(i,1/0)$​ 表示从低到高第 $i$​​ 位，是/否紧贴上界，当前数码出现总次数。$cnt(i,1/0)$​ 表示由低到高 $i$​​ 位，是/否紧贴上界，总共有几个数。$p_i$ 表示从低到高第 $i$ 位数。</p>
<p>对于数码 $1\sim9$ 显然有 $cnt(i,0)=cnt(i+1,0)\times10+p_i$，$cnt(i,1)=cnt(i+1,1)$，$f(i,1)=f(i+1,1)+[p_i=x]$​。其中 $x$ 为当前要算的数码。</p>
<p>考虑 $f(i,0)$​，先给出来式子：$f(i,0)=f(i+1,0)\times10+cnt(i+1,0)+f(i+1,1)\times p_i+[p_i&gt;x]$。</p>
<p>解释一下：上一位所有含当前数码的数在这一位可以随便填一个数，所以乘一个 $10$；之前所有数后面都可以填一个当前数码，所以要加上 $cnt(i+1,0)$；之前紧贴上界的数可以填一个小于 $p_i$ 的数，如果当前数码比 $p_i$ 小，那么在刚刚填的时候还会填进去一个当前数码，要算进去。</p>
<p>{% spoiler Code %}</p>
<p>在该开 <code>long long</code> 的地方记得开。</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">20</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">typedef</span> <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">ll</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000">ll</span> <span style="color:#000">f</span>[<span style="color:#000">maxn</span>][<span style="color:#1c01ce">2</span>], <span style="color:#000">cnt</span>[<span style="color:#000">maxn</span>][<span style="color:#1c01ce">2</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">p</span>[<span style="color:#000">maxn</span>], <span style="color:#000">len</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000">ll</span> <span style="color:#000">dp</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">cnt</span>[<span style="color:#000">len</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>][<span style="color:#1c01ce">1</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#000">len</span>; <span style="color:#000">i</span> <span style="color:#000">&gt;=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">cnt</span>[<span style="color:#000">i</span>][<span style="color:#1c01ce">0</span>] <span style="color:#000">=</span> <span style="color:#000">cnt</span>[<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>][<span style="color:#1c01ce">0</span>] <span style="color:#000">*</span> <span style="color:#1c01ce">10</span> <span style="color:#000">+</span> <span style="color:#000">p</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>        <span style="color:#000">cnt</span>[<span style="color:#000">i</span>][<span style="color:#1c01ce">1</span>] <span style="color:#000">=</span> <span style="color:#000">cnt</span>[<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>][<span style="color:#1c01ce">1</span>];
</span></span><span style="display:flex;"><span>        <span style="color:#000">f</span>[<span style="color:#000">i</span>][<span style="color:#1c01ce">1</span>] <span style="color:#000">=</span> <span style="color:#000">f</span>[<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>][<span style="color:#1c01ce">1</span>] <span style="color:#000">+</span> (<span style="color:#000">p</span>[<span style="color:#000">i</span>] <span style="color:#000">==</span> <span style="color:#000">x</span> <span style="color:#000">?</span> <span style="color:#1c01ce">1</span> <span style="color:#000">:</span> <span style="color:#1c01ce">0</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">f</span>[<span style="color:#000">i</span>][<span style="color:#1c01ce">0</span>] <span style="color:#000">=</span> <span style="color:#000">f</span>[<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>][<span style="color:#1c01ce">0</span>] <span style="color:#000">*</span> <span style="color:#1c01ce">10</span> <span style="color:#000">+</span> <span style="color:#000">cnt</span>[<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>][<span style="color:#1c01ce">0</span>] <span style="color:#000">+</span> <span style="color:#000">f</span>[<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>][<span style="color:#1c01ce">1</span>] <span style="color:#000">*</span> <span style="color:#000">p</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">p</span>[<span style="color:#000">i</span>] <span style="color:#000">&gt;</span> <span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">f</span>[<span style="color:#000">i</span>][<span style="color:#1c01ce">0</span>]<span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">ll</span> <span style="color:#000">tmp</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">x</span> <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">len</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">tmp</span> <span style="color:#000">=</span> <span style="color:#000">tmp</span> <span style="color:#000">*</span> <span style="color:#1c01ce">10</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#000">f</span>[<span style="color:#1c01ce">1</span>][<span style="color:#1c01ce">0</span>] <span style="color:#000">+</span> <span style="color:#000">f</span>[<span style="color:#1c01ce">1</span>][<span style="color:#1c01ce">1</span>] <span style="color:#000">-</span> <span style="color:#000">tmp</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000">ll</span> <span style="color:#000">solve</span>(<span style="color:#000">ll</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">i</span>) <span style="color:#177500">// 此处没开 long long，导致 WA 了一遍。。。
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">len</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> (<span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">p</span>[<span style="color:#000">++</span><span style="color:#000">len</span>] <span style="color:#000">=</span> <span style="color:#000">x</span> <span style="color:#000">%</span> <span style="color:#1c01ce">10</span>, <span style="color:#000">x</span> <span style="color:#000">/=</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">memset</span>(<span style="color:#000">cnt</span>, <span style="color:#1c01ce">0</span>, <span style="color:#a90d91">sizeof</span>(<span style="color:#000">cnt</span>)), <span style="color:#000">memset</span>(<span style="color:#000">f</span>, <span style="color:#1c01ce">0</span>, <span style="color:#a90d91">sizeof</span>(<span style="color:#000">f</span>));
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#000">dp</span>(<span style="color:#000">i</span>);
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">ll</span> <span style="color:#000">a</span>, <span style="color:#000">b</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">a</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">b</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#1c01ce">9</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">solve</span>(<span style="color:#000">b</span>, <span style="color:#000">i</span>) <span style="color:#000">-</span> <span style="color:#000">solve</span>(<span style="color:#000">a</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">i</span>) <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><p>{% endspoiler %}</p>]]></content:encoded>
    </item>
    
    <item>
      <title>模拟退火学习笔记</title>
      <link>https://luoyisu.github.io/posts/simulated-annealing/</link>
      <pubDate>Mon, 22 Nov 2021 22:14:42 +0000</pubDate>
      
      <guid>https://luoyisu.github.io/posts/simulated-annealing/</guid>
      <description>&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;为什么我去学了模拟退火呢？&lt;/p&gt;
&lt;p&gt;因为 CSP2021T1 和 NOIP2021T3 都能用模拟退火得到很高的分数，但是我却只打了最简单的暴力。失去了很多分数。&lt;/p&gt;
&lt;p&gt;本着补全科技树的想法，我稍微学了一下模拟退火。&lt;/p&gt;
&lt;p&gt;下文参考了 &lt;a href=&#34;https://oi-wiki.org/misc/simulated-annealing/&#34;&gt;&lt;strong&gt;OI Wiki&lt;/strong&gt;&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;注：未完工。&lt;/p&gt;</description>
      <content:encoded><![CDATA[<h2 id="前言">前言</h2>
<p>为什么我去学了模拟退火呢？</p>
<p>因为 CSP2021T1 和 NOIP2021T3 都能用模拟退火得到很高的分数，但是我却只打了最简单的暴力。失去了很多分数。</p>
<p>本着补全科技树的想法，我稍微学了一下模拟退火。</p>
<p>下文参考了 <a href="https://oi-wiki.org/misc/simulated-annealing/"><strong>OI Wiki</strong></a>。</p>
<p>注：未完工。</p>
<h2 id="前置知识随机数">前置知识——随机数</h2>
<p>众所周知计算机的随机数是伪随机数。</p>
<p>那么我们首先需要让他变得随机一些。</p>
<p>下面依次介绍几个 C++ 库中生成随机数的方法。</p>
<p>（因为不是非常常用，我怕我忘记，所以有这部分内容。）</p>
<h3 id="rand">rand()</h3>
<p>需要 <code>&lt;cstdlib&gt;</code> 库。</p>
<p>用法：直接调用 <code>rand()</code> 返回一个 $[0,\text{RAND\_MAX}]$​​ 的随机数，Linux 下这个上界是 $2^{31}-1$​​​​。</p>
<p>随机种子：用 <code>srand()</code> 修改，否则使用默认种子。</p>
<p>优点：好记，常见。</p>
<p>缺点：慢，不是非常随机。</p>
<h3 id="stdmt19937">std::mt19937</h3>
<p>需要 <code>&lt;random&gt;</code> 库。</p>
<p>用法：这是个类，可以用 <code>std::mt19937 myrand()</code> 来声明一个。重载了括号运算符，实际使用时和 <code>rand()</code> 一样，随机数范围同 <code>unsigned int</code> 范围。</p>
<p>优点：快，更强一些。</p>
<p>缺点：不太好记。</p>
<p>还有个 <code>std::mt19937_64</code>，范围同 <code>unsigned long long</code>。</p>
<h2 id="简介">简介</h2>
<p>假设有一个很莫名其妙的函数，要求它的极值，模拟退火算法可以帮助我们找到答案。（但不一定是函数）</p>
<p>首先，假设我们有一个局部最优解。</p>
<p>假设我们随机到了另一个状态，它更优，我们肯定更新最优解。</p>
<p>如果它更劣呢？我们不能把它忽略，因为这样就丧失了找到整体最优解的机会；但也不能直接就跳过去，这样局部最优解就找不到了。</p>
<p>那么我们就以一定概率去接受这个新状态。</p>
<p>定义当前温度 $T$，有一个已知状态，通过已知状态随机得到一个新状态，两者差为 $\Delta E$（$\Delta E \geq0$），那么发生状态转移（更新答案）的概率为：
$$
P(\Delta E)= \begin{cases} 1&amp;\text{新状态更优}\\ e^\frac{-\Delta E}{T}&amp;\text{新状态更劣} \end{cases}
$$
解释一下：显然我们需要让差越大转移的概率越低，而且温度越低转移到劣解的概率越低。</p>
<h2 id="实现">实现</h2>
<p>有三个参数 $T_0,d,T_{end}$。分别为初始温度（一个较大的数），降温系数（接近 $1$ 的数），终止温度（接近 $0$ 的正数）。</p>
<p>首先让当前温度 $T=T_0$，然后尝试转移一次，接着让 $T\leftarrow T\times d$，直到 $T&lt;T_{end}$。得到最优解。</p>
<p>在找到最优解之后可以再用初始很低的温度再稍微跑一跑模拟退火，可能会找到更优解。</p>
<p>关于这三个参数，需要自己根据样例调整。（或者和暴力对拍）</p>
<h3 id="小技巧卡时">小技巧——卡时</h3>
<p><code>clock()</code> 函数返回程序运行时间，于是可以这么写：</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#a90d91">while</span> ((<span style="color:#a90d91">double</span>)<span style="color:#000">clock</span>() <span style="color:#000">/</span> <span style="color:#000">CLOCKS_PER_SEC</span> <span style="color:#000">&lt;</span> <span style="color:#1c01ce">0.95</span>)
</span></span><span style="display:flex;"><span>    <span style="color:#000">SA</span>();
</span></span></code></pre></div><p>后面的 0.95 是自定义的一个数，要小于时限。</p>
<p>这样可以多执行几遍模拟退火，增加准确性。</p>
<h3 id="noip2021-方差">NOIP2021 方差</h3>
<p>题面不说了。</p>
<p>这个题正解不是模拟退火，不过可以用模拟退火得到 $60+$​ 分，而且非常简单，超值。</p>
<p>需要注意的是不能每次对差分数组随机一个排列，这样没意义，不满足模拟退火的下一个状态要从这一个状态转移来的要求。</p>
<p>所以直接随机选一个执行操作即可。</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cmath&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdlib&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;ctime&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;random&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1e4</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">typedef</span> <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">ll</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">a</span>[<span style="color:#000">maxn</span>], <span style="color:#000">n</span>, <span style="color:#000">b</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#000">ll</span> <span style="color:#000">sumpow</span>, <span style="color:#000">sum</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000">ll</span> <span style="color:#000">calc</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">sumpow</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>, <span style="color:#000">sum</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">sumpow</span> <span style="color:#000">+=</span> <span style="color:#000">b</span>[<span style="color:#000">i</span>] <span style="color:#000">*</span> <span style="color:#000">b</span>[<span style="color:#000">i</span>], <span style="color:#000">sum</span> <span style="color:#000">+=</span> <span style="color:#000">b</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#000">sumpow</span> <span style="color:#000">*</span> <span style="color:#000">n</span> <span style="color:#000">-</span> <span style="color:#000">sum</span> <span style="color:#000">*</span> <span style="color:#000">sum</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">double</span> <span style="color:#000">rnd01</span>() { <span style="color:#a90d91">return</span> (<span style="color:#a90d91">double</span>)<span style="color:#000">rand</span>() <span style="color:#000">/</span> <span style="color:#000">RAND_MAX</span>; }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">modify</span>(<span style="color:#a90d91">int</span> <span style="color:#000">pos</span>) { <span style="color:#000">b</span>[<span style="color:#000">pos</span>] <span style="color:#000">=</span> <span style="color:#000">b</span>[<span style="color:#000">pos</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">+</span> <span style="color:#000">b</span>[<span style="color:#000">pos</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">-</span> <span style="color:#000">b</span>[<span style="color:#000">pos</span>]; }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000">ll</span> <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1e18</span>;
</span></span><span style="display:flex;"><span><span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">mt19937</span> <span style="color:#000">rng</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">SA</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">double</span> <span style="color:#000">T0</span> <span style="color:#000">=</span> <span style="color:#1c01ce">100000</span>, <span style="color:#000">d</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0.99997</span>, <span style="color:#000">Tend</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0.00001</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">b</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#000">ll</span> <span style="color:#000">nowans</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1e18</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> (<span style="color:#000">T0</span> <span style="color:#000">&gt;</span> <span style="color:#000">Tend</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">pos</span> <span style="color:#000">=</span> <span style="color:#000">rng</span>() <span style="color:#000">%</span> (<span style="color:#000">n</span> <span style="color:#000">-</span> <span style="color:#1c01ce">2</span>) <span style="color:#000">+</span> <span style="color:#1c01ce">2</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">modify</span>(<span style="color:#000">pos</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">ll</span> <span style="color:#000">res</span> <span style="color:#000">=</span> <span style="color:#000">calc</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">min</span>(<span style="color:#000">ans</span>, <span style="color:#000">res</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">res</span> <span style="color:#000">&lt;=</span> <span style="color:#000">nowans</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">nowans</span> <span style="color:#000">=</span> <span style="color:#000">res</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span> <span style="color:#a90d91">if</span> (<span style="color:#000">exp</span>((<span style="color:#a90d91">double</span>)(<span style="color:#000">nowans</span> <span style="color:#000">-</span> <span style="color:#000">res</span>) <span style="color:#000">/</span> <span style="color:#000">T0</span>) <span style="color:#000">&gt;</span> <span style="color:#000">rnd01</span>())
</span></span><span style="display:flex;"><span>            <span style="color:#000">nowans</span> <span style="color:#000">=</span> <span style="color:#000">res</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>            <span style="color:#000">modify</span>(<span style="color:#000">pos</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">T0</span> <span style="color:#000">*=</span> <span style="color:#000">d</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">scanf</span>(<span style="color:#c41a16">&#34;%d&#34;</span>, <span style="color:#000">&amp;</span><span style="color:#000">n</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">rng</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">mt19937</span>(<span style="color:#000">time</span>(<span style="color:#1c01ce">0</span>));
</span></span><span style="display:flex;"><span>    <span style="color:#000">srand</span>(<span style="color:#000">time</span>(<span style="color:#1c01ce">0</span>));
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">scanf</span>(<span style="color:#c41a16">&#34;%d&#34;</span>, <span style="color:#000">&amp;</span><span style="color:#000">a</span>[<span style="color:#000">i</span>]);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> ((<span style="color:#a90d91">double</span>)<span style="color:#000">clock</span>() <span style="color:#000">/</span> <span style="color:#000">CLOCKS_PER_SEC</span> <span style="color:#000">&lt;</span> <span style="color:#1c01ce">0.85</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">SA</span>();
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">ans</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div>]]></content:encoded>
    </item>
    
    <item>
      <title>NOIP2021 游记&amp;总结</title>
      <link>https://luoyisu.github.io/posts/noip2021/</link>
      <pubDate>Sat, 20 Nov 2021 15:22:38 +0000</pubDate>
      
      <guid>https://luoyisu.github.io/posts/noip2021/</guid>
      <description>&lt;h1 id=&#34;noip2021&#34;&gt;NOIP2021&lt;/h1&gt;
&lt;p&gt;凄凉。&lt;/p&gt;</description>
      <content:encoded><![CDATA[<h1 id="noip2021">NOIP2021</h1>
<p>凄凉。</p>
<h2 id="day--1">Day -1</h2>
<p>没干啥，写了几个板子，本来想写个平衡树和扫描线的，但是懒得写了。。</p>
<h2 id="day-1">Day 1</h2>
<p>早上有点冷，还有点困。。。也许是因为最近几天都很疲惫。</p>
<p>考试前愉快假人，很欢乐。</p>
<p>进考场之后打了打头文件，写了个快读，建了文件夹和源代码。</p>
<p>然后就开始了。</p>
<p>一个个看。</p>
<p>T1 似乎就是个魔改线性筛，稍微想了想就开始写了，然后因为没有完全想清楚折腾了一会才搞好。</p>
<p>开考将近一个小时的时候过了所有样例，看了一下极限情况，没问题，溜了。</p>
<p>开局不错。</p>
<p>T2 是个计数，DP，感觉还得套一下什么玩意，不想思考了，溜了溜了。。。</p>
<p>T3 似乎可做，稍微思考了一下发现不管怎么变，差值就是那些，操作本质就是交换差值。但是接下来就不会了，于是把这个性质应用一下能得 $20$​ 分。</p>
<p>T4 暴力是小模拟，然后有一些性质可以写。又思考了一下感觉有点线段树合并的感觉，又感觉可以用时光倒流+并查集水几个性质。</p>
<p>先乱写了个 T2 的暴力，$0\sim20$ 分，又写了个 T3 暴力，$20$ 分。</p>
<p>然后全力肝 T4，写了个 $O(nmq)$ 的暴力，然后发现跑的挺快，但是有样例过不去。。。</p>
<p>调了半天无果，最后几分钟又写了一个性质。。。</p>
<p>T4 不知道能得多少分。。。$0\sim36$，看数据强度了。</p>
<p>按照平均来估，预计 $100+10+20+12=142$，实际就不知道了。。。</p>
<h2 id="总结">总结</h2>
<p>其实潜意识里也知道 T2 不是特别难，但是我就是不想思考，这种对计数深深的恐惧我不知道是怎么回事，DP 必须要掌握啊，各种 DP 都是。。其实 T2 搞个和状压一样的东西能很轻松水 $50$​ 分。而且真的很简单，我可能就是不想思考了。。。</p>
<p>T3 不会没办法，T4 没调出来是个巨大的失误。。。其实 T4 认真写暴力能拿到很多很多分。。。至少就有 $44$​，但是我挂的就很莫名其妙。。。</p>
<p>T4 写挂肯定有运气原因（因为真不难），但当时确实就是莫名写挂了，还是太菜了。。。</p>
<p>后来发现当时真是有点上头，T2 暴力码量肯定不大，结果去莽码量巨大的 T4 了。。。有勇无谋了属于是。</p>
<p>其实那个 DP 真的很简单，没想出来是不是因为过于害怕 DP 了。。。</p>
<h2 id="后话">后话</h2>
<p>实在没忍住，到民间数据测了一下 T1，没挂，那就没事了。</p>
<p>我放心了，安心等官方成绩。</p>]]></content:encoded>
    </item>
    
    <item>
      <title>洛谷P3605 [USACO17JAN]Promotion Counting P</title>
      <link>https://luoyisu.github.io/posts/luogu3605/</link>
      <pubDate>Thu, 18 Nov 2021 09:19:15 +0000</pubDate>
      
      <guid>https://luoyisu.github.io/posts/luogu3605/</guid>
      <description>&lt;h2 id=&#34;description&#34;&gt;Description&lt;/h2&gt;
&lt;p&gt;给定一棵树，每个点有一个权值，求每个点所有后代中权值比它大的点的个数。&lt;/p&gt;
&lt;p&gt;$n\leq10^5$&lt;/p&gt;</description>
      <content:encoded><![CDATA[<h2 id="description">Description</h2>
<p>给定一棵树，每个点有一个权值，求每个点所有后代中权值比它大的点的个数。</p>
<p>$n\leq10^5$</p>
<p>不怎么难，就是看对数据结构的掌握程度。。</p>
<h2 id="算法一">算法一</h2>
<p>对每个点维护一个权值线段树，从下往上合并，每次合并该结点所有儿子即可。$O(n\log n)$​​，时间空间常数都很大。</p>
<h3 id="code">Code</h3>
<p>我觉得指针比数组清晰一些，虽然也伴随着一点小风险（访问空指针）。</p>
<p>代码还是很清晰的，不难写。</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1e5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">struct</span> <span style="color:#3f6e75">Node</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">sum</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">Node</span> <span style="color:#000">*</span><span style="color:#000">ls</span>, <span style="color:#000">*</span><span style="color:#000">rs</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">Node</span>() <span style="color:#000">:</span> <span style="color:#000">sum</span>(<span style="color:#1c01ce">0</span>), <span style="color:#000">ls</span>(<span style="color:#a90d91">nullptr</span>), <span style="color:#000">rs</span>(<span style="color:#a90d91">nullptr</span>) {}
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">void</span> <span style="color:#000">push_up</span>()
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">sum</span> <span style="color:#000">=</span> (<span style="color:#000">ls</span> <span style="color:#000">==</span> <span style="color:#a90d91">nullptr</span> <span style="color:#000">?</span> <span style="color:#1c01ce">0</span> <span style="color:#000">:</span> <span style="color:#000">ls</span><span style="color:#000">-&gt;</span><span style="color:#000">sum</span>) <span style="color:#000">+</span> (<span style="color:#000">rs</span> <span style="color:#000">==</span> <span style="color:#a90d91">nullptr</span> <span style="color:#000">?</span> <span style="color:#1c01ce">0</span> <span style="color:#000">:</span> <span style="color:#000">rs</span><span style="color:#000">-&gt;</span><span style="color:#000">sum</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>} <span style="color:#000">a</span>[<span style="color:#000">maxn</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">5</span>], <span style="color:#000">*</span><span style="color:#000">root</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">tot</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000">Node</span> <span style="color:#000">*</span><span style="color:#000">modify</span>(<span style="color:#a90d91">int</span> <span style="color:#000">l</span>, <span style="color:#a90d91">int</span> <span style="color:#000">r</span>, <span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#000">Node</span> <span style="color:#000">*</span><span style="color:#000">p</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">p</span> <span style="color:#000">==</span> <span style="color:#a90d91">nullptr</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">p</span> <span style="color:#000">=</span> <span style="color:#000">&amp;</span><span style="color:#000">a</span>[<span style="color:#000">++</span><span style="color:#000">tot</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">l</span> <span style="color:#000">==</span> <span style="color:#000">r</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        (<span style="color:#000">p</span><span style="color:#000">-&gt;</span><span style="color:#000">sum</span>)<span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#000">p</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">mid</span> <span style="color:#000">=</span> (<span style="color:#000">l</span> <span style="color:#000">+</span> <span style="color:#000">r</span>) <span style="color:#000">/</span> <span style="color:#1c01ce">2</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">x</span> <span style="color:#000">&lt;=</span> <span style="color:#000">mid</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">p</span><span style="color:#000">-&gt;</span><span style="color:#000">ls</span> <span style="color:#000">=</span> <span style="color:#000">modify</span>(<span style="color:#000">l</span>, <span style="color:#000">mid</span>, <span style="color:#000">x</span>, <span style="color:#000">p</span><span style="color:#000">-&gt;</span><span style="color:#000">ls</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>        <span style="color:#000">p</span><span style="color:#000">-&gt;</span><span style="color:#000">rs</span> <span style="color:#000">=</span> <span style="color:#000">modify</span>(<span style="color:#000">mid</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">r</span>, <span style="color:#000">x</span>, <span style="color:#000">p</span><span style="color:#000">-&gt;</span><span style="color:#000">rs</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">p</span><span style="color:#000">-&gt;</span><span style="color:#000">push_up</span>();
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#000">p</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">query</span>(<span style="color:#a90d91">int</span> <span style="color:#000">l</span>, <span style="color:#a90d91">int</span> <span style="color:#000">r</span>, <span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>, <span style="color:#000">Node</span> <span style="color:#000">*</span><span style="color:#000">p</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">p</span> <span style="color:#000">==</span> <span style="color:#a90d91">nullptr</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">l</span> <span style="color:#000">&gt;=</span> <span style="color:#000">x</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">r</span> <span style="color:#000">&lt;=</span> <span style="color:#000">y</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#000">p</span><span style="color:#000">-&gt;</span><span style="color:#000">sum</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">mid</span> <span style="color:#000">=</span> (<span style="color:#000">l</span> <span style="color:#000">+</span> <span style="color:#000">r</span>) <span style="color:#000">/</span> <span style="color:#1c01ce">2</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">res</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">x</span> <span style="color:#000">&lt;=</span> <span style="color:#000">mid</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">res</span> <span style="color:#000">+=</span> <span style="color:#000">query</span>(<span style="color:#000">l</span>, <span style="color:#000">mid</span>, <span style="color:#000">x</span>, <span style="color:#000">y</span>, <span style="color:#000">p</span><span style="color:#000">-&gt;</span><span style="color:#000">ls</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">y</span> <span style="color:#000">&gt;</span> <span style="color:#000">mid</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">res</span> <span style="color:#000">+=</span> <span style="color:#000">query</span>(<span style="color:#000">mid</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">r</span>, <span style="color:#000">x</span>, <span style="color:#000">y</span>, <span style="color:#000">p</span><span style="color:#000">-&gt;</span><span style="color:#000">rs</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#000">res</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000">Node</span> <span style="color:#000">*</span><span style="color:#000">merge</span>(<span style="color:#a90d91">int</span> <span style="color:#000">l</span>, <span style="color:#a90d91">int</span> <span style="color:#000">r</span>, <span style="color:#000">Node</span> <span style="color:#000">*</span><span style="color:#000">a</span>, <span style="color:#000">Node</span> <span style="color:#000">*</span><span style="color:#000">b</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">a</span> <span style="color:#000">==</span> <span style="color:#a90d91">nullptr</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#000">b</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">b</span> <span style="color:#000">==</span> <span style="color:#a90d91">nullptr</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#000">a</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">l</span> <span style="color:#000">==</span> <span style="color:#000">r</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">a</span><span style="color:#000">-&gt;</span><span style="color:#000">sum</span> <span style="color:#000">+=</span> <span style="color:#000">b</span><span style="color:#000">-&gt;</span><span style="color:#000">sum</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#000">a</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">mid</span> <span style="color:#000">=</span> (<span style="color:#000">l</span> <span style="color:#000">+</span> <span style="color:#000">r</span>) <span style="color:#000">/</span> <span style="color:#1c01ce">2</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">a</span><span style="color:#000">-&gt;</span><span style="color:#000">ls</span> <span style="color:#000">=</span> <span style="color:#000">merge</span>(<span style="color:#000">l</span>, <span style="color:#000">mid</span>, <span style="color:#000">a</span><span style="color:#000">-&gt;</span><span style="color:#000">ls</span>, <span style="color:#000">b</span><span style="color:#000">-&gt;</span><span style="color:#000">ls</span>), <span style="color:#000">a</span><span style="color:#000">-&gt;</span><span style="color:#000">rs</span> <span style="color:#000">=</span> <span style="color:#000">merge</span>(<span style="color:#000">mid</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">r</span>, <span style="color:#000">a</span><span style="color:#000">-&gt;</span><span style="color:#000">rs</span>, <span style="color:#000">b</span><span style="color:#000">-&gt;</span><span style="color:#000">rs</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">a</span><span style="color:#000">-&gt;</span><span style="color:#000">push_up</span>();
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#000">a</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">ans</span>[<span style="color:#000">maxn</span>], <span style="color:#000">val</span>[<span style="color:#000">maxn</span>], <span style="color:#000">b</span>[<span style="color:#000">maxn</span>], <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span><span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">vector</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">e</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">add</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>) { <span style="color:#000">e</span>[<span style="color:#000">x</span>].<span style="color:#000">push_back</span>(<span style="color:#000">y</span>); }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">dfs</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">v</span> : <span style="color:#000">e</span>[<span style="color:#000">x</span>])
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">dfs</span>(<span style="color:#000">v</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">root</span>[<span style="color:#000">x</span>] <span style="color:#000">=</span> <span style="color:#000">merge</span>(<span style="color:#1c01ce">1</span>, <span style="color:#000">n</span>, <span style="color:#000">root</span>[<span style="color:#000">x</span>], <span style="color:#000">root</span>[<span style="color:#000">v</span>]);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">ans</span>[<span style="color:#000">x</span>] <span style="color:#000">=</span> <span style="color:#000">query</span>(<span style="color:#1c01ce">1</span>, <span style="color:#000">n</span>, <span style="color:#000">val</span>[<span style="color:#000">x</span>] <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">n</span>, <span style="color:#000">root</span>[<span style="color:#000">x</span>]);
</span></span><span style="display:flex;"><span>    <span style="color:#000">root</span>[<span style="color:#000">x</span>] <span style="color:#000">=</span> <span style="color:#000">modify</span>(<span style="color:#1c01ce">1</span>, <span style="color:#000">n</span>, <span style="color:#000">val</span>[<span style="color:#000">x</span>], <span style="color:#000">root</span>[<span style="color:#000">x</span>]);
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">scanf</span>(<span style="color:#c41a16">&#34;%d&#34;</span>, <span style="color:#000">&amp;</span><span style="color:#000">n</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">scanf</span>(<span style="color:#c41a16">&#34;%d&#34;</span>, <span style="color:#000">&amp;</span><span style="color:#000">val</span>[<span style="color:#000">i</span>]), <span style="color:#000">b</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">val</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2</span>, <span style="color:#000">x</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">scanf</span>(<span style="color:#c41a16">&#34;%d&#34;</span>, <span style="color:#000">&amp;</span><span style="color:#000">x</span>), <span style="color:#000">add</span>(<span style="color:#000">x</span>, <span style="color:#000">i</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">sort</span>(<span style="color:#000">b</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">b</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">+</span> <span style="color:#000">n</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">root</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">&amp;</span><span style="color:#000">a</span>[<span style="color:#000">++</span><span style="color:#000">tot</span>], <span style="color:#000">val</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">lower_bound</span>(<span style="color:#000">b</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">b</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">+</span> <span style="color:#000">n</span>, <span style="color:#000">val</span>[<span style="color:#000">i</span>]) <span style="color:#000">-</span> <span style="color:#000">b</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">dfs</span>(<span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">printf</span>(<span style="color:#c41a16">&#34;%d</span><span style="color:#c41a16">\\</span><span style="color:#c41a16">n&#34;</span>, <span style="color:#000">ans</span>[<span style="color:#000">i</span>]);
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="算法二">算法二</h2>
<p>对每个点维护一个平衡树，然后从下向上启发式合并，对每个点查询排名，减一下就是答案。$O(n\log^2n)$​​，虽然复杂度比较高但常数很小，实际上比上面的线段树合并快 $\text{70ms}$​。空间没啥常数。</p>
<h3 id="code-1">Code</h3>
<p>忽然想起 <code>pb_ds</code>，稍微学了点写了一些。不得不说是真省事，而且红黑树也是真快。（我估计比不少手写 splay/treap 的快）</p>
<p>这代码就更清晰了（）</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;ext/pb_ds/assoc_container.hpp&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;ext/pb_ds/tree_policy.hpp&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;set&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2e5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">bool</span> <span style="color:#000">cmp</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>) { <span style="color:#a90d91">return</span> <span style="color:#000">x</span> <span style="color:#000">&lt;</span> <span style="color:#000">y</span>; }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000">__gnu_pbds</span><span style="color:#000">::</span><span style="color:#000">tree</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span>, <span style="color:#000">__gnu_pbds</span><span style="color:#000">::</span><span style="color:#000">null_type</span>, <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">less</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span><span style="color:#000">&gt;</span>,
</span></span><span style="display:flex;"><span>                 <span style="color:#000">__gnu_pbds</span><span style="color:#000">::</span><span style="color:#000">rb_tree_tag</span>,
</span></span><span style="display:flex;"><span>                 <span style="color:#000">__gnu_pbds</span><span style="color:#000">::</span><span style="color:#000">tree_order_statistics_node_update</span><span style="color:#000">&gt;</span>
</span></span><span style="display:flex;"><span>    <span style="color:#000">S</span>[<span style="color:#000">maxn</span>], <span style="color:#000">*</span><span style="color:#000">root</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">vector</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">e</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">add</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>) { <span style="color:#000">e</span>[<span style="color:#000">x</span>].<span style="color:#000">push_back</span>(<span style="color:#000">y</span>); }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">n</span>, <span style="color:#000">a</span>[<span style="color:#000">maxn</span>], <span style="color:#000">ans</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">dfs</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">auto</span> <span style="color:#000">mx</span> <span style="color:#000">=</span> <span style="color:#000">root</span>[<span style="color:#000">x</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">v</span> : <span style="color:#000">e</span>[<span style="color:#000">x</span>])
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">dfs</span>(<span style="color:#000">v</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">root</span>[<span style="color:#000">v</span>]<span style="color:#000">-&gt;</span><span style="color:#000">size</span>() <span style="color:#000">&gt;</span> <span style="color:#000">mx</span><span style="color:#000">-&gt;</span><span style="color:#000">size</span>())
</span></span><span style="display:flex;"><span>            <span style="color:#000">mx</span> <span style="color:#000">=</span> <span style="color:#000">root</span>[<span style="color:#000">v</span>];
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">root</span>[<span style="color:#000">x</span>] <span style="color:#000">=</span> <span style="color:#000">mx</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">v</span> : <span style="color:#000">e</span>[<span style="color:#000">x</span>])
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">root</span>[<span style="color:#000">v</span>] <span style="color:#000">!=</span> <span style="color:#000">root</span>[<span style="color:#000">x</span>])
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">it</span> : <span style="color:#000">*</span><span style="color:#000">root</span>[<span style="color:#000">v</span>])
</span></span><span style="display:flex;"><span>                <span style="color:#000">root</span>[<span style="color:#000">x</span>]<span style="color:#000">-&gt;</span><span style="color:#000">insert</span>(<span style="color:#000">it</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#000">root</span>[<span style="color:#000">v</span>]<span style="color:#000">-&gt;</span><span style="color:#000">clear</span>();
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">ans</span>[<span style="color:#000">x</span>] <span style="color:#000">=</span> <span style="color:#000">root</span>[<span style="color:#000">x</span>]<span style="color:#000">-&gt;</span><span style="color:#000">size</span>() <span style="color:#000">-</span> <span style="color:#000">root</span>[<span style="color:#000">x</span>]<span style="color:#000">-&gt;</span><span style="color:#000">order_of_key</span>(<span style="color:#000">a</span>[<span style="color:#000">x</span>]);
</span></span><span style="display:flex;"><span>    <span style="color:#000">root</span>[<span style="color:#000">x</span>]<span style="color:#000">-&gt;</span><span style="color:#000">insert</span>(<span style="color:#000">a</span>[<span style="color:#000">x</span>]);
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">scanf</span>(<span style="color:#c41a16">&#34;%d&#34;</span>, <span style="color:#000">&amp;</span><span style="color:#000">n</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">scanf</span>(<span style="color:#c41a16">&#34;%d&#34;</span>, <span style="color:#000">&amp;</span><span style="color:#000">a</span>[<span style="color:#000">i</span>]), <span style="color:#000">root</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">&amp;</span><span style="color:#000">S</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2</span>, <span style="color:#000">x</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">scanf</span>(<span style="color:#c41a16">&#34;%d&#34;</span>, <span style="color:#000">&amp;</span><span style="color:#000">x</span>), <span style="color:#000">add</span>(<span style="color:#000">x</span>, <span style="color:#000">i</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">dfs</span>(<span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">printf</span>(<span style="color:#c41a16">&#34;%d</span><span style="color:#c41a16">\\</span><span style="color:#c41a16">n&#34;</span>, <span style="color:#000">ans</span>[<span style="color:#000">i</span>]);
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="算法三">算法三</h2>
<p>搞个 dfs 序出来，然后就变成序列题目，可以用类似逆序对的方法做，树状数组常数很小。</p>
<p>或者分块，我还看到有主席树的qwq。</p>]]></content:encoded>
    </item>
    
    <item>
      <title>CF718E</title>
      <link>https://luoyisu.github.io/posts/cf718e/</link>
      <pubDate>Wed, 17 Nov 2021 13:18:31 +0000</pubDate>
      
      <guid>https://luoyisu.github.io/posts/cf718e/</guid>
      <description>&lt;h2 id=&#34;description&#34;&gt;Description&lt;/h2&gt;
&lt;p&gt;给定一个仅包含 &lt;code&gt;a&lt;/code&gt;~&lt;code&gt;h&lt;/code&gt; 的字符串。&lt;/p&gt;
&lt;p&gt;有一个 $n$​​​​ 个结点的无向图，编号为 $0$​​​​​ 到 $n−1$​​​​​​ 结点 $i$​​​ 与结点 $j$​​ 间有边相连当且仅当 $|i-j|=1$​ 或 $S_i=S_j$。&lt;/p&gt;
&lt;p&gt;求这个无向图的直径和有多少对点间的最短距离与直径相同。&lt;/p&gt;
&lt;p&gt;$n\leq10^5$&lt;/p&gt;</description>
      <content:encoded><![CDATA[<h2 id="description">Description</h2>
<p>给定一个仅包含 <code>a</code>~<code>h</code> 的字符串。</p>
<p>有一个 $n$​​​​ 个结点的无向图，编号为 $0$​​​​​ 到 $n−1$​​​​​​ 结点 $i$​​​ 与结点 $j$​​ 间有边相连当且仅当 $|i-j|=1$​ 或 $S_i=S_j$。</p>
<p>求这个无向图的直径和有多少对点间的最短距离与直径相同。</p>
<p>$n\leq10^5$</p>
<h2 id="solution">Solution</h2>
<p>难是真的难，我看题解才懂，然后写代码时候挂了，又看了代码才过。。。</p>
<p>是个状压的妙用，思维难度不小。</p>
<p>先一步一步来。</p>
<p>很显然一个字母的边最多走一遍（因为走多遍和走一遍效果是一样的，而且不优）。</p>
<p>那么发现直径最大是 $15$，即 <code>aabbccddeeffgghh</code> 这个字符串，证明就用上面这个结论就行了，很显然。</p>
<p>然后考虑两点间最短路 $dis(i,j)$​。</p>
<p>下面记 <code>a</code>~<code>h</code> 为 $8$ 种颜色。分别为 $c_0\sim c_7$，$f(i,c)$ 表示 第 $i$ 个点到 $c$​ 颜色 的最短路长度，$T$ 为总颜色数。</p>
<p>想一想之后能得到：$dis(i,j)=\min(|i-j|,\min\limits_{0\leq k\leq7}\{f(i,k)+f(j,k)+1\})$​​。挺显然的，画个图或者想一想就明白了。</p>
<p>$f$​ 数组可以枚举颜色然后 BFS 得到，$O(Tn)$，然后最短路直接暴力枚举是 $O(Tn^2)$​ 的，得优化，然后我就不会了。</p>
<p>接下来就是看题解才会的东西了（）</p>
<p>看上面那个式子，对于每个点 $i$，在链上往前走 $15$ 个点，这些点到 $i$ 的最短路可能是全在链上，也可能不在，而再往前，就一定要走相同字母连出来的边了。</p>
<p>于是对于这 $15$ 个点，暴力算一下最短路。</p>
<p>对于剩下的点，$dis(i,j)=\min\limits_{0\leq k\leq7}\{f(i,k)+f(j,k)+1\}$​。我们枚举点 $i$​ 和颜色 $k$​，需要快速得到前面所有点 $f(j,k)$ 的值以及个数。</p>
<p>不知道怎么做了，回头看一看有没有什么性质。</p>
<p>然后就定义 $g(a,b)$​​​ 表示从颜色 $a$​​​ 到颜色 $b$​​​ 的最短路长度。</p>
<p>发现 $g(c_i,c_j)\leq f(i,j)\leq g(c_i,c_j)+1$​​。这个很显然，要么是直接走过去，要么先走到最近的，再走一条相同字符的边。</p>
<p>变个形，$f(i,j)-g(c_i,c_j)=0/1$。</p>
<p>那么我们发现每个点对后面答案的贡献只与其颜色和上面的 $f(i,j)$​​ 是两种情况的某一种有关，那么可以把每种颜色的状态作为状态压缩一下，记录每种颜色和这个状态的个数，在每个点枚举所有颜色和状态，就能知道前面所有点 $f(j,k)$​​ 的值对应的个数了。</p>
<p>这个 $g$ 也在 BFS 时候顺便求一下就行。</p>
<p>计算一下复杂度，预处理 $O(Tn)$，后面是 $O(T^22^Tn)$，算一下，发现达到了 $10^9$ 级别。2s 时限的话也许能过（？）。</p>
<p>我直接莽完交的时候最大的点跑了 $\text{1996ms}$，总时长 $\text{1.11min}$​，真尬住了。。</p>
<p>后来加了个剪枝，快多了，最大的点只需要 $\text{468ms}$​。（见代码）</p>
<p>似乎有点抽象，上代码（）</p>
<h2 id="code">Code</h2>
<p>有一些细节，颜色和点别弄混了。。。下标套下标有时候容易出错。</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;queue&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1e5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>, <span style="color:#000">maxt</span> <span style="color:#000">=</span> <span style="color:#1c01ce">8</span>, <span style="color:#000">maxs</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">maxt</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">char</span> <span style="color:#000">s</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">f</span>[<span style="color:#000">maxn</span>][<span style="color:#000">maxt</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>], <span style="color:#000">g</span>[<span style="color:#000">maxt</span>][<span style="color:#000">maxt</span>], <span style="color:#000">cnt</span>[<span style="color:#000">maxt</span>][<span style="color:#000">maxs</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">n</span>, <span style="color:#000">t</span> <span style="color:#000">=</span> <span style="color:#1c01ce">8</span>, <span style="color:#000">used</span>[<span style="color:#000">maxt</span>], <span style="color:#000">a</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">vector</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">p</span>[<span style="color:#000">maxt</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">bool</span> <span style="color:#000">visi</span>[<span style="color:#000">maxn</span>], <span style="color:#000">visc</span>[<span style="color:#000">maxt</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">tot</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">updmi</span>(<span style="color:#a90d91">int</span> <span style="color:#000">&amp;</span><span style="color:#000">a</span>, <span style="color:#a90d91">int</span> <span style="color:#000">b</span>) { <span style="color:#000">a</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">min</span>(<span style="color:#000">a</span>, <span style="color:#000">b</span>); }
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">updans</span>(<span style="color:#a90d91">int</span> <span style="color:#000">dis</span>, <span style="color:#a90d91">int</span> <span style="color:#000">cnt</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">cnt</span> <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">dis</span> <span style="color:#000">==</span> <span style="color:#000">ans</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">tot</span> <span style="color:#000">+=</span> <span style="color:#000">cnt</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">else</span> <span style="color:#a90d91">if</span> (<span style="color:#000">dis</span> <span style="color:#000">&gt;</span> <span style="color:#000">ans</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#000">dis</span>, <span style="color:#000">tot</span> <span style="color:#000">=</span> <span style="color:#000">cnt</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">scanf</span>(<span style="color:#c41a16">&#34;%d%s&#34;</span>, <span style="color:#000">&amp;</span><span style="color:#000">n</span>, <span style="color:#000">s</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">a</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">s</span>[<span style="color:#000">i</span>] <span style="color:#000">-</span> <span style="color:#2300ce">&#39;a&#39;</span>, <span style="color:#000">p</span>[<span style="color:#000">a</span>[<span style="color:#000">i</span>]].<span style="color:#000">push_back</span>(<span style="color:#000">i</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">memset</span>(<span style="color:#000">f</span>, <span style="color:#1c01ce">1</span>, <span style="color:#a90d91">sizeof</span>(<span style="color:#000">f</span>)), <span style="color:#000">memset</span>(<span style="color:#000">g</span>, <span style="color:#1c01ce">1</span>, <span style="color:#a90d91">sizeof</span>(<span style="color:#000">g</span>));
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">queue</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">q</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">t</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">memset</span>(<span style="color:#000">visi</span>, <span style="color:#1c01ce">0</span>, <span style="color:#a90d91">sizeof</span>(<span style="color:#000">visi</span>)), <span style="color:#000">memset</span>(<span style="color:#000">visc</span>, <span style="color:#1c01ce">0</span>, <span style="color:#a90d91">sizeof</span>(<span style="color:#000">visc</span>));
</span></span><span style="display:flex;"><span>        <span style="color:#000">g</span>[<span style="color:#000">i</span>][<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>, <span style="color:#000">visc</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">v</span> : <span style="color:#000">p</span>[<span style="color:#000">i</span>])
</span></span><span style="display:flex;"><span>            <span style="color:#000">q</span>.<span style="color:#000">push</span>(<span style="color:#000">v</span>), <span style="color:#000">visi</span>[<span style="color:#000">v</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">f</span>[<span style="color:#000">v</span>][<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">while</span> (<span style="color:#000">!</span><span style="color:#000">q</span>.<span style="color:#000">empty</span>())
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">int</span> <span style="color:#000">now</span> <span style="color:#000">=</span> <span style="color:#000">q</span>.<span style="color:#000">front</span>();
</span></span><span style="display:flex;"><span>            <span style="color:#000">q</span>.<span style="color:#000">pop</span>();
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">now</span> <span style="color:#000">&gt;</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">!</span><span style="color:#000">visi</span>[<span style="color:#000">now</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>])
</span></span><span style="display:flex;"><span>                <span style="color:#000">f</span>[<span style="color:#000">now</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>][<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">f</span>[<span style="color:#000">now</span>][<span style="color:#000">i</span>] <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">visi</span>[<span style="color:#000">now</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">=</span> <span style="color:#a90d91">true</span>, <span style="color:#000">q</span>.<span style="color:#000">push</span>(<span style="color:#000">now</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">now</span> <span style="color:#000">&lt;</span> <span style="color:#000">n</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">!</span><span style="color:#000">visi</span>[<span style="color:#000">now</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>])
</span></span><span style="display:flex;"><span>                <span style="color:#000">f</span>[<span style="color:#000">now</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>][<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">f</span>[<span style="color:#000">now</span>][<span style="color:#000">i</span>] <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">visi</span>[<span style="color:#000">now</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">=</span> <span style="color:#a90d91">true</span>, <span style="color:#000">q</span>.<span style="color:#000">push</span>(<span style="color:#000">now</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">!</span><span style="color:#000">visc</span>[<span style="color:#000">a</span>[<span style="color:#000">now</span>]])
</span></span><span style="display:flex;"><span>            {
</span></span><span style="display:flex;"><span>                <span style="color:#000">visc</span>[<span style="color:#000">a</span>[<span style="color:#000">now</span>]] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">g</span>[<span style="color:#000">a</span>[<span style="color:#000">now</span>]][<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">f</span>[<span style="color:#000">now</span>][<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">v</span> : <span style="color:#000">p</span>[<span style="color:#000">a</span>[<span style="color:#000">now</span>]])
</span></span><span style="display:flex;"><span>                    <span style="color:#a90d91">if</span> (<span style="color:#000">!</span><span style="color:#000">visi</span>[<span style="color:#000">v</span>])
</span></span><span style="display:flex;"><span>                        <span style="color:#000">f</span>[<span style="color:#000">v</span>][<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">f</span>[<span style="color:#000">now</span>][<span style="color:#000">i</span>] <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">visi</span>[<span style="color:#000">v</span>] <span style="color:#000">=</span> <span style="color:#a90d91">true</span>, <span style="color:#000">q</span>.<span style="color:#000">push</span>(<span style="color:#000">v</span>);
</span></span><span style="display:flex;"><span>            }
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">max</span>(<span style="color:#1c01ce">1</span>, <span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">15</span>); <span style="color:#000">j</span> <span style="color:#000">&lt;</span> <span style="color:#000">i</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">int</span> <span style="color:#000">dis</span> <span style="color:#000">=</span> <span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#000">j</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">c</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">c</span> <span style="color:#000">&lt;</span> <span style="color:#000">t</span>; <span style="color:#000">c</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">updmi</span>(<span style="color:#000">dis</span>, <span style="color:#000">f</span>[<span style="color:#000">j</span>][<span style="color:#000">c</span>] <span style="color:#000">+</span> <span style="color:#000">f</span>[<span style="color:#000">i</span>][<span style="color:#000">c</span>] <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#000">updans</span>(<span style="color:#000">dis</span>, <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">i</span> <span style="color:#000">&gt;</span> <span style="color:#1c01ce">16</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">int</span> <span style="color:#000">nowst</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;</span> <span style="color:#000">t</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">nowst</span> <span style="color:#000">=</span> (<span style="color:#000">nowst</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">1</span>) <span style="color:#000">|</span> (<span style="color:#000">f</span>[<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">16</span>][<span style="color:#000">j</span>] <span style="color:#000">-</span> <span style="color:#000">g</span>[<span style="color:#000">a</span>[<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">16</span>]][<span style="color:#000">j</span>]);
</span></span><span style="display:flex;"><span>            <span style="color:#000">cnt</span>[<span style="color:#000">a</span>[<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">16</span>]][<span style="color:#000">nowst</span>]<span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;</span> <span style="color:#000">t</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            {
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">k</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">k</span> <span style="color:#000">&lt;</span> (<span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">t</span>); <span style="color:#000">k</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                {
</span></span><span style="display:flex;"><span>                    <span style="color:#a90d91">if</span> (<span style="color:#000">cnt</span>[<span style="color:#000">j</span>][<span style="color:#000">k</span>] <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>) <span style="color:#177500">// 此处剪枝优化是很大的。
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>                        <span style="color:#a90d91">continue</span>;
</span></span><span style="display:flex;"><span>                    <span style="color:#a90d91">int</span> <span style="color:#000">dis</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">30</span>;
</span></span><span style="display:flex;"><span>                    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">q</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">q</span> <span style="color:#000">&lt;</span> <span style="color:#000">t</span>; <span style="color:#000">q</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                        <span style="color:#000">updmi</span>(<span style="color:#000">dis</span>, <span style="color:#000">f</span>[<span style="color:#000">i</span>][<span style="color:#000">q</span>] <span style="color:#000">+</span> <span style="color:#000">g</span>[<span style="color:#000">q</span>][<span style="color:#000">j</span>] <span style="color:#000">+</span> ((<span style="color:#000">k</span> <span style="color:#000">&gt;&gt;</span> (<span style="color:#000">t</span> <span style="color:#000">-</span> <span style="color:#000">q</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>)) <span style="color:#000">&amp;</span> <span style="color:#1c01ce">1</span>) <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>                    <span style="color:#000">updans</span>(<span style="color:#000">dis</span>, <span style="color:#000">cnt</span>[<span style="color:#000">j</span>][<span style="color:#000">k</span>]);
</span></span><span style="display:flex;"><span>                }
</span></span><span style="display:flex;"><span>            }
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">printf</span>(<span style="color:#c41a16">&#34;%d %lld</span><span style="color:#c41a16">\\</span><span style="color:#c41a16">n&#34;</span>, <span style="color:#000">ans</span>, <span style="color:#000">tot</span>);
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="一点闲话">一点闲话</h2>
<p>谁知道如何能想到这个 $g$ 啊，我想不到这个点。。</p>]]></content:encoded>
    </item>
    
    <item>
      <title>211116模拟赛</title>
      <link>https://luoyisu.github.io/posts/211116%E6%A8%A1%E6%8B%9F%E8%B5%9B/</link>
      <pubDate>Tue, 16 Nov 2021 15:41:05 +0000</pubDate>
      
      <guid>https://luoyisu.github.io/posts/211116%E6%A8%A1%E6%8B%9F%E8%B5%9B/</guid>
      <description>&lt;h2 id=&#34;概述&#34;&gt;概述&lt;/h2&gt;
&lt;p&gt;啥都不会，滚出。&lt;/p&gt;
&lt;p&gt;期望 $0+100+0+20=120$，实际 $0+20+0+20=40$​。至于为什么挂了这么多，看下文。&lt;/p&gt;</description>
      <content:encoded><![CDATA[<h2 id="概述">概述</h2>
<p>啥都不会，滚出。</p>
<p>期望 $0+100+0+20=120$，实际 $0+20+0+20=40$​。至于为什么挂了这么多，看下文。</p>
<h2 id="赛时">赛时</h2>
<p>T1 概率+博弈论，再见吧。。。</p>
<p>T2 看着也不简单。</p>
<p>T3 计算几何？？？？？</p>
<p>T4 又是个什么鬼玩意？？？？？？</p>
<p>稍微思考了一下除了 T2 以外的题，似乎都不可做。</p>
<p>那没啥说的，做 4h T2吧。</p>
<p>于是开始做。</p>
<p>分类呗，6个木条正方形，1122 或者 1113。</p>
<p>1122 很快就搞出来了，双指针随便算一下就行。</p>
<p>这个 1113 就很离谱。。。。</p>
<p>随便搞了搞之后发现会算重复。。。。</p>
<p>想了很久，忽然意识到去重不是容斥原理干的事吗。。。</p>
<p>于是开始往死里容斥。</p>
<p>想了很久可算是搞出来了，过了几组手造小数据。也不想对拍了，随便吧。。。</p>
<p>又发现 T4 有 $20$ 分是个斐波那契，给写了。</p>
<p>T3 其实也能写点暴力，但我不想思考也不想打代码了，就这样吧。。。</p>
<p>感觉四道全是数学题。。。</p>
<h2 id="赛后">赛后</h2>
<p>我吐了，我 T2 忘记自己拷贝的一个数组没有排序了。。。导致 $90$ 挂成了 $20$​，再在两个地方开 <code>long long</code> 就 $100$ 了。。。</p>
<p>结果我挂成了和最暴力的暴力一个分，我吐了。。。</p>
<h2 id="总结">总结</h2>
<p>没啥好总结的，也许 T3 暴力还是应该想想怎么做。。。。</p>
<p>emmmm，其实 T1 不是那么难——遇到最大最小值可以考虑转化成函数然后三分。但我确实不会。。。</p>
<p>T3、4 都是我不懂的知识，告辞。</p>
<p>还是应该对拍，手造数据不靠谱（我手造的数据都是排好序的。。。）</p>
<p>附专治低血压代码：</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;map&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">5010</span>, <span style="color:#000">maxi</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1e7</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">typedef</span> <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">ll</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">a</span>[<span style="color:#000">maxn</span>], <span style="color:#000">b</span>[<span style="color:#000">maxi</span>], <span style="color:#000">n</span>, <span style="color:#000">m</span>, <span style="color:#000">t</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000">ll</span> <span style="color:#000">C</span>(<span style="color:#000">ll</span> <span style="color:#000">n</span>, <span style="color:#000">ll</span> <span style="color:#000">m</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">m</span> <span style="color:#000">&gt;</span> <span style="color:#000">n</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">ll</span> <span style="color:#000">res</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span> <span style="color:#000">&gt;=</span> <span style="color:#000">n</span> <span style="color:#000">-</span> <span style="color:#000">m</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">res</span> <span style="color:#000">*=</span> <span style="color:#000">i</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#000">m</span>; <span style="color:#000">i</span> <span style="color:#000">&gt;=</span> <span style="color:#1c01ce">2</span>; <span style="color:#000">i</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">res</span> <span style="color:#000">/=</span> <span style="color:#000">i</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#177500">//cout &lt;&lt; n &lt;&lt; &#34; &#34; &lt;&lt; m &lt;&lt; &#34; &#34; &lt;&lt; res &lt;&lt; endl;
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>    <span style="color:#a90d91">return</span> <span style="color:#000">res</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">bool</span> <span style="color:#000">ok</span>[<span style="color:#000">maxi</span> <span style="color:#000">*</span> <span style="color:#1c01ce">2</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000">ll</span> <span style="color:#000">work1</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">ll</span> <span style="color:#000">res</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">b</span>[<span style="color:#000">a</span>[<span style="color:#000">i</span>]] <span style="color:#000">&gt;=</span> <span style="color:#1c01ce">2</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">ll</span> <span style="color:#000">cnt</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>, <span style="color:#000">tot</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#177500">// cnt 对数；tot 总数
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">l</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">r</span> <span style="color:#000">=</span> <span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">l</span> <span style="color:#000">&lt;=</span> <span style="color:#000">r</span>; <span style="color:#000">r</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>            {
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">while</span> (<span style="color:#000">l</span> <span style="color:#000">&lt;=</span> <span style="color:#000">r</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">a</span>[<span style="color:#000">r</span>] <span style="color:#000">+</span> <span style="color:#000">a</span>[<span style="color:#000">l</span>] <span style="color:#000">&lt;</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>])
</span></span><span style="display:flex;"><span>                    <span style="color:#000">l</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">if</span> (<span style="color:#000">l</span> <span style="color:#000">&gt;</span> <span style="color:#000">r</span> <span style="color:#000">||</span> <span style="color:#000">a</span>[<span style="color:#000">l</span>] <span style="color:#000">+</span> <span style="color:#000">a</span>[<span style="color:#000">r</span>] <span style="color:#000">!=</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>])
</span></span><span style="display:flex;"><span>                    <span style="color:#a90d91">continue</span>;
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">if</span> (<span style="color:#000">l</span> <span style="color:#000">==</span> <span style="color:#000">r</span>)
</span></span><span style="display:flex;"><span>                {
</span></span><span style="display:flex;"><span>                    <span style="color:#000">tot</span> <span style="color:#000">+=</span> <span style="color:#000">C</span>(<span style="color:#000">b</span>[<span style="color:#000">a</span>[<span style="color:#000">l</span>]], <span style="color:#1c01ce">4</span>);
</span></span><span style="display:flex;"><span>                    <span style="color:#000">tot</span> <span style="color:#000">+=</span> <span style="color:#000">C</span>(<span style="color:#000">b</span>[<span style="color:#000">a</span>[<span style="color:#000">l</span>]], <span style="color:#1c01ce">2</span>) <span style="color:#000">*</span> <span style="color:#000">cnt</span>;
</span></span><span style="display:flex;"><span>                    <span style="color:#a90d91">break</span>;
</span></span><span style="display:flex;"><span>                }
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">if</span> (<span style="color:#000">b</span>[<span style="color:#000">a</span>[<span style="color:#000">l</span>]] <span style="color:#000">&gt;=</span> <span style="color:#1c01ce">2</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">b</span>[<span style="color:#000">a</span>[<span style="color:#000">r</span>]] <span style="color:#000">&gt;=</span> <span style="color:#1c01ce">2</span>)
</span></span><span style="display:flex;"><span>                    <span style="color:#000">tot</span> <span style="color:#000">+=</span> <span style="color:#000">C</span>(<span style="color:#000">b</span>[<span style="color:#000">a</span>[<span style="color:#000">l</span>]], <span style="color:#1c01ce">2</span>) <span style="color:#000">*</span> <span style="color:#000">C</span>(<span style="color:#000">b</span>[<span style="color:#000">a</span>[<span style="color:#000">r</span>]], <span style="color:#1c01ce">2</span>);
</span></span><span style="display:flex;"><span>                <span style="color:#000">tot</span> <span style="color:#000">+=</span> <span style="color:#000">b</span>[<span style="color:#000">a</span>[<span style="color:#000">l</span>]] <span style="color:#000">*</span> <span style="color:#000">b</span>[<span style="color:#000">a</span>[<span style="color:#000">r</span>]] <span style="color:#000">*</span> <span style="color:#000">cnt</span>;
</span></span><span style="display:flex;"><span>                <span style="color:#000">cnt</span> <span style="color:#000">+=</span> <span style="color:#000">b</span>[<span style="color:#000">a</span>[<span style="color:#000">l</span>]] <span style="color:#000">*</span> <span style="color:#000">b</span>[<span style="color:#000">a</span>[<span style="color:#000">r</span>]];
</span></span><span style="display:flex;"><span>            }
</span></span><span style="display:flex;"><span>            <span style="color:#177500">//if (tot != 0)
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>            <span style="color:#177500">//cout &lt;&lt; i &lt;&lt; &#34; &#34; &lt;&lt; a[i] &lt;&lt; &#34; &#34; &lt;&lt; cnt &lt;&lt; &#34; &#34; &lt;&lt; tot &lt;&lt; endl;
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>            <span style="color:#000">res</span> <span style="color:#000">+=</span> <span style="color:#000">C</span>(<span style="color:#000">b</span>[<span style="color:#000">a</span>[<span style="color:#000">i</span>]], <span style="color:#1c01ce">2</span>) <span style="color:#000">*</span> <span style="color:#000">tot</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#000">res</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">mp</span>[<span style="color:#000">maxi</span> <span style="color:#000">+</span> <span style="color:#1c01ce">50</span>];
</span></span><span style="display:flex;"><span><span style="color:#177500">/*
</span></span></span><span style="display:flex;"><span><span style="color:#177500">
</span></span></span><span style="display:flex;"><span><span style="color:#177500">1 2 3 得到 6 -&gt; 重复计算 3 次
</span></span></span><span style="display:flex;"><span><span style="color:#177500">total = 全部 - 有两个相同 + 三个相同(1)
</span></span></span><span style="display:flex;"><span><span style="color:#177500">
</span></span></span><span style="display:flex;"><span><span style="color:#177500">*/</span>
</span></span><span style="display:flex;"><span><span style="color:#000">ll</span> <span style="color:#000">work2</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#177500">//for (int i = 1; i &lt; m; i++)
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>    <span style="color:#177500">//    for (int j = i + 1; j &lt;= m; j++)
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>    <span style="color:#177500">//        if (a[i] + a[j] &lt; maxi)
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>    <span style="color:#177500">//            cout &lt;&lt; a[i] &lt;&lt; &#34; &#34; &lt;&lt; a[j] &lt;&lt; &#34; &#34; &lt;&lt; b[a[i]] &lt;&lt; &#34; &#34; &lt;&lt; b[a[j]] &lt;&lt; endl, mp[a[i] + a[j]] += b[a[i]] * b[a[j]], ok[a[i] + a[j]] = 1;
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>    <span style="color:#177500">//for (int i = 1; i &lt;= 6; i++)
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>    <span style="color:#177500">//    cout &lt;&lt; mp[i] &lt;&lt; endl;
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>    <span style="color:#000">ll</span> <span style="color:#000">res</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">b</span>[<span style="color:#000">a</span>[<span style="color:#000">i</span>]] <span style="color:#000">&gt;=</span> <span style="color:#1c01ce">3</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">int</span> <span style="color:#000">tot</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#177500">//  1
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            {
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">if</span> (<span style="color:#000">t</span>[<span style="color:#000">j</span>] <span style="color:#000">&gt;</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>])
</span></span><span style="display:flex;"><span>                    <span style="color:#a90d91">break</span>; <span style="color:#177500">// 把此处 break 改为 continue 可获得 90 分
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>                <span style="color:#a90d91">int</span> <span style="color:#000">d</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#177500">// 2
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>                <span style="color:#a90d91">if</span> (<span style="color:#000">t</span>[<span style="color:#000">j</span>] <span style="color:#000">*</span> <span style="color:#1c01ce">2</span> <span style="color:#000">&lt;=</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>])
</span></span><span style="display:flex;"><span>                {
</span></span><span style="display:flex;"><span>                    <span style="color:#000">d</span> <span style="color:#000">=</span> <span style="color:#000">b</span>[<span style="color:#000">a</span>[<span style="color:#000">i</span>] <span style="color:#000">-</span> <span style="color:#000">t</span>[<span style="color:#000">j</span>] <span style="color:#000">*</span> <span style="color:#1c01ce">2</span>];
</span></span><span style="display:flex;"><span>                    <span style="color:#a90d91">if</span> (<span style="color:#000">t</span>[<span style="color:#000">j</span>] <span style="color:#000">*</span> <span style="color:#1c01ce">3</span> <span style="color:#000">==</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>])
</span></span><span style="display:flex;"><span>                        <span style="color:#000">d</span><span style="color:#000">--</span>;
</span></span><span style="display:flex;"><span>                }
</span></span><span style="display:flex;"><span>                <span style="color:#000">tot</span> <span style="color:#000">+=</span> <span style="color:#000">mp</span>[<span style="color:#000">a</span>[<span style="color:#000">i</span>] <span style="color:#000">-</span> <span style="color:#000">t</span>[<span style="color:#000">j</span>]] <span style="color:#000">-</span> <span style="color:#000">d</span>;
</span></span><span style="display:flex;"><span>            }
</span></span><span style="display:flex;"><span>            <span style="color:#177500">// 再把上方 1 2 都改为 long long 可获得 100 分
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>            <span style="color:#000">res</span> <span style="color:#000">+=</span> <span style="color:#000">tot</span> <span style="color:#000">/</span> <span style="color:#1c01ce">3</span> <span style="color:#000">*</span> <span style="color:#000">C</span>(<span style="color:#000">b</span>[<span style="color:#000">a</span>[<span style="color:#000">i</span>]], <span style="color:#1c01ce">3</span>);
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#000">res</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">freopen</span>(<span style="color:#c41a16">&#34;stick.in&#34;</span>, <span style="color:#c41a16">&#34;r&#34;</span>, <span style="color:#000">stdin</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">freopen</span>(<span style="color:#c41a16">&#34;stick.out&#34;</span>, <span style="color:#c41a16">&#34;w&#34;</span>, <span style="color:#000">stdout</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">scanf</span>(<span style="color:#c41a16">&#34;%d&#34;</span>, <span style="color:#000">&amp;</span><span style="color:#000">n</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">scanf</span>(<span style="color:#c41a16">&#34;%d&#34;</span>, <span style="color:#000">&amp;</span><span style="color:#000">a</span>[<span style="color:#000">i</span>]), <span style="color:#000">b</span>[<span style="color:#000">a</span>[<span style="color:#000">i</span>]]<span style="color:#000">++</span>, <span style="color:#000">t</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>]; <span style="color:#177500">// 写这个代码的人，数组 t 你没排序啊！！！
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">a</span>[<span style="color:#000">i</span>] <span style="color:#000">+</span> <span style="color:#000">a</span>[<span style="color:#000">j</span>] <span style="color:#000">&lt;</span> <span style="color:#000">maxi</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">mp</span>[<span style="color:#000">a</span>[<span style="color:#000">i</span>] <span style="color:#000">+</span> <span style="color:#000">a</span>[<span style="color:#000">j</span>]]<span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">sort</span>(<span style="color:#000">a</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">a</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">+</span> <span style="color:#000">n</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">m</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">unique</span>(<span style="color:#000">a</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">a</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">+</span> <span style="color:#000">n</span>) <span style="color:#000">-</span> <span style="color:#000">a</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#177500">//for (int i = 1; i &lt;= m; i++)
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>    <span style="color:#177500">//    cout &lt;&lt; a[i] &lt;&lt; &#34; &#34; &lt;&lt; b[a[i]] &lt;&lt; endl;
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>    <span style="color:#177500">//cout &lt;&lt; endl;
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>    <span style="color:#000">printf</span>(<span style="color:#c41a16">&#34;%lld</span><span style="color:#c41a16">\\</span><span style="color:#c41a16">n&#34;</span>, <span style="color:#000">work1</span>() <span style="color:#000">+</span> <span style="color:#000">work2</span>());
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div>]]></content:encoded>
    </item>
    
    <item>
      <title>可并堆学习笔记</title>
      <link>https://luoyisu.github.io/posts/mergeable-heap/</link>
      <pubDate>Mon, 15 Nov 2021 16:19:28 +0000</pubDate>
      
      <guid>https://luoyisu.github.io/posts/mergeable-heap/</guid>
      <description>&lt;p&gt;所谓可并堆，就是可以合并的堆。&lt;/p&gt;
&lt;p&gt;本文介绍配对堆和左偏树。&lt;/p&gt;
&lt;p&gt;未完工。&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>所谓可并堆，就是可以合并的堆。</p>
<p>本文介绍配对堆和左偏树。</p>
<p>未完工。</p>
<h2 id="什么是可并堆">什么是可并堆</h2>
<p>什么是堆我就不解释了。</p>
<p>上面说了，可并堆就是可以合并的堆。</p>
<p>最基础的操作有：快速查询最大/最小值、插入一个值、删除最大/最小值、合并两个堆。</p>
<p>如果用二叉堆的话，可以在 $O(\log^2n)$​​ 的复杂度内启发式合并堆，但下文说的两个数据结构可以更快地实现。</p>
<h2 id="配对堆">配对堆</h2>
<p>配对堆，英文 pairing heap。配对堆，顾名思义就是两两配对的堆。</p>
<p>其复杂度都是势能分析后的均摊的结果，所以<strong>不能可持久化</strong>。</p>
<p>声明：这个数据结构的复杂度我不会证明。</p>
<h3 id="定义">定义</h3>
<p>配对堆是一个多叉树，每个点有一个权值，满足每个点的权值都小于其所以儿子的权值。（注：本文只考虑小根堆）</p>
<p>存储的时候使用孩子兄弟表示法，即对每个点记录他的最左面的儿子，以及他右面的兄弟。</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#a90d91">struct</span> <span style="color:#3f6e75">Node</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">val</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">Node</span> <span style="color:#000">*</span><span style="color:#000">son</span>, <span style="color:#000">*</span><span style="color:#000">bro</span>;
</span></span><span style="display:flex;"><span>};
</span></span></code></pre></div><h3 id="查询最小值">查询最小值</h3>
<p>返回根的权值即可。$O(1)$​。</p>
<h3 id="合并">合并</h3>
<p>把根权值较大的堆变为另一个堆的一个儿子即可。（画个图就知道代码非常显然了）</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#000">Node</span> <span style="color:#000">*</span><span style="color:#000">merge</span>(<span style="color:#000">Node</span> <span style="color:#000">*</span><span style="color:#000">a</span>, <span style="color:#000">Node</span> <span style="color:#000">*</span><span style="color:#000">b</span>) <span style="color:#177500">// 传入两个堆的根，返回合并后堆的根
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">a</span> <span style="color:#000">==</span> <span style="color:#a90d91">nullptr</span>) <span style="color:#177500">// 如果有一个是空节点，直接返回另一个
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>        <span style="color:#a90d91">return</span> <span style="color:#000">b</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">b</span> <span style="color:#000">==</span> <span style="color:#a90d91">nullptr</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#000">a</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">a</span><span style="color:#000">-&gt;</span><span style="color:#000">val</span> <span style="color:#000">&gt;</span> <span style="color:#000">b</span><span style="color:#000">-&gt;</span><span style="color:#000">val</span>) <span style="color:#177500">// 保证 a 是合并后堆的根
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>        <span style="color:#000">swap</span>(<span style="color:#000">a</span>, <span style="color:#000">b</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">b</span><span style="color:#000">-&gt;</span><span style="color:#000">bro</span> <span style="color:#000">=</span> <span style="color:#000">a</span><span style="color:#000">-&gt;</span><span style="color:#000">son</span>; <span style="color:#177500">// a 儿子要变为 b 的兄弟
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>    <span style="color:#000">a</span><span style="color:#000">-&gt;</span><span style="color:#000">son</span> <span style="color:#000">=</span> <span style="color:#000">b</span>; <span style="color:#177500">// a 儿子变为 b
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>    <span style="color:#a90d91">return</span> <span style="color:#000">a</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><p>单次显然是 $O(1)$，势能分析后仍然是 $O(1)$。</p>
<h3 id="插入">插入</h3>
<p>把这个数看成一个堆然后和原堆合并即可。</p>
<h3 id="删除最小值重点">删除最小值（重点）</h3>
<p>考虑删除之后，我们需要把一个森林合并成一个树。</p>
<p>我们显然可以把儿子任意一个一个合并，但会导致复杂度退化到 $O(n)$​。</p>
<p>于是有一个很乱搞的优化：将两个堆从左往右两两合并，再从右往左依次合并，复杂度会均摊为 $O(\log n)$。</p>
<p>搞一个函数来合并一个点的所有兄弟：</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#000">Node</span> <span style="color:#000">*</span><span style="color:#000">merges</span>(<span style="color:#000">Node</span> <span style="color:#000">*</span><span style="color:#000">x</span>) <span style="color:#177500">// 输入根，返回合并后的根
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">x</span> <span style="color:#000">==</span> <span style="color:#a90d91">nullptr</span> <span style="color:#000">||</span> <span style="color:#000">x</span><span style="color:#000">-&gt;</span><span style="color:#000">bro</span> <span style="color:#000">==</span> <span style="color:#a90d91">nullptr</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">Node</span> <span style="color:#000">*</span><span style="color:#000">a</span> <span style="color:#000">=</span> <span style="color:#000">x</span><span style="color:#000">-&gt;</span><span style="color:#000">bro</span>, <span style="color:#000">*</span><span style="color:#000">b</span> <span style="color:#000">=</span> <span style="color:#000">a</span><span style="color:#000">-&gt;</span><span style="color:#000">bro</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">x</span><span style="color:#000">-&gt;</span><span style="color:#000">bro</span> <span style="color:#000">=</span> <span style="color:#000">a</span><span style="color:#000">-&gt;</span><span style="color:#000">bro</span> <span style="color:#000">=</span> <span style="color:#a90d91">nullptr</span>; <span style="color:#177500">// 拆散
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>    <span style="color:#a90d91">return</span> <span style="color:#000">merge</span>(<span style="color:#000">merge</span>(<span style="color:#000">x</span>, <span style="color:#000">a</span>), <span style="color:#000">merges</span>(<span style="color:#000">b</span>));
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><p>不太好形容，画了个图：</p>
<p><a href="https://imgtu.com/i/oBIP0g">
  <img loading="lazy" src="https://s4.ax1x.com/2021/12/05/oBIP0g.jpg" alt="oBIP0g.jpg"  /></a></p>
<p>需要注意的是：该递归实现已经满足了顺序要求，如果要修改成非递归，要注意顺序。</p>
<p>于是删除实际上非常简单：</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#000">Node</span> <span style="color:#000">*</span><span style="color:#000">pop</span>() { <span style="color:#a90d91">return</span> <span style="color:#000">root</span> <span style="color:#000">=</span> <span style="color:#000">merges</span>(<span style="color:#000">root</span><span style="color:#000">-&gt;</span><span style="color:#000">son</span>); }
</span></span></code></pre></div><h3 id="删除给定结点">删除给定结点</h3>
<p>注：下文我没有进行过测试，是我口胡的产物。</p>
<p>首先对一个点记录他的前一个结点 father（不是树形结构的父亲），然后操作都需要稍微修改一下来维护这个东西。</p>
<p>接着把这个点对应的子树分离出来，然后执行 pop 操作，最后和原树合并一下。</p>
<p>不怎么好实现，不建议，而且时间复杂度感觉并不是很好。</p>
<h2 id="左偏树">左偏树</h2>
<p>待填。</p>]]></content:encoded>
    </item>
    
    <item>
      <title>211114模拟赛</title>
      <link>https://luoyisu.github.io/posts/211114%E6%A8%A1%E6%8B%9F%E8%B5%9B/</link>
      <pubDate>Sun, 14 Nov 2021 18:20:38 +0000</pubDate>
      
      <guid>https://luoyisu.github.io/posts/211114%E6%A8%A1%E6%8B%9F%E8%B5%9B/</guid>
      <description>&lt;h2 id=&#34;概述&#34;&gt;概述&lt;/h2&gt;
&lt;p&gt;啥都不会。&lt;/p&gt;
&lt;p&gt;期望 $0+0+20+20=40$​，实际没挂分。&lt;/p&gt;</description>
      <content:encoded><![CDATA[<h2 id="概述">概述</h2>
<p>啥都不会。</p>
<p>期望 $0+0+20+20=40$​，实际没挂分。</p>
<h2 id="赛时">赛时</h2>
<p>T1 数学题，推了推并打表无果，跳（我居然根据打的表能回忆起来平方和公式？？？）；</p>
<p>T2 不知道是什么题，像是乱搞题，但没搞出来，跳；</p>
<p>T3 又是个计数的DP，似乎有点结论之类的，不太懂，跳；</p>
<p>T4 根本不懂，跳。</p>
<p>然后发现啥都不会，试图做 T1，无果。</p>
<p>发现 T3 有 $20$ 分全排列暴力，写了；</p>
<p>又发现 T4 乱搞能得 $20$ 分，也写了。</p>
<p>尝试做 T2，不太懂，乱写了份代码交上去。</p>
<p>接着去做 T1，还是不懂。</p>
<p>直接跑路。。。。</p>
<h2 id="赛后">赛后</h2>
<p>发现 T1 真是个数学题，，，，不会就是不会。。。</p>
<p>T2 确实是个乱搞，没想出来其实亏了（可能是被这题得分取所有测试点最小值打压了积极性）。</p>
<p>T3 题解看起来比我想的简单一点，但还是不会。</p>
<p>T4 不会，做题的时候想到题解的第一步（查分约束之前）就想不下去了。</p>
<h2 id="总结">总结</h2>
<p>面对啥都不会的比赛，首先心态要好（）</p>
<p>默念我不会大家也不会（虽然这很可能是错觉）</p>
<p>然后把简单的暴力写完之后可以冲着最可做的题一直莽下去，感觉也只能这么办了（比如今天 T2，如果往死里想未必就想不出来）</p>]]></content:encoded>
    </item>
    
    <item>
      <title>211113模拟赛</title>
      <link>https://luoyisu.github.io/posts/211113%E6%A8%A1%E6%8B%9F%E8%B5%9B/</link>
      <pubDate>Sat, 13 Nov 2021 12:40:10 +0000</pubDate>
      
      <guid>https://luoyisu.github.io/posts/211113%E6%A8%A1%E6%8B%9F%E8%B5%9B/</guid>
      <description>&lt;h2 id=&#34;概述&#34;&gt;概述&lt;/h2&gt;
&lt;p&gt;期望 $100+100+40+0=240$，实际同期望，难得没有挂分。。。&lt;/p&gt;</description>
      <content:encoded><![CDATA[<h2 id="概述">概述</h2>
<p>期望 $100+100+40+0=240$，实际同期望，难得没有挂分。。。</p>
<h2 id="赛时">赛时</h2>
<p>有上一次的经验，应该是按难度升序排列。</p>
<p>先看 T1，这种给个字符串，然后来一堆莫名其妙的操作，再问你最后字符串的题大部分都是降智题（因为我上次就被降智了），我尝试切掉。</p>
<p>花几分钟写了个暴力找规律，然后发现这个规律挺对的，看到数据范围 $5\times10^5$​，也不想着优化了，写了个普通快读，直接 <code>sort</code> 就完事了。</p>
<p>想对拍，然后发现自己不会生成随机字符串，有点尴尬，去看下一道题了。</p>
<p>T2 数学题。俗话说得好：遇到数学先打表。然后我就光速用 python 打了个 $n\leq5000$ 的表。</p>
<p>对着表来回折腾没看出来啥，先跳了。</p>
<p>看 T3，不明所以的 DP+计数，去看 T4，不明所以的 DP+计数。</p>
<p>一看到取模就头疼。</p>
<p>回来看 T2 了。</p>
<p>注意到对于一组解 $(x,y)(x&lt;y)$，还存在另一组解 $(y,z)(y&lt;z)$。于是考虑怎么从这组解得到下一组。</p>
<p>还是不懂，把打表的内容增加了一列 $k$，发现这两组解的 $k$ 相同。。。</p>
<p>于是意识到这是个二次方程的两个根。</p>
<p>于是会做了：把解一个一个算出来，把较大数不超过 $10^{18}$ 的所有解存下来，每个询问二分查找一下就行。</p>
<p>然后写了个程序，过样例之后忽然意识到爆 <code>long long</code> 的问题。</p>
<p>我不是很懂爆 <code>long long</code> 到底会发生什么，不太放心，于是写了个 <code>__int128_t</code>。。。</p>
<p>发现两个程序输出还真不一样，折腾了一下不知道怎么回事，就把 <code>__int128_t</code> 的程序交上去了。。。</p>
<p>这时候才过去 $\text{1.5h}$，感觉机会很大（）</p>
<p>去看 T3，愣是不会。。。。去看 T4，似乎要套容斥然后各种计数，不想搞。。。</p>
<p>然后开始躺平。</p>
<p>后来主要去想 T3 了，但还是没想出来。T4 暴力也不会。</p>
<p>看还有半个多小时，写了 T3 的指数级 $30$ 分暴力，然后打表发现有 $10$ 分是卡特兰数，就顺便骗走了。</p>
<p>然后就跑路。。。</p>
<h2 id="赛后">赛后</h2>
<p>没啥可说的，和想的差不多，T4 没有输出大样例导致少了 $10$ 分，又忘记骗分了。。。</p>
<p>发现 T3 有结论，T4 还是不懂。。。</p>
<p>看到别人 T2 $60$ 分忽然意识到表可以打得大一些，毕竟解不是很多（用C语言打，打到 $10^5$ 应该没问题），不过打小表还是 python 强。</p>
<p>附 python 打表代码，，，，</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#a90d91">for</span> <span style="color:#000">i</span> <span style="color:#000">in</span> <span style="color:#a90d91">range</span>(<span style="color:#1c01ce">1</span>, <span style="color:#1c01ce">5001</span>):
</span></span><span style="display:flex;"><span>	<span style="color:#a90d91">for</span> <span style="color:#000">j</span> <span style="color:#000">in</span> <span style="color:#a90d91">range</span>(<span style="color:#1c01ce">1</span>, <span style="color:#1c01ce">5001</span>):
</span></span><span style="display:flex;"><span>		<span style="color:#a90d91">if</span> (<span style="color:#000">i</span> <span style="color:#000">*</span> <span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#000">j</span> <span style="color:#000">*</span> <span style="color:#000">j</span>) <span style="color:#000">%</span> (<span style="color:#000">i</span> <span style="color:#000">*</span> <span style="color:#000">j</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>) <span style="color:#000">==</span> <span style="color:#1c01ce">0</span> <span style="color:#000">and</span> <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">j</span>:
</span></span><span style="display:flex;"><span>			<span style="color:#a90d91">print</span>(<span style="color:#000">i</span>, <span style="color:#000">j</span>, (<span style="color:#000">i</span> <span style="color:#000">*</span> <span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#000">j</span> <span style="color:#000">*</span> <span style="color:#000">j</span>) <span style="color:#000">/</span> (<span style="color:#000">i</span> <span style="color:#000">*</span> <span style="color:#000">j</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>))
</span></span></code></pre></div><h2 id="总结">总结</h2>
<p>DP 实在太差了！！！尤其是计数。。。。一生之痛。。。。</p>
<p>数学题打表确实很重要。</p>
<p>不能被降智（指奇怪的字符串题）。</p>]]></content:encoded>
    </item>
    
    <item>
      <title>CF453C</title>
      <link>https://luoyisu.github.io/posts/cf453c/</link>
      <pubDate>Fri, 12 Nov 2021 17:19:03 +0000</pubDate>
      
      <guid>https://luoyisu.github.io/posts/cf453c/</guid>
      <description>&lt;h2 id=&#34;description&#34;&gt;Description&lt;/h2&gt;
&lt;p&gt;给一个无向图，$n$​​​ 个点 $m$​​ 条边，给定一个 01 序列，如果 $a_i=1$​，要求走到这个点奇数次，否则，要求走到这个点偶数次，请你任选起点，输出满足要求的经过点的序列和序列长度，序列长度不能超过 $4n$。&lt;/p&gt;</description>
      <content:encoded><![CDATA[<h2 id="description">Description</h2>
<p>给一个无向图，$n$​​​ 个点 $m$​​ 条边，给定一个 01 序列，如果 $a_i=1$​，要求走到这个点奇数次，否则，要求走到这个点偶数次，请你任选起点，输出满足要求的经过点的序列和序列长度，序列长度不能超过 $4n$。</p>
<h2 id="solution">Solution</h2>
<p>没思路的时候看到 CF 标签上的 &ldquo;DFS&rdquo;，于是考虑乱搞，然后就搞出来了。</p>
<p>首先任选一个要求走奇数遍的一个点进行 DFS。我们先不考虑图的形状，找一棵 DFS 树出来，然后遍历，如果回溯的时候发现这个点的奇偶性不对，我们走到它的父亲，再走回来，这样奇偶性就对了。然后一算：遍历 $2n$，处理一个奇偶性错误需要走 $2$ 个点，上界 $4n$​，于是这道题就做完了。</p>
<p>注意到不一定是个联通图，那么考虑如果一个联通块内全是偶数，我们直接不走即可；如果存在奇数，那么必须走。</p>
<p>那么当有超过一个联通快内有奇数时，无解。</p>
<p>小问题：如果选择的根奇偶性不对，我们先正常改，然后把答案减掉 $3$ 即可（即不走回到根节点）。</p>
<h2 id="code">Code</h2>
<p>存答案的时候建议用 <code>vector</code> 而不是数组，我一开始忘记了 $4n$ 这回事导致 RE。</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1e5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">a</span>[<span style="color:#000">maxn</span>], <span style="color:#000">ans</span>[<span style="color:#000">maxn</span> <span style="color:#000">*</span> <span style="color:#1c01ce">4</span>], <span style="color:#000">father</span>[<span style="color:#000">maxn</span>], <span style="color:#000">vis</span>[<span style="color:#000">maxn</span>], <span style="color:#000">m</span>, <span style="color:#000">n</span>, <span style="color:#000">now</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">cnt</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">vector</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">e</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">add</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>) { <span style="color:#000">e</span>[<span style="color:#000">x</span>].<span style="color:#000">push_back</span>(<span style="color:#000">y</span>), <span style="color:#000">e</span>[<span style="color:#000">y</span>].<span style="color:#000">push_back</span>(<span style="color:#000">x</span>); }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">dfs</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">fa</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">vis</span>[<span style="color:#000">x</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">father</span>[<span style="color:#000">x</span>] <span style="color:#000">=</span> <span style="color:#000">fa</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">ans</span>[<span style="color:#000">++</span><span style="color:#000">cnt</span>] <span style="color:#000">=</span> <span style="color:#000">x</span>, <span style="color:#000">now</span>[<span style="color:#000">x</span>] <span style="color:#000">^=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">v</span> : <span style="color:#000">e</span>[<span style="color:#000">x</span>])
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">vis</span>[<span style="color:#000">v</span>])
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">continue</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">dfs</span>(<span style="color:#000">v</span>, <span style="color:#000">x</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">ans</span>[<span style="color:#000">++</span><span style="color:#000">cnt</span>] <span style="color:#000">=</span> <span style="color:#000">x</span>, <span style="color:#000">now</span>[<span style="color:#000">x</span>] <span style="color:#000">^=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">now</span>[<span style="color:#000">x</span>] <span style="color:#000">!=</span> <span style="color:#000">a</span>[<span style="color:#000">x</span>])
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">ans</span>[<span style="color:#000">++</span><span style="color:#000">cnt</span>] <span style="color:#000">=</span> <span style="color:#000">fa</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">ans</span>[<span style="color:#000">++</span><span style="color:#000">cnt</span>] <span style="color:#000">=</span> <span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">now</span>[<span style="color:#000">x</span>] <span style="color:#000">^=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">now</span>[<span style="color:#000">fa</span>] <span style="color:#000">^=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">ios</span><span style="color:#000">::</span><span style="color:#000">sync_with_stdio</span>(<span style="color:#a90d91">false</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">m</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>, <span style="color:#000">x</span>, <span style="color:#000">y</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">m</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">x</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">y</span>, <span style="color:#000">add</span>(<span style="color:#000">x</span>, <span style="color:#000">y</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">a</span>[<span style="color:#000">i</span>] <span style="color:#000">==</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">dfs</span>(<span style="color:#000">i</span>, <span style="color:#1c01ce">0</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">break</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">!</span><span style="color:#000">vis</span>[<span style="color:#000">i</span>] <span style="color:#000">&amp;&amp;</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>])
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">return</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">ans</span>[<span style="color:#000">cnt</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">==</span> <span style="color:#1c01ce">0</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">cnt</span> <span style="color:#000">&gt;=</span> <span style="color:#1c01ce">3</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cnt</span> <span style="color:#000">-=</span> <span style="color:#1c01ce">3</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">cnt</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">cnt</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">ans</span>[<span style="color:#000">i</span>] <span style="color:#000">&lt;&lt;</span> (<span style="color:#000">i</span> <span style="color:#000">==</span> <span style="color:#000">cnt</span> <span style="color:#000">?</span> <span style="color:#c41a16">&#34;</span><span style="color:#c41a16">\\</span><span style="color:#c41a16">n&#34;</span> <span style="color:#000">:</span> <span style="color:#c41a16">&#34; &#34;</span>);
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div>]]></content:encoded>
    </item>
    
    <item>
      <title>CF850D</title>
      <link>https://luoyisu.github.io/posts/cf850d/</link>
      <pubDate>Fri, 12 Nov 2021 16:49:34 +0000</pubDate>
      
      <guid>https://luoyisu.github.io/posts/cf850d/</guid>
      <description>&lt;h2 id=&#34;description&#34;&gt;Description&lt;/h2&gt;
&lt;p&gt;一个竞赛图的度数集合是由该竞赛图中每个点的出度所构成的集合。 现给定一个 $m$ 个元素的集合，第 $i$ 个元素是 $a_i$。判断其是否是一个竞赛图的度数集合,如果是，找到点数最小的满足条件的竞赛图。&lt;/p&gt;
&lt;p&gt;$1\le m\le 31$，$0\le a_i\le 30$，$a_i$ 互不相同。&lt;/p&gt;</description>
      <content:encoded><![CDATA[<h2 id="description">Description</h2>
<p>一个竞赛图的度数集合是由该竞赛图中每个点的出度所构成的集合。 现给定一个 $m$ 个元素的集合，第 $i$ 个元素是 $a_i$。判断其是否是一个竞赛图的度数集合,如果是，找到点数最小的满足条件的竞赛图。</p>
<p>$1\le m\le 31$，$0\le a_i\le 30$，$a_i$ 互不相同。</p>
<h2 id="solution">Solution</h2>
<p>这题好难啊，参考了别人的题解&amp;代码。</p>
<p>首先，题目中提到的兰道定理：将出度数组 $d$ 升序排序。$1≤i≤n$​​ 时，$\sum^i_{j=1}d_i\leq \dfrac{i(i−1)}{2}$​。当且仅当 $i=n$ 时取等。</p>
<p>这可以用来判定竞赛图。</p>
<p>然后在本题中，套进去，可以得到 $n_{max}=61$。</p>
<p>然后考虑得到点数以及每个点的出度——跑一个完全背包。</p>
<p>$f(i,j,k)$ 表示集合中前 $j$ 个元素能否构成一个 $i$ 个点 $k$ 条边的竞赛图。</p>
<p>转移非常简单，$f(i,j,k)=f(i-1,j,k-a_j) \operatorname{or}f(i-1,j-1,k-a_{j-1})$。</p>
<p>实际转移用刷表更好写。</p>
<p>然后 DFS 回溯一下，可以得到每个点的出度。</p>
<p>接下来是如何构造竞赛图：</p>
<p>有一个比较贪心的思路：每次找一个剩余出度最少的点，向其他点依次连边，直到剩余出度为 $0$，接着让没被连边的点和它连一条边，最后删掉这个点。</p>
<p>正确性感性理解即可，还算直观。</p>
<h2 id="code">Code</h2>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">61</span>, <span style="color:#000">maxm</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1832</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">f</span>[<span style="color:#000">maxn</span> <span style="color:#000">+</span> <span style="color:#1c01ce">3</span>][<span style="color:#000">maxn</span> <span style="color:#000">+</span> <span style="color:#1c01ce">3</span>][<span style="color:#000">maxm</span> <span style="color:#000">+</span> <span style="color:#1c01ce">3</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">pos</span>[<span style="color:#000">maxn</span> <span style="color:#000">+</span> <span style="color:#1c01ce">3</span>][<span style="color:#000">maxn</span> <span style="color:#000">+</span> <span style="color:#1c01ce">3</span>][<span style="color:#000">maxm</span> <span style="color:#000">+</span> <span style="color:#1c01ce">3</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">n</span>, <span style="color:#000">a</span>[<span style="color:#000">maxn</span> <span style="color:#000">+</span> <span style="color:#1c01ce">3</span>], <span style="color:#000">ans</span>[<span style="color:#000">maxn</span> <span style="color:#000">+</span> <span style="color:#1c01ce">3</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">find_ans</span>(<span style="color:#a90d91">int</span> <span style="color:#000">i</span>, <span style="color:#a90d91">int</span> <span style="color:#000">j</span>, <span style="color:#a90d91">int</span> <span style="color:#000">k</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">i</span> <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">ans</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">a</span>[<span style="color:#000">j</span>], <span style="color:#000">k</span> <span style="color:#000">-=</span> <span style="color:#000">a</span>[<span style="color:#000">j</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">f</span>[<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>][<span style="color:#000">j</span>][<span style="color:#000">k</span>])
</span></span><span style="display:flex;"><span>        <span style="color:#000">find_ans</span>(<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">j</span>, <span style="color:#000">k</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>        <span style="color:#000">find_ans</span>(<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">j</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">k</span>);
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">bool</span> <span style="color:#000">cmp</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>) { <span style="color:#a90d91">return</span> <span style="color:#000">ans</span>[<span style="color:#000">x</span>] <span style="color:#000">&lt;</span> <span style="color:#000">ans</span>[<span style="color:#000">y</span>]; }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">e</span>[<span style="color:#000">maxn</span> <span style="color:#000">+</span> <span style="color:#1c01ce">3</span>][<span style="color:#000">maxn</span> <span style="color:#000">+</span> <span style="color:#1c01ce">3</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">ios</span><span style="color:#000">::</span><span style="color:#000">sync_with_stdio</span>(<span style="color:#a90d91">false</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">sort</span>(<span style="color:#000">a</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">a</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">+</span> <span style="color:#000">n</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">f</span>[<span style="color:#1c01ce">1</span>][<span style="color:#1c01ce">1</span>][<span style="color:#000">a</span>[<span style="color:#1c01ce">1</span>]] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">maxn</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">k</span> <span style="color:#000">=</span> <span style="color:#000">i</span> <span style="color:#000">*</span> (<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>) <span style="color:#000">/</span> <span style="color:#1c01ce">2</span>; <span style="color:#000">k</span> <span style="color:#000">&lt;=</span> <span style="color:#000">maxm</span>; <span style="color:#000">k</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">if</span> (<span style="color:#000">f</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>][<span style="color:#000">k</span>])
</span></span><span style="display:flex;"><span>                    <span style="color:#000">f</span>[<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>][<span style="color:#000">j</span>][<span style="color:#000">k</span> <span style="color:#000">+</span> <span style="color:#000">a</span>[<span style="color:#000">j</span>]] <span style="color:#000">=</span> <span style="color:#000">f</span>[<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>][<span style="color:#000">j</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>][<span style="color:#000">k</span> <span style="color:#000">+</span> <span style="color:#000">a</span>[<span style="color:#000">j</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>]] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">res</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">maxn</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">f</span>[<span style="color:#000">i</span>][<span style="color:#000">n</span>][<span style="color:#000">i</span> <span style="color:#000">*</span> (<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>) <span style="color:#000">/</span> <span style="color:#1c01ce">2</span>])
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">res</span> <span style="color:#000">=</span> <span style="color:#000">i</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">break</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">!</span><span style="color:#000">res</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34;=)&#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">res</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#000">find_ans</span>(<span style="color:#000">res</span>, <span style="color:#000">n</span>, <span style="color:#000">res</span> <span style="color:#000">*</span> (<span style="color:#000">res</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>) <span style="color:#000">/</span> <span style="color:#1c01ce">2</span>);
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">pos</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">res</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">pos</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">i</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">res</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">sort</span>(<span style="color:#000">pos</span> <span style="color:#000">+</span> <span style="color:#000">i</span>, <span style="color:#000">pos</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">+</span> <span style="color:#000">res</span>, <span style="color:#000">cmp</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;=</span> <span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#000">ans</span>[<span style="color:#000">pos</span>[<span style="color:#000">i</span>]]; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">e</span>[<span style="color:#000">pos</span>[<span style="color:#000">i</span>]][<span style="color:#000">pos</span>[<span style="color:#000">j</span>]] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#000">ans</span>[<span style="color:#000">pos</span>[<span style="color:#000">i</span>]] <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;=</span> <span style="color:#000">res</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">e</span>[<span style="color:#000">pos</span>[<span style="color:#000">j</span>]][<span style="color:#000">pos</span>[<span style="color:#000">i</span>]] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">ans</span>[<span style="color:#000">pos</span>[<span style="color:#000">j</span>]]<span style="color:#000">--</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">res</span>; <span style="color:#000">i</span><span style="color:#000">++</span>, <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;=</span> <span style="color:#000">res</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">e</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div>]]></content:encoded>
    </item>
    
    <item>
      <title>CF483C&amp;CF508D</title>
      <link>https://luoyisu.github.io/posts/cf483ccf508d/</link>
      <pubDate>Wed, 10 Nov 2021 09:24:15 +0000</pubDate>
      
      <guid>https://luoyisu.github.io/posts/cf483ccf508d/</guid>
      <description>&lt;p&gt;两道CF题。&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>两道CF题。</p>
<h2 id="cf483c">CF483C</h2>
<h3 id="description">Description</h3>
<p>构造一个长度为 $n$ 的排列，使得集合 $\{|p_i-p_{i+1}|\}$ 的大小为 $k$。$n\leq10^5$。</p>
<h3 id="solution">Solution</h3>
<p>构造题，<strong><del>乱搞</del></strong>。</p>
<p>考虑大小是 $1$ 非常好构造，$1,2,3,4,&hellip;,n$。（似乎没啥用）</p>
<p>于是考虑构造集合中元素是 $1,2,&hellip;,k$ 的一个排列。注意到 $n$ 很大的时候可以让差全部为 $1$，所以在前面构造一下就行。</p>
<p>即前两个数差为 $k$，第二个和第三个差为 $k-1$，以此类推（</p>
<p>手算：大小是 $2$ 可以用以下方式简单构造 $1,3,2,4,5,6,&hellip;,n$，大小是 $3$ 也很简单：$1,4,2,3,5,6,&hellip;,n$。</p>
<p>然后构造一个 $1,k+1,2,k,3,k-1&hellip;$ 的排列就好了，具体实现还是用的差递减来构造。（话说这个构造很眼熟啊，似乎和洛谷上一道构造题的第一问很像）</p>
<h3 id="code">Code</h3>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1e5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">n</span>, <span style="color:#000">k</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">a</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">k</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">a</span>[<span style="color:#1c01ce">1</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">i</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2</span>; <span style="color:#000">k</span> <span style="color:#000">&gt;=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">k</span><span style="color:#000">--</span>, <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">i</span> <span style="color:#000">&amp;</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">a</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">a</span>[<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">-</span> <span style="color:#000">k</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>            <span style="color:#000">a</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">a</span>[<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">+</span> <span style="color:#000">k</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">a</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">i</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>] <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="cf508d">CF508D</h2>
<h3 id="description-1">Description</h3>
<p>给出 $n$ 个长度为 $3$ 的字符串，求一个长度为 $n+2$ 的字符串，使其所有长度为 $3$ 的子串能与给定串一一对应。$n\leq10^5$。</p>
<h3 id="solution-1">Solution</h3>
<p>这个模型以前见过，只需要搞欧拉路即可。<del>（已经当定理背下来了）</del></p>
<p>要硬说的话，会想到两种建模：每个单词作为顶点，然后在点之间连有向边，找哈密顿路。这显然不行。。。</p>
<p>然后就是很好的建模了，把每个字母作为点，单词作为有向边，这样就变成找欧拉路，能高效求解。。。</p>
<p>这个模型目前还没见到其他应用，不过也记下来，万一有用呢。。。</p>
<p>回到本题，把两个字符当成一个点就行。</p>
<p>坑点：这题有大小写字母，还有数字，注意 ASCII 码的顺序：数字&lt;大写字母&lt;小写字母。我懒得写正经哈希，就直接乱搞了，不注意 ASCII 码顺序就容易 RE。。。</p>
<h3 id="code-1">Code</h3>
<p>我代码又慢又丑。。。</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;stack&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;string&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">string</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">100000</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">int</span> <span style="color:#000">change</span>(<span style="color:#a90d91">char</span> <span style="color:#000">a</span>, <span style="color:#a90d91">char</span> <span style="color:#000">b</span>) { <span style="color:#a90d91">return</span> (<span style="color:#000">a</span> <span style="color:#000">-</span> <span style="color:#2300ce">&#39;0&#39;</span>) <span style="color:#000">*</span> <span style="color:#1c01ce">100</span> <span style="color:#000">+</span> (<span style="color:#000">b</span> <span style="color:#000">-</span> <span style="color:#2300ce">&#39;0&#39;</span>); }
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#000">string</span> <span style="color:#000">p</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">string</span> <span style="color:#000">s</span> <span style="color:#000">=</span> <span style="color:#c41a16">&#34;  &#34;</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">s</span>[<span style="color:#1c01ce">1</span>] <span style="color:#000">=</span> <span style="color:#a90d91">char</span>(<span style="color:#000">x</span> <span style="color:#000">%</span> <span style="color:#1c01ce">100</span> <span style="color:#000">+</span> <span style="color:#2300ce">&#39;0&#39;</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">s</span>[<span style="color:#1c01ce">0</span>] <span style="color:#000">=</span> <span style="color:#a90d91">char</span>(<span style="color:#000">x</span> <span style="color:#000">/</span> <span style="color:#1c01ce">100</span> <span style="color:#000">+</span> <span style="color:#2300ce">&#39;0&#39;</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#000">s</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">rd</span>[<span style="color:#000">maxn</span>], <span style="color:#000">cd</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">vector</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">e</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">add_</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>) { <span style="color:#000">e</span>[<span style="color:#000">x</span>].<span style="color:#000">push_back</span>(<span style="color:#000">y</span>), <span style="color:#000">rd</span>[<span style="color:#000">y</span>]<span style="color:#000">++</span>, <span style="color:#000">cd</span>[<span style="color:#000">x</span>]<span style="color:#000">++</span>; }
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">add</span>(<span style="color:#a90d91">const</span> <span style="color:#000">string</span> <span style="color:#000">&amp;</span><span style="color:#000">x</span>) { <span style="color:#000">add_</span>(<span style="color:#000">change</span>(<span style="color:#000">x</span>[<span style="color:#1c01ce">0</span>], <span style="color:#000">x</span>[<span style="color:#1c01ce">1</span>]), <span style="color:#000">change</span>(<span style="color:#000">x</span>[<span style="color:#1c01ce">1</span>], <span style="color:#000">x</span>[<span style="color:#1c01ce">2</span>])); }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">stack</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">ans</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">dfs</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> (<span style="color:#000">e</span>[<span style="color:#000">x</span>].<span style="color:#000">size</span>())
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">v</span> <span style="color:#000">=</span> <span style="color:#000">e</span>[<span style="color:#000">x</span>].<span style="color:#000">back</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#000">e</span>[<span style="color:#000">x</span>].<span style="color:#000">pop_back</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#000">dfs</span>(<span style="color:#000">v</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">ans</span>.<span style="color:#000">push</span>(<span style="color:#000">x</span>);
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">ios</span><span style="color:#000">::</span><span style="color:#000">sync_with_stdio</span>(<span style="color:#a90d91">false</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">string</span> <span style="color:#000">s</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">s</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">add</span>(<span style="color:#000">s</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">cnt1</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>, <span style="color:#000">cnt2</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>, <span style="color:#000">ok</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">u</span> <span style="color:#000">=</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">char</span> <span style="color:#000">c</span> <span style="color:#000">=</span> <span style="color:#2300ce">&#39;0&#39;</span>; <span style="color:#000">c</span> <span style="color:#000">&lt;=</span> <span style="color:#2300ce">&#39;z&#39;</span>; <span style="color:#000">c</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">char</span> <span style="color:#000">c2</span> <span style="color:#000">=</span> <span style="color:#2300ce">&#39;0&#39;</span>; <span style="color:#000">c2</span> <span style="color:#000">&lt;=</span> <span style="color:#2300ce">&#39;z&#39;</span>; <span style="color:#000">c2</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">int</span> <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">change</span>(<span style="color:#000">c</span>, <span style="color:#000">c2</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">abs</span>(<span style="color:#000">rd</span>[<span style="color:#000">x</span>] <span style="color:#000">-</span> <span style="color:#000">cd</span>[<span style="color:#000">x</span>]) <span style="color:#000">&gt;</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>            {
</span></span><span style="display:flex;"><span>                <span style="color:#000">ok</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">break</span>;
</span></span><span style="display:flex;"><span>            }
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">else</span> <span style="color:#a90d91">if</span> (<span style="color:#000">cd</span>[<span style="color:#000">x</span>] <span style="color:#000">-</span> <span style="color:#000">rd</span>[<span style="color:#000">x</span>] <span style="color:#000">==</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">cnt1</span><span style="color:#000">++</span>, <span style="color:#000">u</span> <span style="color:#000">=</span> <span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">else</span> <span style="color:#a90d91">if</span> (<span style="color:#000">rd</span>[<span style="color:#000">x</span>] <span style="color:#000">-</span> <span style="color:#000">cd</span>[<span style="color:#000">x</span>] <span style="color:#000">==</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">cnt2</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">!</span>(<span style="color:#000">cnt1</span> <span style="color:#000">+</span> <span style="color:#000">cnt2</span> <span style="color:#000">==</span> <span style="color:#1c01ce">0</span> <span style="color:#000">||</span> (<span style="color:#000">cnt1</span> <span style="color:#000">==</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">cnt2</span> <span style="color:#000">==</span> <span style="color:#1c01ce">1</span>)))
</span></span><span style="display:flex;"><span>        <span style="color:#000">ok</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">!</span><span style="color:#000">ok</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34;NO&#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">u</span> <span style="color:#000">!=</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">dfs</span>(<span style="color:#000">u</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">char</span> <span style="color:#000">c</span> <span style="color:#000">=</span> <span style="color:#2300ce">&#39;0&#39;</span>; <span style="color:#000">c</span> <span style="color:#000">&lt;=</span> <span style="color:#2300ce">&#39;z&#39;</span>; <span style="color:#000">c</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">char</span> <span style="color:#000">c2</span> <span style="color:#000">=</span> <span style="color:#2300ce">&#39;0&#39;</span>; <span style="color:#000">c2</span> <span style="color:#000">&lt;=</span> <span style="color:#2300ce">&#39;z&#39;</span>; <span style="color:#000">c2</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">if</span> (<span style="color:#000">cd</span>[<span style="color:#000">change</span>(<span style="color:#000">c</span>, <span style="color:#000">c2</span>)])
</span></span><span style="display:flex;"><span>                    <span style="color:#000">u</span> <span style="color:#000">=</span> <span style="color:#000">change</span>(<span style="color:#000">c</span>, <span style="color:#000">c2</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">dfs</span>(<span style="color:#000">u</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">ans</span>.<span style="color:#000">size</span>() <span style="color:#000">!=</span> <span style="color:#000">n</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34;NO&#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34;YES&#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">p</span>(<span style="color:#000">ans</span>.<span style="color:#000">top</span>())[<span style="color:#1c01ce">0</span>] <span style="color:#000">&lt;&lt;</span> <span style="color:#000">p</span>(<span style="color:#000">ans</span>.<span style="color:#000">top</span>())[<span style="color:#1c01ce">1</span>];
</span></span><span style="display:flex;"><span>        <span style="color:#000">ans</span>.<span style="color:#000">pop</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">while</span> (<span style="color:#000">!</span><span style="color:#000">ans</span>.<span style="color:#000">empty</span>())
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">p</span>(<span style="color:#000">ans</span>.<span style="color:#000">top</span>())[<span style="color:#1c01ce">1</span>];
</span></span><span style="display:flex;"><span>            <span style="color:#000">ans</span>.<span style="color:#000">pop</span>();
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div>]]></content:encoded>
    </item>
    
    <item>
      <title>211109模拟赛</title>
      <link>https://luoyisu.github.io/posts/211109%E6%A8%A1%E6%8B%9F%E8%B5%9B/</link>
      <pubDate>Tue, 09 Nov 2021 14:14:55 +0000</pubDate>
      
      <guid>https://luoyisu.github.io/posts/211109%E6%A8%A1%E6%8B%9F%E8%B5%9B/</guid>
      <description>&lt;h2 id=&#34;概述&#34;&gt;概述&lt;/h2&gt;
&lt;p&gt;期望 $100+100+100+20=320$，实际 $100+100+80+20=300$。没怎么挂。&lt;/p&gt;</description>
      <content:encoded><![CDATA[<h2 id="概述">概述</h2>
<p>期望 $100+100+100+20=320$，实际 $100+100+80+20=300$。没怎么挂。</p>
<h2 id="赛时">赛时</h2>
<p>按照计划，打算把每道题都想一想。</p>
<p>于是看到 T1，是个数学题，尝试乱推无果，注意到 $n\leq 10^{18}$，那就有趣了，往矩阵快速幂上靠（（（</p>
<p>然后稍微一推发现是个带水题，直接开写。</p>
<p>然后矩阵板子写挂了，然后发现是构造函数没 <code>memset</code>，改完就过样例了。时间还有，写了个线性递推来对拍。差不多在开始考试将近一个小时时搞好了。</p>
<p>去看 T2，完全图三元环，正着乱搞无果，于是考虑转化，用所有减去不合法。</p>
<p>所有的三元环随便就推+找规律蒙出来了，然后不合法的乱推了一下找找规律似乎也找出来了。快速写完，然后写了个 $O(n^3)$​ 暴力对拍。没拍出来错误，放心了（</p>
<p>然后发现 T1 拍出来问题了，仔细一看是正解的特判 $n=1$ 和 $n=2$ 的情况写反了，我谔谔，赶忙改过来，然后接着拍 $n=1\sim5$，没啥问题，放心了（</p>
<p>这时候才过去两个小时，感觉优势很大（（（</p>
<p>T3 不是很好做，T4 更不懂，都没读懂题更别说暴力了。</p>
<p>先莽 T3，想了很久，找规律发现实际上只需要选择 $n+m-1$ 个点，然后想到了一个大概是 $O(nm(n+m)\log (nm))$ 的纯粹乱搞做法，这个能过 $50$​ 分。</p>
<p>看时间很充裕，接着想正解（（（</p>
<p>瓶颈在找点上，再优化一下，想了一个莫名其妙的做法：直接把所有点都加到堆里，然后取出来看这一行和这一列有没有必要选，可以 $O(nm\log(nm))$​​，想过有点悬，然后发现这个做法取出来判断不是很好实现，又画了画图发现选一个点实际上就是在行和列之间加边。。。</p>
<p>那不如直接枚举行和列，就能搞到 $O((n+m)^2)$​。。。。</p>
<p>写完之后也不想写暴力了，分数应该还算可以，想莽一下 T4。</p>
<p>然后思考许久发现我是真不会。。。。。</p>
<p>注意到有 $20$ 分是 $n\leq8$，于是花了 $20\text{min}$ 手算了一波跑路了。。。。</p>
<h2 id="赛后">赛后</h2>
<p>T3 MLE 挂了 $20$​ 分，看来 <code>long long</code> 不能随便用啊= =，还好没爆零，这必须得注意。。</p>
<p>然后发现会TLE，需要稍微卡卡常（取模，<code>long long</code>）</p>
<p>发现 T4 大数据中有一个是样例，我没输出，于是没拿到这 $10$​ 分。。。</p>
<p>发现 T3 是个最小生成树，第二次遇到这种题了，得注意对这种怪异题目的图论建模+套算法。</p>
<p>T4 真不会，不冤。。。</p>
<h2 id="总结">总结</h2>
<p>该骗分还是得骗分，不骗白不骗。。。</p>
<p>空间得算准了。。。。。。。。</p>
<p>这次没爆零还算可以，但是要是有一天因为 MLE 爆零，那我估计就得难受死了。。。。。</p>
<p>换句话说，对于空间复杂度和时间复杂度都是 $O(n^2)$​ 的算法，要注意空间的问题，毕竟此类题目一般 $n=5000$​​，很容易 MLE。。。</p>
<p>要注意 <code>vector</code> 的空间常数，存完全图时不如邻接矩阵。</p>
<p>当复杂度逼近 $10^8$ 时要注意常数。如果可能，减少取模以及 <code>long long</code> 的使用。</p>
<p>今天因为想正解比较顺利，没有怎么写暴力，不过看来对拍还是很重要的。。。</p>
<p>莫名其妙题目的图论建模！不管是转化为图论模型还是补集转化，总之转化思想很重要。。。</p>]]></content:encoded>
    </item>
    
    <item>
      <title>211108模拟赛总结</title>
      <link>https://luoyisu.github.io/posts/211108%E6%A8%A1%E6%8B%9F%E8%B5%9B%E6%80%BB%E7%BB%93/</link>
      <pubDate>Mon, 08 Nov 2021 14:27:55 +0000</pubDate>
      
      <guid>https://luoyisu.github.io/posts/211108%E6%A8%A1%E6%8B%9F%E8%B5%9B%E6%80%BB%E7%BB%93/</guid>
      <description>&lt;h2 id=&#34;概述&#34;&gt;概述&lt;/h2&gt;
&lt;p&gt;不说了，非常凄凉。。。&lt;/p&gt;
&lt;p&gt;感觉今天可以被认为是个小转折点，于是多写点（（（（（&lt;/p&gt;</description>
      <content:encoded><![CDATA[<h2 id="概述">概述</h2>
<p>不说了，非常凄凉。。。</p>
<p>感觉今天可以被认为是个小转折点，于是多写点（（（（（</p>
<h2 id="赛时">赛时</h2>
<p>T1 不会，T2 有点感觉，T3 能写暴力，T4 不是很懂。</p>
<p>写了个 T3 暴力背包DP，感觉能优化，稍微想了想无果，于是扔了。</p>
<p>转过头看 T2，发现有个 $O(n^2)$ 暴力 DP 很好写，但是我想到了一个很假的贪心，就直接去莽了，结果花费了大量的时间。</p>
<p>去看 T4，有点心烦意乱没法好好分析它的程序，随手写了个暴力走人。</p>
<p>又去 T1，乱搞能搞出来 $30$ 分暴力，不过不怎么好写，就去想正解了。</p>
<p>觉得就是找空盘搞 DP，就开始思考正解，但我实在是不擅长这种题，不会啊啊啊啊啊。</p>
<p>发现没有时间了，转手写了个 $10$ 分暴力跑路。</p>
<p>然后发现时间严重不足，T2 的暴力没时间写了。。。</p>
<p>就这么很悲凉地结束了。</p>
<h2 id="总结">总结</h2>
<p>暴力该写还是得写，比如 T2。。。尤其是不花费什么时间的时候——我已经调完了哈希判回文串，只需要套个 DP 上去就能改造成 $O(n^2)$ 暴力水过去 $60$ 分。</p>
<p>实际上 T2 比较偏结论，我往这方面思考过，但是没有发现真正的性质，还是不够深入啊。</p>
<p>T3 暴力写的也有点慢了。。。思考深度不够，其实正解思路不是特别复杂。仍然是 DP 状态的转化。平均值转为和优化为平均值转为与平均值的差。</p>
<p>T4 把题目理解错了，以为每次修改之后会恢复到原序列，导致完全不需要动脑的 $30$ 分暴力没了。</p>
<p>同时通过这道题也可以看出，我对这种给定代码判断它在干啥的题很不擅长，也许需要好好总结一下到底应该怎么做。。。</p>
<p>然后这道题考试时候都没怎么思考，，，连数据范围给的提示都忽略了。。。</p>
<p>T1 暴力还写挂了，实在是悲剧。。。随手写的，确实是有点心急。事实上 T1 确实是个 DP 类计数，我一看到”方案数“和”取模“就头疼。。。。</p>
<hr>
<p>下面再稍微说一下心理吧。</p>
<p>今天 T3 T2 都有点上头，以为有所谓的“感觉”就上头想切掉，结果 T3 还好，拿到了应有的暴力，T2 就是真没了。。。</p>
<p>想着切题也许是好的，但实在不能太过于上头，如果同时想到了暴力以及“正解”，尤其是像今天这种二者分歧不是特别大的时候，还是应该先写暴力！两个都写了然后对拍不香吗？？？为什么我总是直接去莽正解了。。。。</p>
<p>然后是对于题目难度的判断，其实今天 T1 反而是在我的水平看来是比较难的题，我没有判断出来，导致以为自己被“降智”，其实真就是不会。（也没有非常多时间思考）</p>
<p>按理来说面对不会的题应该写个暴力跑路，但是因为 T1 $30$ 分的暴力不是非常好写，我想到离散化等等，还不一定能过，就去思考正解了，这其实是个错误，遇到这种题也许先混暴力比较好，也能更专心思考。</p>
<p>有关 T4，得认真分析，数据范围也不能忽略，其实不是那么难。</p>
<p>每次模拟赛都感觉时间不够，打字慢显然是因素之一——我打字指法一直是完全错误的。。</p>
<p>再就是对一些基础的东西不熟练吧，比如今天的哈希判回文串，我其实是会的，思想也很好地掌握了，但是打的时候愣是出 bug 了，虽然顺利调出来了但终究是浪费了时间。</p>
<p>再深挖一下，我暴力和正解很难都写，也许很大的一个原因就是因为自己代码能力差，导致没有时间。。。</p>
<p>以后的比赛必须在暴力和正解之间找一个平衡，比如说一道题分配一些时间，时间到了之后就去写当时能想到的最高分，如果想了正解就很有必要打暴力对拍；或者说除了考虑最高分，还考虑时间的性价比，先写性价比高的分数。以前的模拟赛都没有完全量化时间和分数来写题，感觉以后量化一下也许是个可取的策略。</p>
<p>至于这个时间具体是多少也许得反复尝试了，平时做题也可以试试？</p>]]></content:encoded>
    </item>
    
    <item>
      <title>luogu3607 [USACO17JAN]Subsequence Reversal P</title>
      <link>https://luoyisu.github.io/posts/luogu3607/</link>
      <pubDate>Fri, 05 Nov 2021 10:07:50 +0000</pubDate>
      
      <guid>https://luoyisu.github.io/posts/luogu3607/</guid>
      <description>&lt;h2 id=&#34;description&#34;&gt;Description&lt;/h2&gt;
&lt;p&gt;给定一个长度为 $n$ 的序列 $\{a_i\}$，可以选择一个子序列将其反转，求能获得的最大不下降子序列。&lt;/p&gt;
&lt;p&gt;$n\leq 50$。&lt;/p&gt;</description>
      <content:encoded><![CDATA[<h2 id="description">Description</h2>
<p>给定一个长度为 $n$ 的序列 $\{a_i\}$，可以选择一个子序列将其反转，求能获得的最大不下降子序列。</p>
<p>$n\leq 50$。</p>
<h2 id="solution">Solution</h2>
<p>观察一下反转的性质，实际上就相当于将这个子序列两边对调，且不会有交错和并列，与区间 DP 能很好地搭配——选择反转两个数，他们之间的区间可以接着反转。</p>
<p>那么考虑 $f_{i,j}$ 表示区间 $[i,j]$ 的答案，其中只考虑是否反转 $a_i,a_j$。</p>
<p>考虑如何由小区间得到大区间的解，回忆 LIS 的 $O(n^2)$ 做法，与值有关，那么再加两维状态：$f_{i,j,l,r}$ 表示区间 $[i,j]$，值域 $[l,r]$ 的答案。</p>
<p>那么就可以方便的转移了。</p>
<p>首先，大值域显然可以由小值域得来，即 $f_{i,j,l,r}=\max(f_{i,j,l+1,r},f_{i,j,l,r-1})$。</p>
<p>为表述方便，记 $[\text{bool}]=\begin{cases}1&amp;\text{if bool = TRUE} \\ 0&amp;\text{if bool = FALSE}\end{cases}$​​。</p>
<p>当不反转 $a_i$​​，$a_j$​​ 时，$f_{i,j,l,r}=\max(f_{i+1,j,l,r}+[a_i=l],f_{i,j-1,l,r}+[a_j=r])$​​。</p>
<p>当反转 $a_i$，$a_j$ 时，$f_{i,j,l,r}=f_{i+1,j-1,l,r}+[a_i=l]+[a_j=r]$。</p>
<p>把上面的方程都取个 $\text{max}$，就得到这个状态的答案了。</p>
<p>初始状态就把区间长度为 $1$ 的合法状态都设成 $1$ 即可。</p>
<p>一开始把不相等的情况也考虑进去了，后来发现是错的：不相等的情况在值域扩张的时候会被考虑到，没必要再进行讨论。（其实把细节稍微改一下也能做）</p>
<h2 id="code">Code</h2>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">55</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">a</span>[<span style="color:#000">maxn</span>], <span style="color:#000">b</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">f</span>[<span style="color:#000">maxn</span>][<span style="color:#000">maxn</span>][<span style="color:#000">maxn</span>][<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">upd_max</span>(<span style="color:#a90d91">int</span> <span style="color:#000">&amp;</span><span style="color:#000">a</span>, <span style="color:#a90d91">int</span> <span style="color:#000">b</span>) { <span style="color:#000">a</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">max</span>(<span style="color:#000">a</span>, <span style="color:#000">b</span>); }
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">int</span> <span style="color:#000">change</span>(<span style="color:#a90d91">bool</span> <span style="color:#000">x</span>) { <span style="color:#a90d91">return</span> <span style="color:#000">x</span> <span style="color:#000">?</span> <span style="color:#1c01ce">1</span> <span style="color:#000">:</span> <span style="color:#1c01ce">0</span>; }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">scanf</span>(<span style="color:#c41a16">&#34;%d&#34;</span>, <span style="color:#000">&amp;</span><span style="color:#000">n</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">scanf</span>(<span style="color:#c41a16">&#34;%d&#34;</span>, <span style="color:#000">&amp;</span><span style="color:#000">a</span>[<span style="color:#000">i</span>]), <span style="color:#000">b</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>    
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">sort</span>(<span style="color:#000">b</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">b</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">+</span> <span style="color:#000">n</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">tot</span> <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">unique</span>(<span style="color:#000">b</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">b</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">+</span> <span style="color:#000">n</span>) <span style="color:#000">-</span> <span style="color:#000">b</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">a</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">lower_bound</span>(<span style="color:#000">b</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">b</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">+</span> <span style="color:#000">tot</span>, <span style="color:#000">a</span>[<span style="color:#000">i</span>]) <span style="color:#000">-</span> <span style="color:#000">b</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#177500">// 其实没必要离散化。
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;=</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>]; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">k</span> <span style="color:#000">=</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>]; <span style="color:#000">k</span> <span style="color:#000">&lt;=</span> <span style="color:#000">tot</span>; <span style="color:#000">k</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">f</span>[<span style="color:#000">i</span>][<span style="color:#000">i</span>][<span style="color:#000">j</span>][<span style="color:#000">k</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#177500">// DP的顺序需要考虑一下
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">len</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2</span>; <span style="color:#000">len</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">len</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#000">len</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">j</span> <span style="color:#000">&gt;</span> <span style="color:#000">n</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">continue</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">len2</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">len2</span> <span style="color:#000">&lt;=</span> <span style="color:#000">tot</span>; <span style="color:#000">len2</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            {
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">l</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">l</span> <span style="color:#000">&lt;=</span> <span style="color:#000">tot</span>; <span style="color:#000">l</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                {
</span></span><span style="display:flex;"><span>                    <span style="color:#a90d91">int</span> <span style="color:#000">r</span> <span style="color:#000">=</span> <span style="color:#000">l</span> <span style="color:#000">+</span> <span style="color:#000">len2</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>                    <span style="color:#a90d91">if</span> (<span style="color:#000">r</span> <span style="color:#000">&gt;</span> <span style="color:#000">tot</span>)
</span></span><span style="display:flex;"><span>                        <span style="color:#a90d91">continue</span>;
</span></span><span style="display:flex;"><span>                    <span style="color:#a90d91">if</span> (<span style="color:#000">l</span> <span style="color:#000">!=</span> <span style="color:#000">tot</span>)
</span></span><span style="display:flex;"><span>                        <span style="color:#000">upd_max</span>(<span style="color:#000">f</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>][<span style="color:#000">l</span>][<span style="color:#000">r</span>], <span style="color:#000">f</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>][<span style="color:#000">l</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>][<span style="color:#000">r</span>]);
</span></span><span style="display:flex;"><span>                    <span style="color:#000">upd_max</span>(<span style="color:#000">f</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>][<span style="color:#000">l</span>][<span style="color:#000">r</span>], <span style="color:#000">f</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>][<span style="color:#000">l</span>][<span style="color:#000">r</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>]);
</span></span><span style="display:flex;"><span>                    <span style="color:#000">upd_max</span>(<span style="color:#000">f</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>][<span style="color:#000">l</span>][<span style="color:#000">r</span>], <span style="color:#000">f</span>[<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>][<span style="color:#000">j</span>][<span style="color:#000">l</span>][<span style="color:#000">r</span>] <span style="color:#000">+</span> <span style="color:#000">change</span>(<span style="color:#000">a</span>[<span style="color:#000">i</span>] <span style="color:#000">==</span> <span style="color:#000">l</span>));
</span></span><span style="display:flex;"><span>                    <span style="color:#000">upd_max</span>(<span style="color:#000">f</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>][<span style="color:#000">l</span>][<span style="color:#000">r</span>], <span style="color:#000">f</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>][<span style="color:#000">l</span>][<span style="color:#000">r</span>] <span style="color:#000">+</span> <span style="color:#000">change</span>(<span style="color:#000">a</span>[<span style="color:#000">j</span>] <span style="color:#000">==</span> <span style="color:#000">r</span>));
</span></span><span style="display:flex;"><span>                    <span style="color:#000">upd_max</span>(<span style="color:#000">f</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>][<span style="color:#000">l</span>][<span style="color:#000">r</span>], <span style="color:#000">f</span>[<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>][<span style="color:#000">j</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>][<span style="color:#000">l</span>][<span style="color:#000">r</span>] <span style="color:#000">+</span> <span style="color:#000">change</span>(<span style="color:#000">a</span>[<span style="color:#000">i</span>] <span style="color:#000">==</span> <span style="color:#000">r</span>) <span style="color:#000">+</span> <span style="color:#000">change</span>(<span style="color:#000">a</span>[<span style="color:#000">j</span>] <span style="color:#000">==</span> <span style="color:#000">l</span>));
</span></span><span style="display:flex;"><span>                }
</span></span><span style="display:flex;"><span>            }
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">printf</span>(<span style="color:#c41a16">&#34;%d</span><span style="color:#c41a16">\\</span><span style="color:#c41a16">n&#34;</span>, <span style="color:#000">f</span>[<span style="color:#1c01ce">1</span>][<span style="color:#000">n</span>][<span style="color:#1c01ce">1</span>][<span style="color:#000">tot</span>]);
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div>]]></content:encoded>
    </item>
    
    <item>
      <title>211104模拟赛挂分记</title>
      <link>https://luoyisu.github.io/posts/211104%E6%A8%A1%E6%8B%9F%E8%B5%9B%E6%8C%82%E5%88%86%E8%AE%B0/</link>
      <pubDate>Thu, 04 Nov 2021 13:32:27 +0000</pubDate>
      
      <guid>https://luoyisu.github.io/posts/211104%E6%A8%A1%E6%8B%9F%E8%B5%9B%E6%8C%82%E5%88%86%E8%AE%B0/</guid>
      <description>&lt;h2 id=&#34;概述&#34;&gt;概述&lt;/h2&gt;
&lt;p&gt;预计 $100+100+0+20=220$，实际 $50+0+0+0=50$，挂成傻逼了。&lt;/p&gt;</description>
      <content:encoded><![CDATA[<h2 id="概述">概述</h2>
<p>预计 $100+100+0+20=220$，实际 $50+0+0+0=50$，挂成傻逼了。</p>
<h2 id="赛时">赛时</h2>
<p>T1 傻逼题，几分钟就切了。</p>
<p>T2 一眼想了个貌似能过的做法，写完跑路了。</p>
<p>T3 不懂。</p>
<p>T4 能想一个 $O(n^3k)$ 的做法，不是很想写了&hellip;</p>
<p>状态太差了，于是就这么躺平了（（（</p>
<h2 id="赛后">赛后</h2>
<p>T1 写挂了，实在是惨，因为题目过于水有点大意了。。。</p>
<p>T2 发现我复杂度分析错了以为能拿 $100$ 分，于是因为数组开大光荣由 $80\rightarrow0$。。。</p>
<p>T4 <code>CE</code> 了。</p>
<h2 id="总结">总结</h2>
<p>虽然是老生常谈了，没有足够强的大样例时还是应该自己造数据/对拍。</p>
<p>分析复杂度一定要准确，不能一边梦游一边分析，更不能因此开大数组爆零！！</p>
<p>写完代码一定要编译！！！！</p>]]></content:encoded>
    </item>
    
    <item>
      <title>211031模拟赛</title>
      <link>https://luoyisu.github.io/posts/211031%E6%A8%A1%E6%8B%9F%E8%B5%9B/</link>
      <pubDate>Sun, 31 Oct 2021 14:25:27 +0000</pubDate>
      
      <guid>https://luoyisu.github.io/posts/211031%E6%A8%A1%E6%8B%9F%E8%B5%9B/</guid>
      <description>&lt;h2 id=&#34;概述&#34;&gt;概述&lt;/h2&gt;
&lt;p&gt;期望 $0+100+0+70=170$，实际 $0+100+0+50=150$。还可以。&lt;/p&gt;
&lt;p&gt;被 SHR 神吊打了qwq。&lt;/p&gt;</description>
      <content:encoded><![CDATA[<h2 id="概述">概述</h2>
<p>期望 $0+100+0+70=170$，实际 $0+100+0+50=150$。还可以。</p>
<p>被 SHR 神吊打了qwq。</p>
<h2 id="赛时">赛时</h2>
<p>试图做 T1 发现不会，像个 DP，果然我 DP 不行。</p>
<p>T2 似乎是个傻逼题，但是我又不会，于是打了个 $O(n^4)$ 暴力，然后造了几组 $n=500$ 的极限数据，发现跑的时间只需要 $\text{0.03s}$，想了想不知道怎么卡掉，觉得似乎能玄学 AC？</p>
<p>T3 不会，感觉是个 DP。</p>
<p>T4 想了想贪心，写了个暴力，但是挂成傻逼了，调了很久。</p>
<p>然后试图套个数据结构优化成正解，套失败了。。。</p>
<p>然后 T1 的 $20$ 分阶乘暴力也没写。</p>
<p>跑路跑路跑路。</p>
<h2 id="赛后">赛后</h2>
<p>发现 T2 我暴力碾标算，太离谱了，不会分析复杂度（（（（（</p>
<p>于是发现 T3 是个二分+模拟，没发现可太惨了（（（（（</p>
<p>T4 调不动了（（（</p>
<h2 id="总结">总结</h2>
<p>不能被降智啊啊啊，不会的题还是快速写个暴力比较好。</p>]]></content:encoded>
    </item>
    
    <item>
      <title>211028模拟赛</title>
      <link>https://luoyisu.github.io/posts/211028%E6%A8%A1%E6%8B%9F%E8%B5%9B/</link>
      <pubDate>Thu, 28 Oct 2021 18:53:02 +0000</pubDate>
      
      <guid>https://luoyisu.github.io/posts/211028%E6%A8%A1%E6%8B%9F%E8%B5%9B/</guid>
      <description>&lt;h2 id=&#34;概述&#34;&gt;概述&lt;/h2&gt;
&lt;p&gt;本校出题。&lt;/p&gt;
&lt;p&gt;期望 $100+100+0+0=200$，实际 $100+0+0+0=100$​。&lt;/p&gt;</description>
      <content:encoded><![CDATA[<h2 id="概述">概述</h2>
<p>本校出题。</p>
<p>期望 $100+100+0+0=200$，实际 $100+0+0+0=100$​。</p>
<h2 id="赛时">赛时</h2>
<p>T1 看了好久才懂，T2 是个分层图次短路，赶快写完跑路了。</p>
<p>T3 很怪的 DP，不会，有点神仙。</p>
<p>T4 只会暴力，不太想写。</p>
<p>发现 T1 实际上的问题是比较简明的，是个推式子题。</p>
<p>打完 T2，大力找了 T1 的规律，然后也没证明就跑路了。（还好规律简单）</p>
<h2 id="总结">总结</h2>
<p>T2 爆零了，果然还是不会次短路和分层图，学习ing。</p>
<p>T4 是个结论题，学习了。</p>
<p>T3 这种难度的 DP 我还是做不出来，DP 好难啊qwq。</p>
<p>不过 T1 打表猜结论是好的，如果我会证明就更好了（</p>]]></content:encoded>
    </item>
    
    <item>
      <title>luogu3281 [SCOI2013]数数</title>
      <link>https://luoyisu.github.io/posts/luogu3281/</link>
      <pubDate>Thu, 28 Oct 2021 10:31:41 +0000</pubDate>
      
      <guid>https://luoyisu.github.io/posts/luogu3281/</guid>
      <description>&lt;h2 id=&#34;description&#34;&gt;Description&lt;/h2&gt;
&lt;p&gt;有两个 $B$ 进制数 $L,R$，求区间 $[L,R]$ 中，将所有 $B$ 进制数看成一个字符串，所有字符串的所有连续子串对应 $B$ 进制数的和（十进制） $\bmod 20130427$​。&lt;/p&gt;</description>
      <content:encoded><![CDATA[<h2 id="description">Description</h2>
<p>有两个 $B$ 进制数 $L,R$，求区间 $[L,R]$ 中，将所有 $B$ 进制数看成一个字符串，所有字符串的所有连续子串对应 $B$ 进制数的和（十进制） $\bmod 20130427$​。</p>
<h2 id="solution">Solution</h2>
<p>这个数位DP实在是太毒瘤了。。。</p>
<p>看了看题解才搞懂，于是我来记录一下这道题。</p>
<p>为方便，下面记 一个数所有连续子串的和 为其权值，记为 $w(n)$​​；一个数所有后缀的对应数字的和为 $s(n)$​；一个数字位数为 $len(n)$​​。​</p>
<p>首先考虑有一个数 $p$，在其后面填一个数 $q$，得到新数 $\overline{pq}$​ 的权值
$$
w(\overline{pq})=w(p)+B\times s(p)+len(\overline{pq})\times q
$$
这时我们发现，后半部分实际就是 $s(\overline{pq})$，那么 $w(\overline{pq})=w(p)+s(\overline{pq})$，其中  $s(\overline{pq})=B\times s(p)+len(\overline{pq})\times q$，且 $len(\overline{pq})=len(p)+1$​。</p>
<p>上述过程都还算显然。于是我们找到了一个递推的思路。</p>
<p>因为我们要对 $w$ 求和，如果枚举 $0\sim B-1$，直接用以上的方法递推，复杂度会达到 $O(B(n+m))$。考虑优化：</p>
<p>既然我们要求和，那么就直接记录答案，然后大力推式子。</p>
<p>按照数位DP的传统思路，设 $f(i,0/1)$ 表示从高到低 $i$ 位，否/是 紧贴上界的 $\sum{w}$。</p>
<p>你就会发现式子开始变得不那么显然了起来。</p>
<p>记录 $sum(n,0/1)=\sum s(n,0/1)$；$sl(n,0/1)=\sum len(n,0/1)$；$a(i,0/1)$​ 为 否/是 紧贴上界时数的个数。</p>
<p>注意，当以上的第二维取 $1$ 时，要注意实际上在该位的取值只有一种（虽然有 $\sum$​）。</p>
<p>下面记 $p(i)$ 为当前的位数上的数字。我把低的位存在数组前面，所以第 $n$ 位由 $n+1$ 为转移来。</p>
<p>那么 $f(n,1)=f(n+1,1)+sum(n,1)$，</p>
<p>而 $sum(n,1)=sum(n+1,1)\times B+p(n)\times sl(n,1)$，</p>
<p>其中 $sl(n,1)=sl(n+1,1)+a(n,1)$，$a(n,1)=a(n+1,1)$。</p>
<p>上面这些式子都还算显然，接下来的转移就有点怪了。
$$
f(n,0)=f(n+1,0)\times B+sum(n,0)+f(n+1,1)\times p(n)
$$
前半部分就是我们之前推的式子，解释一下 $f(n+1,1)\times p(n)$：$sum(n,0)$ 已经包括了前 $n$ 位数中所有不紧贴上界的后缀和的和，这也包括了在 $n+1$ 位之前紧贴上界，在第 $n$ 位不紧贴的数。而 $f(n+1,0)$ 是上一位不紧贴的答案。我们发现，上一位紧贴的全部答案都不在现在的后缀和中，也就是没有被计算进去，而这种没有被计算的数恰好有 $p(n)$ 个（$0\sim p-1$）。所以有上式。</p>
<p>接下来要求 $sum(n,0)$，这个式子是真的恶心。首先记 $pre(n)=\sum_0^{n-1}$。</p>
<p>当 $n$ 是最高位的时候 $t=0$，否则 $t=B$​​，这是为了处理前导零，具体作用你把它换成 $B$​ 就能明白了吧。
$$
\begin{align*}
sum(n,0)=&amp;sum(n+1,1)\times B\times p(n)+pre(p(n))\times sl(n,1)+\\
&amp;sum(n+1,0)\times B\times B+pre(B)\times(sl(n+1,0)+a(n+1,0))+\\
&amp;pre(t)
\end{align*}
$$
<strong>解释暂时咕了</strong></p>
<p>然后是其中的 $sl(n,0)$：
$$
sl(n,0)=t-1+sl(n+1,1)\times p(n)+(sl(n+1,0)+a(n+1,0))\times B
$$</p>
<p>对于上一位紧贴上界，现在有 $p(n)$​​ 个。</p>
<p><strong>解释暂时咕了</strong></p>
<p>对于 $a(n,0)$​，有下面一个还算显然的式子：
$$
a(n,0)=t-1+a(n+1,0)\times B+a(n+1,1)\times p(n)
$$</p>
<p>这个式子不解释了。</p>
<p>于是把以上式子写成代码，这题就做完了。</p>
<h2 id="code">Code</h2>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1e5</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">mod</span> <span style="color:#000">=</span> <span style="color:#1c01ce">20130427</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">typedef</span> <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">ll</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000">ll</span> <span style="color:#000">f</span>[<span style="color:#000">maxn</span>][<span style="color:#1c01ce">2</span>], <span style="color:#000">sum</span>[<span style="color:#000">maxn</span>][<span style="color:#1c01ce">2</span>], <span style="color:#000">sl</span>[<span style="color:#000">maxn</span>][<span style="color:#1c01ce">2</span>], <span style="color:#000">a</span>[<span style="color:#000">maxn</span>][<span style="color:#1c01ce">2</span>];
</span></span><span style="display:flex;"><span><span style="color:#000">ll</span> <span style="color:#000">B</span>, <span style="color:#000">n</span>, <span style="color:#000">m</span>;
</span></span><span style="display:flex;"><span><span style="color:#000">ll</span> <span style="color:#000">S</span>[<span style="color:#000">maxn</span>], <span style="color:#000">l</span>[<span style="color:#000">maxn</span>], <span style="color:#000">r</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#000">ll</span> <span style="color:#000">solve</span>(<span style="color:#000">ll</span> <span style="color:#000">*</span><span style="color:#000">p</span>, <span style="color:#000">ll</span> <span style="color:#000">l</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">memset</span>(<span style="color:#000">f</span>, <span style="color:#1c01ce">0</span>, <span style="color:#a90d91">sizeof</span>(<span style="color:#000">f</span>)), <span style="color:#000">memset</span>(<span style="color:#000">sum</span>, <span style="color:#1c01ce">0</span>, <span style="color:#a90d91">sizeof</span>(<span style="color:#000">sum</span>));
</span></span><span style="display:flex;"><span>    <span style="color:#000">memset</span>(<span style="color:#000">sl</span>, <span style="color:#1c01ce">0</span>, <span style="color:#a90d91">sizeof</span>(<span style="color:#000">sl</span>)), <span style="color:#000">memset</span>(<span style="color:#000">a</span>, <span style="color:#1c01ce">0</span>, <span style="color:#a90d91">sizeof</span>(<span style="color:#000">a</span>));
</span></span><span style="display:flex;"><span>    <span style="color:#000">a</span>[<span style="color:#000">l</span>][<span style="color:#1c01ce">1</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#000">l</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&gt;=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">t</span> <span style="color:#000">=</span> <span style="color:#000">i</span> <span style="color:#000">==</span> <span style="color:#000">l</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span> <span style="color:#000">?</span> <span style="color:#1c01ce">0</span> <span style="color:#000">:</span> <span style="color:#000">B</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">a</span>[<span style="color:#000">i</span>][<span style="color:#1c01ce">1</span>] <span style="color:#000">=</span> <span style="color:#000">a</span>[<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>][<span style="color:#1c01ce">1</span>];
</span></span><span style="display:flex;"><span>        <span style="color:#000">a</span>[<span style="color:#000">i</span>][<span style="color:#1c01ce">0</span>] <span style="color:#000">=</span> (<span style="color:#000">t</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span> <span style="color:#000">+</span> <span style="color:#000">a</span>[<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>][<span style="color:#1c01ce">0</span>] <span style="color:#000">*</span> <span style="color:#000">B</span> <span style="color:#000">%</span> <span style="color:#000">mod</span> <span style="color:#000">+</span> <span style="color:#000">a</span>[<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>][<span style="color:#1c01ce">1</span>] <span style="color:#000">*</span> <span style="color:#000">p</span>[<span style="color:#000">i</span>] <span style="color:#000">%</span> <span style="color:#000">mod</span>) <span style="color:#000">%</span> <span style="color:#000">mod</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">sl</span>[<span style="color:#000">i</span>][<span style="color:#1c01ce">1</span>] <span style="color:#000">=</span> <span style="color:#000">sl</span>[<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>][<span style="color:#1c01ce">1</span>] <span style="color:#000">+</span> <span style="color:#000">a</span>[<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>][<span style="color:#1c01ce">1</span>];
</span></span><span style="display:flex;"><span>        <span style="color:#000">sl</span>[<span style="color:#000">i</span>][<span style="color:#1c01ce">0</span>] <span style="color:#000">=</span> (<span style="color:#000">t</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span> <span style="color:#000">+</span> <span style="color:#000">sl</span>[<span style="color:#000">i</span>][<span style="color:#1c01ce">1</span>] <span style="color:#000">*</span> <span style="color:#000">p</span>[<span style="color:#000">i</span>] <span style="color:#000">+</span> (<span style="color:#000">sl</span>[<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>][<span style="color:#1c01ce">0</span>] <span style="color:#000">+</span> <span style="color:#000">a</span>[<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>][<span style="color:#1c01ce">0</span>]) <span style="color:#000">*</span> <span style="color:#000">B</span> <span style="color:#000">%</span> <span style="color:#000">mod</span>) <span style="color:#000">%</span> <span style="color:#000">mod</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">sum</span>[<span style="color:#000">i</span>][<span style="color:#1c01ce">1</span>] <span style="color:#000">=</span> (<span style="color:#000">sum</span>[<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>][<span style="color:#1c01ce">1</span>] <span style="color:#000">*</span> <span style="color:#000">B</span> <span style="color:#000">%</span> <span style="color:#000">mod</span> <span style="color:#000">+</span> <span style="color:#000">p</span>[<span style="color:#000">i</span>] <span style="color:#000">*</span> <span style="color:#000">sl</span>[<span style="color:#000">i</span>][<span style="color:#1c01ce">1</span>]) <span style="color:#000">%</span> <span style="color:#000">mod</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">sum</span>[<span style="color:#000">i</span>][<span style="color:#1c01ce">0</span>] <span style="color:#000">=</span> (<span style="color:#000">S</span>[<span style="color:#000">t</span>] <span style="color:#000">+</span> <span style="color:#000">sum</span>[<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>][<span style="color:#1c01ce">1</span>] <span style="color:#000">*</span> <span style="color:#000">B</span> <span style="color:#000">*</span> <span style="color:#000">p</span>[<span style="color:#000">i</span>] <span style="color:#000">+</span> <span style="color:#000">S</span>[<span style="color:#000">p</span>[<span style="color:#000">i</span>]] <span style="color:#000">*</span> <span style="color:#000">sl</span>[<span style="color:#000">i</span>][<span style="color:#1c01ce">1</span>] <span style="color:#000">+</span>
</span></span><span style="display:flex;"><span>                     <span style="color:#000">sum</span>[<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>][<span style="color:#1c01ce">0</span>] <span style="color:#000">*</span> <span style="color:#000">B</span> <span style="color:#000">%</span> <span style="color:#000">mod</span> <span style="color:#000">*</span> <span style="color:#000">B</span> <span style="color:#000">%</span> <span style="color:#000">mod</span> <span style="color:#000">+</span>
</span></span><span style="display:flex;"><span>                     <span style="color:#000">S</span>[<span style="color:#000">B</span>] <span style="color:#000">*</span> (<span style="color:#000">sl</span>[<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>][<span style="color:#1c01ce">0</span>] <span style="color:#000">+</span> <span style="color:#000">a</span>[<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>][<span style="color:#1c01ce">0</span>])) <span style="color:#000">%</span>
</span></span><span style="display:flex;"><span>                    <span style="color:#000">mod</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">f</span>[<span style="color:#000">i</span>][<span style="color:#1c01ce">1</span>] <span style="color:#000">=</span> (<span style="color:#000">f</span>[<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>][<span style="color:#1c01ce">1</span>] <span style="color:#000">+</span> <span style="color:#000">sum</span>[<span style="color:#000">i</span>][<span style="color:#1c01ce">1</span>]) <span style="color:#000">%</span> <span style="color:#000">mod</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">f</span>[<span style="color:#000">i</span>][<span style="color:#1c01ce">0</span>] <span style="color:#000">=</span> (<span style="color:#000">f</span>[<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>][<span style="color:#1c01ce">0</span>] <span style="color:#000">*</span> <span style="color:#000">B</span> <span style="color:#000">+</span> <span style="color:#000">sum</span>[<span style="color:#000">i</span>][<span style="color:#1c01ce">0</span>] <span style="color:#000">+</span> <span style="color:#000">f</span>[<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>][<span style="color:#1c01ce">1</span>] <span style="color:#000">*</span> <span style="color:#000">p</span>[<span style="color:#000">i</span>]) <span style="color:#000">%</span> <span style="color:#000">mod</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> (<span style="color:#000">f</span>[<span style="color:#1c01ce">0</span>][<span style="color:#1c01ce">1</span>] <span style="color:#000">+</span> <span style="color:#000">f</span>[<span style="color:#1c01ce">0</span>][<span style="color:#1c01ce">0</span>]) <span style="color:#000">%</span> <span style="color:#000">mod</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">scanf</span>(<span style="color:#c41a16">&#34;%lld&#34;</span>, <span style="color:#000">&amp;</span><span style="color:#000">B</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">B</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">S</span>[<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">=</span> <span style="color:#000">S</span>[<span style="color:#000">i</span>] <span style="color:#000">+</span> <span style="color:#000">i</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">scanf</span>(<span style="color:#c41a16">&#34;%lld&#34;</span>, <span style="color:#000">&amp;</span><span style="color:#000">n</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">scanf</span>(<span style="color:#c41a16">&#34;%lld&#34;</span>, <span style="color:#000">&amp;</span><span style="color:#000">l</span>[<span style="color:#000">n</span> <span style="color:#000">-</span> <span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>]);
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">l</span>[<span style="color:#000">i</span>] <span style="color:#000">&gt;</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">l</span>[<span style="color:#000">i</span>]<span style="color:#000">--</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">break</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#000">l</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">B</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">l</span>[<span style="color:#000">n</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">n</span><span style="color:#000">--</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">scanf</span>(<span style="color:#c41a16">&#34;%lld&#34;</span>, <span style="color:#000">&amp;</span><span style="color:#000">m</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">m</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">scanf</span>(<span style="color:#c41a16">&#34;%lld&#34;</span>, <span style="color:#000">&amp;</span><span style="color:#000">r</span>[<span style="color:#000">m</span> <span style="color:#000">-</span> <span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>]);
</span></span><span style="display:flex;"><span>    <span style="color:#000">printf</span>(<span style="color:#c41a16">&#34;%lld</span><span style="color:#c41a16">\\</span><span style="color:#c41a16">n&#34;</span>, (<span style="color:#000">solve</span>(<span style="color:#000">r</span>, <span style="color:#000">m</span>) <span style="color:#000">-</span> <span style="color:#000">solve</span>(<span style="color:#000">l</span>, <span style="color:#000">n</span>) <span style="color:#000">+</span> <span style="color:#000">mod</span>) <span style="color:#000">%</span> <span style="color:#000">mod</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div>]]></content:encoded>
    </item>
    
    <item>
      <title>211027模拟赛爆零记</title>
      <link>https://luoyisu.github.io/posts/211027%E6%A8%A1%E6%8B%9F%E8%B5%9B%E7%88%86%E9%9B%B6%E8%AE%B0/</link>
      <pubDate>Wed, 27 Oct 2021 14:07:27 +0000</pubDate>
      
      <guid>https://luoyisu.github.io/posts/211027%E6%A8%A1%E6%8B%9F%E8%B5%9B%E7%88%86%E9%9B%B6%E8%AE%B0/</guid>
      <description>&lt;h2 id=&#34;概述&#34;&gt;概述&lt;/h2&gt;
&lt;p&gt;估计 $100+0+0+100=200$​，实际 $0+0+0+0=0$​​。&lt;/p&gt;
&lt;p&gt;试图切题，然后挂了 $\text{inf}$ 分。&lt;/p&gt;</description>
      <content:encoded><![CDATA[<h2 id="概述">概述</h2>
<p>估计 $100+0+0+100=200$​，实际 $0+0+0+0=0$​​。</p>
<p>试图切题，然后挂了 $\text{inf}$ 分。</p>
<h2 id="赛时">赛时</h2>
<p>T1 样例锅了，不过感觉能做，乱搞了一个做法，过了自己造的样例，跑路了。</p>
<p>花了不少时间。</p>
<p>T2 不会，T3 有点思路，不过发现 T4 似乎很简单。</p>
<p>想了一个贪心思路，能证明是对的。</p>
<p>发现树剖能做，但我对树剖非常不熟练，于是想换个思路。</p>
<p>然后发现虚树能做，然后尝试现场推虚树失败了。</p>
<p>好吧，那就写树剖，于是回忆了一波树剖。</p>
<p>开始写，非常不熟练导致写得很慢。</p>
<p>然后写了个区间赋值，查询区间和的线段树上去。</p>
<p>大概还剩半个多小时的时候把代码写完了，过样例之后非常害怕，写了个暴力想对拍。</p>
<p>这暴力怎么这么难写啊！！！！！！！！！！！！</p>
<p>等开始对拍已经就剩不到十分钟了，结果第一组就拍出来了错误。</p>
<p>哈哈，不知道我哪里错了，草草交了代码跑路了。</p>
<h2 id="赛后">赛后</h2>
<p>发现实际上 T3 似乎也不是非常难。</p>
<p>T1 <code>freopen</code> 打错了，真好玩。</p>
<p>T4 果然爆零了，甚至因为没打头文件 CE 了。。。</p>
<h2 id="总结">总结</h2>
<p>头文件和 <code>freopen</code> 这两个错误确实是有点尴尬。。。。</p>
<p>T1 我做法似乎确实是假了。</p>
<p>发现我 T4 树剖没写错，线段树写错了，改完就 AC 了。。。。。</p>
<p>果然是着急了&hellip;不管写什么都必须认真。</p>
<p>最后改完发现我考试时候的思路总共能过 $130$ 分，wtcl。</p>]]></content:encoded>
    </item>
    
    <item>
      <title>CSP2021-S2游记</title>
      <link>https://luoyisu.github.io/posts/csp2021-s2/</link>
      <pubDate>Sat, 23 Oct 2021 20:52:12 +0000</pubDate>
      
      <guid>https://luoyisu.github.io/posts/csp2021-s2/</guid>
      <description>&lt;h1 id=&#34;csp2021-s2&#34;&gt;CSP2021-S2&lt;/h1&gt;
&lt;p&gt;没有大模拟我其实是很失望的。&lt;/p&gt;</description>
      <content:encoded><![CDATA[<h1 id="csp2021-s2">CSP2021-S2</h1>
<p>没有大模拟我其实是很失望的。</p>
<h2 id="day--1">Day -1</h2>
<p>待填。</p>
<h2 id="day-1">Day 1</h2>
<h3 id="上午">上午</h3>
<p>睡觉时间有点短，感觉今天状态不是很好，主要在颓废+睡觉。</p>
<h3 id="下午">下午</h3>
<p>一点多到了考点，于是发现不能进。在外面聊天，遇到 xxh 了，和他聊了聊，开心。</p>
<p>于是发现都 $14:10$ 了还不进考场，站着感觉消耗了我 $\text{inf}$ 多的体力。。。</p>
<p>第一次来复赛，好紧张啊。</p>
<p>中考的时候信心很足，这次则是完全没底。害怕。</p>
<p>机房环境感觉还不错。键盘鼠标都很好用。又发现周围全是小学生， 更害怕了.jpg</p>
<p><strong>下面是正题</strong></p>
<h3 id="考试">考试</h3>
<p>第一次见这么正经的 PDF，紧张再次加剧。</p>
<p>又发现有 <code>-O2</code>，好耶！</p>
<p>不过一般来说我看到题之后还是会进入状态（后面会发现我错了）。</p>
<p>按照策略，打算尽力切 T1。</p>
<p>发现 T1 不是大模拟，有点慌。</p>
<p>又发现这是个最优化的题，是个贪心。</p>
<p>想了个线段树的乱搞做法，感觉非常的真。</p>
<p>快速写完，于是它挂了。</p>
<p>于是它假了。</p>
<p>想了想不知道怎么回事，发现时间不太够了。又发现 T1 暴力分很少。</p>
<p>然后心态有些爆炸。</p>
<p>流鼻血了，快速处理完，顺便稍微冷静了一下。</p>
<p>感觉今天状态不是很好啊、、、、</p>
<p>稍微看了看剩下的题，感觉都不怎么能做。</p>
<p>稍微推了一下 T2，是个 计数DP，不大行。</p>
<p>T3 T4都完全看不懂他在搞什么。</p>
<p>发现剩下的题我都只会指数级别的暴力。</p>
<p><strong>这时还剩两小时</strong>。</p>
<p>我决定放弃 T1 正解。</p>
<p>快速打完 T2、T3 的暴力。</p>
<p>发现 T4 暴力分实在是太少了。</p>
<p>回去写了个不知道能不能拿到 $40$ 分的 T1 暴力。</p>
<p>调完之后还剩将近一个小时。</p>
<p>快速写了个 T4 的指数暴力，估计得不了分，但还是写一下吧。</p>
<p>回去推 T1 未果。这时候心乱如麻了。</p>
<p>又看了看 T3 的一个怪异的性质，很显然 T3 是个结论题，但我不会做。。。。</p>
<p>乱搞了几个 T3 结论，发现都显然是错的。</p>
<p>行。</p>
<p>绷不住了。直接跑路。</p>
<h3 id="赛后">赛后</h3>
<p>出考场的时候旁边的小朋友说我键盘敲得特别快，好强。我只能笑笑&hellip;</p>
<p>敲暴力当然敲得快啊。。。</p>
<p>估计 $30+15+28+5=78$​​，我觉得估计得还算准。也许能压线一等？</p>
<p>希望别挂，希望评测机跑得够快。</p>
<p>感觉人均切了 T1，有点绷不住了。。。。</p>
<p>不想了，坐等官方的分数。</p>
<p>感觉这分数就是退役的节奏啊。</p>
<h2 id="总结">总结</h2>
<p>感觉策略上没太大的问题，发现切不了就果断转暴力。</p>
<p>其实离切也没差多少了。。。。</p>
<p>然后就是 DP，贪心 这两个算法必须得过关，这种类型的题也许需要不断总结不断做题不断思考。</p>
<p>感觉自己确实是少了很多积淀，只会一些知识点却不能非常灵活地运用。</p>
<p>下次写代码之前一定要认真想好。</p>
<p>心态要好，睡觉必须早。</p>
<p>这次很崩，也算是自己一个教训。</p>
<p>不过众所周知 CSP 有分就行。接着备战 NOIP 了。</p>
<p>感觉自己必须抓紧了，就我这聪明程度也不知道能走多远，只希望能搞一个不辜负自己的结果吧。</p>
<p>希望自己不是被迫退役。</p>]]></content:encoded>
    </item>
    
    <item>
      <title>loj10224 [HNOI2008] GT考试</title>
      <link>https://luoyisu.github.io/posts/loj10224/</link>
      <pubDate>Fri, 22 Oct 2021 07:22:01 +0000</pubDate>
      
      <guid>https://luoyisu.github.io/posts/loj10224/</guid>
      <description>&lt;h2 id=&#34;description&#34;&gt;Description&lt;/h2&gt;
&lt;p&gt;阿申准备报名参加 GT 考试，准考证号为 $N$ 位数 $X_1,X_2…X_n(0\le X_i\le9)$，他不希望准考证号上出现不吉利的数字。 他的不吉利数字 $A_1,A_2…A_m(0\le A_i\le 9)A_1,A_2…A_m(0≤A_i≤9)$ 有 $M$ 位，不出现是指 $X_1,X_2…X_n$ 中没有恰好一段等于 $A_1,A_2…A_m$，$A_1$ 和 $X_1$ 可以为 $0$。&lt;/p&gt;</description>
      <content:encoded><![CDATA[<h2 id="description">Description</h2>
<p>阿申准备报名参加 GT 考试，准考证号为 $N$ 位数 $X_1,X_2…X_n(0\le X_i\le9)$，他不希望准考证号上出现不吉利的数字。 他的不吉利数字 $A_1,A_2…A_m(0\le A_i\le 9)A_1,A_2…A_m(0≤A_i≤9)$ 有 $M$ 位，不出现是指 $X_1,X_2…X_n$ 中没有恰好一段等于 $A_1,A_2…A_m$，$A_1$ 和 $X_1$ 可以为 $0$。</p>
<h2 id="solution">Solution</h2>
<p>我过的挺玄学。</p>
<p>先考虑 DP。$f_{i,j}$​ 表示准考证前 $i$​ 位数未出现不吉利数字，且当前已经与不吉利数字匹配 $j$​​ 位（即后 $j$ 位与不吉利数字前 $j$ 位相同）的方案数。</p>
<p>一看就是个 KMP，构建出 $\text{fail}$​ 数组，又发现 $n\leq10^9$，往矩阵快速幂的方面去靠一靠。</p>
<p>发现当已经匹配 $p$ 位时，下一位有 $9$ 种选择，于是枚举这九种选择，利用 $\text{fail}$ 数组，可以快速转移到选择之后匹配到第几位。</p>
<p>于是发现这是个刷表转移，把这个刷表转成矩阵就成为了初始矩阵。</p>
<p>于是快速幂一下就做完了。</p>
<p>但要注意构造矩阵时的细节。</p>
<h2 id="code">Code</h2>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">110</span>, <span style="color:#000">maxm</span> <span style="color:#000">=</span> <span style="color:#1c01ce">22</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">mod</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">n</span>, <span style="color:#000">m</span>, <span style="color:#000">k</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">struct</span> <span style="color:#3f6e75">matrix</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">n</span>, <span style="color:#000">m</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">a</span>[<span style="color:#000">maxn</span>][<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#000">matrix</span>() <span style="color:#000">:</span> <span style="color:#000">n</span>(<span style="color:#1c01ce">0</span>), <span style="color:#000">m</span>(<span style="color:#1c01ce">0</span>) { <span style="color:#000">memset</span>(<span style="color:#000">a</span>, <span style="color:#1c01ce">0</span>, <span style="color:#a90d91">sizeof</span>(<span style="color:#000">a</span>)); }
</span></span><span style="display:flex;"><span>    <span style="color:#000">matrix</span>(<span style="color:#a90d91">int</span> <span style="color:#000">_n</span>, <span style="color:#a90d91">int</span> <span style="color:#000">_m</span>) <span style="color:#000">:</span> <span style="color:#000">n</span>(<span style="color:#000">_n</span>), <span style="color:#000">m</span>(<span style="color:#000">_m</span>) { <span style="color:#000">memset</span>(<span style="color:#000">a</span>, <span style="color:#1c01ce">0</span>, <span style="color:#a90d91">sizeof</span>(<span style="color:#000">a</span>)); }
</span></span><span style="display:flex;"><span>    <span style="color:#000">matrix</span>(<span style="color:#a90d91">int</span> <span style="color:#000">_n</span>, <span style="color:#a90d91">int</span> <span style="color:#000">_m</span>, <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">_a</span>[<span style="color:#000">maxn</span>][<span style="color:#000">maxn</span>]) <span style="color:#000">:</span> <span style="color:#000">n</span>(<span style="color:#000">_n</span>), <span style="color:#000">m</span>(<span style="color:#000">_m</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">_n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;=</span> <span style="color:#000">_m</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">a</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>] <span style="color:#000">=</span> <span style="color:#000">_a</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>];
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">matrix</span> <span style="color:#a90d91">operator</span><span style="color:#000">*</span>(<span style="color:#a90d91">const</span> <span style="color:#000">matrix</span> <span style="color:#000">b</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">matrix</span> <span style="color:#000">res</span>(<span style="color:#000">n</span>, <span style="color:#000">b</span>.<span style="color:#000">m</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">k</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">k</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">k</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;=</span> <span style="color:#000">b</span>.<span style="color:#000">m</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                    <span style="color:#000">res</span>.<span style="color:#000">a</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>] <span style="color:#000">+=</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>][<span style="color:#000">k</span>] <span style="color:#000">*</span> <span style="color:#000">b</span>.<span style="color:#000">a</span>[<span style="color:#000">k</span>][<span style="color:#000">j</span>] <span style="color:#000">%</span> <span style="color:#000">mod</span>, <span style="color:#000">res</span>.<span style="color:#000">a</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>] <span style="color:#000">%=</span> <span style="color:#000">mod</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#000">res</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">void</span> <span style="color:#000">print</span>()
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>, <span style="color:#000">puts</span>(<span style="color:#c41a16">&#34;&#34;</span>))
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">printf</span>(<span style="color:#c41a16">&#34;%lld &#34;</span>, <span style="color:#000">a</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>]);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">matrix</span> <span style="color:#000">qpow</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#000">qpow</span>(<span style="color:#000">*</span><span style="color:#a90d91">this</span>, <span style="color:#000">x</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">matrix</span> <span style="color:#000">qpow</span>(<span style="color:#000">matrix</span> <span style="color:#000">a</span>, <span style="color:#a90d91">int</span> <span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">matrix</span> <span style="color:#000">res</span> <span style="color:#000">=</span> <span style="color:#000">a</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">x</span><span style="color:#000">--</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (; <span style="color:#000">x</span>; <span style="color:#000">x</span> <span style="color:#000">&gt;&gt;=</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">x</span> <span style="color:#000">&amp;</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">res</span> <span style="color:#000">=</span> <span style="color:#000">res</span> <span style="color:#000">*</span> <span style="color:#000">a</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">a</span> <span style="color:#000">=</span> <span style="color:#000">a</span> <span style="color:#000">*</span> <span style="color:#000">a</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#000">res</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>} <span style="color:#000">base</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">char</span> <span style="color:#000">s</span>[<span style="color:#000">maxm</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">fail</span>[<span style="color:#000">maxm</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">a</span>[<span style="color:#000">maxm</span>][<span style="color:#000">maxm</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">get_fail</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2</span>, <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">while</span> (<span style="color:#000">j</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">s</span>[<span style="color:#000">j</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">!=</span> <span style="color:#000">s</span>[<span style="color:#000">i</span>])
</span></span><span style="display:flex;"><span>            <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#000">fail</span>[<span style="color:#000">j</span>];
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">s</span>[<span style="color:#000">j</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">==</span> <span style="color:#000">s</span>[<span style="color:#000">i</span>])
</span></span><span style="display:flex;"><span>            <span style="color:#000">j</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">fail</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">j</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">init</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">char</span> <span style="color:#000">num</span> <span style="color:#000">=</span> <span style="color:#2300ce">&#39;0&#39;</span>; <span style="color:#000">num</span> <span style="color:#000">&lt;=</span> <span style="color:#2300ce">&#39;9&#39;</span>; <span style="color:#000">num</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">while</span> (<span style="color:#000">j</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">s</span>[<span style="color:#000">j</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">!=</span> <span style="color:#000">num</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#000">fail</span>[<span style="color:#000">j</span>];
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">s</span>[<span style="color:#000">j</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">==</span> <span style="color:#000">num</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">j</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">j</span> <span style="color:#000">!=</span> <span style="color:#000">m</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">base</span>.<span style="color:#000">a</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>]<span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">scanf</span>(<span style="color:#c41a16">&#34;%d%d%d&#34;</span>, <span style="color:#000">&amp;</span><span style="color:#000">n</span>, <span style="color:#000">&amp;</span><span style="color:#000">m</span>, <span style="color:#000">&amp;</span><span style="color:#000">mod</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">scanf</span>(<span style="color:#c41a16">&#34;%s&#34;</span>, <span style="color:#000">s</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">get_fail</span>();
</span></span><span style="display:flex;"><span>    <span style="color:#000">init</span>();
</span></span><span style="display:flex;"><span>    <span style="color:#000">base</span>.<span style="color:#000">n</span> <span style="color:#000">=</span> <span style="color:#000">m</span>, <span style="color:#000">base</span>.<span style="color:#000">m</span> <span style="color:#000">=</span> <span style="color:#000">m</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#177500">//base.print();
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>    <span style="color:#000">matrix</span> <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#000">base</span>.<span style="color:#000">qpow</span>(<span style="color:#000">n</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">res</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#177500">//ans.print();
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">res</span> <span style="color:#000">+=</span> <span style="color:#000">ans</span>.<span style="color:#000">a</span>[<span style="color:#1c01ce">1</span>][<span style="color:#000">i</span>], <span style="color:#000">res</span> <span style="color:#000">%=</span> <span style="color:#000">mod</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">printf</span>(<span style="color:#c41a16">&#34;%lld</span><span style="color:#c41a16">\\</span><span style="color:#c41a16">n&#34;</span>, <span style="color:#000">res</span>);
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div>]]></content:encoded>
    </item>
    
    <item>
      <title>211017模拟赛</title>
      <link>https://luoyisu.github.io/posts/211017%E6%A8%A1%E6%8B%9F%E8%B5%9B/</link>
      <pubDate>Mon, 18 Oct 2021 07:19:17 +0000</pubDate>
      
      <guid>https://luoyisu.github.io/posts/211017%E6%A8%A1%E6%8B%9F%E8%B5%9B/</guid>
      <description>&lt;h2 id=&#34;概述&#34;&gt;概述&lt;/h2&gt;
&lt;p&gt;啥都不会，只会暴力。&lt;/p&gt;
&lt;p&gt;估计 $60+60+20+0=140$，实际 $60+60+20+0=140$​。。。。。。&lt;/p&gt;</description>
      <content:encoded><![CDATA[<h2 id="概述">概述</h2>
<p>啥都不会，只会暴力。</p>
<p>估计 $60+60+20+0=140$，实际 $60+60+20+0=140$​。。。。。。</p>
<h2 id="赛时">赛时</h2>
<p>T1 似乎是个傻逼题，但我被降智了，不会；</p>
<p>T2 似乎不难，暴力也能拿很多分数；</p>
<p>T3 是个推式子题，暴力只有 $20$ 分；</p>
<p>T4 是个期望题，要是会期望就能拿很多暴力分数。</p>
<p>然后有 $\text{2h}$ 的时间不知道在干什么，想了 T1 的一个贪心不过假了。</p>
<p>发现不行了就赶忙打了三个暴力跑路了。。。。。。</p>
<p>算了算 T4，发现我不会期望。。。。</p>
<p>最后半个小时发现 T1 就是个枚举题。于是一阵写，但没写完。。。</p>
<h2 id="赛后">赛后</h2>
<p>发现 T2 也是降智题，哈哈。</p>
<h2 id="总结">总结</h2>
<p>不知道总结啥，考试要调整好状态，注意隐藏的数据范围。</p>
<p>不能被降智了！！！！！</p>]]></content:encoded>
    </item>
    
    <item>
      <title>211016模拟赛</title>
      <link>https://luoyisu.github.io/posts/211016%E6%A8%A1%E6%8B%9F%E8%B5%9B/</link>
      <pubDate>Sat, 16 Oct 2021 14:10:30 +0000</pubDate>
      
      <guid>https://luoyisu.github.io/posts/211016%E6%A8%A1%E6%8B%9F%E8%B5%9B/</guid>
      <description>&lt;h2 id=&#34;概述&#34;&gt;概述&lt;/h2&gt;
&lt;p&gt;今天的模拟赛还行。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;期望&lt;/strong&gt; $100+0+40+52=192$，实际 $100+0+20+52=172$​。还算可以。&lt;/p&gt;</description>
      <content:encoded><![CDATA[<h2 id="概述">概述</h2>
<p>今天的模拟赛还行。</p>
<p><strong>期望</strong> $100+0+40+52=192$，实际 $100+0+20+52=172$​。还算可以。</p>
<h2 id="赛时">赛时</h2>
<p>发现 T1、T3 都是<strong>期望</strong>，T2 看不懂，T4 是个树论。</p>
<p>手玩 T1 样例，发现了一些规律，写了个 $O(n^2)$ 暴力，然后写了个 $O(n\log n)$ 的线段树优化。</p>
<p>$n=10^6$，我意识到线段树常数有点大，但是我又不会树状数组。于是我卡了卡常，发现在我的机子上开 <code>O2</code> 要跑 $600\text{ms}$​，感觉能过，又快速写了个数据生成器对拍。没拍出来啥问题，好评。</p>
<p>去做 T4，有 $32$ 分比较白给，然后想了一个多小时搞出来了 $20$​​​​ 的部分分。发现我还是不会写树状数组，于是又搞了个线段树上去。写完之后发现数据非常好造，于是快乐对拍，把 bug 都搞掉了。</p>
<p>快结束了，T2 还是看不懂，快速推了 T3 $n=1$ 的式子，写完调完就溜了。最后几分钟又乱搞了 $20$ 分，不过似乎假了。</p>
<h2 id="总结">总结</h2>
<p>对拍是非常有必要的。</p>
<p>一些简单的卡常技巧需要学会。</p>
<p>不能什么都线段树，树状数组也是有用的。</p>
<p>发现我不会期望，推式子能力也挺差的，老暴力选手了。。。。。</p>]]></content:encoded>
    </item>
    
    <item>
      <title>211015模拟赛</title>
      <link>https://luoyisu.github.io/posts/211015%E6%A8%A1%E6%8B%9F%E8%B5%9B/</link>
      <pubDate>Fri, 15 Oct 2021 16:10:51 +0000</pubDate>
      
      <guid>https://luoyisu.github.io/posts/211015%E6%A8%A1%E6%8B%9F%E8%B5%9B/</guid>
      <description>&lt;h2 id=&#34;概述&#34;&gt;概述&lt;/h2&gt;
&lt;p&gt;今天实惨，估计 $0+72+100+100=272$，实际 $0+0+0+100=100$​。&lt;/p&gt;
&lt;p&gt;被吊打了qwq。&lt;/p&gt;</description>
      <content:encoded><![CDATA[<h2 id="概述">概述</h2>
<p>今天实惨，估计 $0+72+100+100=272$，实际 $0+0+0+100=100$​。</p>
<p>被吊打了qwq。</p>
<h2 id="赛时">赛时</h2>
<p>发现 T4 做过，$20\text{min}$ 切了，这是好的。</p>
<p>去做 T2，一个多小时写了个 $72$ 分的状压 DP，过了样例就溜了。</p>
<p>去做 T3，瞎推了推式子发现一个贪心，瞎搞了个最小生成树上去。感觉切了，不过样例实在太水，感觉自己应该会挂。</p>
<p>去做 T1，发现自己不会暴力，去看链的情况，发现有重边，我不会了。。。</p>
<h2 id="赛后">赛后</h2>
<p>发现自己 T2、T3 全挂成了 $0$ 分。</p>
<p>然后发现我 T3 做法和题解一样，甚至式子也一样，但因为各种细节处理挂了。行吧。</p>
<h2 id="总结">总结</h2>
<p>代码能力不够。</p>
<p>样例过水的时候需要对拍，代码想好之后再写。</p>
<p>不知道代码能力怎么提升，也许是写的题太少了？</p>]]></content:encoded>
    </item>
    
    <item>
      <title>_slb&#39;s Code Style</title>
      <link>https://luoyisu.github.io/posts/code-style/</link>
      <pubDate>Thu, 14 Oct 2021 16:52:02 +0000</pubDate>
      
      <guid>https://luoyisu.github.io/posts/code-style/</guid>
      <description>&lt;p&gt;本文介绍 _slb 的代码规范。关于我的代码规范，她非常地正经、非常地合理。&lt;/p&gt;
&lt;p&gt;基本参考了 &lt;a href=&#34;https://rqy.moe/uncategorized/rqy-s-Code-Style-for-OI/&#34;&gt;_rqy&lt;/a&gt; 的风格。&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>本文介绍 _slb 的代码规范。关于我的代码规范，她非常地正经、非常地合理。</p>
<p>基本参考了 <a href="https://rqy.moe/uncategorized/rqy-s-Code-Style-for-OI/">_rqy</a> 的风格。</p>
<h2 id="概述">概述</h2>
<p>不使用 <code>#include &lt;bits/stdc++.h&gt;</code>，头文件顺序不做要求。</p>
<p>可以使用 <code>using namespace std;</code>。</p>
<p>尽量不使用 <code>#define</code>，多使用 <code>typedef</code>，<code>const</code>。</p>
<p>一行长度尽量不超过 $120$ 字符或者不超过屏幕 $80\%$ 的宽度。要易于阅读。</p>
<h2 id="缩进">缩进</h2>
<p>每个代码块使用四个空格缩进，包括流程控制语句、<code>namespace</code> 下等。</p>
<h2 id="空格及换行">空格及换行</h2>
<p>大部分时候使用大括号换行风格，例：</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#a90d91">if</span> (<span style="color:#000">orz</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#177500">// do something	   
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>}
</span></span><span style="display:flex;"><span><span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#177500">// do something
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>}
</span></span></code></pre></div><p>偶尔会使用大括号不换行的风格，例：</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#a90d91">if</span> (<span style="color:#000">orz</span>) {
</span></span><span style="display:flex;"><span>    <span style="color:#177500">// do something
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>} <span style="color:#a90d91">else</span> {
</span></span><span style="display:flex;"><span>    <span style="color:#177500">// do something
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>}
</span></span></code></pre></div><p>加空格地方：</p>
<ul>
<li>二目、三目运算符两侧；</li>
<li><code>,</code>，<code>;</code> 的右边（前提是不处于行末）；</li>
<li>流程控制关键字与其后面的括号之间；</li>
<li><code>do-while</code> 中的 <code>while</code> 与其左面的大括号之间；</li>
<li>当整组大括号都在一行时，左大括号前打一个空格；</li>
<li>常成员函数的 <code>const</code> 两侧。</li>
</ul>
<p>不加空格地方：</p>
<ul>
<li>
<p>小括号、中括号与其内部表达式等之间；</p>
</li>
<li>
<p>函数名与左括号之间；</p>
</li>
<li>
<p>单目运算符前后；</p>
</li>
<li>
<p><code>.</code>，<code>::</code>，<code>-&gt;</code> 的两侧；</p>
</li>
<li>
<p><code>operator</code> 与重载的运算符之间。</p>
</li>
</ul>
<p>表达式过长可以分多行——缩进的关键是对齐。</p>
<p>很短的函数可以写到一行。</p>
<h2 id="空行">空行</h2>
<p>所有<code>#include &lt;foobar&gt;</code>与<code>using foo::bar;</code>之间不应空行，之后应空一行。</p>
<p>一系列常量定义的上下应有空行。</p>
<p>函数/结构体定义两侧可以有空行（一系列短小到可以写到一行的函数，如<code>min</code>, <code>max</code>，之间可以不空行）。</p>
<p>一系列全局变量定义的上下应有空行。</p>
<p>语句之间可根据其意义酌情空行。</p>
<p>任何位置<strong>不能</strong>出现连续的两个（或以上）空行。</p>
<h2 id="函数">函数</h2>
<p><code>main</code> 函数返回值最好是 <code>int</code>。</p>
<p>传自定义结构体/类的时候尽量传引用并加 <code>const</code>。</p>
<p>单个函数不应过长。</p>
<h2 id="命名">命名</h2>
<p>并没有什么特殊的命名方法，一般使用下划线。</p>
<p>大写字母一般较少使用。</p>
<p>一些正式的数据结构的开头字母会大写，而单纯的模块化并不会大写开头字母。</p>
<h2 id="其他">其他</h2>
<p><strong>不进行压行</strong>，一行最多一个语句。</p>
<p>如果语义连续，可以酌情使用逗号。</p>
<p>三目运算符合适就用。尽量做到易于阅读。</p>
<p><code>if</code>，<code>while</code>，<code>for</code> 等流程控制语句，即使后面只有单个语句，也<strong>不能</strong>放在一行。</p>
<p>尽量少利用不是非常显然的返回值（如逗号）来简化代码（如 <code>return p.push_back(x), void()</code> 等）。</p>
<p>关于指针与数组，当用指针写起来没啥太大问题时，可能更偏向指针，当用指针容易出问题时，偏向数组（这条实际上比较看习惯）。</p>
<h2 id="代码结构">代码结构</h2>
<p><strong>注：此部分内容可能会经常调整，此处写的未必是正在用的代码结构。</strong></p>
<p>有一个 <code>namespace IO</code>，但不会经常使用，大部分用 <code>cin</code>。</p>
<p><code>namespace solve</code> 里的代码是有用的，其他均为不变的模板。</p>
<h2 id="example">example</h2>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstring&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cctype&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;queue&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;vector&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cmath&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cctype&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;utility&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cassert&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;map&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#a90d91">namespace</span> <span style="color:#000">std</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">typedef</span> <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">ll</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">typedef</span> <span style="color:#a90d91">unsigned</span> <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">ull</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">bool</span> <span style="color:#000">MEM1</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">namespace</span> <span style="color:#000">IO</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">mxsiz</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">20</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">char</span> <span style="color:#000">inbuf</span>[<span style="color:#000">mxsiz</span>], <span style="color:#000">*</span><span style="color:#000">p1</span>, <span style="color:#000">*</span><span style="color:#000">p2</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">char</span> <span style="color:#000">outbuf</span>[<span style="color:#000">mxsiz</span>], <span style="color:#000">*</span><span style="color:#000">op</span> <span style="color:#000">=</span> <span style="color:#000">outbuf</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">struct</span> <span style="color:#3f6e75">endio</span>
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">endio</span>(){};
</span></span><span style="display:flex;"><span>        <span style="color:#000">~</span><span style="color:#000">endio</span>() { <span style="color:#000">fwrite</span>(<span style="color:#000">outbuf</span>, <span style="color:#1c01ce">1</span>, <span style="color:#000">op</span> <span style="color:#000">-</span> <span style="color:#000">outbuf</span>, <span style="color:#000">stdout</span>); }
</span></span><span style="display:flex;"><span>    } <span style="color:#000">useless_var</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">char</span> <span style="color:#000">gc</span>() { <span style="color:#a90d91">return</span> <span style="color:#000">p1</span> <span style="color:#000">==</span> <span style="color:#000">p2</span> <span style="color:#000">&amp;&amp;</span> (<span style="color:#000">p2</span> <span style="color:#000">=</span> (<span style="color:#000">p1</span> <span style="color:#000">=</span> <span style="color:#000">inbuf</span>) <span style="color:#000">+</span> <span style="color:#000">fread</span>(<span style="color:#000">inbuf</span>, <span style="color:#1c01ce">1</span>, <span style="color:#000">mxsiz</span>, <span style="color:#000">stdin</span>), <span style="color:#000">p1</span> <span style="color:#000">==</span> <span style="color:#000">p2</span>) <span style="color:#000">?</span> <span style="color:#000">EOF</span> : <span style="color:#000">*</span><span style="color:#000">p1</span><span style="color:#000">++</span>; }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">int</span> <span style="color:#000">read</span>()
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>, <span style="color:#000">f</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">char</span> <span style="color:#000">ch</span> <span style="color:#000">=</span> <span style="color:#000">gc</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (; <span style="color:#000">!</span><span style="color:#000">isdigit</span>(<span style="color:#000">ch</span>); <span style="color:#000">ch</span> <span style="color:#000">=</span> <span style="color:#000">gc</span>())
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">ch</span> <span style="color:#000">==</span> <span style="color:#2300ce">&#39;-&#39;</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">f</span> <span style="color:#000">=</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (; <span style="color:#000">isdigit</span>(<span style="color:#000">ch</span>); <span style="color:#000">ch</span> <span style="color:#000">=</span> <span style="color:#000">gc</span>())
</span></span><span style="display:flex;"><span>            <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">x</span> <span style="color:#000">*</span> <span style="color:#1c01ce">10</span> <span style="color:#000">+</span> <span style="color:#000">ch</span> <span style="color:#000">-</span> <span style="color:#2300ce">&#39;0&#39;</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#000">x</span> <span style="color:#000">*</span> <span style="color:#000">f</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">template</span> <span style="color:#000">&lt;</span><span style="color:#a90d91">typename</span> <span style="color:#000">T</span><span style="color:#000">&gt;</span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">read</span>(<span style="color:#000">T</span> <span style="color:#000">&amp;</span><span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">f</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">char</span> <span style="color:#000">ch</span> <span style="color:#000">=</span> <span style="color:#000">gc</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (; <span style="color:#000">!</span><span style="color:#000">isdigit</span>(<span style="color:#000">ch</span>); <span style="color:#000">ch</span> <span style="color:#000">=</span> <span style="color:#000">gc</span>())
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">ch</span> <span style="color:#000">==</span> <span style="color:#2300ce">&#39;-&#39;</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">f</span> <span style="color:#000">=</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (; <span style="color:#000">isdigit</span>(<span style="color:#000">ch</span>); <span style="color:#000">ch</span> <span style="color:#000">=</span> <span style="color:#000">gc</span>())
</span></span><span style="display:flex;"><span>            <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">x</span> <span style="color:#000">*</span> <span style="color:#1c01ce">10</span> <span style="color:#000">+</span> <span style="color:#000">ch</span> <span style="color:#000">-</span> <span style="color:#2300ce">&#39;0&#39;</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">x</span> <span style="color:#000">*=</span> <span style="color:#000">f</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">bool</span> <span style="color:#000">ischar</span>(<span style="color:#a90d91">char</span> <span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#000">x</span> <span style="color:#000">&gt;=</span> <span style="color:#2300ce">&#39;A&#39;</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">x</span> <span style="color:#000">&lt;=</span> <span style="color:#2300ce">&#39;z&#39;</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">char</span> <span style="color:#000">readchar</span>()
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">char</span> <span style="color:#000">ch</span> <span style="color:#000">=</span> <span style="color:#000">gc</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">while</span> (<span style="color:#000">!</span><span style="color:#000">ischar</span>(<span style="color:#000">ch</span>))
</span></span><span style="display:flex;"><span>            <span style="color:#000">ch</span> <span style="color:#000">=</span> <span style="color:#000">gc</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#000">ch</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">push</span>(<span style="color:#a90d91">char</span> <span style="color:#000">ch</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">op</span> <span style="color:#000">-</span> <span style="color:#000">outbuf</span> <span style="color:#000">==</span> <span style="color:#000">mxsiz</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">fwrite</span>(<span style="color:#000">outbuf</span>, <span style="color:#1c01ce">1</span>, <span style="color:#000">mxsiz</span>, <span style="color:#000">stdout</span>), <span style="color:#000">op</span> <span style="color:#000">=</span> <span style="color:#000">outbuf</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">*</span><span style="color:#000">op</span><span style="color:#000">++</span> <span style="color:#000">=</span> <span style="color:#000">ch</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">template</span> <span style="color:#000">&lt;</span><span style="color:#a90d91">typename</span> <span style="color:#000">T</span><span style="color:#000">&gt;</span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">work_wt</span>(<span style="color:#000">T</span> <span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">x</span> <span style="color:#000">&gt;</span> <span style="color:#1c01ce">9</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">work_wt</span>(<span style="color:#000">x</span> <span style="color:#000">/</span> <span style="color:#1c01ce">10</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">push</span>(<span style="color:#000">x</span> <span style="color:#000">%</span> <span style="color:#1c01ce">10</span> <span style="color:#000">+</span> <span style="color:#2300ce">&#39;0&#39;</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">template</span> <span style="color:#000">&lt;</span><span style="color:#a90d91">typename</span> <span style="color:#000">T</span><span style="color:#000">&gt;</span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">write</span>(<span style="color:#000">T</span> <span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">x</span> <span style="color:#000">&lt;</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">-</span><span style="color:#000">x</span>, <span style="color:#000">push</span>(<span style="color:#2300ce">&#39;-&#39;</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">work_wt</span>(<span style="color:#000">x</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">writestr</span>(<span style="color:#a90d91">char</span> <span style="color:#000">*</span><span style="color:#000">s</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">n</span> <span style="color:#000">=</span> <span style="color:#000">strlen</span>(<span style="color:#000">s</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">push</span>(<span style="color:#000">s</span>[<span style="color:#000">i</span>]);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">endln</span>() { <span style="color:#000">push</span>(<span style="color:#000">&#39;\\</span><span style="color:#000">n</span><span style="color:#000">&#39;</span>); }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">space</span>() { <span style="color:#000">push</span>(<span style="color:#2300ce">&#39; &#39;</span>); }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">template</span> <span style="color:#000">&lt;</span><span style="color:#a90d91">typename</span> <span style="color:#000">T</span><span style="color:#000">&gt;</span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">inline</span> <span style="color:#a90d91">void</span> <span style="color:#000">writeln</span>(<span style="color:#000">T</span> <span style="color:#000">x</span>) { <span style="color:#000">write</span>(<span style="color:#000">x</span>), <span style="color:#000">endln</span>(); }
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#a90d91">namespace</span> <span style="color:#000">IO</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">namespace</span> <span style="color:#000">solve</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2e6</span> <span style="color:#000">+</span> <span style="color:#1c01ce">10</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">typedef</span> <span style="color:#000">pair</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span>, <span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">pii</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">father</span>[<span style="color:#000">maxn</span>], <span style="color:#000">mx</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">ch</span>[<span style="color:#000">maxn</span>][<span style="color:#1c01ce">26</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">tot</span>, <span style="color:#000">lst</span>, <span style="color:#000">dfn</span>[<span style="color:#000">maxn</span>], <span style="color:#000">n</span>, <span style="color:#000">pos</span>[<span style="color:#000">maxn</span>], <span style="color:#000">cnt_dfn</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">arcdfn</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#000">ll</span> <span style="color:#000">sum</span>[<span style="color:#000">maxn</span> <span style="color:#000">/</span> <span style="color:#1c01ce">2</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">char</span> <span style="color:#000">s</span>[<span style="color:#000">maxn</span> <span style="color:#000">/</span> <span style="color:#1c01ce">2</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">struct</span> <span style="color:#3f6e75">SAM</span>
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">SAM</span>() { <span style="color:#000">lst</span> <span style="color:#000">=</span> <span style="color:#000">tot</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; }
</span></span><span style="display:flex;"><span>    } <span style="color:#000">SAM__</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">void</span> <span style="color:#000">insert</span>(<span style="color:#a90d91">int</span> <span style="color:#000">c</span>, <span style="color:#a90d91">int</span> <span style="color:#000">id</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">p</span> <span style="color:#000">=</span> <span style="color:#000">++</span><span style="color:#000">tot</span>, <span style="color:#000">f</span> <span style="color:#000">=</span> <span style="color:#000">lst</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">lst</span> <span style="color:#000">=</span> <span style="color:#000">p</span>, <span style="color:#000">mx</span>[<span style="color:#000">p</span>] <span style="color:#000">=</span> <span style="color:#000">mx</span>[<span style="color:#000">f</span>] <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">pos</span>[<span style="color:#000">p</span>] <span style="color:#000">=</span> <span style="color:#000">id</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">while</span> (<span style="color:#000">f</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">!</span><span style="color:#000">ch</span>[<span style="color:#000">f</span>][<span style="color:#000">c</span>])
</span></span><span style="display:flex;"><span>            <span style="color:#000">ch</span>[<span style="color:#000">f</span>][<span style="color:#000">c</span>] <span style="color:#000">=</span> <span style="color:#000">p</span>, <span style="color:#000">f</span> <span style="color:#000">=</span> <span style="color:#000">father</span>[<span style="color:#000">f</span>];
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">!</span><span style="color:#000">f</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">father</span>[<span style="color:#000">p</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">int</span> <span style="color:#000">q</span> <span style="color:#000">=</span> <span style="color:#000">ch</span>[<span style="color:#000">f</span>][<span style="color:#000">c</span>];
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">mx</span>[<span style="color:#000">q</span>] <span style="color:#000">==</span> <span style="color:#000">mx</span>[<span style="color:#000">f</span>] <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">father</span>[<span style="color:#000">p</span>] <span style="color:#000">=</span> <span style="color:#000">q</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>            {
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">int</span> <span style="color:#000">nq</span> <span style="color:#000">=</span> <span style="color:#000">++</span><span style="color:#000">tot</span>;
</span></span><span style="display:flex;"><span>                <span style="color:#000">memcpy</span>(<span style="color:#000">ch</span>[<span style="color:#000">nq</span>], <span style="color:#000">ch</span>[<span style="color:#000">q</span>], <span style="color:#a90d91">sizeof</span>(<span style="color:#000">ch</span>[<span style="color:#000">q</span>]));
</span></span><span style="display:flex;"><span>                <span style="color:#000">father</span>[<span style="color:#000">nq</span>] <span style="color:#000">=</span> <span style="color:#000">father</span>[<span style="color:#000">q</span>], <span style="color:#000">mx</span>[<span style="color:#000">nq</span>] <span style="color:#000">=</span> <span style="color:#000">mx</span>[<span style="color:#000">f</span>] <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>                <span style="color:#000">father</span>[<span style="color:#000">p</span>] <span style="color:#000">=</span> <span style="color:#000">father</span>[<span style="color:#000">q</span>] <span style="color:#000">=</span> <span style="color:#000">nq</span>;
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">while</span> (<span style="color:#000">f</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">ch</span>[<span style="color:#000">f</span>][<span style="color:#000">c</span>] <span style="color:#000">==</span> <span style="color:#000">q</span>)
</span></span><span style="display:flex;"><span>                    <span style="color:#000">ch</span>[<span style="color:#000">f</span>][<span style="color:#000">c</span>] <span style="color:#000">=</span> <span style="color:#000">nq</span>, <span style="color:#000">f</span> <span style="color:#000">=</span> <span style="color:#000">father</span>[<span style="color:#000">f</span>];
</span></span><span style="display:flex;"><span>            }
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">struct</span> <span style="color:#3f6e75">edge</span>
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">nxt</span>, <span style="color:#000">y</span>, <span style="color:#000">w</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">bool</span> <span style="color:#a90d91">operator</span><span style="color:#000">&lt;</span>(<span style="color:#a90d91">const</span> <span style="color:#000">edge</span> <span style="color:#000">&amp;</span><span style="color:#000">b</span>) <span style="color:#a90d91">const</span> { <span style="color:#a90d91">return</span> <span style="color:#000">w</span> <span style="color:#000">&lt;</span> <span style="color:#000">b</span>.<span style="color:#000">w</span>; }
</span></span><span style="display:flex;"><span>    } <span style="color:#000">e</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">hd</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">cnt</span>[<span style="color:#000">maxn</span>], <span style="color:#000">topo</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">struct</span> <span style="color:#3f6e75">tmpp</span>
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">a</span>, <span style="color:#000">b</span>, <span style="color:#000">c</span>;
</span></span><span style="display:flex;"><span>    } <span style="color:#000">alle</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">struct</span> <span style="color:#3f6e75">md</span>
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">time</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">pii</span> <span style="color:#000">opt</span>;
</span></span><span style="display:flex;"><span>    } <span style="color:#000">change</span>[<span style="color:#000">maxn</span> <span style="color:#000">*</span> <span style="color:#1c01ce">2</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">totch</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">tote</span>, <span style="color:#000">ee</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">void</span> <span style="color:#000">add</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>, <span style="color:#a90d91">int</span> <span style="color:#000">w</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">alle</span>[<span style="color:#000">++</span><span style="color:#000">tote</span>] <span style="color:#000">=</span> {<span style="color:#000">x</span>, <span style="color:#000">y</span>, <span style="color:#000">w</span>};
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">void</span> <span style="color:#000">addall</span>()
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">sort</span>(<span style="color:#000">alle</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">alle</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">+</span> <span style="color:#000">tote</span>, [<span style="color:#000">&amp;</span>](<span style="color:#a90d91">const</span> <span style="color:#000">tmpp</span> <span style="color:#000">&amp;</span><span style="color:#000">a</span>, <span style="color:#a90d91">const</span> <span style="color:#000">tmpp</span> <span style="color:#000">&amp;</span><span style="color:#000">b</span>) { <span style="color:#a90d91">return</span> <span style="color:#000">a</span>.<span style="color:#000">c</span> <span style="color:#000">&gt;</span> <span style="color:#000">b</span>.<span style="color:#000">c</span>; });
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">tote</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">ee</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">int</span> <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">alle</span>[<span style="color:#000">i</span>].<span style="color:#000">a</span>, <span style="color:#000">y</span> <span style="color:#000">=</span> <span style="color:#000">alle</span>[<span style="color:#000">i</span>].<span style="color:#000">b</span>, <span style="color:#000">w</span> <span style="color:#000">=</span> <span style="color:#000">alle</span>[<span style="color:#000">i</span>].<span style="color:#000">c</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">e</span>[<span style="color:#000">ee</span>] <span style="color:#000">=</span> {<span style="color:#000">hd</span>[<span style="color:#000">x</span>], <span style="color:#000">y</span>, <span style="color:#000">w</span>}, <span style="color:#000">hd</span>[<span style="color:#000">x</span>] <span style="color:#000">=</span> <span style="color:#000">ee</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">void</span> <span style="color:#000">build</span>()
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">tot</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">cnt</span>[<span style="color:#000">mx</span>[<span style="color:#000">i</span>]]<span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">cnt</span>[<span style="color:#000">i</span>] <span style="color:#000">+=</span> <span style="color:#000">cnt</span>[<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>];
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#000">tot</span>; <span style="color:#000">i</span> <span style="color:#000">&gt;=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">topo</span>[<span style="color:#000">cnt</span>[<span style="color:#000">mx</span>[<span style="color:#000">i</span>]]<span style="color:#000">--</span>] <span style="color:#000">=</span> <span style="color:#000">i</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#000">tot</span>; <span style="color:#000">i</span> <span style="color:#000">&gt;=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">int</span> <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">topo</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>            <span style="color:#000">sum</span>[<span style="color:#000">mx</span>[<span style="color:#000">father</span>[<span style="color:#000">x</span>]] <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>]<span style="color:#000">++</span>, <span style="color:#000">sum</span>[<span style="color:#000">mx</span>[<span style="color:#000">x</span>] <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>]<span style="color:#000">--</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">pos</span>[<span style="color:#000">father</span>[<span style="color:#000">x</span>]] <span style="color:#000">=</span> <span style="color:#000">max</span>(<span style="color:#000">pos</span>[<span style="color:#000">x</span>], <span style="color:#000">pos</span>[<span style="color:#000">father</span>[<span style="color:#000">x</span>]]);
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">tot</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">totch</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">change</span>[<span style="color:#000">totch</span>] <span style="color:#000">=</span> {<span style="color:#000">mx</span>[<span style="color:#000">father</span>[<span style="color:#000">i</span>]] <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">pii</span>(<span style="color:#000">i</span>, <span style="color:#1c01ce">1</span>)};
</span></span><span style="display:flex;"><span>            <span style="color:#000">totch</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">change</span>[<span style="color:#000">totch</span>] <span style="color:#000">=</span> {<span style="color:#000">mx</span>[<span style="color:#000">i</span>] <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">pii</span>(<span style="color:#000">i</span>, <span style="color:#000">-</span><span style="color:#1c01ce">1</span>)};
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">void</span> <span style="color:#000">build2</span>()
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">tot</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">add</span>(<span style="color:#000">father</span>[<span style="color:#000">i</span>], <span style="color:#000">i</span>, <span style="color:#000">s</span>[<span style="color:#000">pos</span>[<span style="color:#000">i</span>] <span style="color:#000">-</span> <span style="color:#000">mx</span>[<span style="color:#000">father</span>[<span style="color:#000">i</span>]]] <span style="color:#000">-</span> <span style="color:#2300ce">&#39;a&#39;</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">addall</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#000">sort</span>(<span style="color:#000">change</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">change</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">+</span> <span style="color:#000">totch</span>, [<span style="color:#000">&amp;</span>](<span style="color:#a90d91">const</span> <span style="color:#000">md</span> <span style="color:#000">&amp;</span><span style="color:#000">a</span>, <span style="color:#a90d91">const</span> <span style="color:#000">md</span> <span style="color:#000">&amp;</span><span style="color:#000">b</span>) { <span style="color:#a90d91">return</span> <span style="color:#000">a</span>.<span style="color:#000">time</span> <span style="color:#000">&lt;</span> <span style="color:#000">b</span>.<span style="color:#000">time</span>; });
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">void</span> <span style="color:#000">dfs2</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">dfn</span>[<span style="color:#000">x</span>] <span style="color:#000">=</span> <span style="color:#000">++</span><span style="color:#000">cnt_dfn</span>, <span style="color:#000">arcdfn</span>[<span style="color:#000">cnt_dfn</span>] <span style="color:#000">=</span> <span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">p</span> <span style="color:#000">=</span> <span style="color:#000">hd</span>[<span style="color:#000">x</span>]; <span style="color:#000">p</span>; <span style="color:#000">p</span> <span style="color:#000">=</span> <span style="color:#000">e</span>[<span style="color:#000">p</span>].<span style="color:#000">nxt</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">dfs2</span>(<span style="color:#000">e</span>[<span style="color:#000">p</span>].<span style="color:#000">y</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">struct</span> <span style="color:#3f6e75">Segtree</span>
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">static</span> <span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#000">solve</span><span style="color:#000">::</span><span style="color:#000">maxn</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">2</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">sum</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">inline</span> <span style="color:#a90d91">int</span> <span style="color:#000">ls</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>) { <span style="color:#a90d91">return</span> <span style="color:#000">x</span> <span style="color:#000">*</span> <span style="color:#1c01ce">2</span>; }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">inline</span> <span style="color:#a90d91">int</span> <span style="color:#000">rs</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>) { <span style="color:#a90d91">return</span> <span style="color:#000">x</span> <span style="color:#000">*</span> <span style="color:#1c01ce">2</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>; }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">void</span> <span style="color:#000">push_up</span>(<span style="color:#a90d91">int</span> <span style="color:#000">k</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">sum</span>[<span style="color:#000">k</span>] <span style="color:#000">=</span> <span style="color:#000">sum</span>[<span style="color:#000">ls</span>(<span style="color:#000">k</span>)] <span style="color:#000">+</span> <span style="color:#000">sum</span>[<span style="color:#000">rs</span>(<span style="color:#000">k</span>)];
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">void</span> <span style="color:#000">modify</span>(<span style="color:#a90d91">int</span> <span style="color:#000">l</span>, <span style="color:#a90d91">int</span> <span style="color:#000">r</span>, <span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">v</span>, <span style="color:#a90d91">int</span> <span style="color:#000">k</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">l</span> <span style="color:#000">==</span> <span style="color:#000">r</span>)
</span></span><span style="display:flex;"><span>            {
</span></span><span style="display:flex;"><span>                <span style="color:#000">sum</span>[<span style="color:#000">k</span>] <span style="color:#000">+=</span> <span style="color:#000">v</span>;
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">return</span>;
</span></span><span style="display:flex;"><span>            }
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">int</span> <span style="color:#000">mid</span> <span style="color:#000">=</span> (<span style="color:#000">l</span> <span style="color:#000">+</span> <span style="color:#000">r</span>) <span style="color:#000">/</span> <span style="color:#1c01ce">2</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">x</span> <span style="color:#000">&lt;=</span> <span style="color:#000">mid</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">modify</span>(<span style="color:#000">l</span>, <span style="color:#000">mid</span>, <span style="color:#000">x</span>, <span style="color:#000">v</span>, <span style="color:#000">ls</span>(<span style="color:#000">k</span>));
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>                <span style="color:#000">modify</span>(<span style="color:#000">mid</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">r</span>, <span style="color:#000">x</span>, <span style="color:#000">v</span>, <span style="color:#000">rs</span>(<span style="color:#000">k</span>));
</span></span><span style="display:flex;"><span>            <span style="color:#000">push_up</span>(<span style="color:#000">k</span>);
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">query</span>(<span style="color:#a90d91">int</span> <span style="color:#000">l</span>, <span style="color:#a90d91">int</span> <span style="color:#000">r</span>, <span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">k</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">l</span> <span style="color:#000">==</span> <span style="color:#000">r</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">return</span> <span style="color:#000">l</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">int</span> <span style="color:#000">mid</span> <span style="color:#000">=</span> (<span style="color:#000">l</span> <span style="color:#000">+</span> <span style="color:#000">r</span>) <span style="color:#000">/</span> <span style="color:#1c01ce">2</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">sum</span>[<span style="color:#000">ls</span>(<span style="color:#000">k</span>)] <span style="color:#000">&gt;=</span> <span style="color:#000">x</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">return</span> <span style="color:#000">query</span>(<span style="color:#000">l</span>, <span style="color:#000">mid</span>, <span style="color:#000">x</span>, <span style="color:#000">ls</span>(<span style="color:#000">k</span>));
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">return</span> <span style="color:#000">query</span>(<span style="color:#000">mid</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">r</span>, <span style="color:#000">x</span> <span style="color:#000">-</span> <span style="color:#000">sum</span>[<span style="color:#000">ls</span>(<span style="color:#000">k</span>)], <span style="color:#000">rs</span>(<span style="color:#000">k</span>));
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    } <span style="color:#000">t</span>;
</span></span><span style="display:flex;"><span>    
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">struct</span> <span style="color:#3f6e75">Q</span>
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">ll</span> <span style="color:#000">k</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">id</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">res1</span>, <span style="color:#000">res2</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">bool</span> <span style="color:#a90d91">operator</span><span style="color:#000">&lt;</span>(<span style="color:#a90d91">const</span> <span style="color:#000">Q</span> <span style="color:#000">&amp;</span><span style="color:#000">b</span>) <span style="color:#a90d91">const</span> { <span style="color:#a90d91">return</span> <span style="color:#000">k</span> <span style="color:#000">&lt;</span> <span style="color:#000">b</span>.<span style="color:#000">k</span>; }
</span></span><span style="display:flex;"><span>    } <span style="color:#000">q</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span>    
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">m</span>;
</span></span><span style="display:flex;"><span>    
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">scanf</span>(<span style="color:#c41a16">&#34;%s&#34;</span>, <span style="color:#000">s</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">n</span> <span style="color:#000">=</span> <span style="color:#000">strlen</span>(<span style="color:#000">s</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">reverse</span>(<span style="color:#000">s</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">s</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">+</span> <span style="color:#000">n</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">insert</span>(<span style="color:#000">s</span>[<span style="color:#000">i</span>] <span style="color:#000">-</span> <span style="color:#2300ce">&#39;a&#39;</span>, <span style="color:#000">i</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#000">build</span>(), <span style="color:#000">build2</span>(), <span style="color:#000">dfs2</span>(<span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">sum</span>[<span style="color:#000">i</span>] <span style="color:#000">+=</span> <span style="color:#000">sum</span>[<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>];
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">sum</span>[<span style="color:#000">i</span>] <span style="color:#000">+=</span> <span style="color:#000">sum</span>[<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>];
</span></span><span style="display:flex;"><span>        <span style="color:#000">sum</span>[<span style="color:#1c01ce">0</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">m</span> <span style="color:#000">=</span> <span style="color:#000">read</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">read</span>(<span style="color:#000">q</span>[<span style="color:#000">i</span>].<span style="color:#000">k</span>), <span style="color:#000">q</span>[<span style="color:#000">i</span>].<span style="color:#000">id</span> <span style="color:#000">=</span> <span style="color:#000">i</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">sort</span>(<span style="color:#000">q</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">q</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">+</span> <span style="color:#000">m</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">now</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">int</span> <span style="color:#000">len</span> <span style="color:#000">=</span> <span style="color:#000">lower_bound</span>(<span style="color:#000">sum</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">sum</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">+</span> <span style="color:#000">n</span>, <span style="color:#000">q</span>[<span style="color:#000">i</span>].<span style="color:#000">k</span>) <span style="color:#000">-</span> <span style="color:#000">sum</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">len</span> <span style="color:#000">&gt;</span> <span style="color:#000">n</span>)
</span></span><span style="display:flex;"><span>            {
</span></span><span style="display:flex;"><span>                <span style="color:#000">q</span>[<span style="color:#000">i</span>].<span style="color:#000">res1</span> <span style="color:#000">=</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span>, <span style="color:#000">q</span>[<span style="color:#000">i</span>].<span style="color:#000">res2</span> <span style="color:#000">=</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">continue</span>;
</span></span><span style="display:flex;"><span>            }
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">int</span> <span style="color:#000">k</span> <span style="color:#000">=</span> <span style="color:#000">q</span>[<span style="color:#000">i</span>].<span style="color:#000">k</span> <span style="color:#000">-</span> <span style="color:#000">sum</span>[<span style="color:#000">len</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>];
</span></span><span style="display:flex;"><span>            <span style="color:#177500">// cerr &lt;&lt; k &lt;&lt; &#34; &#34; &lt;&lt; now &lt;&lt; endl;
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>            <span style="color:#a90d91">while</span> (<span style="color:#000">change</span>[<span style="color:#000">now</span>].<span style="color:#000">time</span> <span style="color:#000">&lt;=</span> <span style="color:#000">len</span>)
</span></span><span style="display:flex;"><span>            {
</span></span><span style="display:flex;"><span>                <span style="color:#000">t</span>.<span style="color:#000">modify</span>(<span style="color:#1c01ce">1</span>, <span style="color:#000">tot</span>, <span style="color:#000">dfn</span>[<span style="color:#000">change</span>[<span style="color:#000">now</span>].<span style="color:#000">opt</span>.<span style="color:#000">first</span>], <span style="color:#000">change</span>[<span style="color:#000">now</span>].<span style="color:#000">opt</span>.<span style="color:#000">second</span>, <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>                <span style="color:#000">now</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>            }
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">int</span> <span style="color:#000">uu</span> <span style="color:#000">=</span> <span style="color:#000">t</span>.<span style="color:#000">query</span>(<span style="color:#1c01ce">1</span>, <span style="color:#000">tot</span>, <span style="color:#000">k</span>, <span style="color:#1c01ce">1</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#000">uu</span> <span style="color:#000">=</span> <span style="color:#000">arcdfn</span>[<span style="color:#000">uu</span>];
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">int</span> <span style="color:#000">tmpl</span> <span style="color:#000">=</span> <span style="color:#000">pos</span>[<span style="color:#000">uu</span>] <span style="color:#000">-</span> <span style="color:#000">len</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">int</span> <span style="color:#000">tmpr</span> <span style="color:#000">=</span> <span style="color:#000">pos</span>[<span style="color:#000">uu</span>];
</span></span><span style="display:flex;"><span>            <span style="color:#000">q</span>[<span style="color:#000">i</span>].<span style="color:#000">res1</span> <span style="color:#000">=</span> <span style="color:#000">n</span> <span style="color:#000">-</span> <span style="color:#000">tmpr</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#000">q</span>[<span style="color:#000">i</span>].<span style="color:#000">res2</span> <span style="color:#000">=</span> <span style="color:#000">n</span> <span style="color:#000">-</span> <span style="color:#000">tmpl</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#000">sort</span>(<span style="color:#000">q</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">q</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span> <span style="color:#000">+</span> <span style="color:#000">m</span>, [<span style="color:#000">&amp;</span>](<span style="color:#a90d91">const</span> <span style="color:#000">Q</span> <span style="color:#000">&amp;</span><span style="color:#000">a</span>, <span style="color:#a90d91">const</span> <span style="color:#000">Q</span> <span style="color:#000">&amp;</span><span style="color:#000">b</span>) { <span style="color:#a90d91">return</span> <span style="color:#000">a</span>.<span style="color:#000">id</span> <span style="color:#000">&lt;</span> <span style="color:#000">b</span>.<span style="color:#000">id</span>; });
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">write</span>(<span style="color:#000">q</span>[<span style="color:#000">i</span>].<span style="color:#000">res1</span>), <span style="color:#000">space</span>(), <span style="color:#000">writeln</span>(<span style="color:#000">q</span>[<span style="color:#000">i</span>].<span style="color:#000">res2</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">bool</span> <span style="color:#000">MEM2</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#633820">#ifdef local
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span>    <span style="color:#000">cerr</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34;memory : &#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">abs</span>(<span style="color:#000">&amp;</span><span style="color:#000">MEM1</span> <span style="color:#000">-</span> <span style="color:#000">&amp;</span><span style="color:#000">MEM2</span>) <span style="color:#000">/</span> <span style="color:#1c01ce">1024.</span> <span style="color:#000">/</span> <span style="color:#1c01ce">1024</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; mb&#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span><span style="color:#633820">#endif
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">cases</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> (<span style="color:#000">cases</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">solve</span><span style="color:#000">::</span><span style="color:#000">main</span>();
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#633820">#ifdef local
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span>    <span style="color:#000">cerr</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34;time : &#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#1c01ce">1000.0</span> <span style="color:#000">*</span> <span style="color:#000">clock</span>() <span style="color:#000">/</span> <span style="color:#000">CLOCKS_PER_SEC</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; ms&#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span><span style="color:#633820">#endif
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><p><strong>注：此为 CF gym103409J</strong>。</p>]]></content:encoded>
    </item>
    
    <item>
      <title>211005十一模拟赛2</title>
      <link>https://luoyisu.github.io/posts/211005%E5%8D%81%E4%B8%80%E6%A8%A1%E6%8B%9F%E8%B5%9B2/</link>
      <pubDate>Tue, 05 Oct 2021 17:23:55 +0000</pubDate>
      
      <guid>https://luoyisu.github.io/posts/211005%E5%8D%81%E4%B8%80%E6%A8%A1%E6%8B%9F%E8%B5%9B2/</guid>
      <description>&lt;h2 id=&#34;概述&#34;&gt;概述&lt;/h2&gt;
&lt;p&gt;今天的题体感好一些，没有太强的无力感。&lt;/p&gt;
&lt;p&gt;估计 $30+80+65=175$，实际 $30+70+15=115$，真惨。&lt;/p&gt;
&lt;p&gt;膜拜 shr 大佬爆切 T3，$190pts$​ 并列 $\text{Rank}1$​！！&lt;/p&gt;
&lt;p&gt;今天又是被 shr 和 樱雪 吊打的一天qwq&lt;/p&gt;</description>
      <content:encoded><![CDATA[<h2 id="概述">概述</h2>
<p>今天的题体感好一些，没有太强的无力感。</p>
<p>估计 $30+80+65=175$，实际 $30+70+15=115$，真惨。</p>
<p>膜拜 shr 大佬爆切 T3，$190pts$​ 并列 $\text{Rank}1$​！！</p>
<p>今天又是被 shr 和 樱雪 吊打的一天qwq</p>
<h2 id="赛时">赛时</h2>
<p>一看 T1，似乎有点复杂，不太懂；又看 T2，能写 $50$ 分 DP；接着看 T3，没懂。</p>
<p>看了看之后就去写 T2 了，$50\text{min}$​​​ 写完+调完。感觉能用矩阵优化到 $80$ 分，剩下那 $20$ 分的通项公式不太敢想&hellip;</p>
<p>还是去写 T3 了，快速写了个高达 $0$​ 分的暴力找规律，发现了一个类似杨辉三角的东西，于是线推式子求组合数乱搞了 $50$ 分，然后觉得似乎能切，于是写起了正解。写完一个区间加单点查询的线段树之后，我忽然意识到这样并不能得 $100$ 分，想了想也不知道用到底怎么用数据结构维护。于是转去写了个 $k=1$ 的部分分。总共期望能得 $65$​​​ 分。</p>
<p>写着写着忽然发现前 $50$ 分复杂度不是很对，有 TLE 的风险，但转念一想常数很小，应该没啥问题。</p>
<p>然后想了想能不能递推组合数，然后发现会 MLE。</p>
<p>感觉问题不大，写完 <code>freopen</code> 溜了。</p>
<p>此时只剩一个小时左右了。</p>
<p>去看 T1，快速写了个最简单的 $30$ 分，剩下 $30$ 的部分分似乎不是特别简单，放弃了，打算那剩下的时间推 T2 的矩阵。</p>
<p>快速写了个矩阵的板子，然后想了想意识到怎么构造矩阵了，没多想就上手写了。</p>
<p>写+调，最后剩 $5\text{min}$ 的时候调完了。没时间多想了，赶快开始检查三道题有没有 SB 错误。</p>
<h2 id="赛后">赛后</h2>
<p>听说苏大佬 T3 切了，我：？？？那玩意不简单的啊？？？</p>
<p>于是发现人均 T1 写了 $60$​，感觉我又要垫底了。</p>
<p>然后开始评测了，我 T3 前面的暴力全 TLE 了，哈哈哈，复杂度不对果然过不了。。</p>
<p>然后发现 T2 TLE 了一个点，也有点怪。</p>
<p>检查之后意识到 T3 可以线性求逆元，复杂度就不会挂。。。<strong>啊，我真是傻逼。</strong></p>
<p>又意识到 T2 的初试矩阵我是暴力求的，于是复杂度从 $k^3\log n$ 变成了 $k^4$，而 $k\leq100$，我就挂了。。。**啊，我真是傻逼。**明明利用这个矩阵的一些奇妙性质就能优化，甚至打个表也行啊！！（考虑到没时间了也确实没啥办法）</p>
<p>然后发现 T3 由于出题人的疏忽，导致 shr 用暴力水过去了！貌似出题人没想到这种暴力。。。</p>
<p>苏大佬太强了！！！！！</p>
<h2 id="总结">总结</h2>
<p>首先意识到我代码能力太差了，写代码慢，调试也慢，思考也慢。。。</p>
<p>shr 大佬睡一个小时觉都比我高qwq</p>
<p>然后就是，对于 T1 这种简单的暴力，一定要拿满。。。</p>
<p>也要检查复杂度，要是有把握的题，复杂度必须要控制好，不能挂。</p>
<p>接下来就是不断的刷题增强代码能力了。</p>
<p>通项公式依然不会求，不过也许可以靠打表来“大胆猜想，从不求证”。</p>
<p>同时要注意，小常数 $10^8$ 是能跑过的，不能总是分析渐进复杂度，也要考虑究竟进行了几次计算。</p>]]></content:encoded>
    </item>
    
    <item>
      <title>211003十一模拟赛1</title>
      <link>https://luoyisu.github.io/posts/211003%E5%8D%81%E4%B8%80%E6%A8%A1%E6%8B%9F%E8%B5%9B1/</link>
      <pubDate>Mon, 04 Oct 2021 19:06:10 +0000</pubDate>
      
      <guid>https://luoyisu.github.io/posts/211003%E5%8D%81%E4%B8%80%E6%A8%A1%E6%8B%9F%E8%B5%9B1/</guid>
      <description>&lt;h2 id=&#34;概述&#34;&gt;概述&lt;/h2&gt;
&lt;p&gt;有点凄凉。&lt;/p&gt;
&lt;p&gt;预测 $20+60+40=120$，实际 $20+60+0=80$。被各路神仙吊打了qwq&lt;/p&gt;</description>
      <content:encoded><![CDATA[<h2 id="概述">概述</h2>
<p>有点凄凉。</p>
<p>预测 $20+60+40=120$，实际 $20+60+0=80$。被各路神仙吊打了qwq</p>
<h2 id="赛前">赛前</h2>
<p>了解到大概会是三道数学/计数/推式子题，于是没打算拿多高的分数，暴力万岁。</p>
<h2 id="赛时">赛时</h2>
<p>不知道题目难度，就都看了看。</p>
<p>T1 完全不会，T2 有 $60$ 分我能写，T3 能写一些暴力分。</p>
<p>于是开写 T2，写了个数位 DP，$60$ 分到手，去看 T1，还是啥都不会，去做 T3，感觉数据应该不会太强，于是就写个了跑不满的 $O(n^4)$ 做法，应该能拿到 $40$ 分。</p>
<p>然后去 T1，爆搜了一波， $20$ 到手，没花时间看有没有什么规律。</p>
<p>这时候还剩两个小时，我有点懒了，不想思考。</p>
<p>T2 似乎能用矩阵优化，但我从来没搞过，不想推矩阵。。。</p>
<p>T1 还是没懂，T3 没想出来啥优化的做法。</p>
<p>感觉这个分数应该还可以了。。。于是就颓了好久。</p>
<h2 id="赛后">赛后</h2>
<p>发现大佬们都写了好多分。。。有点后悔颓废了。</p>
<p>膜拜 shr 大佬，随手写 $200$​ 分，吊打我qwq。</p>
<p>然后发现 T1 有 $20$ 分就是卡特兰数，我谔谔，没看出来规律。。。。。</p>
<p>又发现人均会写矩阵，草了，又发现人均 T3 比我高。。。</p>
<p>然后出分了，发现 T3 爆零了，然后发现自己瞎优化整挂了，数据水，本来能拿到 $60$ 分的。。</p>
<h2 id="总结">总结</h2>
<p>模拟不能躺平！！！有用的知识不能不学！！！</p>
<p>希望下次能好点qwq</p>]]></content:encoded>
    </item>
    
    <item>
      <title>CSP2021-S1游记</title>
      <link>https://luoyisu.github.io/posts/csp2021-s1-s2%E6%B8%B8%E8%AE%B0/</link>
      <pubDate>Sun, 19 Sep 2021 13:56:34 +0000</pubDate>
      
      <guid>https://luoyisu.github.io/posts/csp2021-s1-s2%E6%B8%B8%E8%AE%B0/</guid>
      <description>&lt;p&gt;我愿称之为凄凉。&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>我愿称之为凄凉。</p>
<h2 id="第一轮">第一轮</h2>
<h3 id="考前">考前</h3>
<p>在本校考试，碰到 xxh 了，非常开心，互相膜拜着就进了考场。</p>
<p>然后发现好多初中生和小学生，草，似乎要被吊打。</p>
<h3 id="考时">考时</h3>
<p>看到第一题就觉得不对劲，怎么一上来就是考 Linux 命令？</p>
<p>行吧，接着做。</p>
<p>选择题做得有点慢，太玄学了。然后我发现有点小难，行吧，硬着头皮蒙完了选择题去做后面的阅读程序。</p>
<p>第一个阅读程序看了看没懂，后来半蒙着觉得是体积交，然后手算了一波溜了。</p>
<p>第二个发现是最大子段和，于是乱选了一波溜了。</p>
<p>第三个阅读程序是个编码，我没懂，盲猜了一波就溜了。</p>
<p>接着是补全程序，第一个倒是看懂了，不过做着有点犹豫，纠结了一阵子就溜了。</p>
<p>第二个看不懂，也快没时间了。纯粹在蒙，算了算了算了。</p>
<p>这不当场退役？</p>
<h3 id="考后">考后</h3>
<p>对了对答案，发现自己到处挂题，选择也挂了，最大子段和也挂了（我不知道我当时怎么想的。。。）</p>
<p>然后补全程序非常凄凉，我有的不记得选的啥了。</p>
<p>大概 $60$​​ 分左右？。。。有的题记不住答案了。</p>
<p>我谔谔，好多不该错的错了。</p>
<p>大概能过，不过我这水平也太低了。。。。。</p>
<p>UPD：确实 $60$ 分，行吧，反正辽宁是弱省，分数线似乎已经跌到 $40$ 一下了，那不是随便过。。。</p>
<p>UPD2：居然压线达到了一等评级，然后辽宁分数线 $28$​ 分，太离谱了。我寻思着随便找个人上去蒙不是都能过吗？？？</p>]]></content:encoded>
    </item>
    
    <item>
      <title>210912NOIP模拟赛</title>
      <link>https://luoyisu.github.io/posts/210912noip%E6%A8%A1%E6%8B%9F%E8%B5%9B/</link>
      <pubDate>Sun, 12 Sep 2021 19:06:10 +0000</pubDate>
      
      <guid>https://luoyisu.github.io/posts/210912noip%E6%A8%A1%E6%8B%9F%E8%B5%9B/</guid>
      <description>&lt;h2 id=&#34;概述&#34;&gt;概述&lt;/h2&gt;
&lt;p&gt;题好难啊qwq。&lt;/p&gt;
&lt;p&gt;期望 $50+40+60+30=180$，实际 $10+40+30+30=110$，挂了不少。&lt;/p&gt;
&lt;p&gt;不过这次没有爆零的题，是个进步，打暴力分还是比抠正解高&amp;hellip;水平不够啊。&lt;/p&gt;</description>
      <content:encoded><![CDATA[<h2 id="概述">概述</h2>
<p>题好难啊qwq。</p>
<p>期望 $50+40+60+30=180$，实际 $10+40+30+30=110$，挂了不少。</p>
<p>不过这次没有爆零的题，是个进步，打暴力分还是比抠正解高&hellip;水平不够啊。</p>
<h2 id="赛时">赛时</h2>
<p>没想太多，直接看 T1，感觉我似乎会。乱搞一通，做法假了，想了想不会，溜了。纯暴力 $20$ 分，性价比有点低，接着看下面的题吧。</p>
<p>于是去看 T2，乍一看以为是个数学题，似乎没啥规律，看了看这题纯暴力才 $20$​ 分，太少了，先看看别的题。</p>
<p>此时已经过去一个小时。</p>
<p>看 T3，我会 $60$​ 分，又去看 T4，感觉很难，于是写了个 $30$ 分暴力，回去写 T3 写了一个多小时差不多搞定了，告辞。</p>
<p>看到 T4 有一个部分分，想到用树状数组维护，结果发现复杂度是 $O(maxa\log maxa\times n)$，这会爆。有点疑惑，这思路应该没啥问题啊。</p>
<p>不管了，回去看 T1、T2，发现我 T1 还是不会，于是写了个 $O(n^2\log n)$ 的暴力，似乎能过 $50$ 分，但是我总感觉自己做法有点假（</p>
<p>然后写 T2，写了个全排列的 $20$ 分，然后推了推式子发现可以做到 $O(n^2)$ 递推，写了写调了调过了，然后思考如何优化，没思考出来。</p>
<p>还剩半个小时，去推了推 T1，无果，在最后十分钟意识到 T4 没有修改操作，直接用前缀和维护就行了，我怕是个傻子。</p>
<p>然后疯狂写，结果还是挂了，好吧不亏。</p>
<h2 id="赛后">赛后</h2>
<p>发现自己 T1 挂成 $10$​ 分，明明思路是对的，就是枚举公差然后判断，不过挂也是意料之中，然后发现根本看不懂题解。T3 挂了 $30$​​ 分，有点懵。</p>
<p>然后发现 T2 的正解和那个递推完全没关系，行吧。T4 是个数据结构题，看不懂.jpg。</p>
<p>发现大家似乎都不是很会正解的样子&hellip;好吧，暴力实在是太爽了。</p>
<p>发现 T3 的那 $30$​ 分似乎没有人过了，于是开始对拍 T3 找错，拍出来之后发现是 std 挂了？？？？？后来发现题解似乎也有问题、、、</p>
<p>我谔谔，请给全机房加上 $30$ 分。</p>
<p>发现范神居然切了一题，太强了。（据他说是打的暴力，数据水所以过了，但还是太强了）</p>
<p>然后去调 T4 了，未果。</p>
<h2 id="总结">总结</h2>
<p>暴力永远的神。</p>
<p>发现自己不管是从码力还是思维上还是远远不足，写暴力都得调半天。</p>
<p>可能还是需要积累。模拟赛不就是为这个目标服务的吗？</p>
<p>这场比赛还是打得挺开心的，没有特别强的无力感，拿到暴力分就挺满足的了（</p>
<hr>
<p>关于暴力的具体做法可以看 <a href="https://www.luogu.com.cn/blog/113833/post-20210912-post">某大佬的博客</a>，思路和我都差不多。</p>]]></content:encoded>
    </item>
    
    <item>
      <title>210911NOIP信心赛问号记</title>
      <link>https://luoyisu.github.io/posts/210911noip%E4%BF%A1%E5%BF%83%E8%B5%9B%E9%97%AE%E5%8F%B7%E8%AE%B0/</link>
      <pubDate>Sat, 11 Sep 2021 20:34:12 +0000</pubDate>
      
      <guid>https://luoyisu.github.io/posts/210911noip%E4%BF%A1%E5%BF%83%E8%B5%9B%E9%97%AE%E5%8F%B7%E8%AE%B0/</guid>
      <description>&lt;h2 id=&#34;概述&#34;&gt;概述&lt;/h2&gt;
&lt;p&gt;首先看到三道名字是乱码的题，一道叫“Extra”的构造题，又一看叫“信心赛”，又看到“题目较简单。AK选手不要大声喧哗”，再仔细一看，“题目不按照难度顺序排序”，我就知道来者不善。我直呼好家伙！&lt;/p&gt;
&lt;p&gt;教练让我们多写暴力拿分，在前十分钟我还是想贯彻这个思想的，结果后来有点上头。&lt;/p&gt;
&lt;p&gt;预计 $0+0+10+100=110$，实际 $0+0+0+60=60$​，信心十足. jpg。&lt;/p&gt;
&lt;p&gt;以上都是借口，题不是特别难，我实力不足罢了。&lt;/p&gt;</description>
      <content:encoded><![CDATA[<h2 id="概述">概述</h2>
<p>首先看到三道名字是乱码的题，一道叫“Extra”的构造题，又一看叫“信心赛”，又看到“题目较简单。AK选手不要大声喧哗”，再仔细一看，“题目不按照难度顺序排序”，我就知道来者不善。我直呼好家伙！</p>
<p>教练让我们多写暴力拿分，在前十分钟我还是想贯彻这个思想的，结果后来有点上头。</p>
<p>预计 $0+0+10+100=110$，实际 $0+0+0+60=60$​，信心十足. jpg。</p>
<p>以上都是借口，题不是特别难，我实力不足罢了。</p>
<h2 id="赛时">赛时</h2>
<p>随缘开题，先看了 T1，理解题意搞了半天，于是感觉似乎不是很难，然后写的时候发现我不会写，复杂度似乎也不太对。想了半天毛都没写，溜了溜了。</p>
<p>又看 T2，行吧，暴力能搞 $30$ 分，但似乎也不是特别难（后来发现是错觉）。</p>
<p>又去看 T3，感觉自己似乎能拿到 $50$ 分，后来先写了个 $10$ 分，然后发现有 $20$ 分似乎拿不到，有发现 $20$ 分暴力似乎也不是那么好写，溜了溜了。</p>
<p>接着去看 T4，似乎有 $40$ 分随手就能拿，于是写了，然后就溜了。</p>
<p>这时候已经过去两个多小时了（我效率为啥这么低）。</p>
<p>想了想，似乎 T123 的暴力都不咋好写，于是我爬了，感觉 T1 似乎能写，于是开始写。</p>
<p>然后写着写着发现不会写，于是去看了 T4，把所有情况都给写了，顺便修了个 bug。但是我一个都不会证，就当我切了吧233。</p>
<p>于是滚回去写 T1，写着写着就到点了，心情平静。</p>
<h2 id="赛后">赛后</h2>
<p>忽然发现我 T3 CE了，问号。</p>
<p>又发现 T4 有两个做法似乎是假的，不要紧（</p>
<h2 id="总结">总结</h2>
<p>还是水平太低。</p>
<p>T1 想到了正解的部分思路，但没完全想到，思维水平不够。也许这个能力只能靠多做题多研究题解了。</p>
<p>T2 完全不会，是转化成染色。。不过没打暴力确实是个错误。</p>
<p>T3 也不懂，好难啊，不过确实应该写暴力的。</p>
<p>T4 有点神仙，不过混了 $60$ 分我很满足了。</p>
<p>水平不够，而且还是要多打暴力，也要思考思考暴力怎么写快。</p>]]></content:encoded>
    </item>
    
    <item>
      <title>CF13B</title>
      <link>https://luoyisu.github.io/posts/cf13b/</link>
      <pubDate>Sun, 29 Aug 2021 09:57:11 +0000</pubDate>
      
      <guid>https://luoyisu.github.io/posts/cf13b/</guid>
      <description>&lt;h2 id=&#34;description&#34;&gt;Description&lt;/h2&gt;
&lt;p&gt;给定三条线段，判断能否构成 A，即是否满足以下条件：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;有两条线段有公共点（下称“第一、二条线段”，另一条线段称“第三条线段”）；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;第三条线段的两个端点分别在第一、二条线段上；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;第一、二条线段夹角大于 $0$，小于 $\dfrac{\pi}{2}$；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;第三条线段分别将第一、二条线段截成两段，较短的线段与较长的线段的长度比不小于 $\dfrac14$。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</description>
      <content:encoded><![CDATA[<h2 id="description">Description</h2>
<p>给定三条线段，判断能否构成 A，即是否满足以下条件：</p>
<ol>
<li>
<p>有两条线段有公共点（下称“第一、二条线段”，另一条线段称“第三条线段”）；</p>
</li>
<li>
<p>第三条线段的两个端点分别在第一、二条线段上；</p>
</li>
<li>
<p>第一、二条线段夹角大于 $0$，小于 $\dfrac{\pi}{2}$；</p>
</li>
<li>
<p>第三条线段分别将第一、二条线段截成两段，较短的线段与较长的线段的长度比不小于 $\dfrac14$。</p>
</li>
</ol>
<h2 id="solution">Solution</h2>
<p>这是道计算几何的水题。<del>想水黑题的快来</del></p>
<p>其实只需要暴力模拟即可，每组数据时间复杂度 $O(1)$，总时间复杂度 $O(T)$。</p>
<p>我用的纯计算几何的做法，用向量进行计算。因此把向量封装了，代码还算简单。</p>
<p>第一个要求直接暴力枚举，找有没有相同的点即可。</p>
<p>第二个要求也是计算几何基本操作：先用向量叉积是否为 $0$ 判断三点是否共线，再看点是否在以线段为对角线的矩形内部。</p>
<p>第三个要求本来想用叉积的几何意义配合反三角函数搞，但我不知道为啥一直挂，后来意识到是因为这个做法没法判断钝角。于是用余弦定理，就过了。</p>
<p>第四个要求很简单，就用向量做减法然后算一下验证就行。</p>
<p>感觉比起解析几何要省点脑子。</p>
<h2 id="code">Code</h2>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cmath&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">max</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">min</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">double</span> <span style="color:#000">pi</span> <span style="color:#000">=</span> <span style="color:#1c01ce">3.141592653589793</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">double</span> <span style="color:#000">eps</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1e-10</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">class</span> <span style="color:#3f6e75">Vector</span> <span style="color:#177500">// 向量（也用来存点）
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>{
</span></span><span style="display:flex;"><span><span style="color:#a90d91">public</span><span style="color:#000">:</span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">x</span>, <span style="color:#000">y</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">Vector</span>() { <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">y</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; }
</span></span><span style="display:flex;"><span>    <span style="color:#000">Vector</span>(<span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">a</span>, <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">b</span>) { <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">a</span>, <span style="color:#000">y</span> <span style="color:#000">=</span> <span style="color:#000">b</span>; }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">bool</span> <span style="color:#a90d91">operator</span><span style="color:#000">==</span>(<span style="color:#a90d91">const</span> <span style="color:#000">Vector</span> <span style="color:#000">&amp;</span><span style="color:#000">b</span>) <span style="color:#a90d91">const</span> { <span style="color:#a90d91">return</span> <span style="color:#000">x</span> <span style="color:#000">==</span> <span style="color:#000">b</span>.<span style="color:#000">x</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">y</span> <span style="color:#000">==</span> <span style="color:#000">b</span>.<span style="color:#000">y</span>; }
</span></span><span style="display:flex;"><span>    <span style="color:#000">Vector</span> <span style="color:#a90d91">operator</span><span style="color:#000">+</span>(<span style="color:#a90d91">const</span> <span style="color:#000">Vector</span> <span style="color:#000">&amp;</span><span style="color:#000">b</span>) <span style="color:#a90d91">const</span> { <span style="color:#a90d91">return</span> <span style="color:#000">Vector</span>(<span style="color:#000">x</span> <span style="color:#000">+</span> <span style="color:#000">b</span>.<span style="color:#000">x</span>, <span style="color:#000">y</span> <span style="color:#000">+</span> <span style="color:#000">b</span>.<span style="color:#000">y</span>); }
</span></span><span style="display:flex;"><span>    <span style="color:#000">Vector</span> <span style="color:#a90d91">operator</span><span style="color:#000">-</span>(<span style="color:#a90d91">const</span> <span style="color:#000">Vector</span> <span style="color:#000">&amp;</span><span style="color:#000">b</span>) <span style="color:#a90d91">const</span> { <span style="color:#a90d91">return</span> <span style="color:#000">Vector</span>(<span style="color:#000">x</span> <span style="color:#000">-</span> <span style="color:#000">b</span>.<span style="color:#000">x</span>, <span style="color:#000">y</span> <span style="color:#000">-</span> <span style="color:#000">b</span>.<span style="color:#000">y</span>); }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#a90d91">operator</span><span style="color:#000">*</span>(<span style="color:#a90d91">const</span> <span style="color:#000">Vector</span> <span style="color:#000">&amp;</span><span style="color:#000">b</span>) <span style="color:#a90d91">const</span> { <span style="color:#a90d91">return</span> <span style="color:#000">x</span> <span style="color:#000">*</span> <span style="color:#000">b</span>.<span style="color:#000">x</span> <span style="color:#000">+</span> <span style="color:#000">y</span> <span style="color:#000">*</span> <span style="color:#000">b</span>.<span style="color:#000">y</span>; }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#a90d91">operator</span><span style="color:#000">&amp;</span>(<span style="color:#a90d91">const</span> <span style="color:#000">Vector</span> <span style="color:#000">&amp;</span><span style="color:#000">b</span>) <span style="color:#a90d91">const</span> { <span style="color:#a90d91">return</span> <span style="color:#000">x</span> <span style="color:#000">*</span> <span style="color:#000">b</span>.<span style="color:#000">y</span> <span style="color:#000">-</span> <span style="color:#000">b</span>.<span style="color:#000">x</span> <span style="color:#000">*</span> <span style="color:#000">y</span>; } <span style="color:#177500">// 向量叉积
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>    <span style="color:#000">Vector</span> <span style="color:#a90d91">operator</span><span style="color:#000">=</span>(<span style="color:#a90d91">const</span> <span style="color:#000">Vector</span> <span style="color:#000">&amp;</span><span style="color:#000">b</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">b</span>.<span style="color:#000">x</span>, <span style="color:#000">y</span> <span style="color:#000">=</span> <span style="color:#000">b</span>.<span style="color:#000">y</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#000">*</span><span style="color:#a90d91">this</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">dis_pow</span>() { <span style="color:#a90d91">return</span> (<span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span>)<span style="color:#000">x</span> <span style="color:#000">*</span> <span style="color:#000">x</span> <span style="color:#000">+</span> <span style="color:#000">y</span> <span style="color:#000">*</span> <span style="color:#000">y</span>; }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">double</span> <span style="color:#000">dis</span>() { <span style="color:#a90d91">return</span> <span style="color:#000">sqrt</span>((<span style="color:#a90d91">double</span>)<span style="color:#000">x</span> <span style="color:#000">*</span> <span style="color:#000">x</span> <span style="color:#000">+</span> <span style="color:#000">y</span> <span style="color:#000">*</span> <span style="color:#000">y</span>); }
</span></span><span style="display:flex;"><span>} <span style="color:#000">p</span>[<span style="color:#1c01ce">7</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">bool</span> <span style="color:#000">in_seg</span>(<span style="color:#000">Vector</span> <span style="color:#000">a</span>, <span style="color:#000">Vector</span> <span style="color:#000">b</span>, <span style="color:#000">Vector</span> <span style="color:#000">x</span>) <span style="color:#177500">// 判断点 x 是否在 线段ab 上
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (((<span style="color:#000">x</span> <span style="color:#000">-</span> <span style="color:#000">a</span>) <span style="color:#000">&amp;</span> (<span style="color:#000">a</span> <span style="color:#000">-</span> <span style="color:#000">b</span>)) <span style="color:#000">!=</span> <span style="color:#1c01ce">0</span>) <span style="color:#177500">// 叉乘为 0
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>        <span style="color:#a90d91">return</span> <span style="color:#a90d91">false</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#000">min</span>(<span style="color:#000">a</span>.<span style="color:#000">x</span>, <span style="color:#000">b</span>.<span style="color:#000">x</span>) <span style="color:#000">&lt;=</span> <span style="color:#000">x</span>.<span style="color:#000">x</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">x</span>.<span style="color:#000">x</span> <span style="color:#000">&lt;=</span> <span style="color:#000">max</span>(<span style="color:#000">a</span>.<span style="color:#000">x</span>, <span style="color:#000">b</span>.<span style="color:#000">x</span>) <span style="color:#000">&amp;&amp;</span> <span style="color:#000">min</span>(<span style="color:#000">a</span>.<span style="color:#000">y</span>, <span style="color:#000">b</span>.<span style="color:#000">y</span>) <span style="color:#000">&lt;=</span> <span style="color:#000">x</span>.<span style="color:#000">y</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">x</span>.<span style="color:#000">y</span> <span style="color:#000">&lt;=</span> <span style="color:#000">max</span>(<span style="color:#000">a</span>.<span style="color:#000">y</span>, <span style="color:#000">b</span>.<span style="color:#000">y</span>);
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">T</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">T</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> (<span style="color:#000">T</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">Vector</span> <span style="color:#000">s</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#1c01ce">6</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">p</span>[<span style="color:#000">i</span>].<span style="color:#000">x</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">p</span>[<span style="color:#000">i</span>].<span style="color:#000">y</span>;
</span></span><span style="display:flex;"><span>        
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">a</span> <span style="color:#000">=</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span>, <span style="color:#000">b</span> <span style="color:#000">=</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span>, <span style="color:#000">c</span> <span style="color:#000">=</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span>; <span style="color:#177500">// 第一、二条线段为 a、b，第三条线段为 c
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>        
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#1c01ce">5</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;=</span> <span style="color:#1c01ce">6</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">if</span> (<span style="color:#000">p</span>[<span style="color:#000">i</span>] <span style="color:#000">==</span> <span style="color:#000">p</span>[<span style="color:#000">j</span>]) <span style="color:#177500">// 找到三条线段
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>                {
</span></span><span style="display:flex;"><span>                    <span style="color:#000">a</span> <span style="color:#000">=</span> (<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>) <span style="color:#000">/</span> <span style="color:#1c01ce">2</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>                    <span style="color:#000">b</span> <span style="color:#000">=</span> (<span style="color:#000">j</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>) <span style="color:#000">/</span> <span style="color:#1c01ce">2</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>                    <span style="color:#000">c</span> <span style="color:#000">=</span> <span style="color:#1c01ce">6</span> <span style="color:#000">-</span> <span style="color:#000">a</span> <span style="color:#000">-</span> <span style="color:#000">b</span>;
</span></span><span style="display:flex;"><span>                    <span style="color:#000">s</span> <span style="color:#000">=</span> <span style="color:#000">p</span>[<span style="color:#000">i</span>]; <span style="color:#177500">// s 为相同的端点
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>                    <span style="color:#a90d91">break</span>;
</span></span><span style="display:flex;"><span>                }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">a</span> <span style="color:#000">==</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span>) <span style="color:#177500">// 没有相同的点
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">puts</span>(<span style="color:#c41a16">&#34;NO&#34;</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">continue</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        
</span></span><span style="display:flex;"><span>        <span style="color:#000">Vector</span> <span style="color:#000">a1</span> <span style="color:#000">=</span> <span style="color:#000">p</span>[<span style="color:#000">a</span> <span style="color:#000">*</span> <span style="color:#1c01ce">2</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>], <span style="color:#000">a2</span> <span style="color:#000">=</span> <span style="color:#000">p</span>[<span style="color:#000">a</span> <span style="color:#000">*</span> <span style="color:#1c01ce">2</span>], <span style="color:#000">b1</span> <span style="color:#000">=</span> <span style="color:#000">p</span>[<span style="color:#000">b</span> <span style="color:#000">*</span> <span style="color:#1c01ce">2</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>], <span style="color:#000">b2</span> <span style="color:#000">=</span> <span style="color:#000">p</span>[<span style="color:#000">b</span> <span style="color:#000">*</span> <span style="color:#1c01ce">2</span>], <span style="color:#000">c1</span> <span style="color:#000">=</span> <span style="color:#000">p</span>[<span style="color:#000">c</span> <span style="color:#000">*</span> <span style="color:#1c01ce">2</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>], <span style="color:#000">c2</span> <span style="color:#000">=</span> <span style="color:#000">p</span>[<span style="color:#000">c</span> <span style="color:#000">*</span> <span style="color:#1c01ce">2</span>]; <span style="color:#177500">// 6 个点分别用向量表示
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>        <span style="color:#000">Vector</span> <span style="color:#000">_d1</span>, <span style="color:#000">_d2</span>, <span style="color:#000">_d3</span>, <span style="color:#000">_d4</span>; <span style="color:#177500">// 第三条线段端点到到其所在线段两个端点的向量
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>        <span style="color:#177500">// 分两种情况：第三条线段一个端点在 a 上，另一个在 b 上，或者相反
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>        <span style="color:#a90d91">if</span> (<span style="color:#000">in_seg</span>(<span style="color:#000">a1</span>, <span style="color:#000">a2</span>, <span style="color:#000">c1</span>) <span style="color:#000">&amp;&amp;</span> <span style="color:#000">in_seg</span>(<span style="color:#000">b1</span>, <span style="color:#000">b2</span>, <span style="color:#000">c2</span>))
</span></span><span style="display:flex;"><span>            <span style="color:#000">_d1</span> <span style="color:#000">=</span> <span style="color:#000">c1</span> <span style="color:#000">-</span> <span style="color:#000">a1</span>, <span style="color:#000">_d2</span> <span style="color:#000">=</span> <span style="color:#000">c1</span> <span style="color:#000">-</span> <span style="color:#000">a2</span>, <span style="color:#000">_d3</span> <span style="color:#000">=</span> <span style="color:#000">c2</span> <span style="color:#000">-</span> <span style="color:#000">b1</span>, <span style="color:#000">_d4</span> <span style="color:#000">=</span> <span style="color:#000">c2</span> <span style="color:#000">-</span> <span style="color:#000">b2</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span> <span style="color:#a90d91">if</span> (<span style="color:#000">in_seg</span>(<span style="color:#000">a1</span>, <span style="color:#000">a2</span>, <span style="color:#000">c2</span>) <span style="color:#000">&amp;&amp;</span> <span style="color:#000">in_seg</span>(<span style="color:#000">b1</span>, <span style="color:#000">b2</span>, <span style="color:#000">c1</span>))
</span></span><span style="display:flex;"><span>            <span style="color:#000">_d1</span> <span style="color:#000">=</span> <span style="color:#000">c2</span> <span style="color:#000">-</span> <span style="color:#000">a1</span>, <span style="color:#000">_d2</span> <span style="color:#000">=</span> <span style="color:#000">c2</span> <span style="color:#000">-</span> <span style="color:#000">a2</span>, <span style="color:#000">_d3</span> <span style="color:#000">=</span> <span style="color:#000">c1</span> <span style="color:#000">-</span> <span style="color:#000">b1</span>, <span style="color:#000">_d4</span> <span style="color:#000">=</span> <span style="color:#000">c1</span> <span style="color:#000">-</span> <span style="color:#000">b2</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">puts</span>(<span style="color:#c41a16">&#34;NO&#34;</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">continue</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        
</span></span><span style="display:flex;"><span>        <span style="color:#000">Vector</span> <span style="color:#000">_a</span> <span style="color:#000">=</span> <span style="color:#000">a1</span> <span style="color:#000">-</span> <span style="color:#000">s</span> <span style="color:#000">+</span> <span style="color:#000">a2</span> <span style="color:#000">-</span> <span style="color:#000">s</span>, <span style="color:#000">_b</span> <span style="color:#000">=</span> <span style="color:#000">b1</span> <span style="color:#000">-</span> <span style="color:#000">s</span> <span style="color:#000">+</span> <span style="color:#000">b2</span> <span style="color:#000">-</span> <span style="color:#000">s</span>; <span style="color:#177500">// 第一、二条线段的向量，这里的写法避免了分类讨论
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>        <span style="color:#000">Vector</span> <span style="color:#000">a_b</span> <span style="color:#000">=</span> <span style="color:#000">_a</span> <span style="color:#000">-</span> <span style="color:#000">_b</span>; <span style="color:#177500">// a、b线段组成三角形的另一条边
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>        <span style="color:#a90d91">if</span> (<span style="color:#000">_a</span>.<span style="color:#000">dis_pow</span>() <span style="color:#000">+</span> <span style="color:#000">_b</span>.<span style="color:#000">dis_pow</span>() <span style="color:#000">&lt;</span> <span style="color:#000">a_b</span>.<span style="color:#000">dis_pow</span>()) <span style="color:#177500">// 余弦定理判断夹角
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">puts</span>(<span style="color:#c41a16">&#34;NO&#34;</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">continue</span>;
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">double</span> <span style="color:#000">d1</span> <span style="color:#000">=</span> <span style="color:#000">_d1</span>.<span style="color:#000">dis</span>(), <span style="color:#000">d2</span> <span style="color:#000">=</span> <span style="color:#000">_d2</span>.<span style="color:#000">dis</span>(), <span style="color:#000">d3</span> <span style="color:#000">=</span> <span style="color:#000">_d3</span>.<span style="color:#000">dis</span>(), <span style="color:#000">d4</span> <span style="color:#000">=</span> <span style="color:#000">_d4</span>.<span style="color:#000">dis</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">d1</span> <span style="color:#000">&gt;</span> <span style="color:#000">d2</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">swap</span>(<span style="color:#000">d1</span>, <span style="color:#000">d2</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">d3</span> <span style="color:#000">&gt;</span> <span style="color:#000">d4</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">swap</span>(<span style="color:#000">d3</span>, <span style="color:#000">d4</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#177500">// 这题似乎不卡精度，我就直接用 double 比较了，其实最好用距离的平方之比与 16 比较
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>        <span style="color:#a90d91">if</span> (<span style="color:#000">d2</span> <span style="color:#000">/</span> <span style="color:#000">d1</span> <span style="color:#000">-</span> <span style="color:#1c01ce">4</span> <span style="color:#000">&lt;=</span> <span style="color:#000">eps</span> <span style="color:#000">&amp;&amp;</span> <span style="color:#000">d4</span> <span style="color:#000">/</span> <span style="color:#000">d3</span> <span style="color:#000">-</span> <span style="color:#1c01ce">4</span> <span style="color:#000">&lt;=</span> <span style="color:#000">eps</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">puts</span>(<span style="color:#c41a16">&#34;YES&#34;</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>            <span style="color:#000">puts</span>(<span style="color:#c41a16">&#34;NO&#34;</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div>]]></content:encoded>
    </item>
    
    <item>
      <title>YbtOJ 生日欢唱</title>
      <link>https://luoyisu.github.io/posts/ybtoj-%E7%94%9F%E6%97%A5%E6%AC%A2%E5%94%B1/</link>
      <pubDate>Sun, 22 Aug 2021 16:36:57 +0000</pubDate>
      
      <guid>https://luoyisu.github.io/posts/ybtoj-%E7%94%9F%E6%97%A5%E6%AC%A2%E5%94%B1/</guid>
      <description>&lt;h2 id=&#34;description&#34;&gt;Description&lt;/h2&gt;
&lt;p&gt;生日演唱会采用一男一女合唱的形式，每个男生和女生都有一个演唱水平值，两个水平值分别为 $a$ 和 $b$ 的同学演唱将会给大家带来 $a\times b$ 的愉悦度。演唱会开始时，$a$ 名男生和 $b$​ 名女生各排成一列。&lt;/p&gt;
&lt;p&gt;我将会从两列的第一位同学开始，分别挑选一名男生和一名女生。如果觉得某位同学不适合登台，我就会请他回到座位，直到挑选到一位满意的同学为止。若最后有一位男生或女生找不到搭档，我只好请剩下的所有人(包括那名同学)回到座位。如果连续的一些女生或者男生没有登台演唱会损失她(他)们水平值之和的平方的愉悦度。请求出大家能获得最大的愉悦值。（回去了就不能再上来）。&lt;/p&gt;
&lt;p&gt;$n\leq 300$&lt;/p&gt;</description>
      <content:encoded><![CDATA[<h2 id="description">Description</h2>
<p>生日演唱会采用一男一女合唱的形式，每个男生和女生都有一个演唱水平值，两个水平值分别为 $a$ 和 $b$ 的同学演唱将会给大家带来 $a\times b$ 的愉悦度。演唱会开始时，$a$ 名男生和 $b$​ 名女生各排成一列。</p>
<p>我将会从两列的第一位同学开始，分别挑选一名男生和一名女生。如果觉得某位同学不适合登台，我就会请他回到座位，直到挑选到一位满意的同学为止。若最后有一位男生或女生找不到搭档，我只好请剩下的所有人(包括那名同学)回到座位。如果连续的一些女生或者男生没有登台演唱会损失她(他)们水平值之和的平方的愉悦度。请求出大家能获得最大的愉悦值。（回去了就不能再上来）。</p>
<p>$n\leq 300$</p>
<h2 id="solution">Solution</h2>
<p>很显然是个 DP，看到数据范围大概需要 $O(n^3)$ 的算法，于是想到区间DP~~（其实这就是区间DP板块里的题）~~</p>
<p>然后我不会设计状态了，本来考虑的是 $f_{i,j}$ 表示考虑在区间 $[i,j]$ 里的男女的最大值，后来发现不太对，因为男女未必全都能匹配，如果有剩余的人，状态就出现了后效性。接着就瞎加维，然后也没啥用。</p>
<p>我又想男女分开考虑，也无果。</p>
<p>然后我就又被 DP 蹂躏了&hellip;&hellip;</p>
<p>后来看了看题解知道了状态设计：$f_{i,j}$ 表示考虑前 $i$ 个男生，前 $j$ 个女生，况且这两个人都要选的最大价值。</p>
<p>那转移方程就很好想了：</p>
<p>对当前状态，可以由不选一部分男生、不选一部分女生的两种状态转移而来，分别枚举断点 $k$​，转移即可。下面的两个方程分别是不选一部分男生和不选一部分女生的方程。
$$
f_{i,j}=\max\limits_{1\leq k\leq i-1}\{f_{k,j-1}+a_i\times b_j+(\sum\limits_{s=k+1}^{i-1}a_s)^2\}
$$</p>
<p>$$
f_{i,j}=\max\limits_{1\leq k\leq j-1}\{f_{i-1,k}+a_i\times b_j+(\sum\limits_{s=k+1}^{j-1}b_s)^2\}
$$</p>
<p>还有个有趣的问题：怎么快速统计答案？</p>
<p>有个很妙的思路，在男女最后各加入一个愉悦值为 $0$ 的人，这样答案就是 $f_{n+1,n+1}$。</p>
<p>初始状态是男/女有一个是第一个人，然后可以推全状态。</p>
<h2 id="code">Code</h2>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;algorithm&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;cstdio&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;iostream&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">max</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">310</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">a</span>[<span style="color:#000">maxn</span>], <span style="color:#000">b</span>[<span style="color:#000">maxn</span>], <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">sa</span>[<span style="color:#000">maxn</span>], <span style="color:#000">sb</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">f</span>[<span style="color:#000">maxn</span>][<span style="color:#000">maxn</span>]; <span style="color:#177500">// 前 i 个男生和前 j 个女生的最大价值
</span></span></span><span style="display:flex;"><span><span style="color:#177500">//i j 必须同时选
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">inline</span> <span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span> <span style="color:#000">p_2</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>) { <span style="color:#a90d91">return</span> (<span style="color:#a90d91">long</span> <span style="color:#a90d91">long</span>)<span style="color:#000">x</span> <span style="color:#000">*</span> <span style="color:#000">x</span>; }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">scanf</span>(<span style="color:#c41a16">&#34;%d&#34;</span>, <span style="color:#000">&amp;</span><span style="color:#000">n</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">scanf</span>(<span style="color:#c41a16">&#34;%d&#34;</span>, <span style="color:#000">&amp;</span><span style="color:#000">a</span>[<span style="color:#000">i</span>]), <span style="color:#000">sa</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>] <span style="color:#000">+</span> <span style="color:#000">sa</span>[<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#000">sa</span>[<span style="color:#000">n</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">=</span> <span style="color:#000">sa</span>[<span style="color:#000">n</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">scanf</span>(<span style="color:#c41a16">&#34;%d&#34;</span>, <span style="color:#000">&amp;</span><span style="color:#000">b</span>[<span style="color:#000">i</span>]), <span style="color:#000">sb</span>[<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">b</span>[<span style="color:#000">i</span>] <span style="color:#000">+</span> <span style="color:#000">sb</span>[<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#000">sb</span>[<span style="color:#000">n</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">=</span> <span style="color:#000">sb</span>[<span style="color:#000">n</span>];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">f</span>[<span style="color:#1c01ce">1</span>][<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">a</span>[<span style="color:#1c01ce">1</span>] <span style="color:#000">*</span> <span style="color:#000">b</span>[<span style="color:#000">i</span>] <span style="color:#000">-</span> <span style="color:#000">p_2</span>(<span style="color:#000">sb</span>[<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">-</span> <span style="color:#000">sb</span>[<span style="color:#1c01ce">0</span>]);
</span></span><span style="display:flex;"><span>        <span style="color:#000">f</span>[<span style="color:#000">i</span>][<span style="color:#1c01ce">1</span>] <span style="color:#000">=</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>] <span style="color:#000">*</span> <span style="color:#000">b</span>[<span style="color:#1c01ce">1</span>] <span style="color:#000">-</span> <span style="color:#000">p_2</span>(<span style="color:#000">sa</span>[<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">-</span> <span style="color:#000">sa</span>[<span style="color:#1c01ce">0</span>]);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">2</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">k</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">k</span> <span style="color:#000">&lt;</span> <span style="color:#000">i</span>; <span style="color:#000">k</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">f</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>] <span style="color:#000">=</span> <span style="color:#000">max</span>(<span style="color:#000">f</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>], <span style="color:#000">f</span>[<span style="color:#000">k</span>][<span style="color:#000">j</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">+</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>] <span style="color:#000">*</span> <span style="color:#000">b</span>[<span style="color:#000">j</span>] <span style="color:#000">-</span> <span style="color:#000">p_2</span>(<span style="color:#000">sa</span>[<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">-</span> <span style="color:#000">sa</span>[<span style="color:#000">k</span>]));
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">k</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">k</span> <span style="color:#000">&lt;</span> <span style="color:#000">j</span>; <span style="color:#000">k</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">f</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>] <span style="color:#000">=</span> <span style="color:#000">max</span>(<span style="color:#000">f</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>], <span style="color:#000">f</span>[<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>][<span style="color:#000">k</span>] <span style="color:#000">+</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>] <span style="color:#000">*</span> <span style="color:#000">b</span>[<span style="color:#000">j</span>] <span style="color:#000">-</span> <span style="color:#000">p_2</span>(<span style="color:#000">sb</span>[<span style="color:#000">j</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">-</span> <span style="color:#000">sb</span>[<span style="color:#000">k</span>]));
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">f</span>[<span style="color:#000">n</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>][<span style="color:#000">n</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">&lt;&lt;</span> <span style="color:#000">std</span><span style="color:#000">::</span><span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><h2 id="总结">总结</h2>
<p>打开思路，考虑不同方向去设计状态，避免后效性。</p>]]></content:encoded>
    </item>
    
    <item>
      <title>210818构造模拟赛挂分记</title>
      <link>https://luoyisu.github.io/posts/210818%E6%9E%84%E9%80%A0%E6%A8%A1%E6%8B%9F%E8%B5%9B%E6%8C%82%E5%88%86%E8%AE%B0/</link>
      <pubDate>Wed, 18 Aug 2021 22:28:09 +0000</pubDate>
      
      <guid>https://luoyisu.github.io/posts/210818%E6%9E%84%E9%80%A0%E6%A8%A1%E6%8B%9F%E8%B5%9B%E6%8C%82%E5%88%86%E8%AE%B0/</guid>
      <description>&lt;h2 id=&#34;概述&#34;&gt;概述&lt;/h2&gt;
&lt;p&gt;今天是构造，题似乎不是很难，然而我挂的很惨。&lt;/p&gt;
&lt;p&gt;期望：$100+30+60+100=290$​，实际 $0+20+0+5=25$​。大家都挂的很惨，于是我 RK13/23。。。&lt;/p&gt;</description>
      <content:encoded><![CDATA[<h2 id="概述">概述</h2>
<p>今天是构造，题似乎不是很难，然而我挂的很惨。</p>
<p>期望：$100+30+60+100=290$​，实际 $0+20+0+5=25$​。大家都挂的很惨，于是我 RK13/23。。。</p>
<h2 id="前言">前言</h2>
<p>实际上我从来没有做过构造题，唯一的是前一天听同学口胡的一道 CF $1000+$​ 分的题，于是今天十分没底。</p>
<h2 id="赛时">赛时</h2>
<p>看到保证 T1 是最简单的题，我立马定好策略：切掉 T1 再说。（T1：<a href="https://codeforces.com/contest/1439/problem/A2">CF1439A2</a>）</p>
<p>于是开始想，大概想了十分钟吧，思路就已经成型了：枚举每个 $2\times 2$​​ 正方形左上角的点，从第一行扫到倒数第三行，扫的时候保证该行所有 $1$ 都已经变成 $0$，其他随意。接着横着扫倒数第二行，一直扫到倒数第三列。这个时候除了右下角 $2\times2$ 的四个数，所有数都已经变为 $0$ 了。而对于最后四个数，可能的剩余未熄灭灯数只有 $5$​​ 种。直接用打表/分类讨论之类的方法搞出来就行。</p>
<p>{% spoiler Code %}</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span><span style="color:#633820">&lt;bits/stdc++.h&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820">#define mm(x) memset(x, 0, sizeof(x))
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#a90d91">namespace</span> <span style="color:#000">std</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">T</span>, <span style="color:#000">n</span>, <span style="color:#000">m</span>, <span style="color:#000">a</span>[<span style="color:#1c01ce">110</span>][<span style="color:#1c01ce">110</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">struct</span> <span style="color:#3f6e75">node</span>
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#000">y</span>;
</span></span><span style="display:flex;"><span>};
</span></span><span style="display:flex;"><span><span style="color:#000">vector</span><span style="color:#000">&lt;</span><span style="color:#000">node</span><span style="color:#000">&gt;</span> <span style="color:#000">p</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">upd</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>, <span style="color:#a90d91">int</span> <span style="color:#000">&amp;</span><span style="color:#000">q</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">p</span>.<span style="color:#000">push_back</span>((<span style="color:#000">node</span>){<span style="color:#000">x</span>, <span style="color:#000">y</span>});
</span></span><span style="display:flex;"><span>    <span style="color:#000">a</span>[<span style="color:#000">x</span>][<span style="color:#000">y</span>] <span style="color:#000">=</span> <span style="color:#000">a</span>[<span style="color:#000">x</span>][<span style="color:#000">y</span>] <span style="color:#000">==</span> <span style="color:#1c01ce">1</span> <span style="color:#000">?</span> <span style="color:#1c01ce">0</span> <span style="color:#000">:</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">q</span><span style="color:#000">--</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">b</span>[<span style="color:#1c01ce">4</span>][<span style="color:#1c01ce">4</span>];	
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">solve_1</span>()
</span></span><span style="display:flex;"><span>{	
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">cnt</span> <span style="color:#000">=</span> <span style="color:#1c01ce">3</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#1c01ce">2</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;</span> <span style="color:#1c01ce">2</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">a</span>[<span style="color:#000">n</span> <span style="color:#000">-</span> <span style="color:#000">i</span>][<span style="color:#000">m</span> <span style="color:#000">-</span> <span style="color:#000">j</span>] <span style="color:#000">==</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">upd</span>(<span style="color:#000">n</span> <span style="color:#000">-</span> <span style="color:#000">i</span>, <span style="color:#000">m</span> <span style="color:#000">-</span> <span style="color:#000">j</span>, <span style="color:#000">cnt</span>);
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">solve_2</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">mm</span>(<span style="color:#000">b</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">cnt</span> <span style="color:#000">=</span> <span style="color:#1c01ce">3</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#1c01ce">2</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;</span> <span style="color:#1c01ce">2</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">a</span>[<span style="color:#000">n</span> <span style="color:#000">-</span> <span style="color:#000">i</span>][<span style="color:#000">m</span> <span style="color:#000">-</span> <span style="color:#000">j</span>] <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">upd</span>(<span style="color:#000">n</span> <span style="color:#000">-</span> <span style="color:#000">i</span>, <span style="color:#000">m</span> <span style="color:#000">-</span> <span style="color:#000">j</span>, <span style="color:#000">cnt</span>), <span style="color:#000">b</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#1c01ce">2</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;</span> <span style="color:#1c01ce">2</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">!</span><span style="color:#000">b</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>])
</span></span><span style="display:flex;"><span>                <span style="color:#000">upd</span>(<span style="color:#000">n</span> <span style="color:#000">-</span> <span style="color:#000">i</span>, <span style="color:#000">m</span> <span style="color:#000">-</span> <span style="color:#000">j</span>, <span style="color:#000">cnt</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">solve_1</span>();
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">solve_3</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">mm</span>(<span style="color:#000">b</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">cnt</span> <span style="color:#000">=</span> <span style="color:#1c01ce">3</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#1c01ce">2</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;</span> <span style="color:#1c01ce">2</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">a</span>[<span style="color:#000">n</span> <span style="color:#000">-</span> <span style="color:#000">i</span>][<span style="color:#000">m</span> <span style="color:#000">-</span> <span style="color:#000">j</span>] <span style="color:#000">==</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">upd</span>(<span style="color:#000">n</span> <span style="color:#000">-</span> <span style="color:#000">i</span>, <span style="color:#000">m</span> <span style="color:#000">-</span> <span style="color:#000">j</span>, <span style="color:#000">cnt</span>), <span style="color:#000">b</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#1c01ce">2</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;</span> <span style="color:#1c01ce">2</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">!</span><span style="color:#000">b</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>])
</span></span><span style="display:flex;"><span>                <span style="color:#000">upd</span>(<span style="color:#000">n</span> <span style="color:#000">-</span> <span style="color:#000">i</span>, <span style="color:#000">m</span> <span style="color:#000">-</span> <span style="color:#000">j</span>, <span style="color:#000">cnt</span>), <span style="color:#000">b</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">solve_2</span>();
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">solve_0</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">cnt</span> <span style="color:#000">=</span> <span style="color:#1c01ce">3</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">upd</span>(<span style="color:#000">n</span>, <span style="color:#000">m</span>, <span style="color:#000">cnt</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">upd</span>(<span style="color:#000">n</span>, <span style="color:#000">m</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">cnt</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">upd</span>(<span style="color:#000">n</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">m</span>, <span style="color:#000">cnt</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">solve_3</span>();
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">out_put</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">p</span>.<span style="color:#000">size</span>() <span style="color:#000">/</span> <span style="color:#1c01ce">3</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">p</span>.<span style="color:#000">size</span>(); <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">i</span> <span style="color:#000">%</span> <span style="color:#1c01ce">3</span> <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34;</span><span style="color:#c41a16">\\</span><span style="color:#c41a16">n&#34;</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">p</span>[<span style="color:#000">i</span>].<span style="color:#000">x</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">p</span>[<span style="color:#000">i</span>].<span style="color:#000">y</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34; &#34;</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#c41a16">&#34;</span><span style="color:#c41a16">\\</span><span style="color:#c41a16">n&#34;</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">freopen</span>(<span style="color:#c41a16">&#34;bulb.in&#34;</span>, <span style="color:#c41a16">&#34;r&#34;</span>, <span style="color:#000">stdin</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">freopen</span>(<span style="color:#c41a16">&#34;bulb.out&#34;</span>, <span style="color:#c41a16">&#34;w&#34;</span>, <span style="color:#000">stdout</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">ios</span><span style="color:#000">::</span><span style="color:#000">sync_with_stdio</span>(<span style="color:#a90d91">false</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">T</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> (<span style="color:#000">T</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">n</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">m</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">p</span>.<span style="color:#000">clear</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">char</span> <span style="color:#000">ch</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">ans</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;=</span> <span style="color:#000">m</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">ch</span>, <span style="color:#000">a</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>] <span style="color:#000">=</span> <span style="color:#000">ch</span> <span style="color:#000">==</span> <span style="color:#2300ce">&#39;0&#39;</span> <span style="color:#000">?</span> <span style="color:#1c01ce">0</span> <span style="color:#000">:</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">n</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;</span> <span style="color:#000">m</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            {
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">int</span> <span style="color:#000">cnt</span> <span style="color:#000">=</span> <span style="color:#1c01ce">3</span>;
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">if</span> (<span style="color:#000">a</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span>] <span style="color:#000">==</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>                    <span style="color:#000">upd</span>(<span style="color:#000">i</span>, <span style="color:#000">j</span>, <span style="color:#000">cnt</span>);
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">if</span> (<span style="color:#000">a</span>[<span style="color:#000">i</span>][<span style="color:#000">j</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>] <span style="color:#000">==</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>                    <span style="color:#000">upd</span>(<span style="color:#000">i</span>, <span style="color:#000">j</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">cnt</span>);
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">if</span> (<span style="color:#000">cnt</span> <span style="color:#000">==</span> <span style="color:#1c01ce">3</span>)
</span></span><span style="display:flex;"><span>                    <span style="color:#a90d91">continue</span>;
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">if</span> (<span style="color:#000">cnt</span>)
</span></span><span style="display:flex;"><span>                    <span style="color:#000">upd</span>(<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">j</span>, <span style="color:#000">cnt</span>);
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">if</span> (<span style="color:#000">cnt</span>)
</span></span><span style="display:flex;"><span>                    <span style="color:#000">upd</span>(<span style="color:#000">i</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">j</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">cnt</span>);
</span></span><span style="display:flex;"><span>            }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;</span> <span style="color:#000">m</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">int</span> <span style="color:#000">cnt</span> <span style="color:#000">=</span> <span style="color:#1c01ce">3</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">a</span>[<span style="color:#000">n</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>][<span style="color:#000">j</span>] <span style="color:#000">==</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">upd</span>(<span style="color:#000">n</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">j</span>, <span style="color:#000">cnt</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">a</span>[<span style="color:#000">n</span>][<span style="color:#000">j</span>] <span style="color:#000">==</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">upd</span>(<span style="color:#000">n</span>, <span style="color:#000">j</span>, <span style="color:#000">cnt</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">cnt</span> <span style="color:#000">==</span> <span style="color:#1c01ce">3</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#a90d91">continue</span>;
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">cnt</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">upd</span>(<span style="color:#000">n</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">j</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">cnt</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">if</span> (<span style="color:#000">cnt</span>)
</span></span><span style="display:flex;"><span>                <span style="color:#000">upd</span>(<span style="color:#000">n</span>, <span style="color:#000">j</span> <span style="color:#000">+</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">cnt</span>);
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">tot</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#1c01ce">2</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">j</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">j</span> <span style="color:#000">&lt;</span> <span style="color:#1c01ce">2</span>; <span style="color:#000">j</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            {
</span></span><span style="display:flex;"><span>                <span style="color:#000">tot</span> <span style="color:#000">+=</span> <span style="color:#000">a</span>[<span style="color:#000">n</span> <span style="color:#000">-</span> <span style="color:#000">i</span>][<span style="color:#000">m</span> <span style="color:#000">-</span> <span style="color:#000">j</span>];
</span></span><span style="display:flex;"><span>            }
</span></span><span style="display:flex;"><span>        <span style="color:#000">tot</span> <span style="color:#000">=</span> <span style="color:#1c01ce">4</span> <span style="color:#000">-</span> <span style="color:#000">tot</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">tot</span> <span style="color:#000">==</span> <span style="color:#1c01ce">0</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">solve_0</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span> <span style="color:#a90d91">if</span> (<span style="color:#000">tot</span> <span style="color:#000">==</span> <span style="color:#1c01ce">1</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">solve_1</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span> <span style="color:#a90d91">if</span> (<span style="color:#000">tot</span> <span style="color:#000">==</span> <span style="color:#1c01ce">2</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">solve_2</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span> <span style="color:#a90d91">if</span> (<span style="color:#000">tot</span> <span style="color:#000">==</span> <span style="color:#1c01ce">3</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">solve_3</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#000">out_put</span>();
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><p>{% endspoiler %}</p>
<p>写完 T1，按传统规矩自然是 DEBUG 了好久，确定无误之后已经过去一个半小时了，感觉自己得了 $100$ 分，<strong>一阵狂喜</strong>，赶快开下面的题。</p>
<p>接着看后面的题，决定先打暴力。</p>
<p>首先打了个 T3 的 $60$ 分暴力，<strong>一阵狂喜</strong>，然后去写 T4，分析了一下发现我似乎能切。于是开始写，但是调到心态爆炸，于是在剩余 $20\text{min}$​​ 的时候勉强调完了。</p>
<p>T2 急的一笔，快速打了个暴力，希望能得 $30$ 分。不过也没测试，草草收场了。</p>
<p>然后快结束的时候有人告诉我 T1 的文件名写错了，我：？？？</p>
<p>结果还真写错了，我连忙改文件名和 <code>freopen</code> 里的文件名。</p>
<p>时间到了，我一看，我 <code>freopen</code> 里的文件名没改上，我：？？？发生什么事了？？？</p>
<p>行吧， $100$ 分没了。</p>
<h2 id="赛后">赛后</h2>
<p>我一看分数就傻眼了。</p>
<p>再一看：T3 File Error：“未找到选手输出文件”</p>
<p>哦，仔细一看，我把一个 <code>freopen</code> 的文件名写错了，好家伙，这又少了 $60$ 分。</p>
<p>T4 果然挂了，不出所料，不过我和 Solution 的思路是差不多的，但是实现似乎有点问题。</p>
<p>又在 OJ 上交了一发，好家伙，T1 直接 AC 了，T3 $60$ 分了。</p>
<p>忽然意识到，我因为 <code>freopen</code> 痛失了 $100+60=160$ 分。太伤了，加上这些分我似乎能进 Rank 5。</p>
<p>题目都不是很难，T2 其实是个分类讨论题，感觉再来点时间也能想出来，倒是 T3 似乎思维难度最大，有点类似染色（</p>
<h2 id="总结">总结</h2>
<p>狂喜把自己狂喜没了，这次在做题上还算是比较完美的，不过下一次必须认真比对文件名之后（或者直接复制）再去搞下一道题。</p>
<p>这次太着急了，所以出了一堆错误。</p>
<p>T1 明明几分钟就想出来正解了，结果后面又否定自己，最后又发现自己是对的，也浪费了大量时间。</p>
<p>代码实现的时候也浪费了时间。</p>
<p>只能说码力还是不够，正解和暴力都写得太慢了，结果没有时间支持我深入思考每道题，相信随着刷题数的增多我这个能力能增强的。</p>]]></content:encoded>
    </item>
    
    <item>
      <title>210817数学模拟赛爆零记</title>
      <link>https://luoyisu.github.io/posts/210817%E6%95%B0%E5%AD%A6%E6%A8%A1%E6%8B%9F%E8%B5%9B%E7%88%86%E9%9B%B6%E8%AE%B0/</link>
      <pubDate>Tue, 17 Aug 2021 23:10:10 +0000</pubDate>
      
      <guid>https://luoyisu.github.io/posts/210817%E6%95%B0%E5%AD%A6%E6%A8%A1%E6%8B%9F%E8%B5%9B%E7%88%86%E9%9B%B6%E8%AE%B0/</guid>
      <description>&lt;h2 id=&#34;概述&#34;&gt;概述&lt;/h2&gt;
&lt;p&gt;今天是数学，本来以为会还行，结果 $0+0+30+5=35$​，接近垫底了（&lt;/p&gt;
&lt;p&gt;再次被机房男女老少暴打qwq。&lt;/p&gt;</description>
      <content:encoded><![CDATA[<h2 id="概述">概述</h2>
<p>今天是数学，本来以为会还行，结果 $0+0+30+5=35$​，接近垫底了（</p>
<p>再次被机房男女老少暴打qwq。</p>
<h2 id="赛时">赛时</h2>
<p>四道题都看了看，发现 T1是个推式子，推着推着心态爆炸，瞎打了个式子就溜了。</p>
<p>T2 暴力大概会写，但不想写，感觉不太可做。</p>
<p>T3 是个博弈论，感觉不可做。</p>
<p>T4 是个思维题，觉得能拿一些部分分，于是开始写。</p>
<p>写完之后把 T2 的 $20$ 分打了，T3 找了一波规律就溜了。</p>
<h2 id="赛后">赛后</h2>
<p>发现 T1 是个卡特兰数？？？</p>
<p>好家伙我完全不记得这是啥了。。。行吧，死的不冤。</p>
<p>T2 不是很难&hellip;暴力+算斜率+数据结构优化即可。但是为什么我把 <code>freopen</code> 注释了？？？？？？？$20$ 分没了。。。</p>
<p>T3 我想太简单了，确实是找规律，但没有那么简单，我傻了。</p>
<p>T4 是个数论题，有点难 qwq&hellip; <a href="https://codeforces.com/contest/493/problem/E">Link</a></p>
<p>大概是通过一些性质算出多项式的常数项，然后降次，递归求解。挺神奇的&hellip;写了一遍&hellip;</p>
<h2 id="总结">总结</h2>
<p>总之自己对数学各种奇怪的数完全不了解，发现自己推式子的能力还是不强——所以我 DP 也不行。</p>
<p>明明想到第二题暴力，第三题多想想也许就能对，但是却没时间推了。</p>
<p>也许，只能通过多做题提升自己码力？</p>
<p>顺便，感觉自己确实实力不足，也许是题做少了&hellip;</p>
<p>多总结，加大做题量&hellip;</p>
<p><del>把 <code>freopen</code> 注释掉这个错误我不会再犯了</del></p>]]></content:encoded>
    </item>
    
    <item>
      <title>CF601D &amp; 一道字符串模拟赛题的诡异解法</title>
      <link>https://luoyisu.github.io/posts/cf601d-%E4%B8%80%E9%81%93%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%A8%A1%E6%8B%9F%E8%B5%9B%E9%A2%98%E7%9A%84%E8%AF%A1%E5%BC%82%E8%A7%A3%E6%B3%95/</link>
      <pubDate>Mon, 16 Aug 2021 23:00:44 +0000</pubDate>
      
      <guid>https://luoyisu.github.io/posts/cf601d-%E4%B8%80%E9%81%93%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%A8%A1%E6%8B%9F%E8%B5%9B%E9%A2%98%E7%9A%84%E8%AF%A1%E5%BC%82%E8%A7%A3%E6%B3%95/</guid>
      <description>&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;最近字符串模拟赛中遇到了一道诡异的题，std 的方法是启发式合并 Trie 树，但我写了个更简单（？）的 BFS＋Trie树+LCA 做法。&lt;/p&gt;
&lt;p&gt;后来得知是 CF 的题，就上来交一波，结果确实 AC 了。&lt;/p&gt;
&lt;p&gt;这做法大概是对的，但是似乎有点慢（还难写）&amp;hellip;&lt;/p&gt;</description>
      <content:encoded><![CDATA[<h2 id="前言">前言</h2>
<p>最近字符串模拟赛中遇到了一道诡异的题，std 的方法是启发式合并 Trie 树，但我写了个更简单（？）的 BFS＋Trie树+LCA 做法。</p>
<p>后来得知是 CF 的题，就上来交一波，结果确实 AC 了。</p>
<p>这做法大概是对的，但是似乎有点慢（还难写）&hellip;</p>
<h2 id="题意">题意</h2>
<p>有一棵以结点 $1$ 为根的树，每个结点上都有一个小写字母，对于以每个结点，从该结点出发向其子树中走，路上经过的点能形成一个字符串。求以每个结点为根的子树中能用此方法走出的不同的字符串数量。</p>
<p><a href="https://codeforces.com/contest/601/problem/D">链接</a></p>
<p>CF上原题还有一些奇怪的操作就不说了，对上述答案做一下简单的处理就行了。</p>
<h2 id="solution">Solution</h2>
<p>显然这道题和 Trie 树有关。</p>
<p>对每个点 $i$ 记录一个 $mus[i]$，表示以 $i$ 为根的子树中有多少个重复的字符串。<del>（mus的意思大概是minus，即“减”）</del></p>
<p>考虑 BFS 原树，将遍历到的点插入到 Trie 树中，BFS 时候记录一下 Trie 树上每个点对应的在原树上的点数组 $trie$，如果插入的时候发现这个字符串已经被插入到 Trie 树中，说明有一个重复的字符串，将这个点和 Trie 树上的点对应在原树上点的 LCA 的 $mus$ 数组 $+1$，更新上面的 $trie$ 数组。</p>
<p>最后跑一遍 DFS 统计答案即可。</p>
<p>值得一提的是可以发现如果字符串相同，那么他们在原树上深度必定相同，所以所以求 LCA 的时候不用跳到深度相同了。</p>
<p>至于为什么在 LCA 上打标记，大概是因为打标记的时候要走到两个结点相同的，最早出现有至少两个儿子的字符相同的结点，在这里打标记，才会不重不漏。可以画画图理解。</p>
<p>时间复杂度 $O(n\log n)$，足以通过本题。</p>
<h2 id="code">Code</h2>
<p>我这代码常数贼大，别人最慢也跑 $30s$，我直接干到 $50s$。</p>
<p>还好这题时限开得也大（</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-cpp" data-lang="cpp"><span style="display:flex;"><span><span style="color:#633820">#include</span> <span style="color:#633820">&lt;bits/stdc++.h&gt;</span><span style="color:#633820">
</span></span></span><span style="display:flex;"><span><span style="color:#633820"></span><span style="color:#a90d91">using</span> <span style="color:#a90d91">namespace</span> <span style="color:#000">std</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">const</span> <span style="color:#a90d91">int</span> <span style="color:#000">maxn</span> <span style="color:#000">=</span> <span style="color:#1c01ce">300010</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">ch</span>[<span style="color:#000">maxn</span>][<span style="color:#1c01ce">28</span>], <span style="color:#000">tot</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>, <span style="color:#000">trie</span>[<span style="color:#000">maxn</span>]; <span style="color:#177500">// ch 是 Trie 树
</span></span></span><span style="display:flex;"><span><span style="color:#177500">// trie[i] 代表在 Trie 树上编号为 i 的结点对应在原树上的结点编号。
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span><span style="color:#000">vector</span><span style="color:#000">&lt;</span><span style="color:#a90d91">int</span><span style="color:#000">&gt;</span> <span style="color:#000">e</span>[<span style="color:#000">maxn</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">add</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>) { <span style="color:#000">e</span>[<span style="color:#000">x</span>].<span style="color:#000">push_back</span>(<span style="color:#000">y</span>), <span style="color:#000">e</span>[<span style="color:#000">y</span>].<span style="color:#000">push_back</span>(<span style="color:#000">x</span>); }
</span></span><span style="display:flex;"><span><span style="color:#000">string</span> <span style="color:#000">s</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">mus</span>[<span style="color:#000">maxn</span>], <span style="color:#000">siz</span>[<span style="color:#000">maxn</span>], <span style="color:#000">ans</span>[<span style="color:#000">maxn</span>], <span style="color:#000">v</span>[<span style="color:#000">maxn</span>], <span style="color:#000">a</span>[<span style="color:#000">maxn</span>], <span style="color:#000">n</span>;
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">f</span>[<span style="color:#000">maxn</span>][<span style="color:#1c01ce">32</span>];
</span></span><span style="display:flex;"><span><span style="color:#a90d91">struct</span> <span style="color:#3f6e75">node</span> <span style="color:#177500">// BFS 用结构体
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">fa</span>, <span style="color:#000">x</span>, <span style="color:#000">tfa</span>; <span style="color:#177500">// fa，x 代表在原树中该结点父亲、该结点编号。
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>    <span style="color:#177500">// tfa 代表在 Trie 树上该结点的父亲
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>};
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">dfs_lca</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">fa</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">f</span>[<span style="color:#000">x</span>][<span style="color:#1c01ce">0</span>] <span style="color:#000">=</span> <span style="color:#000">fa</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#1c01ce">31</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">f</span>[<span style="color:#000">x</span>][<span style="color:#000">i</span>] <span style="color:#000">=</span> <span style="color:#000">f</span>[<span style="color:#000">f</span>[<span style="color:#000">x</span>][<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>]][<span style="color:#000">i</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">e</span>[<span style="color:#000">x</span>].<span style="color:#000">size</span>(); <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">e</span>[<span style="color:#000">x</span>][<span style="color:#000">i</span>] <span style="color:#000">!=</span> <span style="color:#000">fa</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">dfs_lca</span>(<span style="color:#000">e</span>[<span style="color:#000">x</span>][<span style="color:#000">i</span>], <span style="color:#000">x</span>);
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">LCA</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">y</span>)
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">if</span> (<span style="color:#000">x</span> <span style="color:#000">==</span> <span style="color:#000">y</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">return</span> <span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">31</span>; <span style="color:#000">i</span> <span style="color:#000">&gt;=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span><span style="color:#000">--</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">f</span>[<span style="color:#000">x</span>][<span style="color:#000">i</span>] <span style="color:#000">!=</span> <span style="color:#000">f</span>[<span style="color:#000">y</span>][<span style="color:#000">i</span>])
</span></span><span style="display:flex;"><span>            <span style="color:#000">x</span> <span style="color:#000">=</span> <span style="color:#000">f</span>[<span style="color:#000">x</span>][<span style="color:#000">i</span>], <span style="color:#000">y</span> <span style="color:#000">=</span> <span style="color:#000">f</span>[<span style="color:#000">y</span>][<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#000">f</span>[<span style="color:#000">x</span>][<span style="color:#1c01ce">0</span>];
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">init</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">scanf</span>(<span style="color:#c41a16">&#34;%d&#34;</span>, <span style="color:#000">&amp;</span><span style="color:#000">n</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>];
</span></span><span style="display:flex;"><span>    <span style="color:#000">cin</span> <span style="color:#000">&gt;&gt;</span> <span style="color:#000">s</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">s</span> <span style="color:#000">=</span> <span style="color:#c41a16">&#34; &#34;</span> <span style="color:#000">+</span> <span style="color:#000">s</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#000">y</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">n</span> <span style="color:#000">-</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>        <span style="color:#000">scanf</span>(<span style="color:#c41a16">&#34;%d%d&#34;</span>, <span style="color:#000">&amp;</span><span style="color:#000">x</span>, <span style="color:#000">&amp;</span><span style="color:#000">y</span>), <span style="color:#000">add</span>(<span style="color:#000">x</span>, <span style="color:#000">y</span>);
</span></span><span style="display:flex;"><span>    <span style="color:#000">dfs_lca</span>(<span style="color:#1c01ce">1</span>, <span style="color:#1c01ce">0</span>);
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">bfs</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">queue</span><span style="color:#000">&lt;</span><span style="color:#000">node</span><span style="color:#000">&gt;</span> <span style="color:#000">q</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#000">q</span>.<span style="color:#000">push</span>((<span style="color:#000">node</span>){<span style="color:#1c01ce">0</span>, <span style="color:#1c01ce">1</span>, <span style="color:#1c01ce">1</span>});
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">while</span> (<span style="color:#000">!</span><span style="color:#000">q</span>.<span style="color:#000">empty</span>())
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#000">node</span> <span style="color:#000">now</span> <span style="color:#000">=</span> <span style="color:#000">q</span>.<span style="color:#000">front</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#000">q</span>.<span style="color:#000">pop</span>();
</span></span><span style="display:flex;"><span>        <span style="color:#177500">//now.P();
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>        <span style="color:#a90d91">if</span> (<span style="color:#000">v</span>[<span style="color:#000">now</span>.<span style="color:#000">x</span>])
</span></span><span style="display:flex;"><span>            <span style="color:#a90d91">continue</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#000">v</span>[<span style="color:#000">now</span>.<span style="color:#000">x</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">int</span> <span style="color:#000">c</span> <span style="color:#000">=</span> <span style="color:#000">s</span>[<span style="color:#000">now</span>.<span style="color:#000">x</span>] <span style="color:#000">-</span> <span style="color:#2300ce">&#39;a&#39;</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">ch</span>[<span style="color:#000">now</span>.<span style="color:#000">tfa</span>][<span style="color:#000">c</span>]) <span style="color:#177500">// 如果当前结点对应字符串已经被插入到 Trie 树中
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>            <span style="color:#000">mus</span>[<span style="color:#000">LCA</span>(<span style="color:#000">now</span>.<span style="color:#000">x</span>, <span style="color:#000">trie</span>[<span style="color:#000">ch</span>[<span style="color:#000">now</span>.<span style="color:#000">tfa</span>][<span style="color:#000">c</span>]])]<span style="color:#000">++</span>, <span style="color:#000">trie</span>[<span style="color:#000">ch</span>[<span style="color:#000">now</span>.<span style="color:#000">tfa</span>][<span style="color:#000">c</span>]] <span style="color:#000">=</span> <span style="color:#000">now</span>.<span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#177500">// 在两点 LCA 上打标记，并将 Trie 树上该点对应原树上结点更新
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>        <span style="color:#a90d91">else</span>
</span></span><span style="display:flex;"><span>            <span style="color:#000">ch</span>[<span style="color:#000">now</span>.<span style="color:#000">tfa</span>][<span style="color:#000">c</span>] <span style="color:#000">=</span> <span style="color:#000">++</span><span style="color:#000">tot</span>, <span style="color:#000">trie</span>[<span style="color:#000">ch</span>[<span style="color:#000">now</span>.<span style="color:#000">tfa</span>][<span style="color:#000">c</span>]] <span style="color:#000">=</span> <span style="color:#000">now</span>.<span style="color:#000">x</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#177500">// 没被插入就新开个点，并更新 trie 数组
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>        <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">e</span>[<span style="color:#000">now</span>.<span style="color:#000">x</span>].<span style="color:#000">size</span>(); <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">q</span>.<span style="color:#000">push</span>((<span style="color:#000">node</span>){<span style="color:#000">now</span>.<span style="color:#000">x</span>, <span style="color:#000">e</span>[<span style="color:#000">now</span>.<span style="color:#000">x</span>][<span style="color:#000">i</span>], <span style="color:#000">ch</span>[<span style="color:#000">now</span>.<span style="color:#000">tfa</span>][<span style="color:#000">c</span>]});
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">dfs</span>(<span style="color:#a90d91">int</span> <span style="color:#000">x</span>, <span style="color:#a90d91">int</span> <span style="color:#000">fa</span>) <span style="color:#177500">// DFS 统计答案
</span></span></span><span style="display:flex;"><span><span style="color:#177500"></span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">siz</span>[<span style="color:#000">x</span>] <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;</span> <span style="color:#000">e</span>[<span style="color:#000">x</span>].<span style="color:#000">size</span>(); <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">e</span>[<span style="color:#000">x</span>][<span style="color:#000">i</span>] <span style="color:#000">!=</span> <span style="color:#000">fa</span>)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            <span style="color:#000">dfs</span>(<span style="color:#000">e</span>[<span style="color:#000">x</span>][<span style="color:#000">i</span>], <span style="color:#000">x</span>);
</span></span><span style="display:flex;"><span>            <span style="color:#000">siz</span>[<span style="color:#000">x</span>] <span style="color:#000">+=</span> <span style="color:#000">siz</span>[<span style="color:#000">e</span>[<span style="color:#000">x</span>][<span style="color:#000">i</span>]];
</span></span><span style="display:flex;"><span>            <span style="color:#000">mus</span>[<span style="color:#000">x</span>] <span style="color:#000">+=</span> <span style="color:#000">mus</span>[<span style="color:#000">e</span>[<span style="color:#000">x</span>][<span style="color:#000">i</span>]];
</span></span><span style="display:flex;"><span>        }
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">ans</span>[<span style="color:#000">x</span>] <span style="color:#000">=</span> <span style="color:#000">siz</span>[<span style="color:#000">x</span>] <span style="color:#000">-</span> <span style="color:#000">mus</span>[<span style="color:#000">x</span>];
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">out_put</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">int</span> <span style="color:#000">mx</span> <span style="color:#000">=</span> <span style="color:#000">-</span><span style="color:#1c01ce">1</span>, <span style="color:#000">cnt</span> <span style="color:#000">=</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">for</span> (<span style="color:#a90d91">int</span> <span style="color:#000">i</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>; <span style="color:#000">i</span> <span style="color:#000">&lt;=</span> <span style="color:#000">n</span>; <span style="color:#000">i</span><span style="color:#000">++</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">if</span> (<span style="color:#000">mx</span> <span style="color:#000">==</span> <span style="color:#000">ans</span>[<span style="color:#000">i</span>] <span style="color:#000">+</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>])
</span></span><span style="display:flex;"><span>            <span style="color:#000">cnt</span><span style="color:#000">++</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a90d91">else</span> <span style="color:#a90d91">if</span> (<span style="color:#000">ans</span>[<span style="color:#000">i</span>] <span style="color:#000">+</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>] <span style="color:#000">&gt;</span> <span style="color:#000">mx</span>)
</span></span><span style="display:flex;"><span>            <span style="color:#000">mx</span> <span style="color:#000">=</span> <span style="color:#000">ans</span>[<span style="color:#000">i</span>] <span style="color:#000">+</span> <span style="color:#000">a</span>[<span style="color:#000">i</span>], <span style="color:#000">cnt</span> <span style="color:#000">=</span> <span style="color:#1c01ce">1</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    <span style="color:#000">cout</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">mx</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>
</span></span><span style="display:flex;"><span>         <span style="color:#000">&lt;&lt;</span> <span style="color:#000">cnt</span> <span style="color:#000">&lt;&lt;</span> <span style="color:#000">endl</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span><span style="color:#a90d91">void</span> <span style="color:#000">solve</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">bfs</span>();
</span></span><span style="display:flex;"><span>    <span style="color:#000">memset</span>(<span style="color:#000">v</span>, <span style="color:#1c01ce">0</span>, <span style="color:#a90d91">sizeof</span>(<span style="color:#000">v</span>));
</span></span><span style="display:flex;"><span>    <span style="color:#000">dfs</span>(<span style="color:#1c01ce">1</span>, <span style="color:#1c01ce">0</span>);
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span><span style="color:#a90d91">int</span> <span style="color:#000">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#000">init</span>();
</span></span><span style="display:flex;"><span>    <span style="color:#000">solve</span>();
</span></span><span style="display:flex;"><span>    <span style="color:#000">out_put</span>();
</span></span><span style="display:flex;"><span>    <span style="color:#a90d91">return</span> <span style="color:#1c01ce">0</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div>]]></content:encoded>
    </item>
    
    <item>
      <title>210816树上问题模拟赛</title>
      <link>https://luoyisu.github.io/posts/210816%E6%A0%91%E4%B8%8A%E9%97%AE%E9%A2%98%E6%A8%A1%E6%8B%9F%E8%B5%9B/</link>
      <pubDate>Mon, 16 Aug 2021 21:39:32 +0000</pubDate>
      
      <guid>https://luoyisu.github.io/posts/210816%E6%A0%91%E4%B8%8A%E9%97%AE%E9%A2%98%E6%A8%A1%E6%8B%9F%E8%B5%9B/</guid>
      <description>&lt;h2 id=&#34;概述&#34;&gt;概述&lt;/h2&gt;
&lt;p&gt;因为打疫苗只打了将近两个小时。期望 $0+20+30+0=50$，实际 $0+0+60+0=60$。&lt;/p&gt;
&lt;p&gt;还行吧，今天题是真的难。&lt;/p&gt;</description>
      <content:encoded><![CDATA[<h2 id="概述">概述</h2>
<p>因为打疫苗只打了将近两个小时。期望 $0+20+30+0=50$，实际 $0+0+60+0=60$。</p>
<p>还行吧，今天题是真的难。</p>
<h2 id="赛时">赛时</h2>
<p>因为回来晚了就不想着暴力了，试图切题，然后发现四道题都难的一逼。</p>
<p>一直想到剩余一小时，然后发现爆零太难看了，于是开始写暴力。</p>
<p>T1、4 完全没思路，暴力似乎也不是特别好写，于是就打了 T2、3 的暴力，不知道能搞多少分。</p>
<p>就这样，没啥好说的。。。</p>
<h2 id="赛后">赛后</h2>
<p>看了 Solution，发现是四道思维题，甚至基环树？&hellip;&hellip;</p>
<p>好家伙我直呼好家伙</p>
<p>最后 T2 挂了，不知道为什么，但 T3 倒是得了 $60$ 分，大概是常数小吧，我那个做法可以被卡到 $O(n^3)$ 的。</p>
<h2 id="总结">总结</h2>
<p>然后我忽然意识到了，是不是应该先打暴力？</p>
<p>先打暴力再推正解&hellip;</p>
<p>很难说，也许比赛确实应该先打暴力&hellip;？</p>]]></content:encoded>
    </item>
    
    <item>
      <title>210815图论模拟赛心态良好记</title>
      <link>https://luoyisu.github.io/posts/210815%E5%9B%BE%E8%AE%BA%E6%A8%A1%E6%8B%9F%E8%B5%9B%E5%BF%83%E6%80%81%E8%89%AF%E5%A5%BD%E8%AE%B0/</link>
      <pubDate>Sun, 15 Aug 2021 22:56:56 +0000</pubDate>
      
      <guid>https://luoyisu.github.io/posts/210815%E5%9B%BE%E8%AE%BA%E6%A8%A1%E6%8B%9F%E8%B5%9B%E5%BF%83%E6%80%81%E8%89%AF%E5%A5%BD%E8%AE%B0/</guid>
      <description>&lt;h2 id=&#34;概述&#34;&gt;概述&lt;/h2&gt;
&lt;p&gt;今天是图论，我本来以为会考最小生成树、tarjan 之类，结果没考，考了一些稍生僻（其实就是我不会）的算法以及思维题，所以我挺悲惨的。&lt;/p&gt;
&lt;p&gt;期望：$0+0+60+100=160$，实际 $0+0+30+90=120$。大家都爆零了所以我名次还行&amp;hellip;&lt;/p&gt;</description>
      <content:encoded><![CDATA[<h2 id="概述">概述</h2>
<p>今天是图论，我本来以为会考最小生成树、tarjan 之类，结果没考，考了一些稍生僻（其实就是我不会）的算法以及思维题，所以我挺悲惨的。</p>
<p>期望：$0+0+60+100=160$，实际 $0+0+30+90=120$。大家都爆零了所以我名次还行&hellip;</p>
<h2 id="赛时">赛时</h2>
<p>一看到题目顺序不定，我就开始随缘开题了。</p>
<p>首先看 T1，感觉是个字符串，似乎是瞎搞搞连边然后折腾，但我不会，心态良好，先去看 T2 了。</p>
<p>再看 T2，感觉和 NOIP 有一道分监狱的题类似，用并查集维护和某个人不在同一个集合的人的集合，能判断有没有解，但具体怎么分我不知道。。。不知道和图论有什么关系。行。瞎搞了一波过了样例就溜了。</p>
<p>看 T3、T4，其实 T3 有点思路，像这种与时间有关的询问都可以考虑离线，但我觉得搞不出来，先放着了。</p>
<p>又去看 T4，看到一堆符号就溜了。</p>
<p>滚回去写 T1，用 map 瞎搞了一波，过了样例但跑得贼慢，后来觉得我这个做法有点假，我也就不期望得分了。</p>
<p>滚回去调 T2，再次瞎搞，做法好像也是假的，希望能骗到分。</p>
<p>由于我现在已经写完两题了，现在心态十分良好，T3 也有暴力的思路了。</p>
<p>先看了一波 T4，稍微推了一下，这TM不是大水题吗，删一些点跑最短路就完事了，20min 写完，过了样例。</p>
<p>这时候还剩 40min，回去写 T3 的暴力，还剩 10min 的时候写完。大概能过 $60$ 分。然后开始摸鱼。</p>
<h2 id="赛后">赛后</h2>
<p>发现 T1、2都挂了，意料之中吧，T3 的 test $4 \sim 6$ WA 了，我也不知道怎么挂的，不应该啊。</p>
<p>T4 发现我考虑的有点少了，做法有点假，应该把无向边转成有向再跑最短路或 BFS，不过出题人说他没想卡直接跑最短路的假做法，只卡了 $10$​​ 分，谢出题人不杀之恩！</p>
<p>T1 是个欧拉路题，我不会，有人知道但不会写因此心态爆炸，然而我心态良好，因为我根本就不知道这玩意（</p>
<p>T2 是个补图+二分图染色，有点意思。</p>
<p>T3 确实是离线，然后用类似 Floyd 的方法做，有思维难度但似乎不是特别大。</p>
<h2 id="总结">总结</h2>
<p>首先心态不错确实是今天一大优点（虽然爆零了两道题）</p>
<p>图论有些知识点不能忽略，得抓紧时间补一补了。</p>
<p>当一道题假了，是应该放弃，去做别的题，还是应该接着尝试搞？这确实是需要反复尝试，找出最优解的。</p>
<p>明天树上问题 <code>RP++</code>。</p>
<p>早上复习一下 LCA、直径、重心、树上DP吧。</p>]]></content:encoded>
    </item>
    
    <item>
      <title>210814字符串模拟赛挂分记</title>
      <link>https://luoyisu.github.io/posts/210814%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%A8%A1%E6%8B%9F%E8%B5%9B%E6%8C%82%E5%88%86%E8%AE%B0/</link>
      <pubDate>Sat, 14 Aug 2021 21:26:03 +0000</pubDate>
      
      <guid>https://luoyisu.github.io/posts/210814%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%A8%A1%E6%8B%9F%E8%B5%9B%E6%8C%82%E5%88%86%E8%AE%B0/</guid>
      <description>&lt;h2 id=&#34;概述&#34;&gt;概述&lt;/h2&gt;
&lt;p&gt;今天是字符串，然而字符串有关算法我基本就会 Trie 树和 Hash，KMP 到现在都不太会。。。&lt;/p&gt;
&lt;p&gt;期望 $100+20+100+0=220$，实际 $0+50+30+0=80$，rank 14/23&lt;/p&gt;
&lt;p&gt;Orz KH AK！！！&lt;/p&gt;</description>
      <content:encoded><![CDATA[<h2 id="概述">概述</h2>
<p>今天是字符串，然而字符串有关算法我基本就会 Trie 树和 Hash，KMP 到现在都不太会。。。</p>
<p>期望 $100+20+100+0=220$，实际 $0+50+30+0=80$，rank 14/23</p>
<p>Orz KH AK！！！</p>
<h2 id="赛时">赛时</h2>
<p>按顺序开题，发现 T1 是个 trie 树题，我一阵狂喜，这玩意我会啊，搞正反插 trie 树就成。</p>
<p>结果写了半天没搞出来，调来调去心态爆炸，过了样例之后就扔了。</p>
<p>T2是个 KMP，我会口胡但不会写，先放着。</p>
<p>T3感觉是个 Trie 树，想了一个诡异的做法，看着挺对，就写了，调了调过样例了，感觉自己切了。</p>
<p>T4没时间想了，没写。</p>
<p>回去写 T2 暴力，写了个最暴力的 $O(n^3)$ 算法，然后就溜了。</p>
<h2 id="赛后">赛后</h2>
<p>发现我T1、3都挂了，都是意料之中，我虽然觉得能切但写挂了也很可能。</p>
<p>T3我做法疑似是假的，怀疑人生。</p>
<p>T2居然多卡过去了 $30$ 分，太神奇了，看来我这个暴力常数贼小。</p>
<h2 id="总结">总结</h2>
<p>KMP 不会是硬伤，而且我对字符串所有算法都不熟练，包括 Hash 等等，KMP还是得弄懂。</p>
<p>感觉今天策略没啥问题，就是 T1 写太久了，最后还挂了。导致没时间调试T1、3。还是不熟练的问题，题做的太少了。</p>]]></content:encoded>
    </item>
    
    <item>
      <title>210813杂项模拟赛乱改记</title>
      <link>https://luoyisu.github.io/posts/210813%E6%9D%82%E9%A1%B9%E6%A8%A1%E6%8B%9F%E8%B5%9B%E4%B9%B1%E6%94%B9%E8%AE%B0/</link>
      <pubDate>Fri, 13 Aug 2021 21:54:41 +0000</pubDate>
      
      <guid>https://luoyisu.github.io/posts/210813%E6%9D%82%E9%A1%B9%E6%A8%A1%E6%8B%9F%E8%B5%9B%E4%B9%B1%E6%94%B9%E8%AE%B0/</guid>
      <description>概述 期望 $100+30+70+20=220$，实际 $100+0+10+10=120$，rk6，有点神奇，不过机房神仙们连切三题太神了！
赛时 首先看到今天是个杂项：分治二分倍增快速幂，又看到难度是递增的，尝试多拿分、切题。
首先看到T1，就差把分治写脸上了，快速打了个大框然后写分治的递归函数。
打完之后一阵狂喜，然后测样例的时候发现我做法假了，把这题想太简单了。
一阵思考发现情况太多了。。。
本来打算列出所有情况打表进行分治的，结果写一半发现实在是太难了，遂放弃，尝试之前旋转的思路（我之前没证明，不是很敢写）。
这时候一个多小时已经过去了，我一分没拿，属实心态爆炸。
稍微看了看T234，感觉全都不大能做，还是滚回来写T1。
这次用旋转的规律做了一波，样例过了，自己测了几组数据没问题，就过了。
这个时候已经两个多小时了，我至少切了一题，心态有所好转。
接下来看后面的题，首先发现T4除了前 $20$ 分我都不会，赶快打了个暴力放弃T4了。
回来看T2、3，感觉T2有点二分的意思，不过没怎么推出来，只能瞎搞了个 $30$ 分暴力，我当时也没细想，觉得能过前面的数据。。。
还剩半个多小时，看了看T3，写了个 DFS 爆搜，样例过了，瞎造了一组数据也过了，感觉 $70$ 分应该可以了。
赛后 结果T1 AC只有 $7$ 人，老师也说这低于他预期，我觉得T1确实有毒。。。
T234全挂了，后来发现挂的不冤，还是太着急了，暴力也没认真写。
看了 Solution，发现T4是个矩阵快速幂的优化递推，好家伙，我连矩阵怎么算都快忘了。。。
T2确实是二分，有点神仙，T3是个倍增，考试时候有点感觉，但没时间也没能力写&amp;hellip;
还是要很扎实地掌握基础知识点和基础题，才能熟练运用啊。。。
明天字符串，我要裂开了。。。</description>
      <content:encoded><![CDATA[<h2 id="概述">概述</h2>
<p>期望 $100+30+70+20=220$，实际 $100+0+10+10=120$，rk6，有点神奇，不过机房神仙们连切三题太神了！</p>
<!-- more -->
<h2 id="赛时">赛时</h2>
<p>首先看到今天是个杂项：分治二分倍增快速幂，又看到难度是递增的，尝试多拿分、切题。</p>
<p>首先看到T1，就差把分治写脸上了，快速打了个大框然后写分治的递归函数。</p>
<p>打完之后一阵狂喜，然后测样例的时候发现我做法假了，把这题想太简单了。</p>
<p>一阵思考发现情况太多了。。。</p>
<p>本来打算列出所有情况打表进行分治的，结果写一半发现实在是太难了，遂放弃，尝试之前旋转的思路（我之前没证明，不是很敢写）。</p>
<p>这时候一个多小时已经过去了，我一分没拿，属实心态爆炸。</p>
<p>稍微看了看T234，感觉全都不大能做，还是滚回来写T1。</p>
<p>这次用旋转的规律做了一波，样例过了，自己测了几组数据没问题，就过了。</p>
<p>这个时候已经两个多小时了，我至少切了一题，心态有所好转。</p>
<p>接下来看后面的题，首先发现T4除了前 $20$ 分我都不会，赶快打了个暴力放弃T4了。</p>
<p>回来看T2、3，感觉T2有点二分的意思，不过没怎么推出来，只能瞎搞了个 $30$ 分暴力，我当时也没细想，觉得能过前面的数据。。。</p>
<p>还剩半个多小时，看了看T3，写了个 DFS 爆搜，样例过了，瞎造了一组数据也过了，感觉 $70$ 分应该可以了。</p>
<h2 id="赛后">赛后</h2>
<p>结果T1 AC只有 $7$ 人，老师也说这低于他预期，我觉得T1确实有毒。。。</p>
<p>T234全挂了，后来发现挂的不冤，还是太着急了，暴力也没认真写。</p>
<p>看了 Solution，发现T4是个矩阵快速幂的优化递推，好家伙，我连矩阵怎么算都快忘了。。。</p>
<p>T2确实是二分，有点神仙，T3是个倍增，考试时候有点感觉，但没时间也没能力写&hellip;</p>
<p>还是要很扎实地掌握基础知识点和基础题，才能熟练运用啊。。。</p>
<p>明天字符串，我要裂开了。。。</p>
]]></content:encoded>
    </item>
    
  </channel>
</rss>
